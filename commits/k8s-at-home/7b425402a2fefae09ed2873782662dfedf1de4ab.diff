commit 7b425402a2fefae09ed2873782662dfedf1de4ab
Author: Devin Buhl <onedr0p@users.noreply.github.com>
Date:   Sun Jan 19 15:29:43 2020 -0500

    [qbittorrent] minor refactoring, add readme (#143)
    
    * minor refactoring, add readme
    
    * fix lint issue
    
    * fix some nzbget references

diff --git a/charts/qbittorrent/Chart.yaml b/charts/qbittorrent/Chart.yaml
index b346d824..0a3a3b3a 100644
--- a/charts/qbittorrent/Chart.yaml
+++ b/charts/qbittorrent/Chart.yaml
@@ -1,8 +1,8 @@
 apiVersion: v1
-appVersion: 4.1.8
+appVersion: 4.2.1
 description: qBittorrent is a cross-platform free and open-source BitTorrent client
 name: qbittorrent
-version: 2.0.1
+version: 3.0.0
 keywords:
   - qbittorrent
   - torrrent
diff --git a/charts/qbittorrent/README.md b/charts/qbittorrent/README.md
index fb378959..3362cfdc 100644
--- a/charts/qbittorrent/README.md
+++ b/charts/qbittorrent/README.md
@@ -1,3 +1,104 @@
-# qBitTorrent client
+# qBittorrent client
 
-TBD
\ No newline at end of file
+This is a helm chart for [qbittorrent](https://qbittorrent.org/) leveraging the [Linuxserver.io image](https://hub.docker.com/r/linuxserver/qbittorrent/)
+
+## TL;DR;
+
+```shell
+$ helm repo add billimek https://billimek.com/billimek-charts/
+$ helm install billimek/qbittorrent
+```
+
+## Installing the Chart
+
+To install the chart with the release name `my-release`:
+
+```console
+helm install --name my-release billimek/qbittorrent
+```
+
+The default login details (change ASAP) are:
+
+* login:admin
+* password:admin
+
+## Uninstalling the Chart
+
+To uninstall/delete the `my-release` deployment:
+
+```console
+helm delete my-release --purge
+```
+
+The command removes all the Kubernetes components associated with the chart and deletes the release.
+
+## Configuration
+
+The following tables lists the configurable parameters of the Sentry chart and their default values.
+
+| Parameter                  | Description                         | Default                                                 |
+|----------------------------|-------------------------------------|---------------------------------------------------------|
+| `image.repository`         | Image repository | `linuxserver/qbittorrent` |
+| `image.tag`                | Image tag. Possible values listed [here](https://hub.docker.com/r/linuxserver/qbittorrent/tags/).| `14.2.0.99201912180418-6819-118af03ubuntu18.04.1-ls57`|
+| `image.pullPolicy`         | Image pull policy | `IfNotPresent` |
+| `strategyType`             | Specifies the strategy used to replace old Pods by new ones | `Recreate` |
+| `timezone`                 | Timezone the qbittorrent instance should run as, e.g. 'America/New_York' | `UTC` |
+| `puid`                     | process userID the qbittorrent instance should run as | `1001` |
+| `pgid`                     | process groupID the qbittorrent instance should run as | `1001` |
+| `umask`                     | newly created files should be set to this umask value | `022` |
+| `probes.liveness.initialDelaySeconds`  | Specify liveness `initialDelaySeconds` parameter for the deployment  | `60` |
+| `probes.liveness.failureThreshold`     | Specify liveness `failureThreshold` parameter for the deployment     | `5`  |
+| `probes.liveness.timeoutSeconds`       | Specify liveness `timeoutSeconds` parameter for the deployment       | `10` |
+| `probes.readiness.initialDelaySeconds` | Specify readiness `initialDelaySeconds` parameter for the deployment | `60` |
+| `probes.readiness.failureThreshold`    | Specify readiness `failureThreshold` parameter for the deployment    | `5`  |
+| `probes.readiness.timeoutSeconds`      | Specify readiness `timeoutSeconds` parameter for the deployment      | `10` |
+| `guiService.type`          | Kubernetes service type for the qbittorrent GUI | `ClusterIP` |
+| `guiService.port`          | Kubernetes port where the qbittorrent GUI is exposed| `8080` |
+| `guiService.annotations`   | Service annotations for the qbittorrent GUI | `{}` |
+| `guiService.labels`        | Custom labels | `{}` |
+| `guiService.loadBalancerIP` | Loadbalance IP for the qbittorrent GUI | `{}` |
+| `btService.type`          | Kubernetes service type for the qbittorrent listening bittorrent port | `NodePort` |
+| `btService.port`          | Kubernetes port where the qbittorrent listening bittorrent port | `6881` |
+| `btService.annotations`   | Service annotations for the qbittorrent bittorrent protocol | `{}` |
+| `btService.labels`        | Custom labels | `{}` |
+| `btService.loadBalancerIP` | Loadbalance IP for the qbittorrent bittorrent protocol | `{}` |
+| `ingress.enabled`              | Enables Ingress | `false` |
+| `ingress.annotations`          | Ingress annotations | `{}` |
+| `ingress.labels`               | Custom labels                       | `{}`
+| `ingress.path`                 | Ingress path | `/` |
+| `ingress.hosts`                | Ingress accepted hostnames | `chart-example.local` |
+| `ingress.tls`                  | Ingress TLS configuration | `[]` |
+| `persistence.config.enabled`      | Use persistent volume to store configuration data | `true` |
+| `persistence.config.size`         | Size of persistent volume claim | `1Gi` |
+| `persistence.config.existingClaim`| Use an existing PVC to persist data | `nil` |
+| `persistence.config.subPath`  | Mount a sub directory of the persistent volume if set | `""` |
+| `persistence.config.storageClass` | Type of persistent volume claim | `-` |
+| `persistence.config.accessMode`  | Persistence access mode | `ReadWriteOnce` |
+| `persistence.downloads.enabled`      | Use persistent volume to store configuration data | `true` |
+| `persistence.downloads.size`         | Size of persistent volume claim | `10Gi` |
+| `persistence.downloads.existingClaim`| Use an existing PVC to persist data | `nil` |
+| `persistence.downloads.subPath`  | Mount a sub directory of the persistent volume if set | `""` |
+| `persistence.downloads.storageClass` | Type of persistent volume claim | `-` |
+| `persistence.downloads.accessMode`   | Persistence access mode | `ReadWriteOnce` |
+| `persistence.extraMounts`            | Array of additional claims to mount | `[]` |
+| `resources`                | CPU/Memory resource requests/limits | `{}` |
+| `nodeSelector`             | Node labels for pod assignment | `{}` |
+| `tolerations`              | Toleration labels for pod assignment | `[]` |
+| `affinity`                 | Affinity settings for pod assignment | `{}` |
+| `podAnnotations`           | Key-value pairs to add as pod annotations  | `{}` |
+
+Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
+
+```console
+helm install --name my-release \
+  --set timezone="America/New York" \
+    billimek/qbittorrent
+```
+
+Alternatively, a YAML file that specifies the values for the above parameters can be provided while installing the chart. For example,
+
+```console
+helm install --name my-release -f values.yaml billimek/qbittorrent
+```
+
+Read through the [values.yaml](https://github.com/billimek/billimek-charts/blob/master/charts/qbittorrent/values.yaml) file. It has several commented out suggested values.
diff --git a/charts/qbittorrent/templates/data-pvc.yaml b/charts/qbittorrent/templates/data-pvc.yaml
deleted file mode 100644
index 9a1eac0b..00000000
--- a/charts/qbittorrent/templates/data-pvc.yaml
+++ /dev/null
@@ -1,25 +0,0 @@
-
-{{- if and .Values.persistence.data.enabled (not .Values.persistence.data.existingClaim) }}
-kind: PersistentVolumeClaim
-apiVersion: v1
-metadata:
-  name: {{ template "qbittorrent.fullname" . }}-data
-  labels:
-    app.kubernetes.io/name: {{ include "qbittorrent.name" . }}
-    helm.sh/chart: {{ include "qbittorrent.chart" . }}
-    app.kubernetes.io/instance: {{ .Release.Name }}
-    app.kubernetes.io/managed-by: {{ .Release.Service }}
-spec:
-  accessModes:
-    - {{ .Values.persistence.data.accessMode | quote }}
-  resources:
-    requests:
-      storage: {{ .Values.persistence.data.size | quote }}
-{{- if .Values.persistence.data.storageClass }}
-{{- if (eq "-" .Values.persistence.data.storageClass) }}
-  storageClassName: ""
-{{- else }}
-  storageClassName: "{{ .Values.persistence.data.storageClass }}"
-{{- end }}
-{{- end }}
-{{- end -}}
\ No newline at end of file
diff --git a/charts/qbittorrent/templates/deployment.yaml b/charts/qbittorrent/templates/deployment.yaml
index 0a0c6000..2baa7b2e 100644
--- a/charts/qbittorrent/templates/deployment.yaml
+++ b/charts/qbittorrent/templates/deployment.yaml
@@ -54,21 +54,26 @@ spec:
             - name: TZ
               value: "{{ .Values.timezone }}"
             - name: PUID
-              value: "{{ .Values.uid }}"
+              value: "{{ .Values.puid }}"
             - name: PGID
-              value: "{{ .Values.gid }}"
+              value: "{{ .Values.pgid }}"
             - name: UMASK_SET
               value: "{{ .Values.umask }}"
-            # - name: WEBUI_PORT
-            #   value: "{{ .Values.guiService.port }}"
           volumeMounts:
             - mountPath: /config
               name: config
+            {{- if .Values.persistence.config.subPath }}
+              subPath: {{ .Values.persistence.config.subPath }}
+            {{ end }}
             - mountPath: /downloads
-              name: data
-            {{- if .Values.persistence.data.subPath }}
-              subPath: {{ .Values.persistence.data.subPath }}
+              name: downloads
+            {{- if .Values.persistence.downloads.subPath }}
+              subPath: {{ .Values.persistence.downloads.subPath }}
             {{ end }}
+            {{-  range .Values.persistence.extraMounts }}
+            - mountPath: /{{ .name }}
+              name: {{ .name }}
+            {{- end }}            
           resources:
 {{ toYaml .Values.resources | indent 12 }}
       volumes:
@@ -79,13 +84,18 @@ spec:
       {{- else }}
         emptyDir: {}
       {{ end }}
-      - name: data
-      {{- if .Values.persistence.data.enabled }}
+      - name: downloads
+      {{- if .Values.persistence.downloads.enabled }}
         persistentVolumeClaim:
-          claimName: {{ if .Values.persistence.data.existingClaim }}{{ .Values.persistence.data.existingClaim }}{{- else }}{{ template "qbittorrent.fullname" . }}-data{{- end }}
+          claimName: {{ if .Values.persistence.downloads.existingClaim }}{{ .Values.persistence.downloads.existingClaim }}{{- else }}{{ template "qbittorrent.fullname" . }}-downloads{{- end }}
       {{- else }}
         emptyDir: {}
       {{ end }}
+     {{- range .Values.persistence.extraMounts }}
+      - name: {{ .name }}
+        persistentVolumeClaim:
+          claimName: {{ .claimName }}
+     {{- end }}      
     {{- with .Values.nodeSelector }}
       nodeSelector:
 {{ toYaml . | indent 8 }}
diff --git a/charts/qbittorrent/templates/downloads-pvc.yaml b/charts/qbittorrent/templates/downloads-pvc.yaml
new file mode 100644
index 00000000..878e54f0
--- /dev/null
+++ b/charts/qbittorrent/templates/downloads-pvc.yaml
@@ -0,0 +1,24 @@
+{{- if and .Values.persistence.downloads.enabled (not .Values.persistence.downloads.existingClaim) }}
+kind: PersistentVolumeClaim
+apiVersion: v1
+metadata:
+  name: {{ template "qbittorrent.fullname" . }}-downloads
+  labels:
+    app.kubernetes.io/name: {{ include "qbittorrent.name" . }}
+    helm.sh/chart: {{ include "qbittorrent.chart" . }}
+    app.kubernetes.io/instance: {{ .Release.Name }}
+    app.kubernetes.io/managed-by: {{ .Release.Service }}
+spec:
+  accessModes:
+    - {{ .Values.persistence.downloads.accessMode | quote }}
+  resources:
+    requests:
+      storage: {{ .Values.persistence.downloads.size | quote }}
+{{- if .Values.persistence.downloads.storageClass }}
+{{- if (eq "-" .Values.persistence.downloads.storageClass) }}
+  storageClassName: ""
+{{- else }}
+  storageClassName: "{{ .Values.persistence.downloads.storageClass }}"
+{{- end }}
+{{- end }}
+{{- end -}}
\ No newline at end of file
diff --git a/charts/qbittorrent/values.yaml b/charts/qbittorrent/values.yaml
index 5d975419..68ef152a 100644
--- a/charts/qbittorrent/values.yaml
+++ b/charts/qbittorrent/values.yaml
@@ -20,13 +20,13 @@ nameOverride: ""
 fullnameOverride: ""
 
 # timezone: UTC
-# umask: "0022"
-uid: 1001
-gid: 1001
+puid: 1001
+pgid: 1001
+umask: 022
 
 image:
   repository: linuxserver/qbittorrent
-  tag: 4.1.8.99201910202234-6729-cb31684ubuntu18.04.1-ls47
+  tag: 14.2.0.99201912180418-6819-118af03ubuntu18.04.1-ls57
   pullPolicy: IfNotPresent
 # resources:
 #   requests:
@@ -94,7 +94,7 @@ ingress:
 persistence:
   config:
     enabled: true
-    ## configuration data Persistent Volume Storage Class
+    ## qbittorrent configuration data Persistent Volume Storage Class
     ## If defined, storageClassName: <storageClass>
     ## If set to "-", storageClassName: "", which disables dynamic provisioning
     ## If undefined (the default) or set to null, no storageClassName spec is
@@ -108,9 +108,13 @@ persistence:
     # existingClaim: your-claim
     accessMode: ReadWriteOnce
     size: 1Gi
-  data:
+    ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
+    ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
+    ##
+    subPath: ""
+  downloads:
     enabled: true
-    ## torrents data volume configuration
+    ## qbittorrent torrents downloads volume configuration
     ## If defined, storageClassName: <storageClass>
     ## If set to "-", storageClassName: "", which disables dynamic provisioning
     ## If undefined (the default) or set to null, no storageClassName spec is
@@ -125,6 +129,17 @@ persistence:
     # subPath: some-subpath
     accessMode: ReadWriteOnce
     size: 10Gi
+    ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
+    ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
+    ##
+    subPath: ""
+
+  extraMounts: []
+  ## Include additional claims that can be mounted inside the
+  ## pod. This is useful if you wish to use different paths with categories
+  ## Claim will me mounted as /{name}
+  # - name: video
+  #   claimName: video-claim
 
 nodeSelector: {}
 
