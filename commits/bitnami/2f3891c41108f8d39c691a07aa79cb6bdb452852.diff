commit 2f3891c41108f8d39c691a07aa79cb6bdb452852
Author: Miguel Ángel Cabrera Miñagorri <macabrera@bitnami.com>
Date:   Fri Apr 10 13:01:01 2020 +0200

    [bitnami/redis-cluster] New Redis cluster topology (#2018)
    
    * [bitnami/redis] New Redis cluster topology
    
    Signed-off-by: Miguel A. Cabrera Minagorri <macabrera@bitnami.com>
    
    * Move the PR to a new Chart instead of override the old Redis
    
    * Remove the standalone option
    
    * Adapt to Rediscluster  container
    
    * Change templates from redis to redis-cluster
    
    * Support only LoadBalancer for external access
    
    * Move persistence from /data to /bitnami
    
    * [bitnami/redis-cluster Adapt the Helm Chart to the new container
    
    Signed-off-by: Miguel A. Cabrera Minagorri <macabrera@bitnami.com>
    
    * Adapt to the container refactorization
    
    * Add job to add Redis Nodes to the cluster
    
    * Address requested changes
    
    * Update common dependency
    
    * Remove common dependency until we fix the CI/CD

diff --git a/bitnami/redis-cluster/.helmignore b/bitnami/redis-cluster/.helmignore
new file mode 100644
index 0000000000..b2767ae17e
--- /dev/null
+++ b/bitnami/redis-cluster/.helmignore
@@ -0,0 +1,3 @@
+.git
+# OWNERS file for Kubernetes
+OWNERS
diff --git a/bitnami/redis-cluster/Chart.yaml b/bitnami/redis-cluster/Chart.yaml
new file mode 100644
index 0000000000..c4cfc72b4b
--- /dev/null
+++ b/bitnami/redis-cluster/Chart.yaml
@@ -0,0 +1,19 @@
+apiVersion: v1
+name: redis-cluster
+version: 1.0.0
+appVersion: 5.0.7
+description: Open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets.
+keywords:
+  - redis
+  - keyvalue
+  - database
+home: http://redis.io/
+icon: https://bitnami.com/assets/stacks/redis/img/redis-stack-220x234.png
+sources:
+  - https://github.com/bitnami/bitnami-docker-redis
+maintainers:
+  - name: Bitnami
+    email: containers@bitnami.com
+  - name: desaintmartin
+    email: cedric@desaintmartin.fr
+engine: gotpl
diff --git a/bitnami/redis-cluster/README.md b/bitnami/redis-cluster/README.md
new file mode 100644
index 0000000000..db0a4ef591
--- /dev/null
+++ b/bitnami/redis-cluster/README.md
@@ -0,0 +1,448 @@
+
+# Redis
+
+[Redis](http://redis.io/) is an advanced key-value cache and store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs.
+
+## TL;DR;
+
+```bash
+# Testing configuration
+$ helm install my-release bitnami/redis-cluster
+```
+
+```bash
+# Production configuration
+$ helm install my-release bitnami/redis-cluster --values values-production.yaml
+```
+
+## Introduction
+
+This chart bootstraps a [Redis](https://github.com/bitnami/bitnami-docker-redis) deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.
+
+Bitnami charts can be used with [Kubeapps](https://kubeapps.com/) for deployment and management of Helm Charts in clusters. This chart has been tested to work with NGINX Ingress, cert-manager, fluentd and Prometheus on top of the [BKPR](https://kubeprod.io/).
+
+## Prerequisites
+
+- Kubernetes 1.12+
+- Helm 2.11+ or Helm 3.0-beta3+
+- PV provisioner support in the underlying infrastructure
+
+## Installing the Chart
+
+To install the chart with the release name `my-release`:
+
+```bash
+$ helm install my-release bitnami/redis-cluster
+```
+
+The command deploys Redis on the Kubernetes cluster in the default configuration. The [Parameters](#parameters) section lists the parameters that can be configured during installation.
+
+NOTE: if you get a timeout error waiting for the hook to complete increase the default timeout (300s) to a higher one, for example:
+
+```
+helm install --timeout 600s myrelease bitnami/redis-cluster
+```
+
+> **Tip**: List all releases using `helm list`
+
+## Uninstalling the Chart
+
+To uninstall/delete the `my-release` deployment:
+
+```bash
+$ helm delete my-release
+```
+
+The command removes all the Kubernetes components associated with the chart and deletes the release.
+
+## Parameters
+
+The following table lists the configurable parameters of the Redis chart and their default values.
+
+#### Global parameters
+
+| Parameter                                     | Description                                                                                                                                         | Default                                                 |
+| --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `global.imageRegistry`                        | Global Docker image registry                                                                                                                        | `nil`                                                   |
+| `global.imagePullSecrets`                     | Global Docker registry secret names as an array                                                                                                     | `[]` (does not add image pull secrets to deployed pods) |
+| `global.storageClass`                         | Global storage class for dynamic provisioning                                                                                                       | `nil`                                                   |
+| `global.redis.password`                       | Redis password (overrides `password`)                                                                                                               | `nil`                                                   |
+
+#### Common parameters
+
+| Parameter                                     | Description                                                                                                                                         | Default                                                 |
+| --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `image.registry`                              | Redis Image registry                                                                                                                                | `docker.io`                                             |
+| `image.repository`                            | Redis Image name                                                                                                                                    | `bitnami/redis`                                         |
+| `image.tag`                                   | Redis Image tag                                                                                                                                     | `{TAG_NAME}`                                            |
+| `image.pullPolicy`                            | Image pull policy                                                                                                                                   | `IfNotPresent`                                          |
+| `image.pullSecrets`                           | Specify docker-registry secret names as an array                                                                                                    | `nil`                                                   |
+| `nameOverride`                                | String to partially override redis.fullname template with a string (will prepend the release name)                                                  | `nil`                                                   |
+| `fullnameOverride`                            | String to fully override redis.fullname template with a string                                                                                      | `nil`                                                   |
+| `existingSecret`                              | Name of existing secret object (for password authentication)                                                                                        | `nil`                                                   |
+| `existingSecretPasswordKey`                   | Name of key containing password to be retrieved from the existing secret                                                                            | `nil`                                                   |
+| `usePassword`                                 | Use password                                                                                                                                        | `true`                                                  |
+| `usePasswordFile`                             | Mount passwords as files instead of environment variables                                                                                           | `false`                                                 |
+| `password`                                    | Redis password (ignored if existingSecret set)                                                                                                      |              Randomly generated                                      |
+| `configmap`                                   | Additional common Redis node configuration (this value is evaluated as a template)                                                                  |                 See values.yaml                                         |
+| `clusterDomain`                               | Kubernetes DNS Domain name to use                                                                                                                   | `cluster.local`                                         |
+| `networkPolicy.enabled`                       | Enable NetworkPolicy                                                                                                                                | `false`                                                 |
+| `networkPolicy.allowExternal`                 | Don't require client label for connections                                                                                                          | `true`                                                  |
+| `networkPolicy.ingressNSMatchLabels`          | Allow connections from other namespaces                                                                                                             | `{}`                                                    |
+| `networkPolicy.ingressNSPodMatchLabels`       | For other namespaces match by pod labels and namespace labels                                                                                       | `{}`                                                    |
+| `podSecurityContext.enabled`                  | Enable pods' security context                                                                                                                            | `true`                                                  |
+| `podSecurityContext.fsGroup`                  | Group ID for the pods.                                                                                                                         | `1001`                                                  |
+| `podSecurityContext.runAsUser`                | User ID for the pods.                                                                                                                          | `1001`                                                  |
+| `podSecurityContext.sysctls`                  | Set namespaced sysctls for the pods.                                                                                                           | `nil`                                                   |
+| `containerSecurityContext.enabled`            | Enable container's security context                                                                                                                            | `true`                                                  |
+| `containerSecurityContext.fsGroup`            | Group ID for the containers.                                                                                                                         | `1001`                                                  |
+| `containerSecurityContext.runAsUser`          | User ID for the containers.                                                                                                                          | `1001`                                                  |
+| `containerSecurityContext.sysctls`            | Set namespaced sysctls for the containers.                                                                                                           | `nil`                                                   |
+| `serviceAccount.create`                       | Specifies whether a ServiceAccount should be created                                                                                                | `false`                                                 |
+| `serviceAccount.name`                         | The name of the ServiceAccount to create                                                                                                            | Generated using the fullname template                                   |
+| `rbac.create`                                 | Specifies whether RBAC resources should be created                                                                                                  | `false`                                                 |
+| `rbac.role.rules`                             | Rules to create                                                                                                                                     | `[]`                                                    |
+| `persistence.enabled`                         | Use a PVC to persist data.                                                                                                                          | `true`                                                  |
+| `persistence.path`                            | Path to mount the volume at, to use other images                                                                                                    | `/bitnami/redis/data`                                                 |
+| `persistence.subPath`                         | Subdirectory of the volume to mount at                                                                                                              | `""`                                                    |
+| `persistence.storageClass`                    | Storage class of backing PVC                                                                                                                        | `generic`                                               |
+| `persistence.accessModes`                     | Persistent Volume Access Modes                                                                                                                      | `[ReadWriteOnce]`                                       |
+| `persistence.size`                            | Size of data volume                                                                                                                                 | `8Gi`                                                   |
+| `persistence.matchLabels`                     | matchLabels persistent volume selector                                                                                                              | `{}`                                                    |
+| `persistence.matchExpressions`                | matchExpressions persistent volume selector                                                                                                         | `{}`                                                    |
+| `statefulset.updateStrategy`                  | Update strategy for StatefulSet                                                                                                                     | onDelete                                                |
+| `statefulset.rollingUpdatePartition`          | Partition update strategy                                                                                                                           | `nil`                                                   |
+| `podLabels`                                   | Additional labels for Redis pod                                                                                                                     | {}                                                      |
+| `podAnnotations`                              | Additional annotations for Redis pod                                                                                                                | {}                                                      |
+| `redisPort`                                   | Redis port.                                                                                                                                         | `6379`                                                  |
+| `command`                                     | Redis entrypoint string. The command `redis-server` is executed if this is not provided.                                                            | `nil`                                                   |
+| `args`                                        | Arguments for the provided command if needed                                                                                                        |              `nil`                                                   |
+| `configmap`                                   | Additional Redis configuration for the nodes (this value is evaluated as a template)                                                                | `nil`                                                   |
+| `extraFlags`                                  | Redis additional command line flags                                                                                                                 | []                                                      |
+| `nodeSelector`                                | Redis Node labels for pod assignment                                                                                                                | {"beta.kubernetes.io/arch": "amd64"}                    |
+| `tolerations`                                 | Toleration labels for Redis pod assignment                                                                                                          | []                                                      |
+| `affinity`                                    | Affinity settings for Redis pod assignment                                                                                                          | {}                                                      |
+| `schedulerName`                               | Name of an alternate scheduler                                                                                                                      | `nil`                                                   |
+| `service.port`                                | Kubernetes Service port.                                                                                                                            | `6379`                                                  |
+| `service.annotations`                         | annotations for redis service                                                                                                                       | {}                                                      |
+| `service.labels`                              | Additional labels for redis service                                                                                                                 | {}                                                      |
+| `resources`                                   | Redis CPU/Memory resource requests/limits                                                                                                           | Memory: `256Mi`, CPU: `100m`                                             |
+| `livenessProbe.enabled`                       | Turn on and off liveness probe.                                                                                                                     | `true`                                                  |
+| `livenessProbe.initialDelaySeconds`           | Delay before liveness probe is initiated.                                                                                                           | `30`                                                    |
+| `livenessProbe.periodSeconds`                 | How often to perform the probe.                                                                                                                     | `30`                                                    |
+| `livenessProbe.timeoutSeconds`                | When the probe times out.                                                                                                                           | `5`                                                     |
+| `livenessProbe.successThreshold`              | Minimum consecutive successes for the probe to be considered successful after having failed.                                                        | `1`                                                     |
+| `livenessProbe.failureThreshold`              | Minimum consecutive failures for the probe to be considered failed after having succeeded.                                                          | `5`                                                     |
+| `readinessProbe.enabled`                      | Turn on and off readiness probe.                                                                                                                    | `true`                                                  |
+| `readinessProbe.initialDelaySeconds`          | Delay before readiness probe is initiated.                                                                                                          | `5`                                                     |
+| `readinessProbe.periodSeconds`                | How often to perform the probe.                                                                                                                     | `10`                                                    |
+| `readinessProbe.timeoutSeconds`               | When the probe times out.                                                                                                                           | `1`                                                     |
+| `readinessProbe.successThreshold`             | Minimum consecutive successes for the probe to be considered successful after having failed.                                                        | `1`                                                     |
+| `readinessProbe.failureThreshold`             | Minimum consecutive failures for the probe to be considered failed after having succeeded.                                                          | `5`                                                     |
+| `priorityClassName`                           | Redis Master pod priorityClassName                                                                                                                  | {}                                                      |
+| `volumePermissions.enabled`                   | Enable init container that changes volume permissions in the registry (for cases where the default k8s `runAsUser` and `fsUser` values do not work) | `false`                                                 |
+| `volumePermissions.image.registry`            | Init container volume-permissions image registry                                                                                                    | `docker.io`                                             |
+| `volumePermissions.image.repository`          | Init container volume-permissions image name                                                                                                        | `bitnami/minideb`                                                |
+| `volumePermissions.image.tag`                 | Init container volume-permissions image tag                                                                                                         | `buster`                                                |
+| `volumePermissions.image.pullPolicy`          | Init container volume-permissions image pull policy                                                                                                 | `Always`                                                |
+| `volumePermissions.resources`                 | Init container volume-permissions CPU/Memory resource requests/limits                                                                               | {}                                                      |
+| `volumePermissions.image.pullSecrets`         | Specify docker-registry secret names as an array                                                                                                    | `[]` (does not add image pull secrets to deployed pods)                |
+| `extraVolumes`                                | Array of extra volumes to be added to all pods (evaluated as a template). Requires setting `extraVolumeMounts`                                      | `[]`                                                    |
+| `extraVolumeMounts`                           | Array of extra volume mounts to be added to all pods (evaluated as a template). Normally used with `extraVolumes`                                   | `[]`                                                    |
+| `extraEnvVars`                                | Array containing extra env vars to be added to all pods (evaluated as a template)                                                                   | `[]`                                                    |
+| `extraEnvVarsConfigMap`                       | ConfigMap containing extra env vars to be added to all pods (evaluated as a template)                                                               | `nil`                                                   |
+| `extraEnvVarsSecret`                          | Secret containing extra env vars to be added to all pods (evaluated as a template)                                                                  | `nil`                                                   |
+| `extraInitContainers`                         | Init containers to add to the cronjob container                                                                                                     | {}                                                      |
+| `podSecurityPolicy.create`                    | Specifies whether a PodSecurityPolicy should be created                                                                                             | `false`                                                 |
+| `sidecars`                                    | Attach additional containers to the pod (evaluated as a template)                                                                                   | `nil`   
+
+#### Redis cluster parameters
+
+| Parameter                                     | Description                                                                                                                                         | Default                                                 |
+| --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `cluster.init`                                | Enable the creation of a job that initializes the Redis Cluster                                                                                     | `true`                                                  |
+| `cluster.activeDeadlineSeconds`               | Number of seconds that the job to create the cluster will be waiting for the nodes to be ready                                                      | `600`                                                   |
+| `cluster.nodes`                               | Number of nodes in the Redis cluster                                                                                                                | `6`                                                     |
+| `cluster.replicas`                            | Number of replicas for every master in the cluster                                                                                                  | `1`                                                     |
+| `cluster.busPort`                             | Port for the Redis gossip protocol                                                                                                                  | `16379`                                                 |
+| `cluster.externalAccess.enabled`              | Enable access to the Redis cluster from Outside the Kubernetes Cluster                                                                              | `false`                                                 |
+| `cluster.externalAccess.service.type`         | Type for the services used to expose every Pod                                                                                                      | `LoadBalancer`                                          |
+| `cluster.externalAccess.service.port`         | Port for the services used to expose every Pod                                                                                                      | `6379`                                                  |
+| `cluster.externalAccess.service.loadBalancerIP` | Array of LoadBalancer IPs used to expose every Pod of the Redis cluster when `cluster.externalAccess.service.type` is `LoadBalancer`              | `[]`                                                    |
+| `cluster.externalAccess.service.annotations`  | Annotations to add to the services used to expose every Pod of the Redis Cluster                                                                    | `{}`                                                    |
+| `cluster.update.addNodes`                     | Boolean to specify if you want to add nodes after the upgrade                                                                                       | `false`                                                 |
+| `cluster.update.currentNumberOfNodes`         | Number of currently deployed Redis  nodes                                                                                                           | `6`                                                     |
+| `cluster.update.newExternalIPs`               | External IPs obtained from the services for the new nodes to add to the cluster                                                                     |                `nil`                                                   |
+
+#### Metrics sidecar parameters
+
+| Parameter                                     | Description                                                                                                                                         | Default                                                 |
+| --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `metrics.enabled`                             | Start a side-car prometheus exporter                                                                                                                | `false`                                                 |
+| `metrics.image.registry`                      | Redis exporter image registry                                                                                                                       | `docker.io`                                             |
+| `metrics.image.repository`                    | Redis exporter image name                                                                                                                           | `bitnami/redis-exporter`                                               |
+| `metrics.image.tag`                           | Redis exporter image tag                                                                                                                            | `{TAG_NAME}`                                            |
+| `metrics.image.pullPolicy`                    | Image pull policy                                                                                                                                   | `IfNotPresent`                                          |
+| `metrics.image.pullSecrets`                   | Specify docker-registry secret names as an array                                                                                                    | `nil`                                                   |
+| `metrics.extraArgs`                           | Extra arguments for the binary; possible values [here](https://github.com/oliver006/redis_exporter#flags)                                           | {}                                                      |
+| `metrics.podLabels`                           | Additional labels for Metrics exporter pod                                                                                                          | {}                                                      |
+| `metrics.podAnnotations`                      | Additional annotations for Metrics exporter pod                                                                                                     | {}                                                      |
+| `metrics.resources`                           | Exporter resource requests/limit                                                                                                                    | Memory: `256Mi`, CPU: `100m`                                             |
+| `metrics.serviceMonitor.enabled`              | if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)                                              | `false`                                                 |
+| `metrics.serviceMonitor.namespace`            | Optional namespace which Prometheus is running in                                                                                                   | `nil`                                                   |
+| `metrics.serviceMonitor.interval`             | How frequently to scrape metrics (use by default, falling back to Prometheus' default)                                                              | `nil`                                                   |
+| `metrics.serviceMonitor.selector`             | Default to kube-prometheus install (CoreOS recommended), but should be set according to Prometheus install                                          | `{ prometheus: kube-prometheus }`                                      |
+| `metrics.service.type`                        | Kubernetes Service type (redis metrics)                                                                                                             | `ClusterIP`                                             |
+| `metrics.service.annotations`                 | Annotations for the services to monitor.                                                                                                            | {}                                                      |
+| `metrics.service.labels`                      | Additional labels for the metrics service                                                                                                           | {}                                                      |
+| `metrics.service.loadBalancerIP`              | loadBalancerIP if redis metrics service type is `LoadBalancer`                                                                                      | `nil`                                                   |
+| `metrics.priorityClassName`                   | Metrics exporter pod priorityClassName                                                                                                              | {}                                                      |
+| `metrics.prometheusRule.enabled`              | Set this to true to create prometheusRules for Prometheus operator                                                                                  | `false`                                                 |
+| `metrics.prometheusRule.additionalLabels`     | Additional labels that can be used so prometheusRules will be discovered by Prometheus                                                              | `{}`                                                    |
+| `metrics.prometheusRule.namespace`            | namespace where prometheusRules resource should be created                                                                                          | Same namespace as redis                                                   |
+| `metrics.prometheusRule.rules`                | [rules](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/) to be created, check values for an example.                     | `[]`                                                    |
+                                                |
+
+#### Sysctl Image parameters
+
+| Parameter                                     | Description                                                                                                                                         | Default                                                 |
+| --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `sysctlImage.enabled`                         | Enable an init container to modify Kernel settings                                                                                                  | `false`                                                 |
+| `sysctlImage.command`                         | sysctlImage command to execute                                                                                                                      | []                                                      |
+| `sysctlImage.registry`                        | sysctlImage Init container registry                                                                                                                 | `docker.io`                                             |
+| `sysctlImage.repository`                      | sysctlImage Init container name                                                                                                                     | `bitnami/minideb`                                                |
+| `sysctlImage.tag`                             | sysctlImage Init container tag                                                                                                                      | `buster`                                                |
+| `sysctlImage.pullPolicy`                      | sysctlImage Init container pull policy                                                                                                              | `Always`                                                |
+| `sysctlImage.mountHostSys`                    | Mount the host `/sys` folder to `/host-sys`                                                                                                         | `false`                                                 |
+| `sysctlImage.resources`                       | sysctlImage Init container CPU/Memory resource requests/limits                                                                                      | {}                                                      |
+| `sysctlImage.pullSecrets`                     | Specify docker-registry secret names as an array                                                                                                    | `nil`                                                   |
+
+Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
+
+```bash
+$ helm install my-release \
+  --set password=secretpassword \
+    bitnami/redis-cluster
+```
+
+The above command sets the Redis server password to `secretpassword`.
+
+Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,
+
+```bash
+$ helm install my-release -f values.yaml bitnami/redis-cluster
+```
+
+> **Tip**: You can use the default [values.yaml](values.yaml)
+
+> **Note for minikube users**: Current versions of minikube (v0.24.1 at the time of writing) provision `hostPath` persistent volumes that are only writable by root. Using chart defaults cause pod failure for the Redis pod as it attempts to write to the `/bitnami` directory. Consider installing Redis with `--set persistence.enabled=false`. See minikube issue [1990](https://github.com/kubernetes/minikube/issues/1990) for more information.
+
+## Configuration and installation details
+
+### [Rolling VS Immutable tags](https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/)
+
+It is strongly recommended to use immutable tags in a production environment. This ensures your deployment does not change automatically if the same tag is updated with a different image.
+
+Bitnami will release a new chart updating its containers if a new version of the main container, significant changes, or critical vulnerabilities exist.
+
+### Production configuration
+
+This chart includes a `values-production.yaml` file where you can find some parameters oriented to production configuration in comparison to the regular `values.yaml`. You can use this file instead of the default one.
+
+- Enable NetworkPolicy:
+```diff
+- networkPolicy.enabled: false
++ networkPolicy.enabled: true
+```
+
+- Start a side-car prometheus exporter:
+```diff
+- metrics.enabled: false
++ metrics.enabled: true
+```
+
+### Cluster topology
+
+The Helm Chart will deploy by default 3 redis masters and 3 replicas. By default the Redis Cluster is not accessible from outside the Kubernetes cluster, to the Redis cluster to the outside set `cluster.externalAccess.enabled=true`, it will create in the first installation only 6 LoadBalancer services, one for each Redis node, once you have the external IPs of each service you will need to perform an upgrade passing those IPs to the `cluster.externalAccess.service.loadbalancerIP` array.
+
+The replicas will be read-only replicas of the masters. By default only one service is exposed (when not using the external access mode). You will connect your client to the exposed service, regardless you need to read or write. When a write operation arrives to a replica it will redirect the client to the master node. For example, using `redis-cli` you will need to provide the `-c` flag for `redis-cli` to follow the redirection automatically.
+
+Using the external access mode, you can connect to any of the pods and the slaves will redirect the client in the same way as explained before, but the all the IPs will be public.
+
+In case the master crashes, one of the slaves will be promoted to master. The slots stored by the crashed master will be unavailable until the slave finish the promotion. If a master and all his slaves crash, the cluster will be down until one of them is up again. To avoid downtime, it is possible to configure the number of Redis nodes with `cluster.nodes` and the number of replicas that will be assigned to each master with `cluster.replicas`. For example:
+  - `cluster.nodes=9` ( 3 master plus 2 replicas for each master)
+  - `cluster.replicas=2`
+
+Providing the values above, the cluster will have 3 masters and, each master, will have 2 replicas.
+
+> NOTE: By default `cluster.init` will be set to `true` in order to initialize the Redis Cluster in the first installation. If for testing purpose you only want to deploy or upgrade the nodes but avoiding the creation of the cluster you can set `cluster.init` to `false`.
+
+#### Adding a new node to the cluster
+
+There is a job that will be executed using a `post-upgrade` hook that will allow you to add a new node. To use it, you should provide some parameters to the upgrade:
+
+- Pass as `password` the password used in the installation time. If you did not provide a password follow the intructions from the NOTES.txt to get the generated password.
+- Set the desired number of nodes at `cluster.nodes`.
+- Set the number of current nodes at `cluster.update.currentNumberOfNodes`.
+- Set to true `cluster.update.addNodes`.
+
+The following will be an example to add one more node:
+
+```
+helm upgrade --timeout 600s <release> --set "password=${REDIS_PASSWORD},cluster.nodes=7,cluster.update.addNodes=true,cluster.update.currentNumberOfNodes=6" bitnami/redis-cluster
+```
+
+Where `REDIS_PASSWORD` is the password obtained with the command that appears after the first installation of the Helm Chart.
+The cluster will continue up while restarting pods one by one as the quorum is not lost.
+
+##### External Access
+
+If you are using external access, to add a new node you will need to perform two upgrades. First upgrade the release to add a new Redis node and to get a LoadBalancerIP service. For example:
+
+```
+helm upgrade <release> --set "password=${REDIS_PASSWORD},cluster.externalAccess.enabled=true,cluster.externalAccess.service.type=LoadBalancer,cluster.externalAccess.service.loadBalancerIP[0]=<loadBalancerip-0>,cluster.externalAccess.service.loadBalancerIP[1]=<loadbalanacerip-1>,cluster.externalAccess.service.loadBalancerIP[2]=<loadbalancerip-2>,cluster.externalAccess.service.loadBalancerIP[3]=<loadbalancerip-3>,cluster.externalAccess.service.loadBalancerIP[4]=<loadbalancerip-4>,cluster.externalAccess.service.loadBalancerIP[5]=<loadbalancerip-5>,cluster.externalAccess.service.loadBalancerIP[6]=,cluster.nodes=7,cluster.init=false bitnami/redis-cluster
+```
+
+> Important here to provide the loadBalancerIP parameters for the new nodes empty to not get an index error.
+
+As we want to add a new node, we are setting `cluster.nodes=7` and we leave empty the LoadBalancerIP for the new node, so the cluster will provide the correct one.
+`REDIS_PASSWORD` is the password obtained with the command that appears after the first installation of the Helm Chart.
+At this point, you will have a new Redis Pod that will remain in `crashLoopBackOff` state until we provide the LoadBalancerIP for the new service.
+Now, wait until the cluster provides the new LoadBalancerIP for the new service and perform the second upgrade:
+
+```
+helm upgrade <release> --set "password=${REDIS_PASSWORD},cluster.externalAccess.enabled=true,cluster.externalAccess.service.type=LoadBalancer,cluster.externalAccess.service.loadBalancerIP[0]=<loadbalancerip-0>,cluster.externalAccess.service.loadBalancerIP[1]=<loadbalancerip-1>,cluster.externalAccess.service.loadBalancerIP[2]=<loadbalancerip-2>,cluster.externalAccess.service.loadBalancerIP[3]=<loadbalancerip-3>,cluster.externalAccess.service.loadBalancerIP[4]=<loadbalancerip-4>,cluster.externalAccess.service.loadBalancerIP[5]=<loadbalancerip-5>,cluster.externalAccess.service.loadBalancerIP[6]=<loadbalancerip-6>,cluster.nodes=7,cluster.init=false,cluster.update.addNodes=true,cluster.update.newExternalIPs[0]=<load-balancerip-6>" bitnami/redis-cluster
+```
+
+Note we are providing the new IPs at `cluster.update.newExternalIPs`, the flag `cluster.update.addNodes=true` to enable the creation of the Job that adds a new node and now we are setting the LoadBalancerIP of the new service instead of leave it empty.
+
+> NOTE: To avoid the creation of the Job that initializes the Redis Cluster again, you will need to provide `cluster.init=false`.
+
+#### Scale down the cluster
+
+To scale down the redis cluster just perform a normal upgrade setting the `cluster.nodes` value to the desired number of nodes. It should not be less than `6`. Also it is needed to provide the password using the `password`. For example, having more than 6 nodes, to scale down the cluster to 6 nodes:
+
+```
+helm upgrade --timeout 600s <release> --set "password=${REDIS_PASSWORD},cluster.nodes=6" .
+```
+
+The cluster will continue working during the update as long as the quorum is not lost.
+
+> NOTE: To avoid the creation of the Job that initializes the Redis Cluster again, you will need to provide `cluster.init=false`.
+
+### Using password file
+To use a password file for Redis you need to create a secret containing the password.
+
+> *NOTE*: It is important that the file with the password must be called `redis-password`
+
+And then deploy the Helm Chart using the secret name as parameter:
+
+```console
+usePassword=true
+usePasswordFile=true
+existingSecret=redis-password-secret
+metrics.enabled=true
+```
+
+### Sidecars and Init Containers
+
+If you have a need for additional containers to run within the same pod as Redis (e.g. an additional metrics or logging exporter), you can do so via the `sidecars` config parameter. Simply define your container according to the Kubernetes container spec.
+
+```yaml
+sidecars:
+  - name: your-image-name
+    image: your-image
+    imagePullPolicy: Always
+    ports:
+      - name: portname
+       containerPort: 1234
+```
+
+Similarly, you can add extra init containers using the `initContainers` parameter.
+
+```yaml
+initContainers:
+  - name: your-image-name
+    image: your-image
+    imagePullPolicy: Always
+    ports:
+      - name: portname
+        containerPort: 1234
+```
+
+### Adding extra environment variables
+
+In case you want to add extra environment variables (useful for advanced operations like custom init scripts), you can use the `extraEnvVars` property.
+
+```yaml
+extraEnvVars:
+  - name: REDIS_WHATEVER
+    value: value
+```
+
+Alternatively, you can use a ConfigMap or a Secret with the environment variables. To do so, use the `extraEnvVarsCM` or the `extraEnvVarsSecret` values.
+
+### Metrics
+
+The chart optionally can start a metrics exporter for [prometheus](https://prometheus.io). The metrics endpoint (port 9121) is exposed in the service. Metrics can be scraped from within the cluster using something similar as the described in the [example Prometheus scrape configuration](https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml). If metrics are to be scraped from outside the cluster, the Kubernetes API proxy can be utilized to access the endpoint.
+
+### Host Kernel Settings
+Redis may require some changes in the kernel of the host machine to work as expected, in particular increasing the `somaxconn` value and disabling transparent huge pages.
+To do so, you can set up a privileged initContainer with the `sysctlImage` config values, for example:
+```
+sysctlImage:
+  enabled: true
+  mountHostSys: true
+  command:
+    - /bin/sh
+    - -c
+    - |-
+      install_packages procps
+      sysctl -w net.core.somaxconn=10000
+      echo never > /host-sys/kernel/mm/transparent_hugepage/enabled
+```
+
+Alternatively, for Kubernetes 1.12+ you can set `podSecurityContext.sysctls` which will configure sysctls for master and slave pods. Example:
+
+```yaml
+podSecurityContext:
+  sysctls:
+  - name: net.core.somaxconn
+    value: "10000"
+```
+
+Note that this will not disable transparent huge tables.
+
+## Helm Upgrade
+
+ By default `cluster.init` will be set to `true` in order to initialize the Redis Cluster in the first installation. If for testing purpose you only want to deploy or upgrade the nodes but avoiding the creation of the cluster you can set `cluster.init` to `false`.
+
+## Persistence
+
+By default, the chart mounts a [Persistent Volume](http://kubernetes.io/docs/user-guide/persistent-volumes/) at the `/bitnami` path. The volume is created using dynamic volume provisioning. If a Persistent Volume Claim already exists, specify it during installation.
+
+## NetworkPolicy
+
+To enable network policy for Redis, install
+[a networking plugin that implements the Kubernetes NetworkPolicy spec](https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy#before-you-begin),
+and set `networkPolicy.enabled` to `true`.
+
+For Kubernetes v1.5 & v1.6, you must also turn on NetworkPolicy by setting
+the DefaultDeny namespace annotation. Note: this will enforce policy for _all_ pods in the namespace:
+
+    kubectl annotate namespace default "net.beta.kubernetes.io/network-policy={\"ingress\":{\"isolation\":\"DefaultDeny\"}}"
+
+With NetworkPolicy enabled, only pods with the generated client label will be
+able to connect to Redis. This label will be displayed in the output
+after a successful install.
+
+With `networkPolicy.ingressNSMatchLabels` pods from other namespaces can connect to redis. Set `networkPolicy.ingressNSPodMatchLabels` to match pod labels in matched namespace. For example, for a namespace labeled `redis=external` and pods in that namespace labeled `redis-client=true` the fields should be set:
+
+```
+networkPolicy:
+  enabled: true
+  ingressNSMatchLabels:
+    redis: external
+  ingressNSPodMatchLabels:
+    redis-client: true
+```
diff --git a/bitnami/redis-cluster/templates/NOTES.txt b/bitnami/redis-cluster/templates/NOTES.txt
new file mode 100644
index 0000000000..49ead7553d
--- /dev/null
+++ b/bitnami/redis-cluster/templates/NOTES.txt
@@ -0,0 +1,64 @@
+** Please be patient while the chart is being deployed **
+
+{{ if .Values.usePassword }}
+To get your password run:
+
+    export REDIS_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ template "redis-cluster.secretName" . }} -o jsonpath="{.data.redis-password}" | base64 --decode)
+{{- end }}
+
+{{- if .Values.cluster.externalAccess.enabled }}
+
+To connect to your Redis server from outside the cluster check the following information:
+
+  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
+        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "redis-cluster.fullname" . }}'
+
+    You will have a different external IP for each Redis node. Get the external ip from `-external` suffixed services: `kubectl get svc`.
+    Redis port: {{ .Values.cluster.externalAccess.service.port }}
+
+    {{- if not .Values.cluster.externalAccess.service.loadBalancerIP }}
+    Once the LoadBalancerIPs are ready, you need to provide them and perform a Helm Upgrade:
+
+    helm upgrade {{ .Release.Name }} --set "cluster.externalAccess.enabled=true,cluster.externalAccess.service.type=LoadBalancer{{- $root := . }}{{ $count := .Values.cluster.nodes | int }}{{ range $i, $v := until $count }},cluster.externalAccess.service.loadBalancerIP[{{ $i }}]=load-balancerip-{{- $i }}{{- end }}" bitnami/redis
+    Where loadbalancer-ip-i are the LoadBalancerIPs provided by the cluster.
+    {{- else -}}
+    {{- if .Values.cluster.init -}}
+    INFO: The Job to create the cluster will be created.
+    {{- end -}}
+
+    To connect to your database from outside the cluster execute the following commands:
+
+    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "redis-cluster.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
+    redis-cli -c -h $SERVICE_IP -p {{ .Values.service.port }} {{- if .Values.usePassword }} -a $REDIS_PASSWORD{{ end }}
+    {{- end }}
+
+{{- else }}
+
+You have deployed a Redis Cluster accessible only from within you Kubernetes Cluster.
+
+{{- if .Values.cluster.init -}}
+INFO: The Job to create the cluster will be created.
+{{- end -}}
+
+To connect to your Redis cluster:
+
+1. Run a Redis pod that you can use as a client:
+
+kubectl run --namespace {{ .Release.Namespace }} {{ template "redis-cluster.fullname" . }}-client --rm --tty -i --restart='Never' \
+{{ if .Values.usePassword }} --env REDIS_PASSWORD=$REDIS_PASSWORD \{{ end }}
+{{- if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}--labels="{{ template "redis-cluster.fullname" . }}-client=true" \{{- end }}
+--image {{ template "redis-cluster.image" . }} -- bash
+
+2. Connect using the Redis CLI:
+
+redis-cli -c -h {{ template "redis-cluster.fullname" . }}{{ if .Values.usePassword }} -a $REDIS_PASSWORD{{ end }}
+
+{{ if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}
+Note: Since NetworkPolicy is enabled, only pods with label
+{{ template "redis-cluster.fullname" . }}-client=true"
+will be able to connect to redis.
+{{- end -}}
+{{- end -}}
+
+{{- include "redis-cluster.validateValues" . }}
+{{- include "redis-cluster.checkRollingTags" . }}
diff --git a/bitnami/redis-cluster/templates/_helpers.tpl b/bitnami/redis-cluster/templates/_helpers.tpl
new file mode 100644
index 0000000000..1f52735170
--- /dev/null
+++ b/bitnami/redis-cluster/templates/_helpers.tpl
@@ -0,0 +1,367 @@
+{{/* vim: set filetype=mustache: */}}
+{{/*
+Expand the name of the chart.
+*/}}
+{{- define "redis-cluster.name" -}}
+{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
+{{- end -}}
+
+{{/*
+Expand the chart plus release name (used by the chart label)
+*/}}
+{{- define "redis-cluster.chart" -}}
+{{- printf "%s-%s" .Chart.Name .Chart.Version -}}
+{{- end -}}
+
+{{/*
+Create a default fully qualified app name.
+We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
+If release name contains chart name it will be used as a full name.
+*/}}
+{{- define "redis-cluster.fullname" -}}
+{{- if .Values.fullnameOverride -}}
+{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
+{{- else -}}
+{{- $name := default .Chart.Name .Values.nameOverride -}}
+{{- if contains $name .Release.Name -}}
+{{- .Release.Name | trunc 63 | trimSuffix "-" -}}
+{{- else -}}
+{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
+{{- end -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the appropriate apiVersion for networkpolicy.
+*/}}
+{{- define "networkPolicy.apiVersion" -}}
+{{- if semverCompare ">=1.4-0, <1.7-0" .Capabilities.KubeVersion.GitVersion -}}
+{{- print "extensions/v1beta1" -}}
+{{- else -}}
+{{- print "networking.k8s.io/v1" -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the appropriate apiGroup for PodSecurityPolicy.
+*/}}
+{{- define "podSecurityPolicy.apiGroup" -}}
+{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
+{{- print "policy" -}}
+{{- else -}}
+{{- print "extensions" -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the appropriate apiVersion for PodSecurityPolicy.
+*/}}
+{{- define "podSecurityPolicy.apiVersion" -}}
+{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
+{{- print "policy/v1beta1" -}}
+{{- else -}}
+{{- print "extensions/v1beta1" -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the proper Redis image name
+*/}}
+{{- define "redis-cluster.image" -}}
+{{- $registryName := .Values.image.registry -}}
+{{- $repositoryName := .Values.image.repository -}}
+{{- $tag := .Values.image.tag | toString -}}
+{{/*
+Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
+but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
+Also, we can't use a single if because lazy evaluation is not an option
+*/}}
+{{- if .Values.global }}
+    {{- if .Values.global.imageRegistry }}
+        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
+    {{- else -}}
+        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+    {{- end -}}
+{{- else -}}
+    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the proper image name (for the metrics image)
+*/}}
+{{- define "redis-cluster.metrics.image" -}}
+{{- $registryName := .Values.metrics.image.registry -}}
+{{- $repositoryName := .Values.metrics.image.repository -}}
+{{- $tag := .Values.metrics.image.tag | toString -}}
+{{/*
+Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
+but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
+Also, we can't use a single if because lazy evaluation is not an option
+*/}}
+{{- if .Values.global }}
+    {{- if .Values.global.imageRegistry }}
+        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
+    {{- else -}}
+        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+    {{- end -}}
+{{- else -}}
+    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the proper image name (for the init container volume-permissions image)
+*/}}
+{{- define "redis-cluster.volumePermissions.image" -}}
+{{- $registryName := .Values.volumePermissions.image.registry -}}
+{{- $repositoryName := .Values.volumePermissions.image.repository -}}
+{{- $tag := .Values.volumePermissions.image.tag | toString -}}
+{{/*
+Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
+but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
+Also, we can't use a single if because lazy evaluation is not an option
+*/}}
+{{- if .Values.global }}
+    {{- if .Values.global.imageRegistry }}
+        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
+    {{- else -}}
+        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+    {{- end -}}
+{{- else -}}
+    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Create the name of the service account to use
+*/}}
+{{- define "redis-cluster.serviceAccountName" -}}
+{{- if .Values.serviceAccount.create -}}
+    {{ default (include "redis-cluster.fullname" .) .Values.serviceAccount.name }}
+{{- else -}}
+    {{ default "default" .Values.serviceAccount.name }}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Get the password secret.
+*/}}
+{{- define "redis-cluster.secretName" -}}
+{{- if .Values.existingSecret -}}
+{{- printf "%s" .Values.existingSecret -}}
+{{- else -}}
+{{- printf "%s" (include "redis-cluster.fullname" .) -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Get the password key to be retrieved from Redis secret.
+*/}}
+{{- define "redis-cluster.secretPasswordKey" -}}
+{{- if and .Values.existingSecret .Values.existingSecretPasswordKey -}}
+{{- printf "%s" .Values.existingSecretPasswordKey -}}
+{{- else -}}
+{{- printf "redis-password" -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return Redis password
+*/}}
+{{- define "redis-cluster.password" -}}
+{{- if not (empty .Values.global.redis.password) }}
+    {{- .Values.global.redis.password -}}
+{{- else if not (empty .Values.password) -}}
+    {{- .Values.password -}}
+{{- else -}}
+    {{- randAlphaNum 10 -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return sysctl image
+*/}}
+{{- define "redis-cluster.sysctl.image" -}}
+{{- $registryName :=  default "docker.io" .Values.sysctlImage.registry -}}
+{{- $repositoryName := .Values.sysctlImage.repository -}}
+{{- $tag := default "buster" .Values.sysctlImage.tag | toString -}}
+{{/*
+Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
+but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
+Also, we can't use a single if because lazy evaluation is not an option
+*/}}
+{{- if .Values.global }}
+    {{- if .Values.global.imageRegistry }}
+        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
+    {{- else -}}
+        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+    {{- end -}}
+{{- else -}}
+    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the proper Docker Image Registry Secret Names
+*/}}
+{{- define "redis-cluster.imagePullSecrets" -}}
+{{/*
+Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
+but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
+Also, we can not use a single if because lazy evaluation is not an option
+*/}}
+{{- if .Values.global }}
+{{- if .Values.global.imagePullSecrets }}
+imagePullSecrets:
+{{- range .Values.global.imagePullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- else if or .Values.image.pullSecrets .Values.metrics.image.pullSecrets .Values.sysctlImage.pullSecrets .Values.volumePermissions.image.pullSecrets }}
+imagePullSecrets:
+{{- range .Values.image.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- range .Values.metrics.image.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- range .Values.sysctlImage.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- range .Values.volumePermissions.image.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- end -}}
+{{- else if or .Values.image.pullSecrets .Values.metrics.image.pullSecrets .Values.sysctlImage.pullSecrets .Values.volumePermissions.image.pullSecrets }}
+imagePullSecrets:
+{{- range .Values.image.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- range .Values.metrics.image.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- range .Values.sysctlImage.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- range .Values.volumePermissions.image.pullSecrets }}
+  - name: {{ . }}
+{{- end }}
+{{- end -}}
+{{- end -}}
+
+{{/* Check if there are rolling tags in the images */}}
+{{- define "redis-cluster.checkRollingTags" -}}
+{{- if and (contains "bitnami/" .Values.image.repository) (not (.Values.image.tag | toString | regexFind "-r\\d+$|sha256:")) }}
+WARNING: Rolling tag detected ({{ .Values.image.repository }}:{{ .Values.image.tag }}), please note that it is strongly recommended to avoid using rolling tags in a production environment.
++info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/
+{{- end }}
+{{- end -}}
+
+{{/*
+Return the proper Storage Class
+*/}}
+{{- define "redis-cluster.storageClass" -}}
+{{/*
+Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
+but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
+*/}}
+{{- if .Values.global -}}
+    {{- if .Values.global.storageClass -}}
+        {{- if (eq "-" .Values.global.storageClass) -}}
+            {{- printf "storageClassName: \"\"" -}}
+        {{- else }}
+            {{- printf "storageClassName: %s" .Values.global.storageClass -}}
+        {{- end -}}
+    {{- else -}}
+        {{- if .Values.persistence.storageClass -}}
+              {{- if (eq "-" .Values.persistence.storageClass) -}}
+                  {{- printf "storageClassName: \"\"" -}}
+              {{- else }}
+                  {{- printf "storageClassName: %s" .Values.persistence.storageClass -}}
+              {{- end -}}
+        {{- end -}}
+    {{- end -}}
+{{- else -}}
+    {{- if .Values.persistence.storageClass -}}
+        {{- if (eq "-" .Values.persistence.storageClass) -}}
+            {{- printf "storageClassName: \"\"" -}}
+        {{- else }}
+            {{- printf "storageClassName: %s" .Values.persistence.storageClass -}}
+        {{- end -}}
+    {{- end -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Determines whether or not to create the Statefulset
+*/}}
+{{- define "redis-cluster.createStatefulSet" -}}
+    {{- if not .Values.cluster.externalAccess.enabled -}}
+        {{- true -}}
+    {{- end -}}
+    {{- if and .Values.cluster.externalAccess.enabled .Values.cluster.externalAccess.service.loadBalancerIP -}}
+        {{- true -}}
+    {{- end -}}
+{{- end -}}
+
+{{/*
+Common labels
+*/}}
+{{- define "redis-cluster.labels" -}}
+app.kubernetes.io/name: {{ include "redis-cluster.name" . }}
+helm.sh/chart: {{ include "redis-cluster.chart" . }}
+app.kubernetes.io/instance: {{ .Release.Name }}
+app.kubernetes.io/managed-by: {{ .Release.Service }}
+{{- end -}}
+
+{{/*
+Labels to use on deploy.spec.selector.matchLabels and svc.spec.selector
+*/}}
+{{- define "redis-cluster.matchLabels" -}}
+app.kubernetes.io/name: {{ include "redis-cluster.name" . }}
+app.kubernetes.io/instance: {{ .Release.Name }}
+{{- end -}}
+
+{{/*
+Compile all warnings into a single message, and call fail.
+*/}}
+{{- define "redis-cluster.validateValues" -}}
+{{- $messages := list -}}
+{{- $messages := append $messages (include "redis-cluster.validateValues.updateParameters" .) -}}
+{{- $messages := without $messages "" -}}
+{{- $message := join "\n" $messages -}}
+
+{{- if $message -}}
+{{-   printf "\nVALUES VALIDATION:\n%s" $message | fail -}}
+{{- end -}}
+{{- end -}}
+
+{{/* Validate values of Redis Cluster - check update parameters */}}
+{{- define "redis-cluster.validateValues.updateParameters" -}}
+{{- if and .Values.cluster.update.addNodes ( or (and .Values.cluster.externalAccess.enabled .Values.cluster.externalAccess.service.loadBalancerIP) ( not .Values.cluster.externalAccess.enabled )) -}}
+  {{- if .Values.cluster.externalAccess.enabled }}
+    {{- if not .Values.cluster.update.newExternalIPs -}}
+redis-cluster: newExternalIPs
+     You must provide the newExternalIPs to perform the cluster upgrade when using external access.
+    {{- end -}}
+  {{- else }}
+    {{- if not .Values.cluster.update.currentNumberOfNodes -}}
+redis-cluster: currentNumberOfNodes
+    You must provide the currentNumberOfNodes to perform an upgrade when not using external access.
+    {{- end -}}
+  {{- end -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Renders a value that contains template.
+Usage:
+{{ include "common.tplvalues.render" ( dict "value" .Values.path.to.the.Value "context" $) }}
+*/}}
+{{- define "common.tplvalues.render" -}}
+    {{- if typeIs "string" .value }}
+        {{- tpl .value .context }}
+    {{- else }}
+        {{- tpl (.value | toYaml) .context }}
+    {{- end }}
+{{- end -}}
diff --git a/bitnami/redis-cluster/templates/configmap.yaml b/bitnami/redis-cluster/templates/configmap.yaml
new file mode 100644
index 0000000000..e952965048
--- /dev/null
+++ b/bitnami/redis-cluster/templates/configmap.yaml
@@ -0,0 +1,1381 @@
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  name: {{ include "redis-cluster.fullname" . }}-default
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+data:
+  redis-default.conf: |-
+    # Redis configuration file example.
+    #
+    # Note that in order to read the configuration file, Redis must be
+    # started with the file path as first argument:
+    #
+    # ./redis-server /path/to/redis.conf
+    
+    # Note on units: when memory size is needed, it is possible to specify
+    # it in the usual form of 1k 5GB 4M and so forth:
+    #
+    # 1k => 1000 bytes
+    # 1kb => 1024 bytes
+    # 1m => 1000000 bytes
+    # 1mb => 1024*1024 bytes
+    # 1g => 1000000000 bytes
+    # 1gb => 1024*1024*1024 bytes
+    #
+    # units are case insensitive so 1GB 1Gb 1gB are all the same.
+    
+    ################################## INCLUDES ###################################
+    
+    # Include one or more other config files here.  This is useful if you
+    # have a standard template that goes to all Redis servers but also need
+    # to customize a few per-server settings.  Include files can include
+    # other files, so use this wisely.
+    #
+    # Notice option "include" won't be rewritten by command "CONFIG REWRITE"
+    # from admin or Redis Sentinel. Since Redis always uses the last processed
+    # line as value of a configuration directive, you'd better put includes
+    # at the beginning of this file to avoid overwriting config change at runtime.
+    #
+    # If instead you are interested in using includes to override configuration
+    # options, it is better to use include as the last line.
+    #
+    # include /path/to/local.conf
+    # include /path/to/other.conf
+    
+    ################################## MODULES #####################################
+    
+    # Load modules at startup. If the server is not able to load modules
+    # it will abort. It is possible to use multiple loadmodule directives.
+    #
+    # loadmodule /path/to/my_module.so
+    # loadmodule /path/to/other_module.so
+    
+    ################################## NETWORK #####################################
+    
+    # By default, if no "bind" configuration directive is specified, Redis listens
+    # for connections from all the network interfaces available on the server.
+    # It is possible to listen to just one or multiple selected interfaces using
+    # the "bind" configuration directive, followed by one or more IP addresses.
+    #
+    # Examples:
+    #
+    # bind 192.168.1.100 10.0.0.1
+    # bind 127.0.0.1 ::1
+    #
+    # ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the
+    # internet, binding to all the interfaces is dangerous and will expose the
+    # instance to everybody on the internet. So by default we uncomment the
+    # following bind directive, that will force Redis to listen only into
+    # the IPv4 loopback interface address (this means Redis will be able to
+    # accept connections only from clients running into the same computer it
+    # is running).
+    #
+    # IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES
+    # JUST COMMENT THE FOLLOWING LINE.
+    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+    bind 127.0.0.1
+    
+    # Protected mode is a layer of security protection, in order to avoid that
+    # Redis instances left open on the internet are accessed and exploited.
+    #
+    # When protected mode is on and if:
+    #
+    # 1) The server is not binding explicitly to a set of addresses using the
+    #    "bind" directive.
+    # 2) No password is configured.
+    #
+    # The server only accepts connections from clients connecting from the
+    # IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain
+    # sockets.
+    #
+    # By default protected mode is enabled. You should disable it only if
+    # you are sure you want clients from other hosts to connect to Redis
+    # even if no authentication is configured, nor a specific set of interfaces
+    # are explicitly listed using the "bind" directive.
+    protected-mode yes
+    
+    # Accept connections on the specified port, default is 6379 (IANA #815344).
+    # If port 0 is specified Redis will not listen on a TCP socket.
+    port 6379
+    
+    # TCP listen() backlog.
+    #
+    # In high requests-per-second environments you need an high backlog in order
+    # to avoid slow clients connections issues. Note that the Linux kernel
+    # will silently truncate it to the value of /proc/sys/net/core/somaxconn so
+    # make sure to raise both the value of somaxconn and tcp_max_syn_backlog
+    # in order to get the desired effect.
+    tcp-backlog 511
+    
+    # Unix socket.
+    #
+    # Specify the path for the Unix socket that will be used to listen for
+    # incoming connections. There is no default, so Redis will not listen
+    # on a unix socket when not specified.
+    #
+    # unixsocket /tmp/redis.sock
+    # unixsocketperm 700
+    
+    # Close the connection after a client is idle for N seconds (0 to disable)
+    timeout 0
+    
+    # TCP keepalive.
+    #
+    # If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence
+    # of communication. This is useful for two reasons:
+    #
+    # 1) Detect dead peers.
+    # 2) Take the connection alive from the point of view of network
+    #    equipment in the middle.
+    #
+    # On Linux, the specified value (in seconds) is the period used to send ACKs.
+    # Note that to close the connection the double of the time is needed.
+    # On other kernels the period depends on the kernel configuration.
+    #
+    # A reasonable value for this option is 300 seconds, which is the new
+    # Redis default starting with Redis 3.2.1.
+    tcp-keepalive 300
+    
+    ################################# GENERAL #####################################
+    
+    # By default Redis does not run as a daemon. Use 'yes' if you need it.
+    # Note that Redis will write a pid file in /var/run/redis.pid when daemonized.
+    daemonize no
+    
+    # If you run Redis from upstart or systemd, Redis can interact with your
+    # supervision tree. Options:
+    #   supervised no      - no supervision interaction
+    #   supervised upstart - signal upstart by putting Redis into SIGSTOP mode
+    #   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET
+    #   supervised auto    - detect upstart or systemd method based on
+    #                        UPSTART_JOB or NOTIFY_SOCKET environment variables
+    # Note: these supervision methods only signal "process is ready."
+    #       They do not enable continuous liveness pings back to your supervisor.
+    supervised no
+    
+    # If a pid file is specified, Redis writes it where specified at startup
+    # and removes it at exit.
+    #
+    # When the server runs non daemonized, no pid file is created if none is
+    # specified in the configuration. When the server is daemonized, the pid file
+    # is used even if not specified, defaulting to "/var/run/redis.pid".
+    #
+    # Creating a pid file is best effort: if Redis is not able to create it
+    # nothing bad happens, the server will start and run normally.
+    pidfile /var/run/redis_6379.pid
+    
+    # Specify the server verbosity level.
+    # This can be one of:
+    # debug (a lot of information, useful for development/testing)
+    # verbose (many rarely useful info, but not a mess like the debug level)
+    # notice (moderately verbose, what you want in production probably)
+    # warning (only very important / critical messages are logged)
+    loglevel notice
+    
+    # Specify the log file name. Also the empty string can be used to force
+    # Redis to log on the standard output. Note that if you use standard
+    # output for logging but daemonize, logs will be sent to /dev/null
+    logfile ""
+    
+    # To enable logging to the system logger, just set 'syslog-enabled' to yes,
+    # and optionally update the other syslog parameters to suit your needs.
+    # syslog-enabled no
+    
+    # Specify the syslog identity.
+    # syslog-ident redis
+    
+    # Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.
+    # syslog-facility local0
+    
+    # Set the number of databases. The default database is DB 0, you can select
+    # a different one on a per-connection basis using SELECT <dbid> where
+    # dbid is a number between 0 and 'databases'-1
+    databases 16
+    
+    # By default Redis shows an ASCII art logo only when started to log to the
+    # standard output and if the standard output is a TTY. Basically this means
+    # that normally a logo is displayed only in interactive sessions.
+    #
+    # However it is possible to force the pre-4.0 behavior and always show a
+    # ASCII art logo in startup logs by setting the following option to yes.
+    always-show-logo yes
+    
+    ################################ SNAPSHOTTING  ################################
+    #
+    # Save the DB on disk:
+    #
+    #   save <seconds> <changes>
+    #
+    #   Will save the DB if both the given number of seconds and the given
+    #   number of write operations against the DB occurred.
+    #
+    #   In the example below the behaviour will be to save:
+    #   after 900 sec (15 min) if at least 1 key changed
+    #   after 300 sec (5 min) if at least 10 keys changed
+    #   after 60 sec if at least 10000 keys changed
+    #
+    #   Note: you can disable saving completely by commenting out all "save" lines.
+    #
+    #   It is also possible to remove all the previously configured save
+    #   points by adding a save directive with a single empty string argument
+    #   like in the following example:
+    #
+    #   save ""
+    
+    save 900 1
+    save 300 10
+    save 60 10000
+    
+    # By default Redis will stop accepting writes if RDB snapshots are enabled
+    # (at least one save point) and the latest background save failed.
+    # This will make the user aware (in a hard way) that data is not persisting
+    # on disk properly, otherwise chances are that no one will notice and some
+    # disaster will happen.
+    #
+    # If the background saving process will start working again Redis will
+    # automatically allow writes again.
+    #
+    # However if you have setup your proper monitoring of the Redis server
+    # and persistence, you may want to disable this feature so that Redis will
+    # continue to work as usual even if there are problems with disk,
+    # permissions, and so forth.
+    stop-writes-on-bgsave-error yes
+    
+    # Compress string objects using LZF when dump .rdb databases?
+    # For default that's set to 'yes' as it's almost always a win.
+    # If you want to save some CPU in the saving child set it to 'no' but
+    # the dataset will likely be bigger if you have compressible values or keys.
+    rdbcompression yes
+    
+    # Since version 5 of RDB a CRC64 checksum is placed at the end of the file.
+    # This makes the format more resistant to corruption but there is a performance
+    # hit to pay (around 10%) when saving and loading RDB files, so you can disable it
+    # for maximum performances.
+    #
+    # RDB files created with checksum disabled have a checksum of zero that will
+    # tell the loading code to skip the check.
+    rdbchecksum yes
+    
+    # The filename where to dump the DB
+    dbfilename dump.rdb
+    
+    # The working directory.
+    #
+    # The DB will be written inside this directory, with the filename specified
+    # above using the 'dbfilename' configuration directive.
+    #
+    # The Append Only File will also be created inside this directory.
+    #
+    # Note that you must specify a directory here, not a file name.
+    dir ./
+    
+    ################################# REPLICATION #################################
+    
+    # Master-Replica replication. Use replicaof to make a Redis instance a copy of
+    # another Redis server. A few things to understand ASAP about Redis replication.
+    #
+    #   +------------------+      +---------------+
+    #   |      Master      | ---> |    Replica    |
+    #   | (receive writes) |      |  (exact copy) |
+    #   +------------------+      +---------------+
+    #
+    # 1) Redis replication is asynchronous, but you can configure a master to
+    #    stop accepting writes if it appears to be not connected with at least
+    #    a given number of replicas.
+    # 2) Redis replicas are able to perform a partial resynchronization with the
+    #    master if the replication link is lost for a relatively small amount of
+    #    time. You may want to configure the replication backlog size (see the next
+    #    sections of this file) with a sensible value depending on your needs.
+    # 3) Replication is automatic and does not need user intervention. After a
+    #    network partition replicas automatically try to reconnect to masters
+    #    and resynchronize with them.
+    #
+    # replicaof <masterip> <masterport>
+    
+    # If the master is password protected (using the "requirepass" configuration
+    # directive below) it is possible to tell the replica to authenticate before
+    # starting the replication synchronization process, otherwise the master will
+    # refuse the replica request.
+    #
+    # masterauth <master-password>
+    
+    # When a replica loses its connection with the master, or when the replication
+    # is still in progress, the replica can act in two different ways:
+    #
+    # 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will
+    #    still reply to client requests, possibly with out of date data, or the
+    #    data set may just be empty if this is the first synchronization.
+    #
+    # 2) if replica-serve-stale-data is set to 'no' the replica will reply with
+    #    an error "SYNC with master in progress" to all the kind of commands
+    #    but to INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG,
+    #    SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB,
+    #    COMMAND, POST, HOST: and LATENCY.
+    #
+    replica-serve-stale-data yes
+    
+    # You can configure a replica instance to accept writes or not. Writing against
+    # a replica instance may be useful to store some ephemeral data (because data
+    # written on a replica will be easily deleted after resync with the master) but
+    # may also cause problems if clients are writing to it because of a
+    # misconfiguration.
+    #
+    # Since Redis 2.6 by default replicas are read-only.
+    #
+    # Note: read only replicas are not designed to be exposed to untrusted clients
+    # on the internet. It's just a protection layer against misuse of the instance.
+    # Still a read only replica exports by default all the administrative commands
+    # such as CONFIG, DEBUG, and so forth. To a limited extent you can improve
+    # security of read only replicas using 'rename-command' to shadow all the
+    # administrative / dangerous commands.
+    replica-read-only yes
+    
+    # Replication SYNC strategy: disk or socket.
+    #
+    # -------------------------------------------------------
+    # WARNING: DISKLESS REPLICATION IS EXPERIMENTAL CURRENTLY
+    # -------------------------------------------------------
+    #
+    # New replicas and reconnecting replicas that are not able to continue the replication
+    # process just receiving differences, need to do what is called a "full
+    # synchronization". An RDB file is transmitted from the master to the replicas.
+    # The transmission can happen in two different ways:
+    #
+    # 1) Disk-backed: The Redis master creates a new process that writes the RDB
+    #                 file on disk. Later the file is transferred by the parent
+    #                 process to the replicas incrementally.
+    # 2) Diskless: The Redis master creates a new process that directly writes the
+    #              RDB file to replica sockets, without touching the disk at all.
+    #
+    # With disk-backed replication, while the RDB file is generated, more replicas
+    # can be queued and served with the RDB file as soon as the current child producing
+    # the RDB file finishes its work. With diskless replication instead once
+    # the transfer starts, new replicas arriving will be queued and a new transfer
+    # will start when the current one terminates.
+    #
+    # When diskless replication is used, the master waits a configurable amount of
+    # time (in seconds) before starting the transfer in the hope that multiple replicas
+    # will arrive and the transfer can be parallelized.
+    #
+    # With slow disks and fast (large bandwidth) networks, diskless replication
+    # works better.
+    repl-diskless-sync no
+    
+    # When diskless replication is enabled, it is possible to configure the delay
+    # the server waits in order to spawn the child that transfers the RDB via socket
+    # to the replicas.
+    #
+    # This is important since once the transfer starts, it is not possible to serve
+    # new replicas arriving, that will be queued for the next RDB transfer, so the server
+    # waits a delay in order to let more replicas arrive.
+    #
+    # The delay is specified in seconds, and by default is 5 seconds. To disable
+    # it entirely just set it to 0 seconds and the transfer will start ASAP.
+    repl-diskless-sync-delay 5
+    
+    # Replicas send PINGs to server in a predefined interval. It's possible to change
+    # this interval with the repl_ping_replica_period option. The default value is 10
+    # seconds.
+    #
+    # repl-ping-replica-period 10
+    
+    # The following option sets the replication timeout for:
+    #
+    # 1) Bulk transfer I/O during SYNC, from the point of view of replica.
+    # 2) Master timeout from the point of view of replicas (data, pings).
+    # 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).
+    #
+    # It is important to make sure that this value is greater than the value
+    # specified for repl-ping-replica-period otherwise a timeout will be detected
+    # every time there is low traffic between the master and the replica.
+    #
+    # repl-timeout 60
+    
+    # Disable TCP_NODELAY on the replica socket after SYNC?
+    #
+    # If you select "yes" Redis will use a smaller number of TCP packets and
+    # less bandwidth to send data to replicas. But this can add a delay for
+    # the data to appear on the replica side, up to 40 milliseconds with
+    # Linux kernels using a default configuration.
+    #
+    # If you select "no" the delay for data to appear on the replica side will
+    # be reduced but more bandwidth will be used for replication.
+    #
+    # By default we optimize for low latency, but in very high traffic conditions
+    # or when the master and replicas are many hops away, turning this to "yes" may
+    # be a good idea.
+    repl-disable-tcp-nodelay no
+    
+    # Set the replication backlog size. The backlog is a buffer that accumulates
+    # replica data when replicas are disconnected for some time, so that when a replica
+    # wants to reconnect again, often a full resync is not needed, but a partial
+    # resync is enough, just passing the portion of data the replica missed while
+    # disconnected.
+    #
+    # The bigger the replication backlog, the longer the time the replica can be
+    # disconnected and later be able to perform a partial resynchronization.
+    #
+    # The backlog is only allocated once there is at least a replica connected.
+    #
+    # repl-backlog-size 1mb
+    
+    # After a master has no longer connected replicas for some time, the backlog
+    # will be freed. The following option configures the amount of seconds that
+    # need to elapse, starting from the time the last replica disconnected, for
+    # the backlog buffer to be freed.
+    #
+    # Note that replicas never free the backlog for timeout, since they may be
+    # promoted to masters later, and should be able to correctly "partially
+    # resynchronize" with the replicas: hence they should always accumulate backlog.
+    #
+    # A value of 0 means to never release the backlog.
+    #
+    # repl-backlog-ttl 3600
+    
+    # The replica priority is an integer number published by Redis in the INFO output.
+    # It is used by Redis Sentinel in order to select a replica to promote into a
+    # master if the master is no longer working correctly.
+    #
+    # A replica with a low priority number is considered better for promotion, so
+    # for instance if there are three replicas with priority 10, 100, 25 Sentinel will
+    # pick the one with priority 10, that is the lowest.
+    #
+    # However a special priority of 0 marks the replica as not able to perform the
+    # role of master, so a replica with priority of 0 will never be selected by
+    # Redis Sentinel for promotion.
+    #
+    # By default the priority is 100.
+    replica-priority 100
+    
+    # It is possible for a master to stop accepting writes if there are less than
+    # N replicas connected, having a lag less or equal than M seconds.
+    #
+    # The N replicas need to be in "online" state.
+    #
+    # The lag in seconds, that must be <= the specified value, is calculated from
+    # the last ping received from the replica, that is usually sent every second.
+    #
+    # This option does not GUARANTEE that N replicas will accept the write, but
+    # will limit the window of exposure for lost writes in case not enough replicas
+    # are available, to the specified number of seconds.
+    #
+    # For example to require at least 3 replicas with a lag <= 10 seconds use:
+    #
+    # min-replicas-to-write 3
+    # min-replicas-max-lag 10
+    #
+    # Setting one or the other to 0 disables the feature.
+    #
+    # By default min-replicas-to-write is set to 0 (feature disabled) and
+    # min-replicas-max-lag is set to 10.
+    
+    # A Redis master is able to list the address and port of the attached
+    # replicas in different ways. For example the "INFO replication" section
+    # offers this information, which is used, among other tools, by
+    # Redis Sentinel in order to discover replica instances.
+    # Another place where this info is available is in the output of the
+    # "ROLE" command of a master.
+    #
+    # The listed IP and address normally reported by a replica is obtained
+    # in the following way:
+    #
+    #   IP: The address is auto detected by checking the peer address
+    #   of the socket used by the replica to connect with the master.
+    #
+    #   Port: The port is communicated by the replica during the replication
+    #   handshake, and is normally the port that the replica is using to
+    #   listen for connections.
+    #
+    # However when port forwarding or Network Address Translation (NAT) is
+    # used, the replica may be actually reachable via different IP and port
+    # pairs. The following two options can be used by a replica in order to
+    # report to its master a specific set of IP and port, so that both INFO
+    # and ROLE will report those values.
+    #
+    # There is no need to use both the options if you need to override just
+    # the port or the IP address.
+    #
+    # replica-announce-ip 5.5.5.5
+    # replica-announce-port 1234
+    
+    ################################## SECURITY ###################################
+    
+    # Require clients to issue AUTH <PASSWORD> before processing any other
+    # commands.  This might be useful in environments in which you do not trust
+    # others with access to the host running redis-server.
+    #
+    # This should stay commented out for backward compatibility and because most
+    # people do not need auth (e.g. they run their own servers).
+    #
+    # Warning: since Redis is pretty fast an outside user can try up to
+    # 150k passwords per second against a good box. This means that you should
+    # use a very strong password otherwise it will be very easy to break.
+    #
+    # requirepass foobared
+    
+    # Command renaming.
+    #
+    # It is possible to change the name of dangerous commands in a shared
+    # environment. For instance the CONFIG command may be renamed into something
+    # hard to guess so that it will still be available for internal-use tools
+    # but not available for general clients.
+    #
+    # Example:
+    #
+    # rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52
+    #
+    # It is also possible to completely kill a command by renaming it into
+    # an empty string:
+    #
+    # rename-command CONFIG ""
+    #
+    # Please note that changing the name of commands that are logged into the
+    # AOF file or transmitted to replicas may cause problems.
+    
+    ################################### CLIENTS ####################################
+    
+    # Set the max number of connected clients at the same time. By default
+    # this limit is set to 10000 clients, however if the Redis server is not
+    # able to configure the process file limit to allow for the specified limit
+    # the max number of allowed clients is set to the current file limit
+    # minus 32 (as Redis reserves a few file descriptors for internal uses).
+    #
+    # Once the limit is reached Redis will close all the new connections sending
+    # an error 'max number of clients reached'.
+    #
+    # maxclients 10000
+    
+    ############################## MEMORY MANAGEMENT ################################
+    
+    # Set a memory usage limit to the specified amount of bytes.
+    # When the memory limit is reached Redis will try to remove keys
+    # according to the eviction policy selected (see maxmemory-policy).
+    #
+    # If Redis can't remove keys according to the policy, or if the policy is
+    # set to 'noeviction', Redis will start to reply with errors to commands
+    # that would use more memory, like SET, LPUSH, and so on, and will continue
+    # to reply to read-only commands like GET.
+    #
+    # This option is usually useful when using Redis as an LRU or LFU cache, or to
+    # set a hard memory limit for an instance (using the 'noeviction' policy).
+    #
+    # WARNING: If you have replicas attached to an instance with maxmemory on,
+    # the size of the output buffers needed to feed the replicas are subtracted
+    # from the used memory count, so that network problems / resyncs will
+    # not trigger a loop where keys are evicted, and in turn the output
+    # buffer of replicas is full with DELs of keys evicted triggering the deletion
+    # of more keys, and so forth until the database is completely emptied.
+    #
+    # In short... if you have replicas attached it is suggested that you set a lower
+    # limit for maxmemory so that there is some free RAM on the system for replica
+    # output buffers (but this is not needed if the policy is 'noeviction').
+    #
+    # maxmemory <bytes>
+    
+    # MAXMEMORY POLICY: how Redis will select what to remove when maxmemory
+    # is reached. You can select among five behaviors:
+    #
+    # volatile-lru -> Evict using approximated LRU among the keys with an expire set.
+    # allkeys-lru -> Evict any key using approximated LRU.
+    # volatile-lfu -> Evict using approximated LFU among the keys with an expire set.
+    # allkeys-lfu -> Evict any key using approximated LFU.
+    # volatile-random -> Remove a random key among the ones with an expire set.
+    # allkeys-random -> Remove a random key, any key.
+    # volatile-ttl -> Remove the key with the nearest expire time (minor TTL)
+    # noeviction -> Don't evict anything, just return an error on write operations.
+    #
+    # LRU means Least Recently Used
+    # LFU means Least Frequently Used
+    #
+    # Both LRU, LFU and volatile-ttl are implemented using approximated
+    # randomized algorithms.
+    #
+    # Note: with any of the above policies, Redis will return an error on write
+    #       operations, when there are no suitable keys for eviction.
+    #
+    #       At the date of writing these commands are: set setnx setex append
+    #       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd
+    #       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby
+    #       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby
+    #       getset mset msetnx exec sort
+    #
+    # The default is:
+    #
+    # maxmemory-policy noeviction
+    
+    # LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated
+    # algorithms (in order to save memory), so you can tune it for speed or
+    # accuracy. For default Redis will check five keys and pick the one that was
+    # used less recently, you can change the sample size using the following
+    # configuration directive.
+    #
+    # The default of 5 produces good enough results. 10 Approximates very closely
+    # true LRU but costs more CPU. 3 is faster but not very accurate.
+    #
+    # maxmemory-samples 5
+    
+    # Starting from Redis 5, by default a replica will ignore its maxmemory setting
+    # (unless it is promoted to master after a failover or manually). It means
+    # that the eviction of keys will be just handled by the master, sending the
+    # DEL commands to the replica as keys evict in the master side.
+    #
+    # This behavior ensures that masters and replicas stay consistent, and is usually
+    # what you want, however if your replica is writable, or you want the replica to have
+    # a different memory setting, and you are sure all the writes performed to the
+    # replica are idempotent, then you may change this default (but be sure to understand
+    # what you are doing).
+    #
+    # Note that since the replica by default does not evict, it may end using more
+    # memory than the one set via maxmemory (there are certain buffers that may
+    # be larger on the replica, or data structures may sometimes take more memory and so
+    # forth). So make sure you monitor your replicas and make sure they have enough
+    # memory to never hit a real out-of-memory condition before the master hits
+    # the configured maxmemory setting.
+    #
+    # replica-ignore-maxmemory yes
+    
+    ############################# LAZY FREEING ####################################
+    
+    # Redis has two primitives to delete keys. One is called DEL and is a blocking
+    # deletion of the object. It means that the server stops processing new commands
+    # in order to reclaim all the memory associated with an object in a synchronous
+    # way. If the key deleted is associated with a small object, the time needed
+    # in order to execute the DEL command is very small and comparable to most other
+    # O(1) or O(log_N) commands in Redis. However if the key is associated with an
+    # aggregated value containing millions of elements, the server can block for
+    # a long time (even seconds) in order to complete the operation.
+    #
+    # For the above reasons Redis also offers non blocking deletion primitives
+    # such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and
+    # FLUSHDB commands, in order to reclaim memory in background. Those commands
+    # are executed in constant time. Another thread will incrementally free the
+    # object in the background as fast as possible.
+    #
+    # DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.
+    # It's up to the design of the application to understand when it is a good
+    # idea to use one or the other. However the Redis server sometimes has to
+    # delete keys or flush the whole database as a side effect of other operations.
+    # Specifically Redis deletes objects independently of a user call in the
+    # following scenarios:
+    #
+    # 1) On eviction, because of the maxmemory and maxmemory policy configurations,
+    #    in order to make room for new data, without going over the specified
+    #    memory limit.
+    # 2) Because of expire: when a key with an associated time to live (see the
+    #    EXPIRE command) must be deleted from memory.
+    # 3) Because of a side effect of a command that stores data on a key that may
+    #    already exist. For example the RENAME command may delete the old key
+    #    content when it is replaced with another one. Similarly SUNIONSTORE
+    #    or SORT with STORE option may delete existing keys. The SET command
+    #    itself removes any old content of the specified key in order to replace
+    #    it with the specified string.
+    # 4) During replication, when a replica performs a full resynchronization with
+    #    its master, the content of the whole database is removed in order to
+    #    load the RDB file just transferred.
+    #
+    # In all the above cases the default is to delete objects in a blocking way,
+    # like if DEL was called. However you can configure each case specifically
+    # in order to instead release memory in a non-blocking way like if UNLINK
+    # was called, using the following configuration directives:
+    
+    lazyfree-lazy-eviction no
+    lazyfree-lazy-expire no
+    lazyfree-lazy-server-del no
+    replica-lazy-flush no
+    
+    ############################## APPEND ONLY MODE ###############################
+    
+    # By default Redis asynchronously dumps the dataset on disk. This mode is
+    # good enough in many applications, but an issue with the Redis process or
+    # a power outage may result into a few minutes of writes lost (depending on
+    # the configured save points).
+    #
+    # The Append Only File is an alternative persistence mode that provides
+    # much better durability. For instance using the default data fsync policy
+    # (see later in the config file) Redis can lose just one second of writes in a
+    # dramatic event like a server power outage, or a single write if something
+    # wrong with the Redis process itself happens, but the operating system is
+    # still running correctly.
+    #
+    # AOF and RDB persistence can be enabled at the same time without problems.
+    # If the AOF is enabled on startup Redis will load the AOF, that is the file
+    # with the better durability guarantees.
+    #
+    # Please check http://redis.io/topics/persistence for more information.
+    
+    appendonly no
+    
+    # The name of the append only file (default: "appendonly.aof")
+    
+    appendfilename "appendonly.aof"
+    
+    # The fsync() call tells the Operating System to actually write data on disk
+    # instead of waiting for more data in the output buffer. Some OS will really flush
+    # data on disk, some other OS will just try to do it ASAP.
+    #
+    # Redis supports three different modes:
+    #
+    # no: don't fsync, just let the OS flush the data when it wants. Faster.
+    # always: fsync after every write to the append only log. Slow, Safest.
+    # everysec: fsync only one time every second. Compromise.
+    #
+    # The default is "everysec", as that's usually the right compromise between
+    # speed and data safety. It's up to you to understand if you can relax this to
+    # "no" that will let the operating system flush the output buffer when
+    # it wants, for better performances (but if you can live with the idea of
+    # some data loss consider the default persistence mode that's snapshotting),
+    # or on the contrary, use "always" that's very slow but a bit safer than
+    # everysec.
+    #
+    # More details please check the following article:
+    # http://antirez.com/post/redis-persistence-demystified.html
+    #
+    # If unsure, use "everysec".
+    
+    # appendfsync always
+    appendfsync everysec
+    # appendfsync no
+    
+    # When the AOF fsync policy is set to always or everysec, and a background
+    # saving process (a background save or AOF log background rewriting) is
+    # performing a lot of I/O against the disk, in some Linux configurations
+    # Redis may block too long on the fsync() call. Note that there is no fix for
+    # this currently, as even performing fsync in a different thread will block
+    # our synchronous write(2) call.
+    #
+    # In order to mitigate this problem it's possible to use the following option
+    # that will prevent fsync() from being called in the main process while a
+    # BGSAVE or BGREWRITEAOF is in progress.
+    #
+    # This means that while another child is saving, the durability of Redis is
+    # the same as "appendfsync none". In practical terms, this means that it is
+    # possible to lose up to 30 seconds of log in the worst scenario (with the
+    # default Linux settings).
+    #
+    # If you have latency problems turn this to "yes". Otherwise leave it as
+    # "no" that is the safest pick from the point of view of durability.
+    
+    no-appendfsync-on-rewrite no
+    
+    # Automatic rewrite of the append only file.
+    # Redis is able to automatically rewrite the log file implicitly calling
+    # BGREWRITEAOF when the AOF log size grows by the specified percentage.
+    #
+    # This is how it works: Redis remembers the size of the AOF file after the
+    # latest rewrite (if no rewrite has happened since the restart, the size of
+    # the AOF at startup is used).
+    #
+    # This base size is compared to the current size. If the current size is
+    # bigger than the specified percentage, the rewrite is triggered. Also
+    # you need to specify a minimal size for the AOF file to be rewritten, this
+    # is useful to avoid rewriting the AOF file even if the percentage increase
+    # is reached but it is still pretty small.
+    #
+    # Specify a percentage of zero in order to disable the automatic AOF
+    # rewrite feature.
+    
+    auto-aof-rewrite-percentage 100
+    auto-aof-rewrite-min-size 64mb
+    
+    # An AOF file may be found to be truncated at the end during the Redis
+    # startup process, when the AOF data gets loaded back into memory.
+    # This may happen when the system where Redis is running
+    # crashes, especially when an ext4 filesystem is mounted without the
+    # data=ordered option (however this can't happen when Redis itself
+    # crashes or aborts but the operating system still works correctly).
+    #
+    # Redis can either exit with an error when this happens, or load as much
+    # data as possible (the default now) and start if the AOF file is found
+    # to be truncated at the end. The following option controls this behavior.
+    #
+    # If aof-load-truncated is set to yes, a truncated AOF file is loaded and
+    # the Redis server starts emitting a log to inform the user of the event.
+    # Otherwise if the option is set to no, the server aborts with an error
+    # and refuses to start. When the option is set to no, the user requires
+    # to fix the AOF file using the "redis-check-aof" utility before to restart
+    # the server.
+    #
+    # Note that if the AOF file will be found to be corrupted in the middle
+    # the server will still exit with an error. This option only applies when
+    # Redis will try to read more data from the AOF file but not enough bytes
+    # will be found.
+    aof-load-truncated yes
+    
+    # When rewriting the AOF file, Redis is able to use an RDB preamble in the
+    # AOF file for faster rewrites and recoveries. When this option is turned
+    # on the rewritten AOF file is composed of two different stanzas:
+    #
+    #   [RDB file][AOF tail]
+    #
+    # When loading Redis recognizes that the AOF file starts with the "REDIS"
+    # string and loads the prefixed RDB file, and continues loading the AOF
+    # tail.
+    aof-use-rdb-preamble yes
+    
+    ################################ LUA SCRIPTING  ###############################
+    
+    # Max execution time of a Lua script in milliseconds.
+    #
+    # If the maximum execution time is reached Redis will log that a script is
+    # still in execution after the maximum allowed time and will start to
+    # reply to queries with an error.
+    #
+    # When a long running script exceeds the maximum execution time only the
+    # SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be
+    # used to stop a script that did not yet called write commands. The second
+    # is the only way to shut down the server in the case a write command was
+    # already issued by the script but the user doesn't want to wait for the natural
+    # termination of the script.
+    #
+    # Set it to 0 or a negative value for unlimited execution without warnings.
+    lua-time-limit 5000
+    
+    ################################ REDIS CLUSTER  ###############################
+    
+    # Normal Redis instances can't be part of a Redis Cluster; only nodes that are
+    # started as cluster nodes can. In order to start a Redis instance as a
+    # cluster node enable the cluster support uncommenting the following:
+    #
+    # cluster-enabled yes
+    
+    # Every cluster node has a cluster configuration file. This file is not
+    # intended to be edited by hand. It is created and updated by Redis nodes.
+    # Every Redis Cluster node requires a different cluster configuration file.
+    # Make sure that instances running in the same system do not have
+    # overlapping cluster configuration file names.
+    #
+    # cluster-config-file nodes-6379.conf
+    
+    # Cluster node timeout is the amount of milliseconds a node must be unreachable
+    # for it to be considered in failure state.
+    # Most other internal time limits are multiple of the node timeout.
+    #
+    # cluster-node-timeout 15000
+    
+    # A replica of a failing master will avoid to start a failover if its data
+    # looks too old.
+    #
+    # There is no simple way for a replica to actually have an exact measure of
+    # its "data age", so the following two checks are performed:
+    #
+    # 1) If there are multiple replicas able to failover, they exchange messages
+    #    in order to try to give an advantage to the replica with the best
+    #    replication offset (more data from the master processed).
+    #    Replicas will try to get their rank by offset, and apply to the start
+    #    of the failover a delay proportional to their rank.
+    #
+    # 2) Every single replica computes the time of the last interaction with
+    #    its master. This can be the last ping or command received (if the master
+    #    is still in the "connected" state), or the time that elapsed since the
+    #    disconnection with the master (if the replication link is currently down).
+    #    If the last interaction is too old, the replica will not try to failover
+    #    at all.
+    #
+    # The point "2" can be tuned by user. Specifically a replica will not perform
+    # the failover if, since the last interaction with the master, the time
+    # elapsed is greater than:
+    #
+    #   (node-timeout * replica-validity-factor) + repl-ping-replica-period
+    #
+    # So for example if node-timeout is 30 seconds, and the replica-validity-factor
+    # is 10, and assuming a default repl-ping-replica-period of 10 seconds, the
+    # replica will not try to failover if it was not able to talk with the master
+    # for longer than 310 seconds.
+    #
+    # A large replica-validity-factor may allow replicas with too old data to failover
+    # a master, while a too small value may prevent the cluster from being able to
+    # elect a replica at all.
+    #
+    # For maximum availability, it is possible to set the replica-validity-factor
+    # to a value of 0, which means, that replicas will always try to failover the
+    # master regardless of the last time they interacted with the master.
+    # (However they'll always try to apply a delay proportional to their
+    # offset rank).
+    #
+    # Zero is the only value able to guarantee that when all the partitions heal
+    # the cluster will always be able to continue.
+    #
+    # cluster-replica-validity-factor 10
+    
+    # Cluster replicas are able to migrate to orphaned masters, that are masters
+    # that are left without working replicas. This improves the cluster ability
+    # to resist to failures as otherwise an orphaned master can't be failed over
+    # in case of failure if it has no working replicas.
+    #
+    # Replicas migrate to orphaned masters only if there are still at least a
+    # given number of other working replicas for their old master. This number
+    # is the "migration barrier". A migration barrier of 1 means that a replica
+    # will migrate only if there is at least 1 other working replica for its master
+    # and so forth. It usually reflects the number of replicas you want for every
+    # master in your cluster.
+    #
+    # Default is 1 (replicas migrate only if their masters remain with at least
+    # one replica). To disable migration just set it to a very large value.
+    # A value of 0 can be set but is useful only for debugging and dangerous
+    # in production.
+    #
+    # cluster-migration-barrier 1
+    
+    # By default Redis Cluster nodes stop accepting queries if they detect there
+    # is at least an hash slot uncovered (no available node is serving it).
+    # This way if the cluster is partially down (for example a range of hash slots
+    # are no longer covered) all the cluster becomes, eventually, unavailable.
+    # It automatically returns available as soon as all the slots are covered again.
+    #
+    # However sometimes you want the subset of the cluster which is working,
+    # to continue to accept queries for the part of the key space that is still
+    # covered. In order to do so, just set the cluster-require-full-coverage
+    # option to no.
+    #
+    # cluster-require-full-coverage yes
+    
+    # This option, when set to yes, prevents replicas from trying to failover its
+    # master during master failures. However the master can still perform a
+    # manual failover, if forced to do so.
+    #
+    # This is useful in different scenarios, especially in the case of multiple
+    # data center operations, where we want one side to never be promoted if not
+    # in the case of a total DC failure.
+    #
+    # cluster-replica-no-failover no
+    
+    # In order to setup your cluster make sure to read the documentation
+    # available at http://redis.io web site.
+    
+    ########################## CLUSTER DOCKER/NAT support  ########################
+    
+    # In certain deployments, Redis Cluster nodes address discovery fails, because
+    # addresses are NAT-ted or because ports are forwarded (the typical case is
+    # Docker and other containers).
+    #
+    # In order to make Redis Cluster working in such environments, a static
+    # configuration where each node knows its public address is needed. The
+    # following two options are used for this scope, and are:
+    #
+    # * cluster-announce-ip
+    # * cluster-announce-port
+    # * cluster-announce-bus-port
+    #
+    # Each instruct the node about its address, client port, and cluster message
+    # bus port. The information is then published in the header of the bus packets
+    # so that other nodes will be able to correctly map the address of the node
+    # publishing the information.
+    #
+    # If the above options are not used, the normal Redis Cluster auto-detection
+    # will be used instead.
+    #
+    # Note that when remapped, the bus port may not be at the fixed offset of
+    # clients port + 10000, so you can specify any port and bus-port depending
+    # on how they get remapped. If the bus-port is not set, a fixed offset of
+    # 10000 will be used as usually.
+    #
+    # Example:
+    #
+    # cluster-announce-ip 10.1.1.5
+    # cluster-announce-port 6379
+    # cluster-announce-bus-port 6380
+    
+    ################################## SLOW LOG ###################################
+    
+    # The Redis Slow Log is a system to log queries that exceeded a specified
+    # execution time. The execution time does not include the I/O operations
+    # like talking with the client, sending the reply and so forth,
+    # but just the time needed to actually execute the command (this is the only
+    # stage of command execution where the thread is blocked and can not serve
+    # other requests in the meantime).
+    #
+    # You can configure the slow log with two parameters: one tells Redis
+    # what is the execution time, in microseconds, to exceed in order for the
+    # command to get logged, and the other parameter is the length of the
+    # slow log. When a new command is logged the oldest one is removed from the
+    # queue of logged commands.
+    
+    # The following time is expressed in microseconds, so 1000000 is equivalent
+    # to one second. Note that a negative number disables the slow log, while
+    # a value of zero forces the logging of every command.
+    slowlog-log-slower-than 10000
+    
+    # There is no limit to this length. Just be aware that it will consume memory.
+    # You can reclaim memory used by the slow log with SLOWLOG RESET.
+    slowlog-max-len 128
+    
+    ################################ LATENCY MONITOR ##############################
+    
+    # The Redis latency monitoring subsystem samples different operations
+    # at runtime in order to collect data related to possible sources of
+    # latency of a Redis instance.
+    #
+    # Via the LATENCY command this information is available to the user that can
+    # print graphs and obtain reports.
+    #
+    # The system only logs operations that were performed in a time equal or
+    # greater than the amount of milliseconds specified via the
+    # latency-monitor-threshold configuration directive. When its value is set
+    # to zero, the latency monitor is turned off.
+    #
+    # By default latency monitoring is disabled since it is mostly not needed
+    # if you don't have latency issues, and collecting data has a performance
+    # impact, that while very small, can be measured under big load. Latency
+    # monitoring can easily be enabled at runtime using the command
+    # "CONFIG SET latency-monitor-threshold <milliseconds>" if needed.
+    latency-monitor-threshold 0
+    
+    ############################# EVENT NOTIFICATION ##############################
+    
+    # Redis can notify Pub/Sub clients about events happening in the key space.
+    # This feature is documented at http://redis.io/topics/notifications
+    #
+    # For instance if keyspace events notification is enabled, and a client
+    # performs a DEL operation on key "foo" stored in the Database 0, two
+    # messages will be published via Pub/Sub:
+    #
+    # PUBLISH __keyspace@0__:foo del
+    # PUBLISH __keyevent@0__:del foo
+    #
+    # It is possible to select the events that Redis will notify among a set
+    # of classes. Every class is identified by a single character:
+    #
+    #  K     Keyspace events, published with __keyspace@<db>__ prefix.
+    #  E     Keyevent events, published with __keyevent@<db>__ prefix.
+    #  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...
+    #  $     String commands
+    #  l     List commands
+    #  s     Set commands
+    #  h     Hash commands
+    #  z     Sorted set commands
+    #  x     Expired events (events generated every time a key expires)
+    #  e     Evicted events (events generated when a key is evicted for maxmemory)
+    #  A     Alias for g$lshzxe, so that the "AKE" string means all the events.
+    #
+    #  The "notify-keyspace-events" takes as argument a string that is composed
+    #  of zero or multiple characters. The empty string means that notifications
+    #  are disabled.
+    #
+    #  Example: to enable list and generic events, from the point of view of the
+    #           event name, use:
+    #
+    #  notify-keyspace-events Elg
+    #
+    #  Example 2: to get the stream of the expired keys subscribing to channel
+    #             name __keyevent@0__:expired use:
+    #
+    #  notify-keyspace-events Ex
+    #
+    #  By default all notifications are disabled because most users don't need
+    #  this feature and the feature has some overhead. Note that if you don't
+    #  specify at least one of K or E, no events will be delivered.
+    notify-keyspace-events ""
+    
+    ############################### ADVANCED CONFIG ###############################
+    
+    # Hashes are encoded using a memory efficient data structure when they have a
+    # small number of entries, and the biggest entry does not exceed a given
+    # threshold. These thresholds can be configured using the following directives.
+    hash-max-ziplist-entries 512
+    hash-max-ziplist-value 64
+    
+    # Lists are also encoded in a special way to save a lot of space.
+    # The number of entries allowed per internal list node can be specified
+    # as a fixed maximum size or a maximum number of elements.
+    # For a fixed maximum size, use -5 through -1, meaning:
+    # -5: max size: 64 Kb  <-- not recommended for normal workloads
+    # -4: max size: 32 Kb  <-- not recommended
+    # -3: max size: 16 Kb  <-- probably not recommended
+    # -2: max size: 8 Kb   <-- good
+    # -1: max size: 4 Kb   <-- good
+    # Positive numbers mean store up to _exactly_ that number of elements
+    # per list node.
+    # The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),
+    # but if your use case is unique, adjust the settings as necessary.
+    list-max-ziplist-size -2
+    
+    # Lists may also be compressed.
+    # Compress depth is the number of quicklist ziplist nodes from *each* side of
+    # the list to *exclude* from compression.  The head and tail of the list
+    # are always uncompressed for fast push/pop operations.  Settings are:
+    # 0: disable all list compression
+    # 1: depth 1 means "don't start compressing until after 1 node into the list,
+    #    going from either the head or tail"
+    #    So: [head]->node->node->...->node->[tail]
+    #    [head], [tail] will always be uncompressed; inner nodes will compress.
+    # 2: [head]->[next]->node->node->...->node->[prev]->[tail]
+    #    2 here means: don't compress head or head->next or tail->prev or tail,
+    #    but compress all nodes between them.
+    # 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]
+    # etc.
+    list-compress-depth 0
+    
+    # Sets have a special encoding in just one case: when a set is composed
+    # of just strings that happen to be integers in radix 10 in the range
+    # of 64 bit signed integers.
+    # The following configuration setting sets the limit in the size of the
+    # set in order to use this special memory saving encoding.
+    set-max-intset-entries 512
+    
+    # Similarly to hashes and lists, sorted sets are also specially encoded in
+    # order to save a lot of space. This encoding is only used when the length and
+    # elements of a sorted set are below the following limits:
+    zset-max-ziplist-entries 128
+    zset-max-ziplist-value 64
+    
+    # HyperLogLog sparse representation bytes limit. The limit includes the
+    # 16 bytes header. When an HyperLogLog using the sparse representation crosses
+    # this limit, it is converted into the dense representation.
+    #
+    # A value greater than 16000 is totally useless, since at that point the
+    # dense representation is more memory efficient.
+    #
+    # The suggested value is ~ 3000 in order to have the benefits of
+    # the space efficient encoding without slowing down too much PFADD,
+    # which is O(N) with the sparse encoding. The value can be raised to
+    # ~ 10000 when CPU is not a concern, but space is, and the data set is
+    # composed of many HyperLogLogs with cardinality in the 0 - 15000 range.
+    hll-sparse-max-bytes 3000
+    
+    # Streams macro node max size / items. The stream data structure is a radix
+    # tree of big nodes that encode multiple items inside. Using this configuration
+    # it is possible to configure how big a single node can be in bytes, and the
+    # maximum number of items it may contain before switching to a new node when
+    # appending new stream entries. If any of the following settings are set to
+    # zero, the limit is ignored, so for instance it is possible to set just a
+    # max entires limit by setting max-bytes to 0 and max-entries to the desired
+    # value.
+    stream-node-max-bytes 4096
+    stream-node-max-entries 100
+    
+    # Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in
+    # order to help rehashing the main Redis hash table (the one mapping top-level
+    # keys to values). The hash table implementation Redis uses (see dict.c)
+    # performs a lazy rehashing: the more operation you run into a hash table
+    # that is rehashing, the more rehashing "steps" are performed, so if the
+    # server is idle the rehashing is never complete and some more memory is used
+    # by the hash table.
+    #
+    # The default is to use this millisecond 10 times every second in order to
+    # actively rehash the main dictionaries, freeing memory when possible.
+    #
+    # If unsure:
+    # use "activerehashing no" if you have hard latency requirements and it is
+    # not a good thing in your environment that Redis can reply from time to time
+    # to queries with 2 milliseconds delay.
+    #
+    # use "activerehashing yes" if you don't have such hard requirements but
+    # want to free memory asap when possible.
+    activerehashing yes
+    
+    # The client output buffer limits can be used to force disconnection of clients
+    # that are not reading data from the server fast enough for some reason (a
+    # common reason is that a Pub/Sub client can't consume messages as fast as the
+    # publisher can produce them).
+    #
+    # The limit can be set differently for the three different classes of clients:
+    #
+    # normal -> normal clients including MONITOR clients
+    # replica  -> replica clients
+    # pubsub -> clients subscribed to at least one pubsub channel or pattern
+    #
+    # The syntax of every client-output-buffer-limit directive is the following:
+    #
+    # client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>
+    #
+    # A client is immediately disconnected once the hard limit is reached, or if
+    # the soft limit is reached and remains reached for the specified number of
+    # seconds (continuously).
+    # So for instance if the hard limit is 32 megabytes and the soft limit is
+    # 16 megabytes / 10 seconds, the client will get disconnected immediately
+    # if the size of the output buffers reach 32 megabytes, but will also get
+    # disconnected if the client reaches 16 megabytes and continuously overcomes
+    # the limit for 10 seconds.
+    #
+    # By default normal clients are not limited because they don't receive data
+    # without asking (in a push way), but just after a request, so only
+    # asynchronous clients may create a scenario where data is requested faster
+    # than it can read.
+    #
+    # Instead there is a default limit for pubsub and replica clients, since
+    # subscribers and replicas receive data in a push fashion.
+    #
+    # Both the hard or the soft limit can be disabled by setting them to zero.
+    client-output-buffer-limit normal 0 0 0
+    client-output-buffer-limit replica 256mb 64mb 60
+    client-output-buffer-limit pubsub 32mb 8mb 60
+    
+    # Client query buffers accumulate new commands. They are limited to a fixed
+    # amount by default in order to avoid that a protocol desynchronization (for
+    # instance due to a bug in the client) will lead to unbound memory usage in
+    # the query buffer. However you can configure it here if you have very special
+    # needs, such us huge multi/exec requests or alike.
+    #
+    # client-query-buffer-limit 1gb
+    
+    # In the Redis protocol, bulk requests, that are, elements representing single
+    # strings, are normally limited ot 512 mb. However you can change this limit
+    # here.
+    #
+    # proto-max-bulk-len 512mb
+    
+    # Redis calls an internal function to perform many background tasks, like
+    # closing connections of clients in timeout, purging expired keys that are
+    # never requested, and so forth.
+    #
+    # Not all tasks are performed with the same frequency, but Redis checks for
+    # tasks to perform according to the specified "hz" value.
+    #
+    # By default "hz" is set to 10. Raising the value will use more CPU when
+    # Redis is idle, but at the same time will make Redis more responsive when
+    # there are many keys expiring at the same time, and timeouts may be
+    # handled with more precision.
+    #
+    # The range is between 1 and 500, however a value over 100 is usually not
+    # a good idea. Most users should use the default of 10 and raise this up to
+    # 100 only in environments where very low latency is required.
+    hz 10
+    
+    # Normally it is useful to have an HZ value which is proportional to the
+    # number of clients connected. This is useful in order, for instance, to
+    # avoid too many clients are processed for each background task invocation
+    # in order to avoid latency spikes.
+    #
+    # Since the default HZ value by default is conservatively set to 10, Redis
+    # offers, and enables by default, the ability to use an adaptive HZ value
+    # which will temporary raise when there are many connected clients.
+    #
+    # When dynamic HZ is enabled, the actual configured HZ will be used as
+    # as a baseline, but multiples of the configured HZ value will be actually
+    # used as needed once more clients are connected. In this way an idle
+    # instance will use very little CPU time while a busy instance will be
+    # more responsive.
+    dynamic-hz yes
+    
+    # When a child rewrites the AOF file, if the following option is enabled
+    # the file will be fsync-ed every 32 MB of data generated. This is useful
+    # in order to commit the file to the disk more incrementally and avoid
+    # big latency spikes.
+    aof-rewrite-incremental-fsync yes
+    
+    # When redis saves RDB file, if the following option is enabled
+    # the file will be fsync-ed every 32 MB of data generated. This is useful
+    # in order to commit the file to the disk more incrementally and avoid
+    # big latency spikes.
+    rdb-save-incremental-fsync yes
+    
+    # Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good
+    # idea to start with the default settings and only change them after investigating
+    # how to improve the performances and how the keys LFU change over time, which
+    # is possible to inspect via the OBJECT FREQ command.
+    #
+    # There are two tunable parameters in the Redis LFU implementation: the
+    # counter logarithm factor and the counter decay time. It is important to
+    # understand what the two parameters mean before changing them.
+    #
+    # The LFU counter is just 8 bits per key, it's maximum value is 255, so Redis
+    # uses a probabilistic increment with logarithmic behavior. Given the value
+    # of the old counter, when a key is accessed, the counter is incremented in
+    # this way:
+    #
+    # 1. A random number R between 0 and 1 is extracted.
+    # 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).
+    # 3. The counter is incremented only if R < P.
+    #
+    # The default lfu-log-factor is 10. This is a table of how the frequency
+    # counter changes with a different number of accesses with different
+    # logarithmic factors:
+    #
+    # +--------+------------+------------+------------+------------+------------+
+    # | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |
+    # +--------+------------+------------+------------+------------+------------+
+    # | 0      | 104        | 255        | 255        | 255        | 255        |
+    # +--------+------------+------------+------------+------------+------------+
+    # | 1      | 18         | 49         | 255        | 255        | 255        |
+    # +--------+------------+------------+------------+------------+------------+
+    # | 10     | 10         | 18         | 142        | 255        | 255        |
+    # +--------+------------+------------+------------+------------+------------+
+    # | 100    | 8          | 11         | 49         | 143        | 255        |
+    # +--------+------------+------------+------------+------------+------------+
+    #
+    # NOTE: The above table was obtained by running the following commands:
+    #
+    #   redis-benchmark -n 1000000 incr foo
+    #   redis-cli object freq foo
+    #
+    # NOTE 2: The counter initial value is 5 in order to give new objects a chance
+    # to accumulate hits.
+    #
+    # The counter decay time is the time, in minutes, that must elapse in order
+    # for the key counter to be divided by two (or decremented if it has a value
+    # less <= 10).
+    #
+    # The default value for the lfu-decay-time is 1. A Special value of 0 means to
+    # decay the counter every time it happens to be scanned.
+    #
+    # lfu-log-factor 10
+    # lfu-decay-time 1
+    
+    ########################### ACTIVE DEFRAGMENTATION #######################
+    #
+    # WARNING THIS FEATURE IS EXPERIMENTAL. However it was stress tested
+    # even in production and manually tested by multiple engineers for some
+    # time.
+    #
+    # What is active defragmentation?
+    # -------------------------------
+    #
+    # Active (online) defragmentation allows a Redis server to compact the
+    # spaces left between small allocations and deallocations of data in memory,
+    # thus allowing to reclaim back memory.
+    #
+    # Fragmentation is a natural process that happens with every allocator (but
+    # less so with Jemalloc, fortunately) and certain workloads. Normally a server
+    # restart is needed in order to lower the fragmentation, or at least to flush
+    # away all the data and create it again. However thanks to this feature
+    # implemented by Oran Agra for Redis 4.0 this process can happen at runtime
+    # in an "hot" way, while the server is running.
+    #
+    # Basically when the fragmentation is over a certain level (see the
+    # configuration options below) Redis will start to create new copies of the
+    # values in contiguous memory regions by exploiting certain specific Jemalloc
+    # features (in order to understand if an allocation is causing fragmentation
+    # and to allocate it in a better place), and at the same time, will release the
+    # old copies of the data. This process, repeated incrementally for all the keys
+    # will cause the fragmentation to drop back to normal values.
+    #
+    # Important things to understand:
+    #
+    # 1. This feature is disabled by default, and only works if you compiled Redis
+    #    to use the copy of Jemalloc we ship with the source code of Redis.
+    #    This is the default with Linux builds.
+    #
+    # 2. You never need to enable this feature if you don't have fragmentation
+    #    issues.
+    #
+    # 3. Once you experience fragmentation, you can enable this feature when
+    #    needed with the command "CONFIG SET activedefrag yes".
+    #
+    # The configuration parameters are able to fine tune the behavior of the
+    # defragmentation process. If you are not sure about what they mean it is
+    # a good idea to leave the defaults untouched.
+    
+    # Enabled active defragmentation
+    # activedefrag yes
+    
+    # Minimum amount of fragmentation waste to start active defrag
+    # active-defrag-ignore-bytes 100mb
+    
+    # Minimum percentage of fragmentation to start active defrag
+    # active-defrag-threshold-lower 10
+    
+    # Maximum percentage of fragmentation at which we use maximum effort
+    # active-defrag-threshold-upper 100
+    
+    # Minimal effort for defrag in CPU percentage
+    # active-defrag-cycle-min 5
+    
+    # Maximal effort for defrag in CPU percentage
+    # active-defrag-cycle-max 75
+    
+    # Maximum number of set/hash/zset/list fields that will be processed from
+    # the main dictionary scan
+    # active-defrag-max-scan-fields 1000
+{{- if .Values.configmap }}
+{{- include "common.tplvalues.render" (dict "value" .Values.configmap "context" $) | nindent 4 }}
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/headless-svc.yaml b/bitnami/redis-cluster/templates/headless-svc.yaml
new file mode 100644
index 0000000000..12ed672504
--- /dev/null
+++ b/bitnami/redis-cluster/templates/headless-svc.yaml
@@ -0,0 +1,18 @@
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}-headless
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+spec:
+  type: ClusterIP
+  clusterIP: None
+  publishNotReadyAddresses: true
+  ports:
+    - name: tcp-redis
+      port: {{ .Values.redisPort }}
+      targetPort: tcp-redis
+    - name: tcp-redis-bus
+      port: {{ .Values.cluster.busPort }}
+      targetPort: tcp-redis-bus
+  selector: {{- include "redis-cluster.matchLabels" . | nindent 4 }}
+
diff --git a/bitnami/redis-cluster/templates/init-cluster.yaml b/bitnami/redis-cluster/templates/init-cluster.yaml
new file mode 100644
index 0000000000..24830e6517
--- /dev/null
+++ b/bitnami/redis-cluster/templates/init-cluster.yaml
@@ -0,0 +1,51 @@
+{{- if and .Values.cluster.init (or (and .Values.cluster.externalAccess.enabled .Values.cluster.externalAccess.service.loadBalancerIP) ( not .Values.cluster.externalAccess.enabled )) }}
+apiVersion: batch/v1
+kind: Job
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}-cluster-create
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+  annotations:
+    "helm.sh/hook": post-install,post-upgrade
+spec:
+  activeDeadlineSeconds: {{ .Values.cluster.initTimeout }}
+  template:
+    spec:
+      containers:
+        - name: trigger
+          image: "{{ template "redis-cluster.image" . }}"
+          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
+          {{- if .Values.containerSecurityContext.enabled }}
+          securityContext:
+            runAsUser: {{ .Values.containerSecurityContext.runAsUser }}
+          {{- end }}
+          {{- if .Values.cluster.externalAccess.enabled }}
+          command: ['/bin/bash', '-c']
+          args:
+            - |
+              ips=($(echo "{{ .Values.cluster.externalAccess.service.loadBalancerIP }}" | cut -d [ -f2 | cut -d ] -f 1))
+              export REDIS_NODES="${ips[@]}"
+              /entrypoint.sh /run.sh
+          {{- end }}
+          env:
+            {{- if .Values.cluster.externalAccess.enabled }}
+            - name: REDIS_PORT
+              value: {{ .Values.cluster.externalAccess.service.port | quote }}
+            {{- else }}
+            - name: REDIS_PORT
+              value: {{ .Values.redisPort | quote }}
+            - name: REDIS_NODES
+              value: "{{ $count := .Values.cluster.nodes | int }}{{ range $i, $v := until $count }}{{ include "redis-cluster.fullname" $ }}-{{ $i }}.{{ template "redis-cluster.fullname" $ }}-headless {{ end }}"
+            {{- end }}
+            {{- if .Values.usePassword }}
+            - name: REDISCLI_AUTH
+              valueFrom:
+                secretKeyRef:
+                  name: {{ template "redis-cluster.secretName" . }}
+                  key: {{ template "redis-cluster.secretPasswordKey" . }}
+            {{- end }}
+            - name: REDIS_CLUSTER_CREATOR
+              value: "yes"
+            - name: REDIS_CLUSTER_REPLICAS
+              value: {{ .Values.cluster.replicas | quote }}
+      restartPolicy: OnFailure
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/metrics-prometheus.yaml b/bitnami/redis-cluster/templates/metrics-prometheus.yaml
new file mode 100644
index 0000000000..1d7375ebc7
--- /dev/null
+++ b/bitnami/redis-cluster/templates/metrics-prometheus.yaml
@@ -0,0 +1,24 @@
+{{- if and (.Values.metrics.enabled) (.Values.metrics.serviceMonitor.enabled) }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+  {{- if .Values.metrics.serviceMonitor.namespace }}
+  namespace: {{ .Values.metrics.serviceMonitor.namespace }}
+  {{- end }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+    {{- range $key, $value := .Values.metrics.serviceMonitor.selector }}
+    {{ $key }}: {{ $value | quote }}
+    {{- end }}
+spec:
+  endpoints:
+  - port: metrics
+    {{- if .Values.metrics.serviceMonitor.interval }}
+    interval: {{ .Values.metrics.serviceMonitor.interval }}
+    {{- end }}
+  selector:
+    matchLabels: {{- include "redis-cluster.matchLabels" . | nindent 6 }}
+  namespaceSelector:
+    matchNames:
+    - {{ .Release.Namespace }}
+{{- end -}}
diff --git a/bitnami/redis-cluster/templates/metrics-svc.yaml b/bitnami/redis-cluster/templates/metrics-svc.yaml
new file mode 100644
index 0000000000..3c5551bef3
--- /dev/null
+++ b/bitnami/redis-cluster/templates/metrics-svc.yaml
@@ -0,0 +1,24 @@
+{{- if .Values.metrics.enabled }}
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}-metrics
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+    {{- if .Values.metrics.service.labels -}}
+    {{- toYaml .Values.metrics.service.labels | nindent 4 }}
+    {{- end -}}
+  {{- if .Values.metrics.service.annotations }}
+  annotations: {{- toYaml .Values.metrics.service.annotations | nindent 4 }}
+  {{- end }}
+spec:
+  type: {{ .Values.metrics.service.type }}
+  {{- if eq .Values.metrics.service.type "LoadBalancer" }} {{ if .Values.metrics.service.loadBalancerIP }}
+  loadBalancerIP: {{ .Values.metrics.service.loadBalancerIP }}
+  {{ end -}}
+  {{- end -}}
+  ports:
+    - name: metrics
+      port: 9121
+      targetPort: http-metrics
+  selector: {{- include "redis-cluster.matchLabels" $ | nindent 4 }}
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/networkpolicy.yaml b/bitnami/redis-cluster/templates/networkpolicy.yaml
new file mode 100644
index 0000000000..614aaea135
--- /dev/null
+++ b/bitnami/redis-cluster/templates/networkpolicy.yaml
@@ -0,0 +1,59 @@
+{{- if .Values.networkPolicy.enabled }}
+kind: NetworkPolicy
+apiVersion: {{ template "networkPolicy.apiVersion" . }}
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+spec:
+  podSelector:
+    matchLabels:
+      app: {{ template "redis-cluster.name" . }}
+      release: {{ .Release.Name }}
+  policyTypes:
+    - Ingress
+    - Egress
+  egress:
+    # Allow dns resolution
+    - ports:
+      - port: 53
+        protocol: UDP
+    # Allow outbound connections to other cluster pods
+    - ports:
+        - port: {{ .Values.redisPort }}
+        - port: {{ .Values.cluster.busPort }}
+      to:
+        - podSelector:
+            matchLabels: {{- include "redis-cluster.matchLabels" . | nindent 14 }}
+  ingress:
+    # Allow inbound connections
+    - ports:
+        - port: {{ .Values.redisPort }}
+        - port: {{ .Values.cluster.busPort }}
+      {{- if not .Values.networkPolicy.allowExternal }}
+      from:
+        - podSelector:
+            matchLabels:
+              {{ template "redis-cluster.fullname" . }}-client: "true"
+        - podSelector:
+            matchLabels: {{- include "redis-cluster.matchLabels" . | nindent 14 }}
+      {{- if .Values.networkPolicy.ingressNSMatchLabels }}
+      - namespaceSelector:
+          matchLabels:
+            {{- range $key, $value := .Values.networkPolicy.ingressNSMatchLabels }}
+            {{ $key | quote }}: {{ $value | quote }}
+            {{- end }}
+        {{- if .Values.networkPolicy.ingressNSPodMatchLabels }}
+        podSelector:
+          matchLabels:
+            {{- range $key, $value := .Values.networkPolicy.ingressNSPodMatchLabels }}
+            {{ $key | quote }}: {{ $value | quote }}
+            {{- end }}
+        {{- end }}
+      {{- end }}
+      {{- end }}
+    {{- if .Values.metrics.enabled }}
+    # Allow prometheus scrapes for metrics
+    - ports:
+        - port: 9121
+    {{- end }}
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/prometheusrule.yaml b/bitnami/redis-cluster/templates/prometheusrule.yaml
new file mode 100644
index 0000000000..673bd59314
--- /dev/null
+++ b/bitnami/redis-cluster/templates/prometheusrule.yaml
@@ -0,0 +1,19 @@
+{{- if and .Values.metrics.enabled .Values.metrics.prometheusRule.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: PrometheusRule
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+{{- with .Values.metrics.prometheusRule.namespace }}
+  namespace: {{ . }}
+{{- end }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+{{- with .Values.metrics.prometheusRule.additionalLabels }}
+{{- toYaml . | indent 4 }}
+{{- end }}
+spec:
+{{- with .Values.metrics.prometheusRule.rules }}
+  groups:
+    - name: {{ template "redis-cluster.name" $ }}
+      rules: {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
+{{- end }}
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/psp.yaml b/bitnami/redis-cluster/templates/psp.yaml
new file mode 100644
index 0000000000..d63a7627e9
--- /dev/null
+++ b/bitnami/redis-cluster/templates/psp.yaml
@@ -0,0 +1,38 @@
+{{- if .Values.podSecurityPolicy.create }}
+apiVersion: {{ template "podSecurityPolicy.apiVersion" . }}
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+spec:
+  allowPrivilegeEscalation: false
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: {{ .Values.podSecurityContext.fsGroup }}
+        max: {{ .Values.podSecurityContext.fsGroup }}
+  hostIPC: false
+  hostNetwork: false
+  hostPID: false
+  privileged: false
+  readOnlyRootFilesystem: false
+  requiredDropCapabilities:
+    - ALL
+  runAsUser:
+    rule: 'MustRunAs'
+    ranges:
+      - min: {{ .Values.podSecurityContext.runAsUser }}
+        max: {{ .Values.podSecurityContext.runAsUser }}
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: {{ .Values.podSecurityContext.runAsUser }}
+        max: {{ .Values.podSecurityContext.runAsUser }}
+  volumes:
+    - 'configMap'
+    - 'secret'
+    - 'emptyDir'
+    - 'persistentVolumeClaim'
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/redis-role.yaml b/bitnami/redis-cluster/templates/redis-role.yaml
new file mode 100644
index 0000000000..f8ea190afc
--- /dev/null
+++ b/bitnami/redis-cluster/templates/redis-role.yaml
@@ -0,0 +1,17 @@
+{{- if .Values.rbac.create -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+rules:
+{{- if .Values.podSecurityPolicy.create }}
+  - apiGroups: ['{{ template "podSecurityPolicy.apiGroup" . }}']
+    resources: ['podsecuritypolicies']
+    verbs: ['use']
+    resourceNames: [{{ template "redis-cluster.fullname" . }}]
+{{- end -}}
+{{- if .Values.rbac.role.rules }}
+{{- toYaml .Values.rbac.role.rules | nindent 2 }}
+{{- end -}}
+{{- end -}}
diff --git a/bitnami/redis-cluster/templates/redis-rolebinding.yaml b/bitnami/redis-cluster/templates/redis-rolebinding.yaml
new file mode 100644
index 0000000000..ca2b8766da
--- /dev/null
+++ b/bitnami/redis-cluster/templates/redis-rolebinding.yaml
@@ -0,0 +1,14 @@
+{{- if .Values.rbac.create -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: {{ template "redis-cluster.fullname" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "redis-cluster.serviceAccountName" . }}
+{{- end -}}
diff --git a/bitnami/redis-cluster/templates/redis-serviceaccount.yaml b/bitnami/redis-cluster/templates/redis-serviceaccount.yaml
new file mode 100644
index 0000000000..35ca297dae
--- /dev/null
+++ b/bitnami/redis-cluster/templates/redis-serviceaccount.yaml
@@ -0,0 +1,7 @@
+{{- if .Values.serviceAccount.create -}}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "redis-cluster.serviceAccountName" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+{{- end -}}
diff --git a/bitnami/redis-cluster/templates/redis-statefulset.yaml b/bitnami/redis-cluster/templates/redis-statefulset.yaml
new file mode 100644
index 0000000000..1a51413dcb
--- /dev/null
+++ b/bitnami/redis-cluster/templates/redis-statefulset.yaml
@@ -0,0 +1,338 @@
+{{- if (include "redis-cluster.createStatefulSet" .) }}
+apiVersion: apps/v1
+kind: StatefulSet
+metadata:
+  name: {{ include "redis-cluster.fullname" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+spec:
+  selector:
+    matchLabels: {{- include "redis-cluster.matchLabels" . | nindent 6 }}
+  {{- if .Values.updateStrategy }}
+  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
+  {{- end }}
+  replicas: {{ .Values.cluster.nodes }}
+  serviceName: {{ include "redis-cluster.fullname" . }}-headless
+  podManagementPolicy: "Parallel"
+  template:
+    metadata:
+      labels: {{- include "redis-cluster.labels" . | nindent 8 }}
+      {{- if .Values.podLabels }}
+      {{- toYaml .Values.podLabels | nindent 8 }}
+      {{- end }}
+      {{- if and .Values.metrics.enabled .Values.metrics.podLabels }}
+      {{- toYaml .Values.metrics.podLabels | nindent 8 }}
+      {{- end }}
+      annotations:
+        checksum/scripts: {{ include (print $.Template.BasePath "/scripts-configmap.yaml") . | sha256sum }}
+        {{- if not .Values.existingSecret }}
+        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
+        {{- end }}
+      {{- if .Values.podAnnotations }}
+      {{- toYaml .Values.podAnnotations | nindent 8 }}
+      {{- end }}
+      {{- if and .Values.metrics.enabled .Values.metrics.podAnnotations }}
+      {{- toYaml .Values.metrics.podAnnotations | nindent 8 }}
+      {{- end }}
+    spec:
+      {{- include "redis-cluster.imagePullSecrets" . | nindent 6 }}
+      {{- if .Values.podSecurityContext.enabled }}
+      securityContext:
+        fsGroup: {{ .Values.podSecurityContext.fsGroup }}
+        {{- if .Values.podSecurityContext.sysctls }}
+        sysctls:
+          {{- toYaml .Values.podSecurityContext.sysctls | nindent 8 }}
+        {{- end }}
+      {{- end }}
+      serviceAccountName: "{{ template "redis-cluster.serviceAccountName" . }}"
+      {{- if .Values.priorityClassName }}
+      priorityClassName: "{{ .Values.priorityClassName }}"
+      {{- end }}
+      {{- with .Values.affinity }}
+      affinity:
+      {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.nodeSelector }}
+      nodeSelector:
+      {{- toYaml .Values.nodeSelector | nindent 8 }}
+      {{- end }}
+      {{- if .Values.tolerations }}
+      tolerations:
+      {{- toYaml .Values.tolerations | nindent 8 }}
+      {{- end }}
+      {{- if .Values.schedulerName }}
+      schedulerName: {{ .Values.schedulerName | quote }}
+      {{- end }}
+      containers:
+        - name: {{ include "redis-cluster.fullname" . }}
+          image: "{{ include "redis-cluster.image" . }}"
+          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
+          {{- if .Values.containerSecurityContext.enabled }}
+          securityContext:
+            runAsUser: {{ .Values.containerSecurityContext.runAsUser }}
+          {{- end }}
+          {{- if .Values.command }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.args }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if and (not .Values.command) (not .Values.args) }}
+          {{- if .Values.cluster.externalAccess.enabled }}
+          command: ['/bin/bash', '-c']
+          args:
+            - |
+              pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
+              pod_index="${pod_index[-1]}"
+              ips=($(echo "{{ .Values.cluster.externalAccess.service.loadBalancerIP }}" | cut -d [ -f2 | cut -d ] -f 1))
+              export REDIS_CLUSTER_ANNOUNCE_IP="${ips[$pod_index]}"
+              export REDIS_NODES="${ips[@]}"
+              /entrypoint.sh /run.sh
+          {{- end }}
+          {{- end }}
+          env:
+            {{- if .Values.cluster.externalAccess.enabled }}
+            - name: REDIS_CLUSTER_DYNAMIC_IPS
+              value: "no"
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            {{- else }}
+            - name: REDIS_NODES
+              value: "{{ $count := .Values.cluster.nodes | int }}{{ range $i, $v := until $count }}{{ include "redis-cluster.fullname" $ }}-{{ $i }}.{{ template "redis-cluster.fullname" $ }}-headless {{ end }}"
+            {{- end }}
+            {{- if .Values.usePassword }}
+            - name: REDISCLI_AUTH
+              valueFrom:
+                secretKeyRef:
+                  name: {{ template "redis-cluster.secretName" . }}
+                  key: {{ template "redis-cluster.secretPasswordKey" . }}
+            {{- if .Values.usePasswordFile }}
+            - name: REDIS_PASSWORD_FILE
+              value: "/opt/bitnami/redis/secrets/redis-password"
+            {{- else }}
+            - name: REDIS_PASSWORD
+              valueFrom:
+                secretKeyRef:
+                  name: {{ template "redis-cluster.secretName" . }}
+                  key: {{ template "redis-cluster.secretPasswordKey" . }}
+            {{- end }}
+            {{- else }}
+            - name: ALLOW_EMPTY_PASSWORD
+              value: "yes"
+            {{- end }}
+            - name: REDIS_PORT
+              value: {{ .Values.redisPort | quote }}
+            {{- if .Values.extraEnvVars }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.extraEnvVars "context" $ ) | nindent 8 }}
+            {{- end }}
+            {{- if or .Values.extraEnvVarsConfigMap .Values.extraEnvVarsSecret }}
+            envFrom:
+              {{- if .Values.extraEnvVarsConfigMap }}
+              - configMapRef:
+                  name: {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVarsConfigMap "context" $ ) }}
+              {{- end }}
+              {{- if .Values.extraEnvVarsSecret }}
+              - secretRef:
+                  name: {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVarsSecret "context" $ ) }}
+              {{- end }}
+              {{- end }}
+          ports:
+            - name: tcp-redis
+              containerPort: {{ .Values.redisPort }}
+            - name: tcp-redis-bus
+              containerPort: {{ .Values.cluster.busPort }}
+          {{- if .Values.livenessProbe.enabled }}
+          livenessProbe:
+            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
+            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
+            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
+            successThreshold: {{ .Values.livenessProbe.successThreshold }}
+            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
+            exec:
+              command:
+                - sh
+                - -c
+                - /scripts/ping_liveness_local.sh {{ .Values.livenessProbe.timeoutSeconds }}
+          {{- end }}
+          {{- if .Values.readinessProbe.enabled }}
+          readinessProbe:
+            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
+            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
+            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
+            successThreshold: {{ .Values.readinessProbe.successThreshold }}
+            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
+            exec:
+              command:
+                - sh
+                - -c
+                - /scripts/ping_readiness_local.sh {{ .Values.livenessProbe.timeoutSeconds }}
+          {{- end }}
+          {{- if .Values.resources }}
+          resources:
+          {{- include "common.tplvalues.render" (dict "value" .Values.resources "context" $) | nindent 12 }}
+          {{- end }}
+          volumeMounts:
+            - name: scripts
+              mountPath: /scripts
+            {{- if .Values.usePasswordFile }}
+            - name: redis-password
+              mountPath: /opt/bitnami/redis/secrets/
+            {{- end }}
+            - name: redis-data
+              mountPath: {{ .Values.persistence.path }}
+              subPath: {{ .Values.persistence.subPath }}
+            - name: default-config
+              mountPath: /opt/bitnami/redis/etc/redis-default.conf
+              subPath: redis-default.conf
+            - name: redis-tmp-conf
+              mountPath: /opt/bitnami/redis/etc/
+            {{- if .Values.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $ ) | nindent 8 }}
+            {{- end }}
+        {{- if .Values.metrics.enabled }}
+        - name: metrics
+          image: {{ template "redis-cluster.metrics.image" . }}
+          imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
+          command:
+            - /bin/bash
+            - -c
+            - |
+              {{- if .Values.usePasswordFile }}
+              export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
+              {{- end }}
+              redis_exporter{{- range $key, $value := .Values.metrics.extraArgs }} --{{ $key }}={{ $value }}{{- end }}
+          env:
+            - name: REDIS_ALIAS
+              value: {{ template "redis-cluster.fullname" . }}
+            {{- if and .Values.usePassword (not .Values.usePasswordFile) }}
+            - name: REDIS_PASSWORD
+              valueFrom:
+                secretKeyRef:
+                  name: {{ template "redis-cluster.secretName" . }}
+                  key: {{ template "redis-cluster.secretPasswordKey" . }}
+            {{- end }}
+            {{- if .Values.usePasswordFile }}
+            - name: REDIS_PASSWORD_FILE
+              value: "/opt/bitnami/redis/secrets/redis-password"
+            {{- end }}
+          volumeMounts:
+            {{- if .Values.usePasswordFile }}
+            - name: redis-password
+              mountPath: /secrets/
+            {{- end }}
+          ports:
+            - name: http-metrics
+              containerPort: 9121
+          resources:
+        {{- toYaml .Values.metrics.resources | nindent 12 }}
+        {{- end }}
+      {{- $needsVolumePermissions := and .Values.volumePermissions.enabled (and  .Values.persistence.enabled .Values.containerSecurityContext.enabled) }}
+      {{- if or $needsVolumePermissions .Values.sysctlImage.enabled }}
+      initContainers:
+        {{- if $needsVolumePermissions }}
+        - name: volume-permissions
+          image: "{{ template "redis-cluster.volumePermissions.image" . }}"
+          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
+          command: ["/bin/chown", "-R", "{{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.containerSecurityContext.fsGroup }}", "{{ .Values.persistence.path }}"]
+          securityContext:
+            runAsUser: 0
+          resources:
+          {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
+          volumeMounts:
+            - name: redis-data
+              mountPath: {{ .Values.persistence.path }}
+              subPath: {{ .Values.persistence.subPath }}
+        {{- end }}
+        {{- if .Values.sysctlImage.enabled }}
+        - name: init-sysctl
+          image: {{ template "redis-cluster.sysctl.image" . }}
+          imagePullPolicy: {{ default "" .Values.sysctlImage.pullPolicy | quote }}
+          resources:
+          {{- toYaml .Values.sysctlImage.resources | nindent 12 }}
+          {{- if .Values.sysctlImage.mountHostSys }}
+          volumeMounts:
+            - name: host-sys
+              mountPath: /host-sys
+          {{- end }}
+          command:
+          {{- toYaml .Values.sysctlImage.command | nindent 12 }}
+          securityContext:
+            privileged: true
+            runAsUser: 0
+        {{- end }}
+        {{- if .Values.extraInitContainers }}
+        {{- range $key, $value := .Values.extraInitContainers }}
+        - name: "{{ $key }}"
+        {{- toYaml $value | nindent 12 }}
+        {{- end }}
+        {{- end }}
+      {{- end }}
+      {{- if .Values.sidecars }}
+      {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $ ) | nindent 6 }}
+      {{- end }}
+      volumes:
+        - name: scripts
+          configMap:
+            name: {{ include "redis-cluster.fullname" . }}-scripts
+            defaultMode: 0755
+        {{- if .Values.usePasswordFile }}
+        - name: redis-password
+          secret:
+            secretName: {{ include "redis-cluster.secretName" . }}
+            items:
+              - key: {{ include "redis-cluster.secretPasswordKey" . }}
+                path: redis-password
+        {{- end }}
+        - name: default-config
+          configMap:
+            name: {{ include "redis-cluster.fullname" . }}-default
+        {{- if not .Values.persistence.enabled }}
+        - name: "redis-data"
+          emptyDir: {}
+        {{- end }}
+        {{- if .Values.sysctlImage.mountHostSys }}
+        - name: host-sys
+          hostPath:
+            path: /sys
+        {{- end }}
+        - name: redis-tmp-conf
+          emptyDir: {}
+        {{- if .Values.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 6 }}
+        {{- end }}
+  {{- if .Values.persistence.enabled }}
+  volumeClaimTemplates:
+    - metadata:
+        name: redis-data
+        labels: {{- include "redis-cluster.labels" . | nindent 10 }}
+      spec:
+        accessModes:
+        {{- range .Values.persistence.accessModes }}
+          - {{ . | quote }}
+        {{- end }}
+        resources:
+          requests:
+            storage: {{ .Values.persistence.size | quote }}
+        {{- include "redis-cluster.storageClass" . | nindent 10 }}
+        selector:
+        {{- if .Values.persistence.matchLabels }}
+          matchLabels:
+          {{- toYaml .Values.persistence.matchLabels | nindent 12 }}
+        {{- end -}}
+        {{- if .Values.persistence.matchExpressions }}
+          matchExpressions:
+          {{- toYaml .Values.persistence.matchExpressions | nindent 12 }}
+        {{- end -}}
+  {{- end }}
+  updateStrategy:
+    type: {{ .Values.statefulset.updateStrategy }}
+    {{- if .Values.statefulset.rollingUpdatePartition }}
+    {{- if (eq "Recreate" .Values.statefulset.updateStrategy) }}
+    rollingUpdate: null
+    {{- else }}
+    rollingUpdate:
+      partition: {{ .Values.statefulset.rollingUpdatePartition }}
+    {{- end }}
+    {{- end }}
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/redis-svc.yaml b/bitnami/redis-cluster/templates/redis-svc.yaml
new file mode 100644
index 0000000000..2d4130914e
--- /dev/null
+++ b/bitnami/redis-cluster/templates/redis-svc.yaml
@@ -0,0 +1,18 @@
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+    {{- if .Values.service.labels -}}
+    {{ toYaml .Values.service.labels | nindent 4 }}
+    {{- end -}}
+{{- if .Values.service.annotations }}
+  annotations: {{ toYaml .Values.service.annotations | nindent 4 }}
+{{- end }}
+spec:
+  type: ClusterIP
+  ports:
+    - name: tcp-redis
+      port: {{ .Values.service.port }}
+      targetPort: tcp-redis
+  selector: {{- include "redis-cluster.matchLabels" $ | nindent 4 }}
diff --git a/bitnami/redis-cluster/templates/scripts-configmap.yaml b/bitnami/redis-cluster/templates/scripts-configmap.yaml
new file mode 100644
index 0000000000..e257baa658
--- /dev/null
+++ b/bitnami/redis-cluster/templates/scripts-configmap.yaml
@@ -0,0 +1,42 @@
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  name: {{ include "redis-cluster.fullname" . }}-scripts
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+data:
+  ping_readiness_local.sh: |-
+    {{- if .Values.usePasswordFile }}
+    password_aux=`cat ${REDIS_PASSWORD_FILE}`
+    export REDISCLI_AUTH=$password_aux
+    {{- else }}
+    export REDISCLI_AUTH=$REDIS_PASSWORD
+    {{- end }}
+    response=$(
+      timeout -s 9 $1 \
+      redis-cli \
+        -h localhost \
+        -p $REDIS_PORT \
+        ping
+    )
+    if [ "$response" != "PONG" ]; then
+      echo "$response"
+      exit 1
+    fi
+  ping_liveness_local.sh: |-
+    {{- if .Values.usePasswordFile }}
+    password_aux=`cat ${REDIS_PASSWORD_FILE}`
+    export REDISCLI_AUTH=$password_aux
+    {{- else }}
+    export REDISCLI_AUTH=$REDIS_PASSWORD
+    {{- end }}
+    response=$(
+      timeout -s 9 $1 \
+      redis-cli \
+        -h localhost \
+        -p $REDIS_PORT \
+        ping
+    )
+    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
+      echo "$response"
+      exit 1
+    fi
diff --git a/bitnami/redis-cluster/templates/secret.yaml b/bitnami/redis-cluster/templates/secret.yaml
new file mode 100644
index 0000000000..b4cab5e4a7
--- /dev/null
+++ b/bitnami/redis-cluster/templates/secret.yaml
@@ -0,0 +1,10 @@
+{{- if and .Values.usePassword (not .Values.existingSecret) -}}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+type: Opaque
+data:
+  redis-password: {{ include "redis-cluster.password" . | b64enc | quote }}
+{{- end -}}
diff --git a/bitnami/redis-cluster/templates/svc-cluster-external-access.yaml b/bitnami/redis-cluster/templates/svc-cluster-external-access.yaml
new file mode 100644
index 0000000000..16ce25442d
--- /dev/null
+++ b/bitnami/redis-cluster/templates/svc-cluster-external-access.yaml
@@ -0,0 +1,33 @@
+{{- if .Values.cluster.externalAccess.enabled }}
+{{- $fullName := include "redis-cluster.fullname" . }}
+{{- $nodesCount := .Values.cluster.nodes | int }}
+{{- $root := . }}
+
+{{- range $i, $e := until $nodesCount }}
+{{- $targetPod := printf "%s-%d" (printf "%s" $fullName) $i }}
+
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "redis-cluster.fullname" $ }}-{{ $i }}-svc
+  labels: {{- include "redis-cluster.labels" $ | nindent 4 }}
+    pod: {{ $targetPod }}
+  annotations: {{ include "common.tplvalues.render" ( dict "value" $root.Values.cluster.externalAccess.service.annotations "context" $) | nindent 4 }}
+spec:
+  type: {{ $root.Values.cluster.externalAccess.service.type }}
+  {{- if $root.Values.cluster.externalAccess.service.loadBalancerIP }}
+  loadBalancerIP: {{ index $root.Values.cluster.externalAccess.service.loadBalancerIP $i }}
+  {{- end }}
+  ports:
+    - name: tcp-redis
+      port: {{ $root.Values.cluster.externalAccess.service.port }}
+      targetPort: tcp-redis
+    - name: tcp-redis-bus
+      targetPort: tcp-redis-bus
+      port: {{ $root.Values.cluster.busPort }}
+  selector: {{- include "redis-cluster.matchLabels" $ | nindent 4 }}
+    statefulset.kubernetes.io/pod-name: {{ $targetPod }}
+---
+{{- end }}
+{{- end }}
diff --git a/bitnami/redis-cluster/templates/update-cluster.yaml b/bitnami/redis-cluster/templates/update-cluster.yaml
new file mode 100644
index 0000000000..9cf1a9f079
--- /dev/null
+++ b/bitnami/redis-cluster/templates/update-cluster.yaml
@@ -0,0 +1,62 @@
+{{- if and .Values.cluster.update.addNodes ( or (and .Values.cluster.externalAccess.enabled .Values.cluster.externalAccess.service.loadBalancerIP) ( not .Values.cluster.externalAccess.enabled )) }}
+apiVersion: batch/v1
+kind: Job
+metadata:
+  name: {{ template "redis-cluster.fullname" . }}-cluster-update
+  labels: {{- include "redis-cluster.labels" . | nindent 4 }}
+  annotations:
+    "helm.sh/hook": post-upgrade
+spec:
+  activeDeadlineSeconds: {{ .Values.cluster.initTimeout }}
+  template:
+    spec:
+      containers:
+        - name: trigger
+          image: "{{ template "redis-cluster.image" . }}"
+          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
+          {{- if .Values.containerSecurityContext.enabled }}
+          securityContext:
+            runAsUser: {{ .Values.containerSecurityContext.runAsUser }}
+          {{- end }}
+          command: ['/bin/bash', '-c']
+          args:
+            - |
+              . /opt/bitnami/scripts/libnet.sh
+              . /opt/bitnami/scripts/libos.sh
+              {{- if .Values.cluster.externalAccess.enabled }}
+              for nodeIp in $(echo "{{ .Values.cluster.update.newExternalIPs }}" | cut -d [ -f2 | cut -d ] -f 1 ); do
+                while [[ $(redis-cli -h "$nodeIp" -p "$REDIS_PORT" ping) != 'PONG' ]]; do
+                  echo "Node $nodeIp not ready, waiting for all the nodes to be ready..."
+                  sleep 5
+                done
+                redis-cli --cluster add-node "${nodeIp}:${REDIS_PORT}" "{{ index .Values.cluster.externalAccess.service.loadBalancerIP 0 }}:${REDIS_PORT}"
+              done
+              {{- else }}
+              for node in $(seq $((1+{{ .Values.cluster.update.currentNumberOfNodes }})) {{ .Values.cluster.nodes }}); do
+                new_node_index="$(($node - 1))"
+                new_node_ip=$(wait_for_dns_lookup {{ template "redis-cluster.fullname" . }}-"$new_node_index".{{ template "redis-cluster.fullname" . }}-headless 120 5)
+                while [[ $(redis-cli -h "$new_node_ip" -p "$REDIS_PORT" ping) != 'PONG' ]]; do
+                  echo "Node $new_node_ip not ready, waiting for all the nodes to be ready..."
+                  sleep 5
+                done
+                firstNodeIp=$(wait_for_dns_lookup {{ template "redis-cluster.fullname" . }}-0.{{ template "redis-cluster.fullname" . }}-headless 120 5)
+                redis-cli --cluster add-node "${new_node_ip}:${REDIS_PORT}" "${firstNodeIp}:${REDIS_PORT}"
+              done
+              {{- end }}
+          env:
+            {{- if .Values.cluster.externalAccess.enabled }}
+            - name: REDIS_PORT
+              value: {{ .Values.cluster.externalAccess.service.port | quote }}
+            {{- else }}
+            - name: REDIS_PORT
+              value: {{ .Values.redisPort | quote }}
+            {{- end }}
+            {{- if .Values.usePassword }}
+            - name: REDISCLI_AUTH
+              valueFrom:
+                secretKeyRef:
+                  name: {{ template "redis-cluster.secretName" . }}
+                  key: {{ template "redis-cluster.secretPasswordKey" . }}
+            {{- end }}
+      restartPolicy: OnFailure
+{{- end }}
diff --git a/bitnami/redis-cluster/values-production.yaml b/bitnami/redis-cluster/values-production.yaml
new file mode 100644
index 0000000000..fb7bab2973
--- /dev/null
+++ b/bitnami/redis-cluster/values-production.yaml
@@ -0,0 +1,485 @@
+## Global Docker image parameters
+## Please, note that this will override the image parameters, including dependencies, configured to use the global value
+## Current available global Docker image parameters: imageRegistry and imagePullSecrets
+##
+global:
+  #   imageRegistry: myRegistryName
+  #   imagePullSecrets:
+  #     - myRegistryKeySecretName
+  #   storageClass: myStorageClass
+  redis: {}
+
+## Bitnami Redis image version
+## ref: https://hub.docker.com/r/bitnami/redis/tags/
+##
+image:
+  registry: docker.io
+  repository: bitnami/redis-cluster
+  ## Bitnami Redis image tag
+  ## ref: https://github.com/bitnami/bitnami-docker-redis#supported-tags-and-respective-dockerfile-links
+  ##
+  tag: 5.0.8-debian-10-r0
+  ## Specify a imagePullPolicy
+  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
+  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
+  ##
+  pullPolicy: IfNotPresent
+  ## Optionally specify an array of imagePullSecrets.
+  ## Secrets must be manually created in the namespace.
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+  ##
+  # pullSecrets:
+  #   - myRegistryKeySecretName
+
+## String to partially override redis.fullname template (will maintain the release name)
+##
+# nameOverride:
+
+## String to fully override redis.fullname template
+##
+# fullnameOverride:
+
+## Redis Cluster settings
+##
+cluster:
+  ## Enable the creation of a Job that will execute the proper command to create the Redis Cluster.
+  ##
+  init: true
+  ## Number of seconds the Job to create the cluster will be waiting for the Nodes to be ready.
+  ##
+  activeDeadlineSeconds: 600
+  ## Number of Redis nodes to be deployed
+  ##
+  nodes: 6
+  ## Parameter to be passed as --cluster-replicas to the redic-cli --cluster create
+  ## 1 means that we want a replica for every master created
+  ##
+  replicas: 1
+  ## The busPort should be obtained adding 10000 to the redisPort. By default: 10000 + 6379 = 16379
+  ##
+  busPort: 16379
+
+  ## Configuration to access the Redis Cluster from outside the Kubernetes cluster
+  externalAccess:
+    enabled: false
+    service:
+      ## Type of service for external access. At this moment only LoadBalancer is supported.
+      ##
+      type: LoadBalancer
+      ## Port used when service type is LoadBalancer
+      ##
+      port: 6379
+      ## Array of load balancer IPs for each Redis node. Length must be the same as cluster.nodes
+      ##
+      loadBalancerIP: []
+      ## Service annotations done as key:value pairs
+      annotations: {}
+
+  ## This section allows to update the Redis cluster nodes.
+  ##
+  update:
+    ## Setting this to true a hook will add nodes to the Redis cluster after the upgrade.
+    ## currentNumberOfNodes is required
+    ##
+    addNodes: false
+    ## Set to the number of nodes that are already deployed
+    ##
+    currentNumberOfNodes: 6
+    ## When using external access set the new externalIPs here as an array
+    ##
+    newExternalIPs: []
+
+## Specifies the Kubernetes Cluster's Domain Name.
+##
+clusterDomain: cluster.local
+
+networkPolicy:
+  ## Specifies whether a NetworkPolicy should be created
+  ##
+  enabled: true
+
+  ## The Policy model to apply. When set to false, only pods with the correct
+  ## client label will have network access to the port Redis is listening
+  ## on. When true, Redis will accept connections from any source
+  ## (with the correct destination port).
+  ##
+  # allowExternal: true
+
+  ## Allow connections from other namespacess. Just set label for namespace and set label for pods (optional).
+  ##
+  ingressNSMatchLabels: {}
+  ingressNSPodMatchLabels: {}
+
+serviceAccount:
+  ## Specifies whether a ServiceAccount should be created
+  ##
+  create: false
+  ## The name of the ServiceAccount to use.
+  ## If not set and create is true, a name is generated using the fullname template
+  name:
+
+rbac:
+  ## Specifies whether RBAC resources should be created
+  ##
+  create: false
+
+  role:
+    ## Rules to create. It follows the role specification
+    # rules:
+    #  - apiGroups:
+    #    - extensions
+    #    resources:
+    #      - podsecuritypolicies
+    #    verbs:
+    #      - use
+    #    resourceNames:
+    #      - gce.unprivileged
+    rules: []
+
+## Redis pod Security Context
+podSecurityContext:
+  enabled: true
+  fsGroup: 1001
+  runAsUser: 1001
+  ## sysctl settings
+  ##
+  ## Uncomment the setting below to increase the net.core.somaxconn value
+  ##
+  # sysctls:
+  # - name: net.core.somaxconn
+  #   value: "10000"
+
+## Containers Security Context
+containerSecurityContext:
+  enabled: true
+  fsGroup: 1001
+  runAsUser: 1001
+  ## sysctl settings
+  ##
+  ## Uncomment the setting below to increase the net.core.somaxconn value
+  ##
+  # sysctls:
+  # - name: net.core.somaxconn
+  #   value: "10000"
+
+## Use password authentication
+usePassword: true
+## Redis password
+## Defaults to a random 10-character alphanumeric string if not set and usePassword is true
+## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run
+##
+password: ""
+## Use existing secret (ignores previous password)
+# existingSecret:
+## Password key to be retrieved from Redis secret
+##
+# existingSecretPasswordKey:
+
+## Mount secrets as files instead of environment variables
+usePasswordFile: false
+
+# Redis port
+redisPort: 6379
+
+##
+## Redis parameters
+##
+
+## Custom command to override image cmd
+##
+# command: []
+
+## Custom args for the cutom commad:
+# args: []
+
+## Additional Redis configuration for the nodes
+## ref: https://redis.io/topics/config
+##
+configmap:
+## Redis additional command line flags
+##
+## Can be used to specify command line flags, for example:
+##
+## extraFlags:
+##  - "--maxmemory-policy volatile-ttl"
+##  - "--repl-backlog-size 1024mb"
+extraFlags: []
+
+## Redis additional annotations
+## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+podAnnotations: {}
+
+## Redis resource requests and limits
+## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+# resources:
+#   requests:
+#     memory: 256Mi
+#     cpu: 100m
+## Use an alternate scheduler, e.g. "stork".
+## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+##
+# schedulerName:
+
+## Configure extra options for Redis liveness and readiness probes
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
+##
+livenessProbe:
+  enabled: true
+  initialDelaySeconds: 5
+  periodSeconds: 5
+  timeoutSeconds: 5
+  successThreshold: 1
+  failureThreshold: 5
+readinessProbe:
+  enabled: true
+  initialDelaySeconds: 5
+  periodSeconds: 5
+  timeoutSeconds: 1
+  successThreshold: 1
+  failureThreshold: 5
+
+## Redis Node selectors and tolerations for pod assignment
+## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
+## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
+##
+# nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
+# tolerations: []
+## Redis pod/node affinity/anti-affinity
+##
+affinity: {}
+
+## Redis Service properties for standalone mode.
+service:
+  port: 6379
+
+  ## Provide any additional annotations which may be required. This can be used to
+  ## set the LoadBalancer service type to internal only.
+  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
+  ##
+  annotations: {}
+  labels: {}
+
+## Enable persistence using Persistent Volume Claims
+## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
+##
+persistence:
+  enabled: true
+  ## The path the volume will be mounted at, useful when using different
+  ## Redis images.
+  path: /bitnami/redis/data
+  ## The subdirectory of the volume to mount to, useful in dev environments
+  ## and one PV for multiple services.
+  subPath: ""
+  ## Redis data Persistent Volume Storage Class
+  ## If defined, storageClassName: <storageClass>
+  ## If set to "-", storageClassName: "", which disables dynamic provisioning
+  ## If undefined (the default) or set to null, no storageClassName spec is
+  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
+  ##   GKE, AWS & OpenStack)
+  ##
+  # storageClass: "-"
+  accessModes:
+    - ReadWriteOnce
+  size: 8Gi
+  ## Persistent Volume selectors
+  ## https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector
+  matchLabels: {}
+  matchExpressions: {}
+
+## Update strategy, can be set to RollingUpdate or onDelete by default.
+## https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
+statefulset:
+  updateStrategy: RollingUpdate
+  ## Partition update strategy
+  ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
+  # rollingUpdatePartition:
+
+## Redis pod priorityClassName
+# priorityClassName: {}
+
+## Prometheus Exporter / Metrics
+##
+metrics:
+  enabled: true
+
+  image:
+    registry: docker.io
+    repository: bitnami/redis-exporter
+    tag: 1.4.0-debian-10-r16
+    pullPolicy: IfNotPresent
+    ## Optionally specify an array of imagePullSecrets.
+    ## Secrets must be manually created in the namespace.
+    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+    ##
+    # pullSecrets:
+    #   - myRegistryKeySecretName
+
+  ## Metrics exporter resource requests and limits
+  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+  ##
+  # resources: {}
+
+  ## Extra arguments for Metrics exporter, for example:
+  ## extraArgs:
+  ##   check-keys: myKey,myOtherKey
+  # extraArgs: {}
+
+  ## Metrics exporter pod Annotation and Labels
+  podAnnotations:
+    prometheus.io/scrape: "true"
+    prometheus.io/port: "9121"
+  # podLabels: {}
+
+  # Enable this if you're using https://github.com/coreos/prometheus-operator
+  serviceMonitor:
+    enabled: false
+    ## Specify a namespace if needed
+    # namespace: monitoring
+    # fallback to the prometheus default unless specified
+    # interval: 10s
+    ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)
+    ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)
+    ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)
+    selector:
+      prometheus: kube-prometheus
+
+  ## Custom PrometheusRule to be defined
+  ## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
+  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
+  prometheusRule:
+    enabled: false
+    additionalLabels: {}
+    namespace: ""
+    rules: []
+    ## These are just examples rules, please adapt them to your needs.
+    ## Make sure to constraint the rules to the current postgresql service.
+    #  - alert: RedisDown
+    #    expr: redis_up{service="{{ template "redis-cluster.fullname" . }}-metrics"} == 0
+    #    for: 2m
+    #    labels:
+    #      severity: error
+    #    annotations:
+    #      summary: Redis instance {{ "{{ $instance }}" }} down
+    #      description: Redis instance {{ "{{ $instance }}" }} is down.
+    #  - alert: RedisMemoryHigh
+    #    expr: >
+    #       redis_memory_used_bytes{service="{{ template "redis-cluster.fullname" . }}-metrics"} * 100
+    #       /
+    #       redis_memory_max_bytes{service="{{ template "redis-cluster.fullname" . }}-metrics"}
+    #       > 90 =< 100
+    #    for: 2m
+    #    labels:
+    #      severity: error
+    #    annotations:
+    #      summary: Redis instance {{ "{{ $instance }}" }} is using too much memory
+    #      description: Redis instance {{ "{{ $instance }}" }} is using {{ "{{ $value }}" }}% of its available memory.
+    #  - alert: RedisKeyEviction
+    #    expr: increase(redis_evicted_keys_total{service="{{ template "redis-cluster.fullname" . }}-metrics"}[5m]) > 0
+    #    for: 1s
+    #    labels:
+    #      severity: error
+    #    annotations:
+    #      summary: Redis instance {{ "{{ $instance }}" }} has evicted keys
+    #      description: Redis instance {{ "{{ $instance }}" }} has evicted {{ "{{ $value }}" }} keys in the last 5 minutes.
+
+  ## Metrics exporter pod priorityClassName
+  # priorityClassName: {}
+  service:
+    type: ClusterIP
+    ## Use serviceLoadBalancerIP to request a specific static IP,
+    ## otherwise leave blank
+    # loadBalancerIP:
+    annotations: {}
+    labels: {}
+
+##
+## Init containers parameters:
+## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
+##
+volumePermissions:
+  enabled: false
+  image:
+    registry: docker.io
+    repository: bitnami/minideb
+    tag: buster
+    pullPolicy: Always
+    ## Optionally specify an array of imagePullSecrets.
+    ## Secrets must be manually created in the namespace.
+    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+    ##
+    # pullSecrets:
+    #   - myRegistryKeySecretName
+  resources: {}
+  # resources:
+  #   requests:
+  #     memory: 128Mi
+  #     cpu: 100m
+
+## Sysctl InitContainer
+## used to perform sysctl operation to modify Kernel settings (needed sometimes to avoid warnings)
+sysctlImage:
+  enabled: false
+  command: []
+  registry: docker.io
+  repository: bitnami/minideb
+  tag: buster
+  pullPolicy: Always
+  ## Optionally specify an array of imagePullSecrets.
+  ## Secrets must be manually created in the namespace.
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+  ##
+  # pullSecrets:
+  #   - myRegistryKeySecretName
+  mountHostSys: false
+  resources: {}
+  # resources:
+  #   requests:
+  #     memory: 128Mi
+  #     cpu: 100m
+
+## PodSecurityPolicy configuration
+## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
+##
+podSecurityPolicy:
+  ## Specifies whether a PodSecurityPolicy should be created
+  ##
+  create: false
+
+## Array to add extra volumes
+##
+extraVolumes: []
+
+## Array to add extra mounts (normally used with extraVolumes)
+##
+extraVolumeMounts: []
+
+## An array to add extra env vars
+## For example:
+## extraEnvVars:
+##  - name: MY_ENV_VAR
+##    value: env_var_value
+##
+extraEnvVars: []
+
+## Name of a ConfigMap containing extra env vars
+##
+extraEnvVarsConfigMap:
+
+## Name of a Secret containing extra env vars
+##
+extraEnvVarsSecret:
+
+## Add your own init container or uncomment and modify the given example.
+##
+extraInitContainers: {}
+
+## Add sidecars to the pod
+##
+sidecars: {}
+## e.g.
+# - name: your-image-name
+#   image: your-image
+#   imagePullPolicy: Always
+#   ports:
+#     - name: portname
+#       containerPort: 1234
diff --git a/bitnami/redis-cluster/values.yaml b/bitnami/redis-cluster/values.yaml
new file mode 100644
index 0000000000..6a188b6532
--- /dev/null
+++ b/bitnami/redis-cluster/values.yaml
@@ -0,0 +1,485 @@
+## Global Docker image parameters
+## Please, note that this will override the image parameters, including dependencies, configured to use the global value
+## Current available global Docker image parameters: imageRegistry and imagePullSecrets
+##
+global:
+  #   imageRegistry: myRegistryName
+  #   imagePullSecrets:
+  #     - myRegistryKeySecretName
+  #   storageClass: myStorageClass
+  redis: {}
+
+## Bitnami Redis image version
+## ref: https://hub.docker.com/r/bitnami/redis/tags/
+##
+image:
+  registry: docker.io
+  repository: bitnami/redis-cluster
+  ## Bitnami Redis image tag
+  ## ref: https://github.com/bitnami/bitnami-docker-redis#supported-tags-and-respective-dockerfile-links
+  ##
+  tag: 5.0.8-debian-10-r0
+  ## Specify a imagePullPolicy
+  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
+  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
+  ##
+  pullPolicy: IfNotPresent
+  ## Optionally specify an array of imagePullSecrets.
+  ## Secrets must be manually created in the namespace.
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+  ##
+  # pullSecrets:
+  #   - myRegistryKeySecretName
+
+## String to partially override redis.fullname template (will maintain the release name)
+##
+# nameOverride:
+
+## String to fully override redis.fullname template
+##
+# fullnameOverride:
+
+## Redis Cluster settings
+##
+cluster:
+  ## Enable the creation of a Job that will execute the proper command to create the Redis Cluster.
+  ##
+  init: true
+  ## Number of seconds the Job to create the cluster will be waiting for the Nodes to be ready.
+  ##
+  activeDeadlineSeconds: 600
+  ## Number of Redis nodes to be deployed
+  ##
+  nodes: 6
+  ## Parameter to be passed as --cluster-replicas to the redic-cli --cluster create
+  ## 1 means that we want a replica for every master created
+  ##
+  replicas: 1
+  ## The busPort should be obtained adding 10000 to the redisPort. By default: 10000 + 6379 = 16379
+  ##
+  busPort: 16379
+
+  ## Configuration to access the Redis Cluster from outside the Kubernetes cluster
+  externalAccess:
+    enabled: false
+    service:
+      ## Type of service for external access. At this moment only LoadBalancer is supported.
+      ##
+      type: LoadBalancer
+      ## Port used when service type is LoadBalancer
+      ##
+      port: 6379
+      ## Array of load balancer IPs for each Redis node. Length must be the same as cluster.nodes
+      ##
+      loadBalancerIP: []
+      ## Service annotations done as key:value pairs
+      annotations: {}
+
+  ## This section allows to update the Redis cluster nodes.
+  ##
+  update:
+    ## Setting this to true a hook will add nodes to the Redis cluster after the upgrade.
+    ## currentNumberOfNodes is required
+    ##
+    addNodes: false
+    ## Set to the number of nodes that are already deployed
+    ##
+    currentNumberOfNodes: 6
+    ## When using external access set the new externalIPs here as an array
+    ##
+    newExternalIPs: []
+
+## Specifies the Kubernetes Cluster's Domain Name.
+##
+clusterDomain: cluster.local
+
+networkPolicy:
+  ## Specifies whether a NetworkPolicy should be created
+  ##
+  enabled: false
+
+  ## The Policy model to apply. When set to false, only pods with the correct
+  ## client label will have network access to the port Redis is listening
+  ## on. When true, Redis will accept connections from any source
+  ## (with the correct destination port).
+  ##
+  # allowExternal: true
+
+  ## Allow connections from other namespacess. Just set label for namespace and set label for pods (optional).
+  ##
+  ingressNSMatchLabels: {}
+  ingressNSPodMatchLabels: {}
+
+serviceAccount:
+  ## Specifies whether a ServiceAccount should be created
+  ##
+  create: false
+  ## The name of the ServiceAccount to use.
+  ## If not set and create is true, a name is generated using the fullname template
+  name:
+
+rbac:
+  ## Specifies whether RBAC resources should be created
+  ##
+  create: false
+
+  role:
+    ## Rules to create. It follows the role specification
+    # rules:
+    #  - apiGroups:
+    #    - extensions
+    #    resources:
+    #      - podsecuritypolicies
+    #    verbs:
+    #      - use
+    #    resourceNames:
+    #      - gce.unprivileged
+    rules: []
+
+## Redis pod Security Context
+podSecurityContext:
+  enabled: true
+  fsGroup: 1001
+  runAsUser: 1001
+  ## sysctl settings
+  ##
+  ## Uncomment the setting below to increase the net.core.somaxconn value
+  ##
+  # sysctls:
+  # - name: net.core.somaxconn
+  #   value: "10000"
+
+## Containers Security Context
+containerSecurityContext:
+  enabled: true
+  fsGroup: 1001
+  runAsUser: 1001
+  ## sysctl settings
+  ##
+  ## Uncomment the setting below to increase the net.core.somaxconn value
+  ##
+  # sysctls:
+  # - name: net.core.somaxconn
+  #   value: "10000"
+
+## Use password authentication
+usePassword: true
+## Redis password
+## Defaults to a random 10-character alphanumeric string if not set and usePassword is true
+## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run
+##
+password: ""
+## Use existing secret (ignores previous password)
+# existingSecret:
+## Password key to be retrieved from Redis secret
+##
+# existingSecretPasswordKey:
+
+## Mount secrets as files instead of environment variables
+usePasswordFile: false
+
+# Redis port
+redisPort: 6379
+
+##
+## Redis parameters
+##
+
+## Custom command to override image cmd
+##
+# command: []
+
+## Custom args for the cutom commad:
+# args: []
+
+## Additional Redis configuration for the nodes
+## ref: https://redis.io/topics/config
+##
+configmap:
+## Redis additional command line flags
+##
+## Can be used to specify command line flags, for example:
+##
+## extraFlags:
+##  - "--maxmemory-policy volatile-ttl"
+##  - "--repl-backlog-size 1024mb"
+extraFlags: []
+
+## Redis additional annotations
+## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+podAnnotations: {}
+
+## Redis resource requests and limits
+## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+# resources:
+#   requests:
+#     memory: 256Mi
+#     cpu: 100m
+## Use an alternate scheduler, e.g. "stork".
+## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+##
+# schedulerName:
+
+## Configure extra options for Redis liveness and readiness probes
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
+##
+livenessProbe:
+  enabled: true
+  initialDelaySeconds: 5
+  periodSeconds: 5
+  timeoutSeconds: 5
+  successThreshold: 1
+  failureThreshold: 5
+readinessProbe:
+  enabled: true
+  initialDelaySeconds: 5
+  periodSeconds: 5
+  timeoutSeconds: 1
+  successThreshold: 1
+  failureThreshold: 5
+
+## Redis Node selectors and tolerations for pod assignment
+## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
+## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
+##
+# nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
+# tolerations: []
+## Redis pod/node affinity/anti-affinity
+##
+affinity: {}
+
+## Redis Service properties for standalone mode.
+service:
+  port: 6379
+
+  ## Provide any additional annotations which may be required. This can be used to
+  ## set the LoadBalancer service type to internal only.
+  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
+  ##
+  annotations: {}
+  labels: {}
+
+## Enable persistence using Persistent Volume Claims
+## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
+##
+persistence:
+  enabled: true
+  ## The path the volume will be mounted at, useful when using different
+  ## Redis images.
+  path: /bitnami/redis/data
+  ## The subdirectory of the volume to mount to, useful in dev environments
+  ## and one PV for multiple services.
+  subPath: ""
+  ## Redis data Persistent Volume Storage Class
+  ## If defined, storageClassName: <storageClass>
+  ## If set to "-", storageClassName: "", which disables dynamic provisioning
+  ## If undefined (the default) or set to null, no storageClassName spec is
+  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
+  ##   GKE, AWS & OpenStack)
+  ##
+  # storageClass: "-"
+  accessModes:
+    - ReadWriteOnce
+  size: 8Gi
+  ## Persistent Volume selectors
+  ## https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector
+  matchLabels: {}
+  matchExpressions: {}
+
+## Update strategy, can be set to RollingUpdate or onDelete by default.
+## https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
+statefulset:
+  updateStrategy: RollingUpdate
+  ## Partition update strategy
+  ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
+  # rollingUpdatePartition:
+
+## Redis pod priorityClassName
+# priorityClassName: {}
+
+## Prometheus Exporter / Metrics
+##
+metrics:
+  enabled: false
+
+  image:
+    registry: docker.io
+    repository: bitnami/redis-exporter
+    tag: 1.4.0-debian-10-r16
+    pullPolicy: IfNotPresent
+    ## Optionally specify an array of imagePullSecrets.
+    ## Secrets must be manually created in the namespace.
+    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+    ##
+    # pullSecrets:
+    #   - myRegistryKeySecretName
+
+  ## Metrics exporter resource requests and limits
+  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+  ##
+  # resources: {}
+
+  ## Extra arguments for Metrics exporter, for example:
+  ## extraArgs:
+  ##   check-keys: myKey,myOtherKey
+  # extraArgs: {}
+
+  ## Metrics exporter pod Annotation and Labels
+  podAnnotations:
+    prometheus.io/scrape: "true"
+    prometheus.io/port: "9121"
+  # podLabels: {}
+
+  # Enable this if you're using https://github.com/coreos/prometheus-operator
+  serviceMonitor:
+    enabled: false
+    ## Specify a namespace if needed
+    # namespace: monitoring
+    # fallback to the prometheus default unless specified
+    # interval: 10s
+    ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)
+    ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)
+    ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)
+    selector:
+      prometheus: kube-prometheus
+
+  ## Custom PrometheusRule to be defined
+  ## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
+  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
+  prometheusRule:
+    enabled: false
+    additionalLabels: {}
+    namespace: ""
+    rules: []
+    ## These are just examples rules, please adapt them to your needs.
+    ## Make sure to constraint the rules to the current postgresql service.
+    #  - alert: RedisDown
+    #    expr: redis_up{service="{{ template "redis-cluster.fullname" . }}-metrics"} == 0
+    #    for: 2m
+    #    labels:
+    #      severity: error
+    #    annotations:
+    #      summary: Redis instance {{ "{{ $instance }}" }} down
+    #      description: Redis instance {{ "{{ $instance }}" }} is down.
+    #  - alert: RedisMemoryHigh
+    #    expr: >
+    #       redis_memory_used_bytes{service="{{ template "redis-cluster.fullname" . }}-metrics"} * 100
+    #       /
+    #       redis_memory_max_bytes{service="{{ template "redis-cluster.fullname" . }}-metrics"}
+    #       > 90 =< 100
+    #    for: 2m
+    #    labels:
+    #      severity: error
+    #    annotations:
+    #      summary: Redis instance {{ "{{ $instance }}" }} is using too much memory
+    #      description: Redis instance {{ "{{ $instance }}" }} is using {{ "{{ $value }}" }}% of its available memory.
+    #  - alert: RedisKeyEviction
+    #    expr: increase(redis_evicted_keys_total{service="{{ template "redis-cluster.fullname" . }}-metrics"}[5m]) > 0
+    #    for: 1s
+    #    labels:
+    #      severity: error
+    #    annotations:
+    #      summary: Redis instance {{ "{{ $instance }}" }} has evicted keys
+    #      description: Redis instance {{ "{{ $instance }}" }} has evicted {{ "{{ $value }}" }} keys in the last 5 minutes.
+
+  ## Metrics exporter pod priorityClassName
+  # priorityClassName: {}
+  service:
+    type: ClusterIP
+    ## Use serviceLoadBalancerIP to request a specific static IP,
+    ## otherwise leave blank
+    # loadBalancerIP:
+    annotations: {}
+    labels: {}
+
+##
+## Init containers parameters:
+## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
+##
+volumePermissions:
+  enabled: false
+  image:
+    registry: docker.io
+    repository: bitnami/minideb
+    tag: buster
+    pullPolicy: Always
+    ## Optionally specify an array of imagePullSecrets.
+    ## Secrets must be manually created in the namespace.
+    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+    ##
+    # pullSecrets:
+    #   - myRegistryKeySecretName
+  resources: {}
+  # resources:
+  #   requests:
+  #     memory: 128Mi
+  #     cpu: 100m
+
+## Sysctl InitContainer
+## used to perform sysctl operation to modify Kernel settings (needed sometimes to avoid warnings)
+sysctlImage:
+  enabled: false
+  command: []
+  registry: docker.io
+  repository: bitnami/minideb
+  tag: buster
+  pullPolicy: Always
+  ## Optionally specify an array of imagePullSecrets.
+  ## Secrets must be manually created in the namespace.
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+  ##
+  # pullSecrets:
+  #   - myRegistryKeySecretName
+  mountHostSys: false
+  resources: {}
+  # resources:
+  #   requests:
+  #     memory: 128Mi
+  #     cpu: 100m
+
+## PodSecurityPolicy configuration
+## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
+##
+podSecurityPolicy:
+  ## Specifies whether a PodSecurityPolicy should be created
+  ##
+  create: false
+
+## Array to add extra volumes
+##
+extraVolumes: []
+
+## Array to add extra mounts (normally used with extraVolumes)
+##
+extraVolumeMounts: []
+
+## An array to add extra env vars
+## For example:
+## extraEnvVars:
+##  - name: MY_ENV_VAR
+##    value: env_var_value
+##
+extraEnvVars: []
+
+## Name of a ConfigMap containing extra env vars
+##
+extraEnvVarsConfigMap:
+
+## Name of a Secret containing extra env vars
+##
+extraEnvVarsSecret:
+
+## Add your own init container or uncomment and modify the given example.
+##
+extraInitContainers: {}
+
+## Add sidecars to the pod
+##
+sidecars: {}
+## e.g.
+# - name: your-image-name
+#   image: your-image
+#   imagePullPolicy: Always
+#   ports:
+#     - name: portname
+#       containerPort: 1234
