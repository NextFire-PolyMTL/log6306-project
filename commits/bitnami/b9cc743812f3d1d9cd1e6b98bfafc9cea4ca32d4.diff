commit b9cc743812f3d1d9cd1e6b98bfafc9cea4ca32d4
Author: Mitch Hulscher <mitch.hulscher@lib.io>
Date:   Tue Nov 24 13:38:39 2020 +0100

    [bitnami/thanos] rename querier component to query (#4307)
    
    * refactor(thanos): rename querier component to query
    
    * refactor(thanos): add support for keys under .Values.querier

diff --git a/bitnami/thanos/Chart.yaml b/bitnami/thanos/Chart.yaml
index 8fbc61c9cf..0b160d45cb 100644
--- a/bitnami/thanos/Chart.yaml
+++ b/bitnami/thanos/Chart.yaml
@@ -23,4 +23,4 @@ name: thanos
 sources:
   - https://github.com/bitnami/bitnami-docker-thanos
   - https://thanos.io
-version: 3.0.1
+version: 3.1.0
diff --git a/bitnami/thanos/README.md b/bitnami/thanos/README.md
index af1b62069d..8c82b296ba 100644
--- a/bitnami/thanos/README.md
+++ b/bitnami/thanos/README.md
@@ -106,87 +106,87 @@ The following tables lists the configurable parameters of the Thanos chart and t
 | `existingObjstoreSecretItems`                        | List of Secret Keys and Paths                                                                          | `[]`                                                    |
 | `existingServiceAccount`                             | Name for the existing service account to be shared between the components                              | `nil`                                                   |
 
-### Thanos Querier parameters
+### Thanos Query parameters
 
 | Parameter                                       | Description                                                                                            | Default                                                 |
 |-------------------------------------------------|--------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
-| `querier.enabled`                               | Enable/disable Thanos Querier component                                                                | `true`                                                  |
-| `querier.logLevel`                              | Thanos Querier log level                                                                               | `info`                                                  |
-| `querier.replicaLabel`                          | Replica indicator(s) along which data is deduplicated                                                  | `[replica]`                                             |
-| `querier.dnsDiscovery.enabled`                  | Enable store APIs discovery via DNS                                                                    | `true`                                                  |
-| `querier.dnsDiscovery.sidecarsService`          | Sidecars service name to discover them using DNS discovery                                             | `nil` (evaluated as a template)                         |
-| `querier.dnsDiscovery.sidecarsNamespace`        | Sidecars namespace to discover them using DNS discovery                                                | `nil` (evaluated as a template)                         |
-| `querier.stores`                                | Store APIs to connect with Thanos Querier                                                              | `[]`                                                    |
-| `querier.sdConfig`                              | Service Discovery configuration                                                                        | `nil`                                                   |
-| `querier.existingSDConfigmap`                   | Name of existing ConfigMap with Ruler configuration                                                    | `nil`                                                   |
-| `querier.extraFlags`                            | Extra Flags to passed to Thanos Querier                                                                | `[]`                                                    |
-| `querier.replicaCount`                          | Number of Thanos Querier replicas to deploy                                                            | `1`                                                     |
-| `querier.strategyType`                          | Deployment Strategy Type                                                                               | `RollingUpdate`                                         |
-| `querier.affinity`                              | Affinity for pod assignment                                                                            | `{}` (evaluated as a template)                          |
-| `querier.nodeSelector`                          | Node labels for pod assignment                                                                         | `{}` (evaluated as a template)                          |
-| `querier.tolerations`                           | Tolerations for pod assignment                                                                         | `[]` (evaluated as a template)                          |
-| `querier.priorityClassName`                     | Controller priorityClassName                                                                           | `nil`                                                   |
-| `querier.securityContext.enabled`               | Enable security context for Thanos Querier pods                                                        | `true`                                                  |
-| `querier.securityContext.fsGroup`               | Group ID for the Thanos Querier filesystem                                                             | `1001`                                                  |
-| `querier.securityContext.runAsUser`             | User ID for the Thanos Querier container                                                               | `1001`                                                  |
-| `querier.resources.limits`                      | The resources limits for the Thanos Querier container                                                  | `{}`                                                    |
-| `querier.resources.requests`                    | The requested resources for the Thanos Querier container                                               | `{}`                                                    |
-| `querier.podAnnotations`                        | Annotations for Thanos Querier pods                                                                    | `{}`                                                    |
-| `querier.livenessProbe`                         | Liveness probe configuration for Thanos Querier                                                        | `Check values.yaml file`                                |
-| `querier.readinessProbe`                        | Readiness probe configuration for Thanos Querier                                                       | `Check values.yaml file`                                |
-| `querier.grpcTLS.server.secure`                 | Enable TLS for GRPC server                                                                             | `false`                                                 |
-| `querier.grpcTLS.server.cert`                   | TLS Certificate for gRPC server                                                                        | `nil`                                                   |
-| `querier.grpcTLS.server.key`                    | TLS Key for gRPC server                                                                                | `nil`                                                   |
-| `querier.grpcTLS.server.ca`                     | TLS client CA for gRPC server used for client verification purposes on the server                      | `nil`                                                   |
-| `querier.grpcTLS.client.secure`                 | Use TLS when talking to the gRPC server                                                                | `false`                                                 |
-| `querier.grpcTLS.client.cert`                   | TLS Certificates to use to identify this client to the server                                          | `nil`                                                   |
-| `querier.grpcTLS.client.key`                    | TLS Key for the client's certificate                                                                   | `nil`                                                   |
-| `querier.grpcTLS.client.ca`                     | TLS CA Certificates to use to verify gRPC servers                                                      | `nil`                                                   |
-| `querier.grpcTLS.client.servername`             | Server name to verify the hostname on the returned gRPC certificates.                                  | `nil`                                                   |
-| `querier.service.type`                          | Kubernetes service type                                                                                | `ClusterIP`                                             |
-| `querier.service.clusterIP`                     | Thanos Querier service clusterIP IP                                                                    | `None`                                                  |
-| `querier.service.http.port`                     | Service HTTP port                                                                                      | `9090`                                                  |
-| `querier.service.http.nodePort`                 | Service HTTP node port                                                                                 | `nil`                                                   |
-| `querier.service.grpc.port`                     | Service GRPC port                                                                                      | `10901`                                                 |
-| `querier.service.grpc.nodePort`                 | Service GRPC node port                                                                                 | `nil`                                                   |
-| `querier.service.loadBalancerIP`                | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                                   |
-| `querier.service.loadBalancerSourceRanges`      | Address that are allowed when service is LoadBalancer                                                  | `[]`                                                    |
-| `querier.service.annotations`                   | Annotations for Thanos Querier service                                                                 | `{}`                                                    |
-| `querier.service.labelSelectorsOverride`        | Selector for Thanos querier service                                                                    | `{}`                                                    |
-| `querier.serviceAccount.annotations`            | Annotations for Thanos Querier Service Account                                                         | `{}`                                                    |
-| `querier.rbac.create`                           | Create RBAC                                                                                            | `false`                                                 |
-| `querier.pspEnabled`                            | Create PodSecurityPolicy                                                                               | `false`                                                 |
-| `querier.autoscaling.enabled`                   | Enable autoscaling for Thanos Querier                                                                  | `false`                                                 |
-| `querier.autoscaling.minReplicas`               | Minimum number of Thanos Querier replicas                                                              | `nil`                                                   |
-| `querier.autoscaling.maxReplicas`               | Maximum number of Thanos Querier replicas                                                              | `nil`                                                   |
-| `querier.autoscaling.targetCPU`                 | Target CPU utilization percentage                                                                      | `nil`                                                   |
-| `querier.autoscaling.targetMemory`              | Target Memory utilization percentage                                                                   | `nil`                                                   |
-| `querier.pdb.create`                            | Enable/disable a Pod Disruption Budget creation                                                        | `false`                                                 |
-| `querier.pdb.minAvailable`                      | Minimum number/percentage of pods that should remain scheduled                                         | `1`                                                     |
-| `querier.pdb.maxUnavailable`                    | Maximum number/percentage of pods that may be made unavailable                                         | `nil`                                                   |
-| `querier.ingress.enabled`                       | Enable ingress controller resource                                                                     | `false`                                                 |
-| `querier.ingress.certManager`                   | Add annotations for cert-manager                                                                       | `false`                                                 |
-| `querier.ingress.hostname`                      | Default host for the ingress resource                                                                  | `thanos.local`                                          |
-| `querier.ingress.annotations`                   | Ingress annotations                                                                                    | `[]`                                                    |
-| `querier.ingress.tls`                           | Create ingress TLS section                                                                             | `false`                                                    |
-| `querier.ingress.extraHosts[0].name`            | Additional hostnames to be covered                                                                     | `nil`                                                   |
-| `querier.ingress.extraHosts[0].path`            | Additional hostnames to be covered                                                                     | `nil`                                                   |
-| `querier.ingress.extraTls[0].hosts[0]`          | TLS configuration for additional hostnames to be covered                                               | `nil`                                                   |
-| `querier.ingress.extraTls[0].secretName`        | TLS configuration for additional hostnames to be covered                                               | `nil`                                                   |
-| `querier.ingress.secrets[0].name`               | TLS Secret Name                                                                                        | `nil`                                                   |
-| `querier.ingress.secrets[0].certificate`        | TLS Secret Certificate                                                                                 | `nil`                                                   |
-| `querier.ingress.secrets[0].key`                | TLS Secret Key                                                                                         | `nil`                                                   |
-| `querier.ingress.grpc.enabled`                  | Enable ingress controller resource (GRPC)                                                              | `false`                                                 |
-| `querier.ingress.grpc.certManager`              | Add annotations for cert-manager (GRPC)                                                                | `false`                                                 |
-| `querier.ingress.grpc.hostname`                 | Default host for the ingress resource (GRPC)                                                           | `thanos.local`                                          |
-| `querier.ingress.grpc.annotations`              | Ingress annotations (GRPC)                                                                             | `[]`                                                    |
-| `querier.ingress.grpc.extraHosts[0].name`       | Additional hostnames to be covered (GRPC)                                                              | `nil`                                                   |
-| `querier.ingress.grpc.extraHosts[0].path`       | Additional hostnames to be covered (GRPC)                                                              | `nil`                                                   |
-| `querier.ingress.grpc.extraTls[0].hosts[0]`     | TLS configuration for additional hostnames to be covered (GRPC)                                        | `nil`                                                   |
-| `querier.ingress.grpc.extraTls[0].secretName`   | TLS configuration for additional hostnames to be covered (GRPC)                                        | `nil`                                                   |
-| `querier.ingress.grpc.secrets[0].name`          | TLS Secret Name (GRPC)                                                                                 | `nil`                                                   |
-| `querier.ingress.grpc.secrets[0].certificate`   | TLS Secret Certificate (GRPC)                                                                          | `nil`                                                   |
-| `querier.ingress.grpc.secrets[0].key`           | TLS Secret Key (GRPC)                                                                                  | `nil`                                                   |
+| `query.enabled`                               | Enable/disable Thanos Query component                                                                | `true`                                                  |
+| `query.logLevel`                              | Thanos Query log level                                                                               | `info`                                                  |
+| `query.replicaLabel`                          | Replica indicator(s) along which data is deduplicated                                                  | `[replica]`                                             |
+| `query.dnsDiscovery.enabled`                  | Enable store APIs discovery via DNS                                                                    | `true`                                                  |
+| `query.dnsDiscovery.sidecarsService`          | Sidecars service name to discover them using DNS discovery                                             | `nil` (evaluated as a template)                         |
+| `query.dnsDiscovery.sidecarsNamespace`        | Sidecars namespace to discover them using DNS discovery                                                | `nil` (evaluated as a template)                         |
+| `query.stores`                                | Store APIs to connect with Thanos Query                                                              | `[]`                                                    |
+| `query.sdConfig`                              | Service Discovery configuration                                                                        | `nil`                                                   |
+| `query.existingSDConfigmap`                   | Name of existing ConfigMap with Ruler configuration                                                    | `nil`                                                   |
+| `query.extraFlags`                            | Extra Flags to passed to Thanos Query                                                                | `[]`                                                    |
+| `query.replicaCount`                          | Number of Thanos Query replicas to deploy                                                            | `1`                                                     |
+| `query.strategyType`                          | Deployment Strategy Type                                                                               | `RollingUpdate`                                         |
+| `query.affinity`                              | Affinity for pod assignment                                                                            | `{}` (evaluated as a template)                          |
+| `query.nodeSelector`                          | Node labels for pod assignment                                                                         | `{}` (evaluated as a template)                          |
+| `query.tolerations`                           | Tolerations for pod assignment                                                                         | `[]` (evaluated as a template)                          |
+| `query.priorityClassName`                     | Controller priorityClassName                                                                           | `nil`                                                   |
+| `query.securityContext.enabled`               | Enable security context for Thanos Query pods                                                        | `true`                                                  |
+| `query.securityContext.fsGroup`               | Group ID for the Thanos Query filesystem                                                             | `1001`                                                  |
+| `query.securityContext.runAsUser`             | User ID for the Thanos Query container                                                               | `1001`                                                  |
+| `query.resources.limits`                      | The resources limits for the Thanos Query container                                                  | `{}`                                                    |
+| `query.resources.requests`                    | The requested resources for the Thanos Query container                                               | `{}`                                                    |
+| `query.podAnnotations`                        | Annotations for Thanos Query pods                                                                    | `{}`                                                    |
+| `query.livenessProbe`                         | Liveness probe configuration for Thanos Query                                                        | `Check values.yaml file`                                |
+| `query.readinessProbe`                        | Readiness probe configuration for Thanos Query                                                       | `Check values.yaml file`                                |
+| `query.grpcTLS.server.secure`                 | Enable TLS for GRPC server                                                                             | `false`                                                 |
+| `query.grpcTLS.server.cert`                   | TLS Certificate for gRPC server                                                                        | `nil`                                                   |
+| `query.grpcTLS.server.key`                    | TLS Key for gRPC server                                                                                | `nil`                                                   |
+| `query.grpcTLS.server.ca`                     | TLS client CA for gRPC server used for client verification purposes on the server                      | `nil`                                                   |
+| `query.grpcTLS.client.secure`                 | Use TLS when talking to the gRPC server                                                                | `false`                                                 |
+| `query.grpcTLS.client.cert`                   | TLS Certificates to use to identify this client to the server                                          | `nil`                                                   |
+| `query.grpcTLS.client.key`                    | TLS Key for the client's certificate                                                                   | `nil`                                                   |
+| `query.grpcTLS.client.ca`                     | TLS CA Certificates to use to verify gRPC servers                                                      | `nil`                                                   |
+| `query.grpcTLS.client.servername`             | Server name to verify the hostname on the returned gRPC certificates.                                  | `nil`                                                   |
+| `query.service.type`                          | Kubernetes service type                                                                                | `ClusterIP`                                             |
+| `query.service.clusterIP`                     | Thanos Query service clusterIP IP                                                                    | `None`                                                  |
+| `query.service.http.port`                     | Service HTTP port                                                                                      | `9090`                                                  |
+| `query.service.http.nodePort`                 | Service HTTP node port                                                                                 | `nil`                                                   |
+| `query.service.grpc.port`                     | Service GRPC port                                                                                      | `10901`                                                 |
+| `query.service.grpc.nodePort`                 | Service GRPC node port                                                                                 | `nil`                                                   |
+| `query.service.loadBalancerIP`                | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                                   |
+| `query.service.loadBalancerSourceRanges`      | Address that are allowed when service is LoadBalancer                                                  | `[]`                                                    |
+| `query.service.annotations`                   | Annotations for Thanos Query service                                                                 | `{}`                                                    |
+| `query.service.labelSelectorsOverride`        | Selector for Thanos query service                                                                    | `{}`                                                    |
+| `query.serviceAccount.annotations`            | Annotations for Thanos Query Service Account                                                         | `{}`                                                    |
+| `query.rbac.create`                           | Create RBAC                                                                                            | `false`                                                 |
+| `query.pspEnabled`                            | Create PodSecurityPolicy                                                                               | `false`                                                 |
+| `query.autoscaling.enabled`                   | Enable autoscaling for Thanos Query                                                                  | `false`                                                 |
+| `query.autoscaling.minReplicas`               | Minimum number of Thanos Query replicas                                                              | `nil`                                                   |
+| `query.autoscaling.maxReplicas`               | Maximum number of Thanos Query replicas                                                              | `nil`                                                   |
+| `query.autoscaling.targetCPU`                 | Target CPU utilization percentage                                                                      | `nil`                                                   |
+| `query.autoscaling.targetMemory`              | Target Memory utilization percentage                                                                   | `nil`                                                   |
+| `query.pdb.create`                            | Enable/disable a Pod Disruption Budget creation                                                        | `false`                                                 |
+| `query.pdb.minAvailable`                      | Minimum number/percentage of pods that should remain scheduled                                         | `1`                                                     |
+| `query.pdb.maxUnavailable`                    | Maximum number/percentage of pods that may be made unavailable                                         | `nil`                                                   |
+| `query.ingress.enabled`                       | Enable ingress controller resource                                                                     | `false`                                                 |
+| `query.ingress.certManager`                   | Add annotations for cert-manager                                                                       | `false`                                                 |
+| `query.ingress.hostname`                      | Default host for the ingress resource                                                                  | `thanos.local`                                          |
+| `query.ingress.annotations`                   | Ingress annotations                                                                                    | `[]`                                                    |
+| `query.ingress.tls`                           | Create ingress TLS section                                                                             | `false`                                                    |
+| `query.ingress.extraHosts[0].name`            | Additional hostnames to be covered                                                                     | `nil`                                                   |
+| `query.ingress.extraHosts[0].path`            | Additional hostnames to be covered                                                                     | `nil`                                                   |
+| `query.ingress.extraTls[0].hosts[0]`          | TLS configuration for additional hostnames to be covered                                               | `nil`                                                   |
+| `query.ingress.extraTls[0].secretName`        | TLS configuration for additional hostnames to be covered                                               | `nil`                                                   |
+| `query.ingress.secrets[0].name`               | TLS Secret Name                                                                                        | `nil`                                                   |
+| `query.ingress.secrets[0].certificate`        | TLS Secret Certificate                                                                                 | `nil`                                                   |
+| `query.ingress.secrets[0].key`                | TLS Secret Key                                                                                         | `nil`                                                   |
+| `query.ingress.grpc.enabled`                  | Enable ingress controller resource (GRPC)                                                              | `false`                                                 |
+| `query.ingress.grpc.certManager`              | Add annotations for cert-manager (GRPC)                                                                | `false`                                                 |
+| `query.ingress.grpc.hostname`                 | Default host for the ingress resource (GRPC)                                                           | `thanos.local`                                          |
+| `query.ingress.grpc.annotations`              | Ingress annotations (GRPC)                                                                             | `[]`                                                    |
+| `query.ingress.grpc.extraHosts[0].name`       | Additional hostnames to be covered (GRPC)                                                              | `nil`                                                   |
+| `query.ingress.grpc.extraHosts[0].path`       | Additional hostnames to be covered (GRPC)                                                              | `nil`                                                   |
+| `query.ingress.grpc.extraTls[0].hosts[0]`     | TLS configuration for additional hostnames to be covered (GRPC)                                        | `nil`                                                   |
+| `query.ingress.grpc.extraTls[0].secretName`   | TLS configuration for additional hostnames to be covered (GRPC)                                        | `nil`                                                   |
+| `query.ingress.grpc.secrets[0].name`          | TLS Secret Name (GRPC)                                                                                 | `nil`                                                   |
+| `query.ingress.grpc.secrets[0].certificate`   | TLS Secret Certificate (GRPC)                                                                          | `nil`                                                   |
+| `query.ingress.grpc.secrets[0].key`           | TLS Secret Key (GRPC)                                                                                  | `nil`                                                   |
 
 ### Thanos Query Frontend parameters
 
@@ -218,7 +218,7 @@ The following tables lists the configurable parameters of the Thanos chart and t
 | `queryFrontend.service.loadBalancerIP`          | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                                   |
 | `queryFrontend.service.loadBalancerSourceRanges`| Address that are allowed when service is LoadBalancer                                                  | `[]`                                                    |
 | `queryFrontend.service.annotations`             | Annotations for Thanos Query Frontend service                                                          | `{}`                                                    |
-| `queryFrontend.service.labelSelectorsOverride`  | Selector for Thanos querier service                                                                    | `{}`                                                    |
+| `queryFrontend.service.labelSelectorsOverride`  | Selector for Thanos query service                                                                    | `{}`                                                    |
 | `queryFrontend.serviceAccount.annotations`      | Annotations for Thanos Query Frontend Service Account                                                  | `{}`                                                    |
 | `queryFrontend.rbac.create`                     | Create RBAC                                                                                            | `false`                                                 |
 | `queryFrontend.pspEnabled`                      | Create PodSecurityPolicy                                                                               | `false`                                                 |
@@ -272,7 +272,7 @@ The following tables lists the configurable parameters of the Thanos chart and t
 | `bucketweb.service.loadBalancerIP`                   | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                                   |
 | `bucketweb.service.loadBalancerSourceRanges`         | Address that are allowed when service is LoadBalancer                                                  | `[]`                                                    |
 | `bucketweb.service.annotations`                      | Annotations for Thanos Bucket Web service                                                              | `{}`                                                    |
-| `bucketweb.service.labelSelectorsOverride`           | Selector for Thanos querier service                                                                    | `{}`                                                    |
+| `bucketweb.service.labelSelectorsOverride`           | Selector for Thanos query service                                                                    | `{}`                                                    |
 | `bucketweb.serviceAccount.annotations`               | Annotations for Thanos Bucket Web Service Account                                                      | `{}`                                                    |
 | `bucketweb.serviceAccount.existingServiceAccount`    | Name for an existing Thanos Bucket Web Service Account                                                 | `nil`                                                   |
 | `bucketweb.pdb.create`                               | Enable/disable a Pod Disruption Budget creation                                                        | `false`                                                 |
@@ -322,7 +322,7 @@ The following tables lists the configurable parameters of the Thanos chart and t
 | `compactor.service.loadBalancerIP`                   | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                                   |
 | `compactor.service.loadBalancerSourceRanges`         | Address that are allowed when service is LoadBalancer                                                  | `[]`                                                    |
 | `compactor.service.annotations`                      | Annotations for Thanos Compactor service                                                               | `{}`                                                    |
-| `compactor.service.labelSelectorsOverride`          | Selector for Thanos querier service                                                                    | `{}`                                                    |
+| `compactor.service.labelSelectorsOverride`          | Selector for Thanos query service                                                                    | `{}`                                                    |
 | `compactor.serviceAccount.annotations`               | Annotations for Thanos Compactor Service Account                                                       | `{}`                                                    |
 | `compactor.serviceAccount.existingServiceAccount`    | Name for an existing Thanos Compactor Service Account                                                  | `nil`                                                   |
 | `compactor.persistence.enabled`                      | Enable data persistence                                                                                | `true`                                                  |
@@ -364,7 +364,7 @@ The following tables lists the configurable parameters of the Thanos chart and t
 | `storegateway.service.loadBalancerIP`                | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                                   |
 | `storegateway.service.loadBalancerSourceRanges`      | Address that are allowed when service is LoadBalancer                                                  | `[]`                                                    |
 | `storegateway.service.annotations`                   | Annotations for Thanos Store Gateway service                                                           | `{}`                                                    |
-| `storegateway.service.labelSelectorsOverride`        | Selector for Thanos querier service                                                                    | `{}`                                                    |
+| `storegateway.service.labelSelectorsOverride`        | Selector for Thanos query service                                                                    | `{}`                                                    |
 | `storegateway.service.additionalHeadless`            | Additional Headless service                                                                            | `false`                                                 |
 | `storegateway.serviceAccount.annotations`            | Annotations for Thanos Store Gateway Service Account                                                   | `{}`                                                    |
 | `storegateway.serviceAccount.existingServiceAccount` | Name for an existing Thanos Store Gateway Service Account                                              | `nil`                                                   |
@@ -388,7 +388,7 @@ The following tables lists the configurable parameters of the Thanos chart and t
 |------------------------------------------------------|--------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
 | `ruler.enabled`                                      | Enable/disable Thanos Ruler component                                                                  | `false`                                                 |
 | `ruler.logLevel`                                     | Thanos Ruler log level                                                                                 | `info`                                                  |
-| `ruler.dnsDiscovery.enabled`                         | Enable Querier APIs discovery via DNS                                                                  | `true`                                                  |
+| `ruler.dnsDiscovery.enabled`                         | Enable Query APIs discovery via DNS                                                                  | `true`                                                  |
 | `ruler.alertmanagers`                                | Alermanager URLs array                                                                                 | `[]`                                                    |
 | `ruler.evalInterval`                                 | The default evaluation interval to use                                                                 | `1m`                                                    |
 | `ruler.clusterName`                                  | Used to set the 'ruler_cluster' label                                                                  | `nil`                                                   |
@@ -419,7 +419,7 @@ The following tables lists the configurable parameters of the Thanos chart and t
 | `ruler.service.loadBalancerIP`                       | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                                   |
 | `ruler.service.loadBalancerSourceRanges`             | Address that are allowed when service is LoadBalancer                                                  | `[]`                                                    |
 | `ruler.service.annotations`                          | Annotations for Thanos Ruler service                                                                   | `{}`                                                    |
-| `ruler.service.labelSelectorsOverride`        | Selector for Thanos querier service                                                                    | `{}`                                                    |
+| `ruler.service.labelSelectorsOverride`        | Selector for Thanos query service                                                                    | `{}`                                                    |
 | `ruler.service.additionalHeadless`                   | Additional Headless service                                                                            | `false`                                                 |
 | `ruler.serviceAccount.annotations`                   | Annotations for Thanos Ruler Service Account                                                           | `{}`                                                    |
 | `ruler.serviceAccount.existingServiceAccount`        | Name for an existing Thanos Ruler Service Account                                                      | `nil`                                                   |
@@ -466,10 +466,10 @@ The following tables lists the configurable parameters of the Thanos chart and t
 Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
 
 ```bash
-helm install my-release --set querier.replicaCount=2 bitnami/thanos
+helm install my-release --set query.replicaCount=2 bitnami/thanos
 ```
 
-The above command install Thanos chart with 2 Thanos Querier replicas.
+The above command install Thanos chart with 2 Thanos Query replicas.
 
 Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,
 
@@ -540,13 +540,13 @@ You can specify the Objstore configuration using the `objstoreConfig` parameter.
 
 In addition, you can also set an external Secret with the configuration file. This is done by setting the `existingObjstoreSecret` parameter. Note that this will override the previous option. If needed you can also provide a custom Secret Key with `existingObjstoreSecretItems`, please be aware that the Path of your Secret should be `objstore.yml`.
 
-### Using custom Querier Service Discovery configuration
+### Using custom Query Service Discovery configuration
 
-This helm chart supports using custom Service Discovery configuration for Querier.
+This helm chart supports using custom Service Discovery configuration for Query.
 
-You can specify the Service Discovery configuration using the `querier.sdConfig` parameter.
+You can specify the Service Discovery configuration using the `query.sdConfig` parameter.
 
-In addition, you can also set an external ConfigMap with the Service Discovery configuration file. This is done by setting the `querier.existingSDConfigmap` parameter. Note that this will override the previous option.
+In addition, you can also set an external ConfigMap with the Service Discovery configuration file. This is done by setting the `query.existingSDConfigmap` parameter. Note that this will override the previous option.
 
 ### Using custom Ruler configuration
 
@@ -573,7 +573,7 @@ objstoreConfig: |-
     access_key: minio
     secret_key: minio123
     insecure: true
-querier:
+query:
   dnsDiscovery:
     sidecarsService: kube-prometheus-prometheus-thanos
     sidecarsNamespace: monitoring
@@ -645,6 +645,90 @@ Find more information about how to deal with common errors related to Bitnami’
 
 ## Upgrading
 
+### To 3.1.0
+
+The querier component and its settings have been renamed to query. Configuration of the query component by using keys under `querier` in your `values.yaml` will continue to work. Support for keys under `querier` will be dropped in a future release.
+
+```
+querier.enabled                               -> query.enabled
+querier.logLevel                              -> query.logLevel
+querier.replicaLabel                          -> query.replicaLabel
+querier.dnsDiscovery.enabled                  -> query.dnsDiscovery.enabled
+querier.dnsDiscovery.sidecarsService          -> query.dnsDiscovery.sidecarsService
+querier.dnsDiscovery.sidecarsNamespace        -> query.dnsDiscovery.sidecarsNamespace
+querier.stores                                -> query.stores
+querier.sdConfig                              -> query.sdConfig
+querier.existingSDConfigmap                   -> query.existingSDConfigmap
+querier.extraFlags                            -> query.extraFlags
+querier.replicaCount                          -> query.replicaCount
+querier.strategyType                          -> query.strategyType
+querier.affinity                              -> query.affinity
+querier.nodeSelector                          -> query.nodeSelector
+querier.tolerations                           -> query.tolerations
+querier.priorityClassName                     -> query.priorityClassName
+querier.securityContext.enabled               -> query.securityContext.enabled
+querier.securityContext.fsGroup               -> query.securityContext.fsGroup
+querier.securityContext.runAsUser             -> query.securityContext.runAsUser
+querier.resources.limits                      -> query.resources.limits
+querier.resources.requests                    -> query.resources.requests
+querier.podAnnotations                        -> query.podAnnotations
+querier.livenessProbe                         -> query.livenessProbe
+querier.readinessProbe                        -> query.readinessProbe
+querier.grpcTLS.server.secure                 -> query.grpcTLS.server.secure
+querier.grpcTLS.server.cert                   -> query.grpcTLS.server.cert
+querier.grpcTLS.server.key                    -> query.grpcTLS.server.key
+querier.grpcTLS.server.ca                     -> query.grpcTLS.server.ca
+querier.grpcTLS.client.secure                 -> query.grpcTLS.client.secure
+querier.grpcTLS.client.cert                   -> query.grpcTLS.client.cert
+querier.grpcTLS.client.key                    -> query.grpcTLS.client.key
+querier.grpcTLS.client.ca                     -> query.grpcTLS.client.ca
+querier.grpcTLS.client.servername             -> query.grpcTLS.client.servername
+querier.service.type                          -> query.service.type
+querier.service.clusterIP                     -> query.service.clusterIP
+querier.service.http.port                     -> query.service.http.port
+querier.service.http.nodePort                 -> query.service.http.nodePort
+querier.service.grpc.port                     -> query.service.grpc.port
+querier.service.grpc.nodePort                 -> query.service.grpc.nodePort
+querier.service.loadBalancerIP                -> query.service.loadBalancerIP
+querier.service.loadBalancerSourceRanges      -> query.service.loadBalancerSourceRanges
+querier.service.annotations                   -> query.service.annotations
+querier.service.labelSelectorsOverride        -> query.service.labelSelectorsOverride
+querier.serviceAccount.annotations            -> query.serviceAccount.annotations
+querier.rbac.create                           -> query.rbac.create
+querier.pspEnabled                            -> query.pspEnabled
+querier.autoscaling.enabled                   -> query.autoscaling.enabled
+querier.autoscaling.minReplicas               -> query.autoscaling.minReplicas
+querier.autoscaling.maxReplicas               -> query.autoscaling.maxReplicas
+querier.autoscaling.targetCPU                 -> query.autoscaling.targetCPU
+querier.autoscaling.targetMemory              -> query.autoscaling.targetMemory
+querier.pdb.create                            -> query.pdb.create
+querier.pdb.minAvailable                      -> query.pdb.minAvailable
+querier.pdb.maxUnavailable                    -> query.pdb.maxUnavailable
+querier.ingress.enabled                       -> query.ingress.enabled
+querier.ingress.certManager                   -> query.ingress.certManager
+querier.ingress.hostname                      -> query.ingress.hostname
+querier.ingress.annotations                   -> query.ingress.annotations
+querier.ingress.tls                           -> query.ingress.tls
+querier.ingress.extraHosts[0].name            -> query.ingress.extraHosts[0].name
+querier.ingress.extraHosts[0].path            -> query.ingress.extraHosts[0].path
+querier.ingress.extraTls[0].hosts[0]          -> query.ingress.extraTls[0].hosts[0]
+querier.ingress.extraTls[0].secretName        -> query.ingress.extraTls[0].secretName
+querier.ingress.secrets[0].name               -> query.ingress.secrets[0].name
+querier.ingress.secrets[0].certificate        -> query.ingress.secrets[0].certificate
+querier.ingress.secrets[0].key                -> query.ingress.secrets[0].key
+querier.ingress.grpc.enabled                  -> query.ingress.grpc.enabled
+querier.ingress.grpc.certManager              -> query.ingress.grpc.certManager
+querier.ingress.grpc.hostname                 -> query.ingress.grpc.hostname
+querier.ingress.grpc.annotations              -> query.ingress.grpc.annotations
+querier.ingress.grpc.extraHosts[0].name       -> query.ingress.grpc.extraHosts[0].name
+querier.ingress.grpc.extraHosts[0].path       -> query.ingress.grpc.extraHosts[0].path
+querier.ingress.grpc.extraTls[0].hosts[0]     -> query.ingress.grpc.extraTls[0].hosts[0]
+querier.ingress.grpc.extraTls[0].secretName   -> query.ingress.grpc.extraTls[0].secretName
+querier.ingress.grpc.secrets[0].name          -> query.ingress.grpc.secrets[0].name
+querier.ingress.grpc.secrets[0].certificate   -> query.ingress.grpc.secrets[0].certificate
+querier.ingress.grpc.secrets[0].key           -> query.ingress.grpc.secrets[0].key
+```
+
 ### To 3.0.0
 
 [On November 13, 2020, Helm v2 support was formally finished](https://github.com/helm/charts#status-of-the-project), this major version is the result of the required changes applied to the Helm Chart to be able to incorporate the different features added in Helm v3 and to be consistent with the Helm project itself regarding the Helm v2 EOL.
diff --git a/bitnami/thanos/templates/NOTES.txt b/bitnami/thanos/templates/NOTES.txt
index 3710204359..2b00fc0013 100644
--- a/bitnami/thanos/templates/NOTES.txt
+++ b/bitnami/thanos/templates/NOTES.txt
@@ -1,10 +1,10 @@
-
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
 ** Please be patient while the chart is being deployed **
 
 Thanos chart was deployed enabling the following components:
 
-{{- if .Values.querier.enabled }}
-- Thanos Querier
+{{- if $query.enabled }}
+- Thanos Query
 {{- end }}
 {{- if .Values.bucketweb.enabled }}
 - Thanos Bucket Web
@@ -19,55 +19,55 @@ Thanos chart was deployed enabling the following components:
 - Thanos Store Gateway
 {{- end }}
 
-{{- if .Values.querier.enabled }}
+{{- if $query.enabled }}
 
-Thanos Querier can be accessed through following DNS name from within your cluster:
+Thanos Query can be accessed through following DNS name from within your cluster:
 
-    {{ include "thanos.fullname" . }}-querier.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.querier.service.http.port }})
+    {{ include "thanos.fullname" . }}-query.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ $query.service.http.port }})
 
-To access Thanos Querier from outside the cluster execute the following commands:
+To access Thanos Query from outside the cluster execute the following commands:
 
-{{- if .Values.querier.ingress.enabled }}
+{{- if $query.ingress.enabled }}
 
-1. Get the Thanos Querier URL and associate Thanos Querier hostname to your cluster external IP:
+1. Get the Thanos Query URL and associate Thanos Query hostname to your cluster external IP:
 
    export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters
-   echo "Thanos Querier URL: http{{ if .Values.querier.ingress.tls }}s{{ end }}://{{ .Values.querier.ingress.hostname }}/"
-   echo "$CLUSTER_IP  {{ .Values.querier.ingress.hostname }}" | sudo tee -a /etc/hosts
+   echo "Thanos Query URL: http{{ if $query.ingress.tls }}s{{ end }}://{{ $query.ingress.hostname }}/"
+   echo "$CLUSTER_IP  {{ $query.ingress.hostname }}" | sudo tee -a /etc/hosts
 
 {{- else }}
 
-1. Get the Thanos Querier URL by running these commands:
+1. Get the Thanos Query URL by running these commands:
 
-{{- if contains "NodePort" .Values.querier.service.type }}
+{{- if contains "NodePort" $query.service.type }}
 
-    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "thanos.fullname" . }}-querier)
+    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "thanos.fullname" . }}-query)
     export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
     echo "http://${NODE_IP}:${NODE_PORT}"
 
-{{- else if contains "LoadBalancer" .Values.querier.service.type }}
+{{- else if contains "LoadBalancer" $query.service.type }}
 
   NOTE: It may take a few minutes for the LoadBalancer IP to be available.
-        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "thanos.fullname" . }}-querier'
+        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "thanos.fullname" . }}-query'
 
-    export SERVICE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].port}" services {{ include "thanos.fullname" . }}-querier)
-    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "thanos.fullname" . }}-querier -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
+    export SERVICE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].port}" services {{ include "thanos.fullname" . }}-query)
+    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "thanos.fullname" . }}-query -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
     echo "http://${SERVICE_IP}:${SERVICE_PORT}"
 
-{{- else if contains "ClusterIP" .Values.querier.service.type }}
+{{- else if contains "ClusterIP" $query.service.type }}
 
-    export SERVICE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].port}" services {{ include "thanos.fullname" . }}-querier)
-    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "thanos.fullname" . }}-querier ${SERVICE_PORT}:${SERVICE_PORT} &
+    export SERVICE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].port}" services {{ include "thanos.fullname" . }}-query)
+    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "thanos.fullname" . }}-query ${SERVICE_PORT}:${SERVICE_PORT} &
     echo "http://127.0.0.1:${SERVICE_PORT}"
 
 {{- end }}
 {{- end }}
 
-2. Open a browser and access Thanos Querier using the obtained URL.
+2. Open a browser and access Thanos Query using the obtained URL.
 
 {{- else }}
 
-WARNING: You deployed Thanos whitout enabling Thanos Querier!!
+WARNING: You deployed Thanos whitout enabling Thanos Query!!
 
 {{- end }}
 
diff --git a/bitnami/thanos/templates/_helpers.tpl b/bitnami/thanos/templates/_helpers.tpl
index 9e7c25a441..de203ab48b 100644
--- a/bitnami/thanos/templates/_helpers.tpl
+++ b/bitnami/thanos/templates/_helpers.tpl
@@ -165,21 +165,39 @@ Return true if a secret object should be created
 {{- end -}}
 
 {{/*
-Return the Thanos Querier Service Discovery configuration configmap.
+Return a YAML of either .Values.query or .Values.querier
+If .Values.querier is used, we merge in the defaults from .Values.query, giving preference to .Values.querier
 */}}
-{{- define "thanos.querier.SDConfigmapName" -}}
-{{- if .Values.querier.existingSDConfigmap -}}
-    {{- printf "%s" (tpl .Values.querier.existingSDConfigmap $) -}}
+{{- define "thanos.query.values" -}}
+{{- if .Values.querier -}}
+    {{- if .Values.query -}}
+        {{- mergeOverwrite .Values.query .Values.querier | toYaml -}}
+    {{- else -}}
+        {{- .Values.querier | toYaml -}}
+    {{- end -}}
+{{- else -}}
+    {{- .Values.query | toYaml -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Return the Thanos Query Service Discovery configuration configmap.
+*/}}
+{{- define "thanos.query.SDConfigmapName" -}}
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.existingSDConfigmap -}}
+    {{- printf "%s" (tpl $query.existingSDConfigmap $) -}}
 {{- else -}}
-    {{- printf "%s-querier-sd-configmap" (include "thanos.fullname" .) -}}
+    {{- printf "%s-query-sd-configmap" (include "thanos.fullname" .) -}}
 {{- end -}}
 {{- end -}}
 
 {{/*
 Return true if a configmap object should be created
 */}}
-{{- define "thanos.querier.createSDConfigmap" -}}
-{{- if and .Values.querier.sdConfig (not .Values.querier.existingSDConfigmap) }}
+{{- define "thanos.query.createSDConfigmap" -}}
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.sdConfig (not $query.existingSDConfigmap) }}
     {{- true -}}
 {{- else -}}
 {{- end -}}
diff --git a/bitnami/thanos/templates/querier/deployment.yaml b/bitnami/thanos/templates/querier/deployment.yaml
deleted file mode 100644
index 0b6c25d394..0000000000
--- a/bitnami/thanos/templates/querier/deployment.yaml
+++ /dev/null
@@ -1,151 +0,0 @@
-{{- if .Values.querier.enabled }}
-apiVersion: apps/v1
-kind: Deployment
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-spec:
-  replicas: {{ .Values.querier.replicaCount }}
-  strategy:
-    type: {{ .Values.querier.strategyType }}
-    {{- if (eq "Recreate" .Values.querier.strategyType) }}
-    rollingUpdate: null
-    {{- end }}
-  selector:
-    matchLabels: {{- include "thanos.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: querier
-  template:
-    metadata:
-      labels: {{- include "thanos.labels" . | nindent 8 }}
-        app.kubernetes.io/component: querier
-      {{- if or (include "thanos.querier.createSDConfigmap" .) .Values.querier.existingSDConfigmap .Values.querier.podAnnotations }}
-      annotations:
-        {{- if or (include "thanos.querier.createSDConfigmap" .) .Values.querier.existingSDConfigmap }}
-        checksum/ruler-configuration: {{ include (print $.Template.BasePath "/querier/sd-configmap.yaml") . | sha256sum }}
-        {{- end }}
-        {{- if .Values.querier.podAnnotations }}
-        {{- include "thanos.tplValue" (dict "value" .Values.querier.podAnnotations "context" $) | nindent 8 }}
-        {{- end }}
-      {{- end }}
-    spec:
-{{- include "thanos.imagePullSecrets" . | nindent 6 }}
-      serviceAccount: {{ include "thanos.serviceaccount.name" (dict "component" "querier" "context" $) }}
-      {{- if .Values.querier.affinity }}
-      affinity: {{- include "thanos.tplValue" (dict "value" .Values.querier.affinity "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.querier.nodeSelector }}
-      nodeSelector: {{- include "thanos.tplValue" (dict "value" .Values.querier.nodeSelector "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.querier.tolerations }}
-      tolerations: {{- include "thanos.tplValue" (dict "value" .Values.querier.tolerations "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.querier.priorityClassName }}
-      priorityClassName: {{ .Values.querier.priorityClassName | quote }}
-      {{- end }}
-      {{- if .Values.querier.securityContext.enabled }}
-      securityContext:
-        runAsUser: {{ .Values.querier.securityContext.runAsUser }}
-        fsGroup: {{ .Values.querier.securityContext.fsGroup }}
-      {{- end }}
-      containers:
-        - name: querier
-          image: {{ include "thanos.image" . }}
-          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
-          args:
-            - query
-            - --log.level={{ .Values.querier.logLevel }}
-            - --grpc-address=0.0.0.0:10901
-            - --http-address=0.0.0.0:10902
-            {{- if kindIs "string" .Values.querier.replicaLabel }}
-            - --query.replica-label={{ .Values.querier.replicaLabel }}
-            {{- else }}
-            {{- range .Values.querier.replicaLabel }}
-            - --query.replica-label={{ . }}
-            {{- end }}
-            {{- end }}
-            {{- if or (include "thanos.querier.createSDConfigmap" .) .Values.querier.existingSDConfigmap }}
-            - --store.sd-files=/conf/servicediscovery.yml
-            {{- end }}
-            {{- if and .Values.querier.dnsDiscovery.enabled .Values.querier.dnsDiscovery.sidecarsService .Values.querier.dnsDiscovery.sidecarsNamespace }}
-            - --store=dnssrv+_grpc._tcp.{{- include "thanos.tplValue" ( dict "value" .Values.querier.dnsDiscovery.sidecarsService "context" $) -}}.{{- include "thanos.tplValue"  ( dict "value" .Values.querier.dnsDiscovery.sidecarsNamespace "context" $) -}}.svc.{{ .Values.clusterDomain }}
-            {{- end }}
-            {{- if and .Values.storegateway.enabled .Values.querier.dnsDiscovery.enabled }}
-            - --store=dnssrv+_grpc._tcp.{{ include "thanos.fullname" . }}-storegateway.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
-            {{- end }}
-            {{- if and .Values.ruler.enabled .Values.querier.dnsDiscovery.enabled }}
-            - --store=dnssrv+_grpc._tcp.{{ include "thanos.fullname" . }}-ruler.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
-            {{- end }}
-            {{- range .Values.querier.stores }}
-            - --store={{ . }}
-            {{- end }}
-            {{- if .Values.querier.grpcTLS.server.secure }}
-            - --grpc-server-tls-cert=/tls/server/cert.pem
-            - --grpc-server-tls-key=/tls/server/key.pem
-            - --grpc-server-tls-client-ca=/tls/server/ca.pem
-            {{- end }}
-            {{- if .Values.querier.grpcTLS.client.secure }}
-            - --grpc-client-tls-secure
-            {{- if .Values.querier.grpcTLS.client.cert }}
-            - --grpc-client-tls-cert=/tls/client/cert.pem
-            {{- end }}
-            {{- if .Values.querier.grpcTLS.client.key }}
-            - --grpc-client-tls-key=/tls/client/key.pem
-            {{- end }}
-            {{- if .Values.querier.grpcTLS.client.ca }}
-            - --grpc-client-tls-ca=/tls/client/ca.pem
-            {{- end }}
-            {{- if .Values.querier.grpcTLS.client.servername }}
-            - --grpc-client-server-name={{.Values.querier.grpcTLS.client.servername}}
-            {{- end }}
-            {{- end }}
-            {{- range .Values.querier.extraFlags }}
-            - {{ . }}
-            {{- end }}
-          ports:
-            - name: http
-              containerPort: 10902
-              protocol: TCP
-            - name: grpc
-              containerPort: 10901
-              protocol: TCP
-          {{- if .Values.querier.livenessProbe }}
-          livenessProbe: {{- include "thanos.tplValue" (dict "value" .Values.querier.livenessProbe "context" $) | nindent 12 }}
-          {{- end }}
-          {{- if .Values.querier.readinessProbe }}
-          readinessProbe: {{- include "thanos.tplValue" (dict "value" .Values.querier.readinessProbe "context" $) | nindent 12 }}
-          {{- end }}
-          {{- if .Values.querier.resources }}
-          resources: {{- toYaml .Values.querier.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-      {{- if or (include "thanos.querier.createSDConfigmap" .) .Values.querier.existingSDConfigmap }}
-            - name: sd-config
-              mountPath: /conf/servicediscovery.yml
-              subPath: servicediscovery.yml
-      {{- end }}
-      {{- if .Values.querier.grpcTLS.server.secure }}
-            - name: tls-server
-              mountPath: /tls/server
-      {{- end }}
-      {{- if .Values.querier.grpcTLS.client.secure }}
-            - name: tls-client
-              mountPath: /tls/client
-      {{- end }}
-      volumes:
-      {{- if or (include "thanos.querier.createSDConfigmap" .) .Values.querier.existingSDConfigmap }}
-        - name: sd-config
-          configMap:
-            name: {{ include "thanos.querier.SDConfigmapName" . }}
-      {{- end }}
-      {{- if .Values.querier.grpcTLS.server.secure }}
-        - name: tls-server
-          secret:
-            secretName: {{ include "thanos.fullname" . }}-querier-tls-server
-      {{- end }}
-      {{- if .Values.querier.grpcTLS.client.secure }}
-        - name: tls-client
-          secret:
-            secretName: {{ include "thanos.fullname" . }}-querier-tls-client
-      {{- end }}
-{{- end }}
diff --git a/bitnami/thanos/templates/querier/hpa.yaml b/bitnami/thanos/templates/querier/hpa.yaml
deleted file mode 100644
index 181ba2f556..0000000000
--- a/bitnami/thanos/templates/querier/hpa.yaml
+++ /dev/null
@@ -1,28 +0,0 @@
-{{- if and .Values.querier.enabled .Values.querier.autoscaling.enabled }}
-apiVersion: autoscaling/v2beta1
-kind: HorizontalPodAutoscaler
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-spec:
-  scaleTargetRef:
-    apiVersion: apps/v1
-    kind: Deployment
-    name: {{ include "thanos.fullname" . }}-querier
-  minReplicas: {{ .Values.querier.autoscaling.minReplicas }}
-  maxReplicas: {{ .Values.querier.autoscaling.maxReplicas }}
-  metrics:
-    {{- if .Values.querier.autoscaling.targetCPU }}
-    - type: Resource
-      resource:
-        name: cpu
-        targetAverageUtilization: {{ .Values.querier.autoscaling.targetCPU }}
-    {{- end }}
-    {{- if .Values.querier.autoscaling.targetMemory }}
-    - type: Resource
-      resource:
-        name: memory
-        targetAverageUtilization: {{ .Values.querier.autoscaling.targetMemory  }}
-    {{- end }}
-{{- end }}    
diff --git a/bitnami/thanos/templates/querier/ingress-grpc.yaml b/bitnami/thanos/templates/querier/ingress-grpc.yaml
deleted file mode 100644
index a0e844fb78..0000000000
--- a/bitnami/thanos/templates/querier/ingress-grpc.yaml
+++ /dev/null
@@ -1,45 +0,0 @@
-{{- if .Values.querier.ingress.grpc.enabled -}}
-apiVersion: extensions/v1beta1
-kind: Ingress
-metadata:
-  name: {{ include "thanos.fullname" . }}-grpc
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-  annotations:
-    {{- if .Values.querier.ingress.grpc.certManager }}
-    kubernetes.io/tls-acme: "true"
-    {{- end }}
-    {{- range $key, $value := .Values.querier.ingress.grpc.annotations }}
-    {{ $key }}: {{ $value | quote }}
-    {{- end }}
-spec:
-  rules:
-    {{- if .Values.querier.ingress.grpc.hostname }}
-    - host: {{ .Values.querier.ingress.grpc.hostname }}
-      http:
-        paths:
-          - path: /
-            backend:
-              serviceName: {{ template "thanos.fullname" . }}-querier
-              servicePort: grpc
-    {{- end }}
-    {{- range .Values.querier.ingress.grpc.extraHosts }}
-    - host: {{ .name }}
-      http:
-        paths:
-          - path: {{ default "/" .path }}
-            backend:
-              serviceName: {{ template "thanos.fullname" $ }}-querier
-              servicePort: grpc
-    {{- end }}
-  {{- if or .Values.querier.ingress.grpc.tls .Values.querier.ingress.grpc.extraTls .Values.querier.ingress.grpc.hosts }}
-  tls:
-    {{- if .Values.querier.ingress.grpc.tls }}
-    - hosts:
-        - {{ .Values.querier.ingress.grpc.hostname }}
-      secretName: {{ printf "%s-tls" .Values.querier.ingress.grpc.hostname }}
-    {{- end }}
-    {{- if .Values.querier.ingress.grpc.extraTls }}
-    {{- toYaml .Values.querier.ingress.grpc.extraTls | nindent 4 }}
-    {{- end }}
-  {{- end }}
-{{- end }}
diff --git a/bitnami/thanos/templates/querier/ingress.yaml b/bitnami/thanos/templates/querier/ingress.yaml
deleted file mode 100644
index 9d0d2ae275..0000000000
--- a/bitnami/thanos/templates/querier/ingress.yaml
+++ /dev/null
@@ -1,45 +0,0 @@
-{{- if .Values.querier.ingress.enabled -}}
-apiVersion: extensions/v1beta1
-kind: Ingress
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-  annotations:
-    {{- if .Values.querier.ingress.certManager }}
-    kubernetes.io/tls-acme: "true"
-    {{- end }}
-    {{- range $key, $value := .Values.querier.ingress.annotations }}
-    {{ $key }}: {{ $value | quote }}
-    {{- end }}
-spec:
-  rules:
-    {{- if .Values.querier.ingress.hostname }}
-    - host: {{ .Values.querier.ingress.hostname }}
-      http:
-        paths:
-          - path: /
-            backend:
-              serviceName: {{ template "thanos.fullname" . }}-querier
-              servicePort: http
-    {{- end }}
-    {{- range .Values.querier.ingress.extraHosts }}
-    - host: {{ .name }}
-      http:
-        paths:
-          - path: {{ default "/" .path }}
-            backend:
-              serviceName: {{ template "thanos.fullname" $ }}-querier
-              servicePort: http
-    {{- end }}
-  {{- if or .Values.querier.ingress.tls .Values.querier.ingress.extraTls .Values.querier.ingress.hosts }}
-  tls:
-    {{- if or .Values.querier.ingress.secrets .Values.querier.ingress.tls }}
-    - hosts:
-        - {{ .Values.querier.ingress.hostname }}
-      secretName: {{ printf "%s-tls" .Values.querier.ingress.hostname }}
-    {{- end }}
-    {{- if .Values.querier.ingress.extraTls }}
-    {{- toYaml .Values.querier.ingress.extraTls | nindent 4 }}
-    {{- end }}
-  {{- end }}
-{{- end }}
diff --git a/bitnami/thanos/templates/querier/pdb.yaml b/bitnami/thanos/templates/querier/pdb.yaml
deleted file mode 100644
index 21d95452c2..0000000000
--- a/bitnami/thanos/templates/querier/pdb.yaml
+++ /dev/null
@@ -1,18 +0,0 @@
-{{- if and .Values.querier.enabled .Values.querier.pdb.create }}
-apiVersion: policy/v1beta1
-kind: PodDisruptionBudget
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-spec:
-  {{- if .Values.querier.pdb.minAvailable }}
-  minAvailable: {{ .Values.querier.pdb.minAvailable }}
-  {{- end }}
-  {{- if .Values.querier.pdb.maxUnavailable }}
-  maxUnavailable: {{ .Values.querier.pdb.maxUnavailable }}
-  {{- end }}
-  selector:
-    matchLabels: {{- include "thanos.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: querier
-{{- end }}
diff --git a/bitnami/thanos/templates/querier/psp-clusterrole.yaml b/bitnami/thanos/templates/querier/psp-clusterrole.yaml
deleted file mode 100644
index 1882ad3454..0000000000
--- a/bitnami/thanos/templates/querier/psp-clusterrole.yaml
+++ /dev/null
@@ -1,12 +0,0 @@
-{{- if and .Values.querier.enabled .Values.querier.pspEnabled .Values.querier.rbac.create -}}
-apiVersion: rbac.authorization.k8s.io/v1
-kind: ClusterRole
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier
-rules:
-- apiGroups: ['policy']
-  resources: ['podsecuritypolicies']
-  verbs:     ['use']
-  resourceNames:
-  - {{ include "thanos.fullname" . }}-querier
-{{- end -}}
diff --git a/bitnami/thanos/templates/querier/sd-configmap.yaml b/bitnami/thanos/templates/querier/sd-configmap.yaml
deleted file mode 100644
index b41796fdcd..0000000000
--- a/bitnami/thanos/templates/querier/sd-configmap.yaml
+++ /dev/null
@@ -1,11 +0,0 @@
-{{- if (include "thanos.querier.createSDConfigmap" .) }}
-apiVersion: v1
-kind: ConfigMap
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier-sd-configmap
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-data:
-  servicediscovery.yml: |-
-    {{- include "thanos.tplValue" (dict "value" .Values.querier.sdConfig "context" $) | nindent 4 }}
-{{ end }}
diff --git a/bitnami/thanos/templates/querier/service.yaml b/bitnami/thanos/templates/querier/service.yaml
deleted file mode 100644
index e379d726dc..0000000000
--- a/bitnami/thanos/templates/querier/service.yaml
+++ /dev/null
@@ -1,48 +0,0 @@
-{{- if .Values.querier.enabled -}}
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-  {{- if .Values.querier.service.annotations }}
-  annotations: {{- include "thanos.tplValue" (dict "value" .Values.querier.service.annotations "context" $) | nindent 4 }}
-  {{- end }}
-spec:
-  type: {{ .Values.querier.service.type }}
-  {{- if and .Values.querier.service.clusterIP (eq .Values.querier.service.type "ClusterIP") }}
-  clusterIP: {{ .Values.querier.service.clusterIP }}
-  {{- end }}
-  {{- if and .Values.querier.service.loadBalancerIP (eq .Values.querier.service.type "LoadBalancer") }}
-  loadBalancerIP: {{ .Values.querier.service.loadBalancerIP }}
-  {{- end }}
-  {{- if and (eq .Values.querier.service.type "LoadBalancer") .Values.querier.service.loadBalancerSourceRanges }}
-  loadBalancerSourceRanges: {{- toYaml .Values.querier.service.loadBalancerSourceRanges | nindent 4 }}
-  {{- end }}
-  ports:
-    - port: {{ .Values.querier.service.http.port }}
-      targetPort: http
-      protocol: TCP
-      name: http
-      {{- if (and (or (eq .Values.querier.service.type "NodePort") (eq .Values.querier.service.type "LoadBalancer")) .Values.querier.service.http.nodePort) }}
-      nodePort: {{ .Values.querier.service.http.nodePort }}
-      {{- else if eq .Values.querier.service.type "ClusterIP" }}
-      nodePort: null
-      {{- end }}
-    - port: {{ .Values.querier.service.grpc.port }}
-      targetPort: grpc
-      protocol: TCP
-      name: grpc
-      {{- if (and (or (eq .Values.querier.service.type "NodePort") (eq .Values.querier.service.type "LoadBalancer")) .Values.querier.service.grpc.nodePort) }}
-      nodePort: {{ .Values.querier.service.grpc.nodePort }}
-      {{- else if eq .Values.querier.service.type "ClusterIP" }}
-      nodePort: null
-      {{- end }}
-  selector: 
-    {{- if .Values.querier.service.labelSelectorsOverride }}
-    {{- include "thanos.tplValue" (dict "value" .Values.querier.service.labelSelectorsOverride "context" $) | nindent 4 }}
-    {{- else }}
-    {{- include "thanos.matchLabels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-    {{- end }}
-{{- end }}
diff --git a/bitnami/thanos/templates/querier/serviceaccount.yaml b/bitnami/thanos/templates/querier/serviceaccount.yaml
deleted file mode 100644
index f1767e39db..0000000000
--- a/bitnami/thanos/templates/querier/serviceaccount.yaml
+++ /dev/null
@@ -1,12 +0,0 @@
-{{- if and .Values.querier.enabled (not (include "thanos.serviceaccount.use-existing" (dict "component" "querier" "context" $))) -}}
-apiVersion: v1
-kind: ServiceAccount
-metadata:
-  name: {{ include "thanos.serviceaccount.name" (dict "component" "querier" "context" $) }}
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-  {{- if .Values.querier.serviceAccount.annotations }}
-  annotations:
-    {{ include "thanos.tplValue" ( dict "value" .Values.querier.serviceAccount.annotations "context" $) | nindent 4 }}
-  {{- end }}
-{{- end }}
diff --git a/bitnami/thanos/templates/querier/tls-client-secret.yaml b/bitnami/thanos/templates/querier/tls-client-secret.yaml
deleted file mode 100644
index f4cb97ec7f..0000000000
--- a/bitnami/thanos/templates/querier/tls-client-secret.yaml
+++ /dev/null
@@ -1,19 +0,0 @@
-{{- if .Values.querier.grpcTLS.client.secure -}}
-apiVersion: v1
-kind: Secret
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier-tls-client
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-type: Opaque
-data:
-{{- if .Values.querier.grpcTLS.client.cert }}
-  cert.pem: {{ .Values.querier.grpcTLS.client.cert | b64enc | quote }}
-{{- end }}
-{{- if .Values.querier.grpcTLS.client.key }}
-  key.pem: {{ .Values.querier.grpcTLS.client.key | b64enc | quote }}
-{{- end }}
-{{- if .Values.querier.grpcTLS.client.ca }}
-  ca.pem : {{ .Values.querier.grpcTLS.client.ca | b64enc | quote }}
-{{- end }}
-{{ end }}
diff --git a/bitnami/thanos/templates/querier/tls-server-secret.yaml b/bitnami/thanos/templates/querier/tls-server-secret.yaml
deleted file mode 100644
index d5eeeb83cf..0000000000
--- a/bitnami/thanos/templates/querier/tls-server-secret.yaml
+++ /dev/null
@@ -1,13 +0,0 @@
-{{- if .Values.querier.grpcTLS.server.secure -}}
-apiVersion: v1
-kind: Secret
-metadata:
-  name: {{ include "thanos.fullname" . }}-querier-tls-server
-  labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
-type: Opaque
-data:
-  cert.pem: {{ .Values.querier.grpcTLS.server.cert | b64enc | quote }}
-  key.pem: {{ .Values.querier.grpcTLS.server.key | b64enc | quote }}
-  ca.pem : {{ .Values.querier.grpcTLS.server.ca | b64enc | quote }}
-{{ end }}
diff --git a/bitnami/thanos/templates/query-frontend/deployment.yaml b/bitnami/thanos/templates/query-frontend/deployment.yaml
index e815fca833..0c8443f53b 100644
--- a/bitnami/thanos/templates/query-frontend/deployment.yaml
+++ b/bitnami/thanos/templates/query-frontend/deployment.yaml
@@ -1,3 +1,4 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
 {{- if .Values.queryFrontend.enabled }}
 apiVersion: apps/v1
 kind: Deployment
@@ -56,7 +57,7 @@ spec:
             - query-frontend
             - --log.level={{ .Values.queryFrontend.logLevel }}
             - --http-address=0.0.0.0:10902
-            - --query-frontend.downstream-url=http://{{ include "thanos.fullname" . }}-querier:{{ .Values.querier.service.http.port }}
+            - --query-frontend.downstream-url=http://{{ include "thanos.fullname" . }}-query:{{ $query.service.http.port }}
             {{- if or .Values.queryFrontend.config .Values.queryFrontend.existingConfigmap }}
             - --query-range.response-cache-config-file=/conf/cache/config.yml
             {{- end }}
diff --git a/bitnami/thanos/templates/query/deployment.yaml b/bitnami/thanos/templates/query/deployment.yaml
new file mode 100644
index 0000000000..f642274b04
--- /dev/null
+++ b/bitnami/thanos/templates/query/deployment.yaml
@@ -0,0 +1,152 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ include "thanos.fullname" . }}-query
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+spec:
+  replicas: {{ $query.replicaCount }}
+  strategy:
+    type: {{ $query.strategyType }}
+    {{- if (eq "Recreate" $query.strategyType) }}
+    rollingUpdate: null
+    {{- end }}
+  selector:
+    matchLabels: {{- include "thanos.matchLabels" . | nindent 6 }}
+      app.kubernetes.io/component: query
+  template:
+    metadata:
+      labels: {{- include "thanos.labels" . | nindent 8 }}
+        app.kubernetes.io/component: query
+      {{- if or (include "thanos.query.createSDConfigmap" .) $query.existingSDConfigmap $query.podAnnotations }}
+      annotations:
+        {{- if or (include "thanos.query.createSDConfigmap" .) $query.existingSDConfigmap }}
+        checksum/ruler-configuration: {{ include (print $.Template.BasePath "/query/sd-configmap.yaml") . | sha256sum }}
+        {{- end }}
+        {{- if $query.podAnnotations }}
+        {{- include "thanos.tplValue" (dict "value" $query.podAnnotations "context" $) | nindent 8 }}
+        {{- end }}
+      {{- end }}
+    spec:
+{{- include "thanos.imagePullSecrets" . | nindent 6 }}
+      serviceAccount: {{ include "thanos.serviceaccount.name" (dict "component" "query" "context" $) }}
+      {{- if $query.affinity }}
+      affinity: {{- include "thanos.tplValue" (dict "value" $query.affinity "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if $query.nodeSelector }}
+      nodeSelector: {{- include "thanos.tplValue" (dict "value" $query.nodeSelector "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if $query.tolerations }}
+      tolerations: {{- include "thanos.tplValue" (dict "value" $query.tolerations "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if $query.priorityClassName }}
+      priorityClassName: {{ $query.priorityClassName | quote }}
+      {{- end }}
+      {{- if $query.securityContext.enabled }}
+      securityContext:
+        runAsUser: {{ $query.securityContext.runAsUser }}
+        fsGroup: {{ $query.securityContext.fsGroup }}
+      {{- end }}
+      containers:
+        - name: query
+          image: {{ include "thanos.image" . }}
+          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
+          args:
+            - query
+            - --log.level={{ $query.logLevel }}
+            - --grpc-address=0.0.0.0:10901
+            - --http-address=0.0.0.0:10902
+            {{- if kindIs "string" $query.replicaLabel }}
+            - --query.replica-label={{ $query.replicaLabel }}
+            {{- else }}
+            {{- range $query.replicaLabel }}
+            - --query.replica-label={{ . }}
+            {{- end }}
+            {{- end }}
+            {{- if or (include "thanos.query.createSDConfigmap" .) $query.existingSDConfigmap }}
+            - --store.sd-files=/conf/servicediscovery.yml
+            {{- end }}
+            {{- if and $query.dnsDiscovery.enabled $query.dnsDiscovery.sidecarsService $query.dnsDiscovery.sidecarsNamespace }}
+            - --store=dnssrv+_grpc._tcp.{{- include "thanos.tplValue" ( dict "value" $query.dnsDiscovery.sidecarsService "context" $) -}}.{{- include "thanos.tplValue"  ( dict "value" $query.dnsDiscovery.sidecarsNamespace "context" $) -}}.svc.{{ .Values.clusterDomain }}
+            {{- end }}
+            {{- if and .Values.storegateway.enabled $query.dnsDiscovery.enabled }}
+            - --store=dnssrv+_grpc._tcp.{{ include "thanos.fullname" . }}-storegateway.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
+            {{- end }}
+            {{- if and .Values.ruler.enabled $query.dnsDiscovery.enabled }}
+            - --store=dnssrv+_grpc._tcp.{{ include "thanos.fullname" . }}-ruler.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
+            {{- end }}
+            {{- range $query.stores }}
+            - --store={{ . }}
+            {{- end }}
+            {{- if $query.grpcTLS.server.secure }}
+            - --grpc-server-tls-cert=/tls/server/cert.pem
+            - --grpc-server-tls-key=/tls/server/key.pem
+            - --grpc-server-tls-client-ca=/tls/server/ca.pem
+            {{- end }}
+            {{- if $query.grpcTLS.client.secure }}
+            - --grpc-client-tls-secure
+            {{- if $query.grpcTLS.client.cert }}
+            - --grpc-client-tls-cert=/tls/client/cert.pem
+            {{- end }}
+            {{- if $query.grpcTLS.client.key }}
+            - --grpc-client-tls-key=/tls/client/key.pem
+            {{- end }}
+            {{- if $query.grpcTLS.client.ca }}
+            - --grpc-client-tls-ca=/tls/client/ca.pem
+            {{- end }}
+            {{- if $query.grpcTLS.client.servername }}
+            - --grpc-client-server-name={{$query.grpcTLS.client.servername}}
+            {{- end }}
+            {{- end }}
+            {{- range $query.extraFlags }}
+            - {{ . }}
+            {{- end }}
+          ports:
+            - name: http
+              containerPort: 10902
+              protocol: TCP
+            - name: grpc
+              containerPort: 10901
+              protocol: TCP
+          {{- if $query.livenessProbe }}
+          livenessProbe: {{- include "thanos.tplValue" (dict "value" $query.livenessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if $query.readinessProbe }}
+          readinessProbe: {{- include "thanos.tplValue" (dict "value" $query.readinessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if $query.resources }}
+          resources: {{- toYaml $query.resources | nindent 12 }}
+          {{- end }}
+          volumeMounts:
+      {{- if or (include "thanos.query.createSDConfigmap" .) $query.existingSDConfigmap }}
+            - name: sd-config
+              mountPath: /conf/servicediscovery.yml
+              subPath: servicediscovery.yml
+      {{- end }}
+      {{- if $query.grpcTLS.server.secure }}
+            - name: tls-server
+              mountPath: /tls/server
+      {{- end }}
+      {{- if $query.grpcTLS.client.secure }}
+            - name: tls-client
+              mountPath: /tls/client
+      {{- end }}
+      volumes:
+      {{- if or (include "thanos.query.createSDConfigmap" .) $query.existingSDConfigmap }}
+        - name: sd-config
+          configMap:
+            name: {{ include "thanos.query.SDConfigmapName" . }}
+      {{- end }}
+      {{- if $query.grpcTLS.server.secure }}
+        - name: tls-server
+          secret:
+            secretName: {{ include "thanos.fullname" . }}-query-tls-server
+      {{- end }}
+      {{- if $query.grpcTLS.client.secure }}
+        - name: tls-client
+          secret:
+            secretName: {{ include "thanos.fullname" . }}-query-tls-client
+      {{- end }}
+{{- end }}
diff --git a/bitnami/thanos/templates/query/hpa.yaml b/bitnami/thanos/templates/query/hpa.yaml
new file mode 100644
index 0000000000..0db86e5ccc
--- /dev/null
+++ b/bitnami/thanos/templates/query/hpa.yaml
@@ -0,0 +1,29 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.enabled $query.autoscaling.enabled }}
+apiVersion: autoscaling/v2beta1
+kind: HorizontalPodAutoscaler
+metadata:
+  name: {{ include "thanos.fullname" . }}-query
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+spec:
+  scaleTargetRef:
+    apiVersion: apps/v1
+    kind: Deployment
+    name: {{ include "thanos.fullname" . }}-query
+  minReplicas: {{ $query.autoscaling.minReplicas }}
+  maxReplicas: {{ $query.autoscaling.maxReplicas }}
+  metrics:
+    {{- if $query.autoscaling.targetCPU }}
+    - type: Resource
+      resource:
+        name: cpu
+        targetAverageUtilization: {{ $query.autoscaling.targetCPU }}
+    {{- end }}
+    {{- if $query.autoscaling.targetMemory }}
+    - type: Resource
+      resource:
+        name: memory
+        targetAverageUtilization: {{ $query.autoscaling.targetMemory  }}
+    {{- end }}
+{{- end }}    
diff --git a/bitnami/thanos/templates/query/ingress-grpc.yaml b/bitnami/thanos/templates/query/ingress-grpc.yaml
new file mode 100644
index 0000000000..9c508827b7
--- /dev/null
+++ b/bitnami/thanos/templates/query/ingress-grpc.yaml
@@ -0,0 +1,46 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.ingress.grpc.enabled -}}
+apiVersion: extensions/v1beta1
+kind: Ingress
+metadata:
+  name: {{ include "thanos.fullname" . }}-grpc
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+  annotations:
+    {{- if $query.ingress.grpc.certManager }}
+    kubernetes.io/tls-acme: "true"
+    {{- end }}
+    {{- range $key, $value := $query.ingress.grpc.annotations }}
+    {{ $key }}: {{ $value | quote }}
+    {{- end }}
+spec:
+  rules:
+    {{- if $query.ingress.grpc.hostname }}
+    - host: {{ $query.ingress.grpc.hostname }}
+      http:
+        paths:
+          - path: /
+            backend:
+              serviceName: {{ template "thanos.fullname" . }}-query
+              servicePort: grpc
+    {{- end }}
+    {{- range $query.ingress.grpc.extraHosts }}
+    - host: {{ .name }}
+      http:
+        paths:
+          - path: {{ default "/" .path }}
+            backend:
+              serviceName: {{ template "thanos.fullname" $ }}-query
+              servicePort: grpc
+    {{- end }}
+  {{- if or $query.ingress.grpc.tls $query.ingress.grpc.extraTls $query.ingress.grpc.hosts }}
+  tls:
+    {{- if $query.ingress.grpc.tls }}
+    - hosts:
+        - {{ $query.ingress.grpc.hostname }}
+      secretName: {{ printf "%s-tls" $query.ingress.grpc.hostname }}
+    {{- end }}
+    {{- if $query.ingress.grpc.extraTls }}
+    {{- toYaml $query.ingress.grpc.extraTls | nindent 4 }}
+    {{- end }}
+  {{- end }}
+{{- end }}
diff --git a/bitnami/thanos/templates/query/ingress.yaml b/bitnami/thanos/templates/query/ingress.yaml
new file mode 100644
index 0000000000..2dd7261d49
--- /dev/null
+++ b/bitnami/thanos/templates/query/ingress.yaml
@@ -0,0 +1,46 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.ingress.enabled -}}
+apiVersion: extensions/v1beta1
+kind: Ingress
+metadata:
+  name: {{ include "thanos.fullname" . }}-query
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+  annotations:
+    {{- if $query.ingress.certManager }}
+    kubernetes.io/tls-acme: "true"
+    {{- end }}
+    {{- range $key, $value := $query.ingress.annotations }}
+    {{ $key }}: {{ $value | quote }}
+    {{- end }}
+spec:
+  rules:
+    {{- if $query.ingress.hostname }}
+    - host: {{ $query.ingress.hostname }}
+      http:
+        paths:
+          - path: /
+            backend:
+              serviceName: {{ template "thanos.fullname" . }}-query
+              servicePort: http
+    {{- end }}
+    {{- range $query.ingress.extraHosts }}
+    - host: {{ .name }}
+      http:
+        paths:
+          - path: {{ default "/" .path }}
+            backend:
+              serviceName: {{ template "thanos.fullname" $ }}-query
+              servicePort: http
+    {{- end }}
+  {{- if or $query.ingress.tls $query.ingress.extraTls $query.ingress.hosts }}
+  tls:
+    {{- if or $query.ingress.secrets $query.ingress.tls }}
+    - hosts:
+        - {{ $query.ingress.hostname }}
+      secretName: {{ printf "%s-tls" $query.ingress.hostname }}
+    {{- end }}
+    {{- if $query.ingress.extraTls }}
+    {{- toYaml $query.ingress.extraTls | nindent 4 }}
+    {{- end }}
+  {{- end }}
+{{- end }}
diff --git a/bitnami/thanos/templates/query/pdb.yaml b/bitnami/thanos/templates/query/pdb.yaml
new file mode 100644
index 0000000000..c446f05b7e
--- /dev/null
+++ b/bitnami/thanos/templates/query/pdb.yaml
@@ -0,0 +1,19 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.enabled $query.pdb.create }}
+apiVersion: policy/v1beta1
+kind: PodDisruptionBudget
+metadata:
+  name: {{ include "thanos.fullname" . }}-query
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+spec:
+  {{- if $query.pdb.minAvailable }}
+  minAvailable: {{ $query.pdb.minAvailable }}
+  {{- end }}
+  {{- if $query.pdb.maxUnavailable }}
+  maxUnavailable: {{ $query.pdb.maxUnavailable }}
+  {{- end }}
+  selector:
+    matchLabels: {{- include "thanos.matchLabels" . | nindent 6 }}
+      app.kubernetes.io/component: query
+{{- end }}
diff --git a/bitnami/thanos/templates/query/psp-clusterrole.yaml b/bitnami/thanos/templates/query/psp-clusterrole.yaml
new file mode 100644
index 0000000000..815780462f
--- /dev/null
+++ b/bitnami/thanos/templates/query/psp-clusterrole.yaml
@@ -0,0 +1,13 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.enabled $query.pspEnabled $query.rbac.create -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ include "thanos.fullname" . }}-query
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ include "thanos.fullname" . }}-query
+{{- end -}}
diff --git a/bitnami/thanos/templates/querier/psp-clusterrolebinding.yaml b/bitnami/thanos/templates/query/psp-clusterrolebinding.yaml
similarity index 56%
rename from bitnami/thanos/templates/querier/psp-clusterrolebinding.yaml
rename to bitnami/thanos/templates/query/psp-clusterrolebinding.yaml
index ec0f9bdb3f..c5b74b3ae0 100644
--- a/bitnami/thanos/templates/querier/psp-clusterrolebinding.yaml
+++ b/bitnami/thanos/templates/query/psp-clusterrolebinding.yaml
@@ -1,15 +1,16 @@
-{{- if and .Values.querier.enabled .Values.querier.pspEnabled .Values.querier.rbac.create -}}
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.enabled $query.pspEnabled $query.rbac.create -}}
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRoleBinding
 metadata:
-  name: {{ include "thanos.fullname" . }}-querier
+  name: {{ include "thanos.fullname" . }}-query
 roleRef:
   kind: ClusterRole
-  name: {{ include "thanos.fullname" . }}-querier
+  name: {{ include "thanos.fullname" . }}-query
   apiGroup: rbac.authorization.k8s.io
 subjects:
 # Authorize specific service accounts:
 - kind: ServiceAccount
-  name: {{ include "thanos.serviceaccount.name" (dict "component" "querier" "context" $) }}
+  name: {{ include "thanos.serviceaccount.name" (dict "component" "query" "context" $) }}
   namespace: {{ .Release.Namespace }}
 {{- end -}}
diff --git a/bitnami/thanos/templates/querier/psp.yaml b/bitnami/thanos/templates/query/psp.yaml
similarity index 60%
rename from bitnami/thanos/templates/querier/psp.yaml
rename to bitnami/thanos/templates/query/psp.yaml
index 00797cc509..38a5d01d7f 100644
--- a/bitnami/thanos/templates/querier/psp.yaml
+++ b/bitnami/thanos/templates/query/psp.yaml
@@ -1,10 +1,11 @@
-{{- if and .Values.querier.enabled .Values.querier.pspEnabled .Values.querier.rbac.create -}}
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.enabled $query.pspEnabled $query.rbac.create -}}
 apiVersion: policy/v1beta1
 kind: PodSecurityPolicy
 metadata:
-  name: {{ include "thanos.fullname" . }}-querier
+  name: {{ include "thanos.fullname" . }}-query
   labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
+    app.kubernetes.io/component: query
 spec:
   fsGroup:
     rule: RunAsAny
diff --git a/bitnami/thanos/templates/query/sd-configmap.yaml b/bitnami/thanos/templates/query/sd-configmap.yaml
new file mode 100644
index 0000000000..f2048a3254
--- /dev/null
+++ b/bitnami/thanos/templates/query/sd-configmap.yaml
@@ -0,0 +1,12 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if (include "thanos.query.createSDConfigmap" .) }}
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  name: {{ include "thanos.fullname" . }}-query-sd-configmap
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+data:
+  servicediscovery.yml: |-
+    {{- include "thanos.tplValue" (dict "value" $query.sdConfig "context" $) | nindent 4 }}
+{{ end }}
diff --git a/bitnami/thanos/templates/query/service.yaml b/bitnami/thanos/templates/query/service.yaml
new file mode 100644
index 0000000000..1a38ef57ed
--- /dev/null
+++ b/bitnami/thanos/templates/query/service.yaml
@@ -0,0 +1,49 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.enabled -}}
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ include "thanos.fullname" . }}-query
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+  {{- if $query.service.annotations }}
+  annotations: {{- include "thanos.tplValue" (dict "value" $query.service.annotations "context" $) | nindent 4 }}
+  {{- end }}
+spec:
+  type: {{ $query.service.type }}
+  {{- if and $query.service.clusterIP (eq $query.service.type "ClusterIP") }}
+  clusterIP: {{ $query.service.clusterIP }}
+  {{- end }}
+  {{- if and $query.service.loadBalancerIP (eq $query.service.type "LoadBalancer") }}
+  loadBalancerIP: {{ $query.service.loadBalancerIP }}
+  {{- end }}
+  {{- if and (eq $query.service.type "LoadBalancer") $query.service.loadBalancerSourceRanges }}
+  loadBalancerSourceRanges: {{- toYaml $query.service.loadBalancerSourceRanges | nindent 4 }}
+  {{- end }}
+  ports:
+    - port: {{ $query.service.http.port }}
+      targetPort: http
+      protocol: TCP
+      name: http
+      {{- if (and (or (eq $query.service.type "NodePort") (eq $query.service.type "LoadBalancer")) $query.service.http.nodePort) }}
+      nodePort: {{ $query.service.http.nodePort }}
+      {{- else if eq $query.service.type "ClusterIP" }}
+      nodePort: null
+      {{- end }}
+    - port: {{ $query.service.grpc.port }}
+      targetPort: grpc
+      protocol: TCP
+      name: grpc
+      {{- if (and (or (eq $query.service.type "NodePort") (eq $query.service.type "LoadBalancer")) $query.service.grpc.nodePort) }}
+      nodePort: {{ $query.service.grpc.nodePort }}
+      {{- else if eq $query.service.type "ClusterIP" }}
+      nodePort: null
+      {{- end }}
+  selector: 
+    {{- if $query.service.labelSelectorsOverride }}
+    {{- include "thanos.tplValue" (dict "value" $query.service.labelSelectorsOverride "context" $) | nindent 4 }}
+    {{- else }}
+    {{- include "thanos.matchLabels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+    {{- end }}
+{{- end }}
diff --git a/bitnami/thanos/templates/query/serviceaccount.yaml b/bitnami/thanos/templates/query/serviceaccount.yaml
new file mode 100644
index 0000000000..9078bace08
--- /dev/null
+++ b/bitnami/thanos/templates/query/serviceaccount.yaml
@@ -0,0 +1,13 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.enabled (not (include "thanos.serviceaccount.use-existing" (dict "component" "query" "context" $))) -}}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ include "thanos.serviceaccount.name" (dict "component" "query" "context" $) }}
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+  {{- if $query.serviceAccount.annotations }}
+  annotations:
+    {{ include "thanos.tplValue" ( dict "value" $query.serviceAccount.annotations "context" $) | nindent 4 }}
+  {{- end }}
+{{- end }}
diff --git a/bitnami/thanos/templates/querier/servicemonitor.yaml b/bitnami/thanos/templates/query/servicemonitor.yaml
similarity index 75%
rename from bitnami/thanos/templates/querier/servicemonitor.yaml
rename to bitnami/thanos/templates/query/servicemonitor.yaml
index 2335ab272f..869871e7f7 100644
--- a/bitnami/thanos/templates/querier/servicemonitor.yaml
+++ b/bitnami/thanos/templates/query/servicemonitor.yaml
@@ -1,20 +1,21 @@
-{{- if and .Values.querier.enabled .Values.metrics.enabled .Values.metrics.serviceMonitor.enabled }}
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if and $query.enabled .Values.metrics.enabled .Values.metrics.serviceMonitor.enabled }}
 apiVersion: monitoring.coreos.com/v1
 kind: ServiceMonitor
 metadata:
-  name: {{ include "thanos.fullname" . }}-querier
+  name: {{ include "thanos.fullname" . }}-query
   {{- if .Values.metrics.serviceMonitor.namespace }}
   namespace: {{ .Values.metrics.serviceMonitor.namespace }}
   {{- end }}
   labels: {{- include "thanos.labels" . | nindent 4 }}
-    app.kubernetes.io/component: querier
+    app.kubernetes.io/component: query
 {{- if .Values.metrics.serviceMonitor.labels }}
 {{- toYaml .Values.metrics.serviceMonitor.labels | nindent 4 }}
 {{- end }}
 spec:
   selector:
     matchLabels: {{- include "thanos.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: querier
+      app.kubernetes.io/component: query
   endpoints:
     - port: http
       {{- if .Values.metrics.serviceMonitor.interval }}
diff --git a/bitnami/thanos/templates/query/tls-client-secret.yaml b/bitnami/thanos/templates/query/tls-client-secret.yaml
new file mode 100644
index 0000000000..75b2a0cf2e
--- /dev/null
+++ b/bitnami/thanos/templates/query/tls-client-secret.yaml
@@ -0,0 +1,20 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.grpcTLS.client.secure -}}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ include "thanos.fullname" . }}-query-tls-client
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+type: Opaque
+data:
+{{- if $query.grpcTLS.client.cert }}
+  cert.pem: {{ $query.grpcTLS.client.cert | b64enc | quote }}
+{{- end }}
+{{- if $query.grpcTLS.client.key }}
+  key.pem: {{ $query.grpcTLS.client.key | b64enc | quote }}
+{{- end }}
+{{- if $query.grpcTLS.client.ca }}
+  ca.pem : {{ $query.grpcTLS.client.ca | b64enc | quote }}
+{{- end }}
+{{ end }}
diff --git a/bitnami/thanos/templates/querier/tls-secrets.yaml b/bitnami/thanos/templates/query/tls-secrets.yaml
similarity index 54%
rename from bitnami/thanos/templates/querier/tls-secrets.yaml
rename to bitnami/thanos/templates/query/tls-secrets.yaml
index 2afc592d2b..c87ac4e6b7 100644
--- a/bitnami/thanos/templates/querier/tls-secrets.yaml
+++ b/bitnami/thanos/templates/query/tls-secrets.yaml
@@ -1,9 +1,10 @@
-{{- if .Values.querier.ingress.enabled }}
-{{- range .Values.querier.ingress.secrets }}
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.ingress.enabled }}
+{{- range $query.ingress.secrets }}
 apiVersion: v1
 kind: Secret
 metadata:
-  name: {{ include "thanos.fullname" . }}-querier
+  name: {{ include "thanos.fullname" . }}-query
   labels: {{- include "thanos.labels" . | nindent 4 }}
 type: kubernetes.io/tls
 data:
diff --git a/bitnami/thanos/templates/query/tls-server-secret.yaml b/bitnami/thanos/templates/query/tls-server-secret.yaml
new file mode 100644
index 0000000000..7f8d5559c7
--- /dev/null
+++ b/bitnami/thanos/templates/query/tls-server-secret.yaml
@@ -0,0 +1,14 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
+{{- if $query.grpcTLS.server.secure -}}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ include "thanos.fullname" . }}-query-tls-server
+  labels: {{- include "thanos.labels" . | nindent 4 }}
+    app.kubernetes.io/component: query
+type: Opaque
+data:
+  cert.pem: {{ $query.grpcTLS.server.cert | b64enc | quote }}
+  key.pem: {{ $query.grpcTLS.server.key | b64enc | quote }}
+  ca.pem : {{ $query.grpcTLS.server.ca | b64enc | quote }}
+{{ end }}
diff --git a/bitnami/thanos/templates/ruler/statefulset.yaml b/bitnami/thanos/templates/ruler/statefulset.yaml
index f2ff11bfcd..8b75a6f42e 100644
--- a/bitnami/thanos/templates/ruler/statefulset.yaml
+++ b/bitnami/thanos/templates/ruler/statefulset.yaml
@@ -1,3 +1,4 @@
+{{- $query := (include "thanos.query.values" . | fromYaml) -}}
 {{- if .Values.ruler.enabled }}
 apiVersion: apps/v1
 kind: StatefulSet
@@ -81,8 +82,8 @@ spec:
             {{- range .Values.ruler.alertmanagers }}
             - --alertmanagers.url={{ . }}
             {{- end }}
-            {{- if and .Values.querier.enabled .Values.ruler.dnsDiscovery.enabled }}
-            - --query=dnssrv+_http._tcp.{{ include "thanos.fullname" . }}-querier.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
+            {{- if and $query.enabled .Values.ruler.dnsDiscovery.enabled }}
+            - --query=dnssrv+_http._tcp.{{ include "thanos.fullname" . }}-query.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
             {{- end }}
             - --label=replica="$(POD_NAME)"
             - --label=ruler_cluster="{{ .Values.ruler.clusterName }}"
diff --git a/bitnami/thanos/values-production.yaml b/bitnami/thanos/values-production.yaml
index 618ddf4221..cc353c644e 100644
--- a/bitnami/thanos/values-production.yaml
+++ b/bitnami/thanos/values-production.yaml
@@ -53,10 +53,10 @@ clusterDomain: cluster.local
 ##
 # existingServiceAccount: my-service-account
 
-## Thanos Querier parameters
+## Thanos Query parameters
 ##
-querier:
-  ## Set to true to enable Thanos Querier component
+query:
+  ## Set to true to enable Thanos Query component
   ##
   enabled: true
 
@@ -68,9 +68,9 @@ querier:
   ##
   serviceAccount:
     annotations: {}
-    ## Provide an existing service account for querier
+    ## Provide an existing service account for query
     ##
-    # existingServiceAccount: querier-service-account
+    # existingServiceAccount: query-service-account
 
   ## Labels to treat as a replica indicator along which data is deduplicated
   ##
@@ -88,25 +88,25 @@ querier:
     ## Evaluated as a template.
     # sidecarsNamespace: "{{ .Release.Namespace }}"
 
-  ## Statically configure store APIs to connect with Thanos Querier
+  ## Statically configure store APIs to connect with Thanos Query
   ##
   stores: []
 
-  ## Querier Service Discovery Configuration
+  ## Query Service Discovery Configuration
   ## Specify content for servicediscovery.yml
   ##
   # sdConfig:
 
-  ## ConfigMap with Querier Service Discovery Configuration
-  ## NOTE: This will override querier.sdConfig
+  ## ConfigMap with Query Service Discovery Configuration
+  ## NOTE: This will override query.sdConfig
   ##
   # existingSDConfigmap:
 
-  ## Extra Flags to passed to Thanos Querier
+  ## Extra Flags to passed to Thanos Query
   ##
   extraFlags: []
 
-  ## Number of Thanos Querier replicas to deploy
+  ## Number of Thanos Query replicas to deploy
   ##
   replicaCount: 1
 
@@ -129,7 +129,7 @@ querier:
   ##
   tolerations: []
 
-  ## Annotations for querier pods
+  ## Annotations for query pods
   ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
   ##
   podAnnotations: {}
@@ -139,7 +139,7 @@ querier:
   ##
   # priorityClassName: ""
 
-  ## K8s Security Context for Thanos Querier pods
+  ## K8s Security Context for Thanos Query pods
   ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   ##
   securityContext:
@@ -155,7 +155,7 @@ querier:
   psp:
     create: false
 
-  ## Thanos Querier containers' resource requests and limits
+  ## Thanos Query containers' resource requests and limits
   ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
   ##
   resources:
@@ -170,7 +170,7 @@ querier:
     #   cpu: 100m
     #   memory: 128Mi
 
-  ## Thanos Querier pods' liveness and readiness probes. Evaluated as a template.
+  ## Thanos Query pods' liveness and readiness probes. Evaluated as a template.
   ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
   ##
   livenessProbe:
@@ -192,7 +192,7 @@ querier:
     # successThreshold: 1
     # failureThreshold: 6
 
-  ## Thanos Querier GRPC TLS parameters
+  ## Thanos Query GRPC TLS parameters
   ## to configure --grpc-server-tls-cert, --grpc-server-tls-key, --grpc-server-tls-client-ca, --grpc-client-tls-secure, --grpc-client-tls-cert, --grpc-client-tls-key, --grpc-client-tls-ca, --grpc-client-server-name
   ## ref: https://github.com/thanos-io/thanos/blob/master/docs/components/query.md#flags
   grpcTLS:
@@ -225,7 +225,7 @@ querier:
     ## Service type
     ##
     type: ClusterIP
-    ## Thanos Querier service clusterIP IP
+    ## Thanos Query service clusterIP IP
     ##
     # clusterIP: None
     ## HTTP Port
@@ -269,7 +269,7 @@ querier:
     #  targetCPU: 50
     #  targetMemory: 50
 
-  ## Querier Pod Disruption Budget configuration
+  ## Query Pod Disruption Budget configuration
   ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
   ##
   pdb:
@@ -281,7 +281,7 @@ querier:
     ##
     # maxUnavailable: 1
 
-  ## Configure the ingress resource that allows you to access Thanos Querier
+  ## Configure the ingress resource that allows you to access Thanos Query
   ## ref: http://kubernetes.io/docs/user-guide/ingress/
   ##
   ingress:
@@ -636,7 +636,7 @@ bucketweb:
   ##
   extraFlags: []
 
-  ## Number of Thanos Querier replicas to deploy
+  ## Number of Thanos Query replicas to deploy
   ##
   replicaCount: 1
 
@@ -1204,7 +1204,7 @@ ruler:
     ##
     # existingServiceAccount: ruler-service-account
 
-  ## Dinamically configure Querier APIs using DNS discovery
+  ## Dinamically configure Query APIs using DNS discovery
   ##
   dnsDiscovery:
     enabled: true
diff --git a/bitnami/thanos/values.yaml b/bitnami/thanos/values.yaml
index 7c3fc52ea8..a6a2ccd497 100644
--- a/bitnami/thanos/values.yaml
+++ b/bitnami/thanos/values.yaml
@@ -63,10 +63,10 @@ clusterDomain: cluster.local
 ##
 # existingServiceAccount: my-service-account
 
-## Thanos Querier parameters
+## Thanos Query parameters
 ##
-querier:
-  ## Set to true to enable Thanos Querier component
+query:
+  ## Set to true to enable Thanos Query component
   ##
   enabled: true
 
@@ -78,9 +78,9 @@ querier:
   ##
   serviceAccount:
     annotations: {}
-    ## Provide an existing service account for querier
+    ## Provide an existing service account for query
     ##
-    # existingServiceAccount: querier-service-account
+    # existingServiceAccount: query-service-account
 
   ## Labels to treat as a replica indicator along which data is deduplicated
   ##
@@ -98,25 +98,25 @@ querier:
     ## Evaluated as a template.
     # sidecarsNamespace: "{{ .Release.Namespace }}"
 
-  ## Statically configure store APIs to connect with Thanos Querier
+  ## Statically configure store APIs to connect with Thanos Query
   ##
   stores: []
 
-  ## Querier Service Discovery Configuration
+  ## Query Service Discovery Configuration
   ## Specify content for servicediscovery.yml
   ##
   # sdConfig:
 
-  ## ConfigMap with Querier Service Discovery Configuration
-  ## NOTE: This will override querier.sdConfig
+  ## ConfigMap with Query Service Discovery Configuration
+  ## NOTE: This will override query.sdConfig
   ##
   # existingSDConfigmap:
 
-  ## Extra Flags to passed to Thanos Querier
+  ## Extra Flags to passed to Thanos Query
   ##
   extraFlags: []
 
-  ## Number of Thanos Querier replicas to deploy
+  ## Number of Thanos Query replicas to deploy
   ##
   replicaCount: 1
 
@@ -139,7 +139,7 @@ querier:
   ##
   tolerations: []
 
-  ## Annotations for querier pods
+  ## Annotations for query pods
   ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
   ##
   podAnnotations: {}
@@ -149,7 +149,7 @@ querier:
   ##
   # priorityClassName: ""
 
-  ## K8s Security Context for Thanos Querier pods
+  ## K8s Security Context for Thanos Query pods
   ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   ##
   securityContext:
@@ -164,7 +164,7 @@ querier:
   # Create PodSecurity Policy
   pspEnabled: false
 
-  ## Thanos Querier containers' resource requests and limits
+  ## Thanos Query containers' resource requests and limits
   ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
   ##
   resources:
@@ -179,7 +179,7 @@ querier:
     #   cpu: 100m
     #   memory: 128Mi
 
-  ## Thanos Querier pods' liveness and readiness probes. Evaluated as a template.
+  ## Thanos Query pods' liveness and readiness probes. Evaluated as a template.
   ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
   ##
   livenessProbe:
@@ -201,7 +201,7 @@ querier:
     # successThreshold: 1
     # failureThreshold: 6
 
-  ## Thanos Querier GRPC TLS parameters
+  ## Thanos Query GRPC TLS parameters
   ## to configure --grpc-server-tls-cert, --grpc-server-tls-key, --grpc-server-tls-client-ca, --grpc-client-tls-secure, --grpc-client-tls-cert, --grpc-client-tls-key, --grpc-client-tls-ca, --grpc-client-server-name
   ## ref: https://github.com/thanos-io/thanos/blob/master/docs/components/query.md#flags
   grpcTLS:
@@ -234,7 +234,7 @@ querier:
     ## Service type
     ##
     type: ClusterIP
-    ## Thanos Querier service clusterIP IP
+    ## Thanos Query service clusterIP IP
     ##
     # clusterIP: None
     ## HTTP Port
@@ -278,7 +278,7 @@ querier:
     #  targetCPU: 50
     #  targetMemory: 50
 
-  ## Querier Pod Disruption Budget configuration
+  ## Query Pod Disruption Budget configuration
   ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
   ##
   pdb:
@@ -290,7 +290,7 @@ querier:
     ##
     # maxUnavailable: 1
 
-  ## Configure the ingress resource that allows you to access Thanos Querier
+  ## Configure the ingress resource that allows you to access Thanos Query
   ## ref: http://kubernetes.io/docs/user-guide/ingress/
   ##
   ingress:
@@ -645,7 +645,7 @@ bucketweb:
   ##
   extraFlags: []
 
-  ## Number of Thanos Querier replicas to deploy
+  ## Number of Thanos Query replicas to deploy
   ##
   replicaCount: 1
 
@@ -1214,7 +1214,7 @@ ruler:
     ##
     # existingServiceAccount: ruler-service-account
 
-  ## Dinamically configure Querier APIs using DNS discovery
+  ## Dinamically configure Query APIs using DNS discovery
   ##
   dnsDiscovery:
     enabled: true
