commit 31bcd6c169b666d618feb5aa8dc5df7decf5a0d9
Author: Marcos Bjoerkelund <marcosbc@users.noreply.github.com>
Date:   Fri Jul 16 02:19:13 2021 +0200

    [bitnami/redmine] MAJOR: Redmine image refactor (#6739)
    
    * [bitnami/redmine] MAJOR: Redmine image refactor
    
    * Minor fix
    
    * Override existing post-init.sh instead of entrypoint.sh for cleaner logic
    
    * Implement requested changes
    
    * implement suggestions
    
    * Implement feedback
    
    * [bitnami/redmine] Update components versions
    
    Signed-off-by: Bitnami Containers <containers@bitnami.com>
    
    Co-authored-by: Bitnami Containers <containers@bitnami.com>

diff --git a/bitnami/redmine/Chart.lock b/bitnami/redmine/Chart.lock
index 7f23691a7e..1581727b5a 100644
--- a/bitnami/redmine/Chart.lock
+++ b/bitnami/redmine/Chart.lock
@@ -1,12 +1,12 @@
 dependencies:
 - name: common
   repository: https://charts.bitnami.com/bitnami
-  version: 1.6.1
+  version: 1.7.0
 - name: mariadb
   repository: https://charts.bitnami.com/bitnami
-  version: 9.3.14
+  version: 9.3.17
 - name: postgresql
   repository: https://charts.bitnami.com/bitnami
-  version: 10.5.0
-digest: sha256:c8f8b0590e00e0f1fc56263105f1320d8fd2b193955ca467a542c5b3c126c2dc
-generated: "2021-06-21T02:05:11.281877014Z"
+  version: 10.5.3
+digest: sha256:6ab9f7a825d42933cf1366fbbe7449a28ddac407b13c4294547e6c5e9ffe3419
+generated: "2021-07-15T23:37:56.380991137Z"
diff --git a/bitnami/redmine/Chart.yaml b/bitnami/redmine/Chart.yaml
index 4952ad8bb9..a348d2ddaf 100644
--- a/bitnami/redmine/Chart.yaml
+++ b/bitnami/redmine/Chart.yaml
@@ -36,4 +36,4 @@ name: redmine
 sources:
   - https://github.com/bitnami/bitnami-docker-redmine
   - http://www.redmine.org/
-version: 15.2.21
+version: 16.0.0
diff --git a/bitnami/redmine/README.md b/bitnami/redmine/README.md
index 78d982da0a..7e131afdf0 100644
--- a/bitnami/redmine/README.md
+++ b/bitnami/redmine/README.md
@@ -56,247 +56,287 @@ helm install my-release bitnami/redmine --set databaseType=postgresql
 
 ## Parameters
 
-The following table lists the configurable parameters of the Redmine chart and their default values.
+### Global parameters
+
+| Name                      | Description                                     | Value |
+| ------------------------- | ----------------------------------------------- | ----- |
+| `global.imageRegistry`    | Global Docker image registry                    | `nil` |
+| `global.imagePullSecrets` | Global Docker registry secret names as an array | `[]`  |
+| `global.storageClass`     | Global StorageClass for Persistent Volume(s)    | `nil` |
 
-| Parameter                 | Description                                     | Default                                                 |
-|---------------------------|-------------------------------------------------|---------------------------------------------------------|
-| `global.imageRegistry`    | Global Docker image registry                    | `nil`                                                   |
-| `global.imagePullSecrets` | Global Docker registry secret names as an array | `[]` (does not add image pull secrets to deployed pods) |
-| `global.storageClass`     | Global storage class for dynamic provisioning   | `nil`                                                   |
 
 ### Common parameters
 
-| Parameter           | Description                                                                 | Default |
-|---------------------|-----------------------------------------------------------------------------|---------|
-| `nameOverride`      | String to partially override redmine.fullname template                      | `nil`   |
-| `fullnameOverride`  | String to fully override redmine.fullname template                          | `nil`   |
-| `commonLabels`      | Labels to add to all deployed objects                                       | `nil`   |
-| `commonAnnotations` | Annotations to add to all deployed objects                                  | `[]`    |
-| `extraDeploy`       | Array of extra objects to deploy with the release (evaluated as a template) | `nil`   |
-| `kubeVersion`       | Force target Kubernetes version (using Helm capabilities if not set)        | `nil`   |
-
-### Redmine parameters
-
-| Parameter             | Description                                                                                                                                                   | Default                                                 |
-|-----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
-| `image.registry`      | Redmine image registry                                                                                                                                        | `docker.io`                                             |
-| `image.repository`    | Redmine image name                                                                                                                                            | `bitnami/redmine`                                       |
-| `image.tag`           | Redmine image tag                                                                                                                                             | `{TAG_NAME}`                                            |
-| `image.pullPolicy`    | Image pull policy                                                                                                                                             | `IfNotPresent`                                          |
-| `image.pullSecrets`   | Specify docker-registry secret names as an array                                                                                                              | `[]` (does not add image pull secrets to deployed pods) |
-| `hostAliases`         | Add deployment host aliases                                                                                                                                   | `[]`                                                    |
-| `redmineUsername`     | User of the application                                                                                                                                       | `user`                                                  |
-| `redminePassword`     | Application password                                                                                                                                          | _random 10 character long alphanumeric string_          |
-| `redmineEmail`        | Admin email                                                                                                                                                   | `user@example.com`                                      |
-| `redmineLanguage`     | Redmine default data language                                                                                                                                 | `en`                                                    |
-| `smtpHost`            | SMTP host                                                                                                                                                     | `nil`                                                   |
-| `smtpPort`            | SMTP port                                                                                                                                                     | `nil`                                                   |
-| `smtpUser`            | SMTP user                                                                                                                                                     | `nil`                                                   |
-| `smtpPassword`        | SMTP password                                                                                                                                                 | `nil`                                                   |
-| `smtpTls`             | Use TLS encryption with SMTP                                                                                                                                  | `nil`                                                   |
-| `command`             | Override default container command (useful when using custom images)                                                                                          | `[]`                                                    |
-| `args`                | Override default container args (useful when using custom images)                                                                                             | `[]`                                                    |
-| `containerPorts.http` | Redmine container HTTP port                                                                                                                                   | `3000`                                                  |
-| `extraEnvVars`        | Extra environment variables to be set on redmine container                                                                                                    | `{}`                                                    |
-| `extraEnvVarsCM`      | Name of existing ConfigMap containing extra env vars                                                                                                          | `nil`                                                   |
-| `extraEnvVarsSecret`  | Name of existing Secret containing extra env vars                                                                                                             | `nil`                                                   |
-| `existingSecret`      | Use existing secret for password details (`redminePassword` and `smtpPassword` will be ignored). Must contain the keys `redmine-password` and `smtp-password` | `nil`                                                   |
-
-### Mailreceiver-CronJob parameters
-
-| Parameter                                         | Description                                                                                                                                   | Default                                     |
-|---------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------|
-| `mailReceiver.enabled`                            | Whether to enable scheduled mail-to-task CronJob                                                                                              | `false`                                     |
-| `mailReceiver.schedule`                           | Kubernetes CronJob schedule                                                                                                                   | `*/5 * * * *`                               |
-| `mailReceiver.suspend`                            | Whether to create suspended CronJob                                                                                                           | `true`                                      |
-| `mailReceiver.image.registry`                     | Mail to Task image registry                                                                                                                   | `docker.io`                                 |
-| `mailReceiver.image.repository`                   | Mail to Task image repository                                                                                                                 | `bitnami/redmine`                           |
-| `mailReceiver.image.tag`                          | Mail to Task image tag                                                                                                                        | `{TAG_NAME}`                                |
-| `mailReceiver.image.pullPolicy`                   | Mail to Task image pull policy                                                                                                                | `IfNotPresent`                              |
-| `mailReceiver.mailProtocol`                       | Mail protocol to use for reading emails: `IMAP` or `POP3`                                                                                     | `IMAP`                                      |
-| `mailReceiver.host`                               | Server to receive emails from                                                                                                                 | `""`                                        |
-| `mailReceiver.port`                               | TCP port on the `host`                                                                                                                        | `143`                                       |
-| `mailReceiver.username`                           | Login to authenticate on the `host`                                                                                                           | `""`                                        |
-| `mailReceiver.password`                           | Password to authenticate on the `host`                                                                                                        | `""`                                        |
-| `mailReceiver.ssl`                                | Whether use SSL/TLS to connect to the `host`                                                                                                  | `true`                                      |
-| `mailReceiver.startTLS`                           | Whether use StartTLS to connect to the `host`                                                                                                 | `false`                                     |
-| `mailReceiver.imapFolder`                         | IMAP only. Folder to read emails from                                                                                                         | `INBOX`                                     |
-| `mailReceiver.moveOnsuccess`                      | IMAP only. Folder to move processed emails to                                                                                                 | `""`                                        |
-| `mailReceiver.moveOnFailure`                      | IMAP only. Folder to move emails with processing errors to                                                                                    | `""`                                        |
-| `mailReceiver.unknownUserAction`                  | Action to perform is an email received from unregistered user                                                                                 | `ignore`                                    |
-| `mailReceiver.noPermissionCheck`                  | Whether skip permission check during creating a new task                                                                                      | `0`                                         |
-| `mailReceiver.noAccountNotice`                    | Whether send an email to an unregistered user created during a new task creation                                                              | `1`                                         |
-| `mailReceiver.defaultGroup`                       | Defines a group list to add created user to                                                                                                   | `""`                                        |
-| `mailReceiver.project`                            | Defines identifier of the target project for a new task                                                                                       | `""`                                        |
-| `mailReceiver.projectFromSubaddress`              | Defines email address to select project from subaddress                                                                                       | `""`                                        |
-| `mailReceiver.status`                             | Defines a new task status                                                                                                                     | `""`                                        |
-| `mailReceiver.tracker`                            | Defines a new task tracker                                                                                                                    | `""`                                        |
-| `mailReceiver.category`                           | Defines a new task category                                                                                                                   | `""`                                        |
-| `mailReceiver.priority`                           | Defines a new task priority                                                                                                                   | `""`                                        |
-| `mailReceiver.assignedTo`                         | Defines a new task priority                                                                                                                   | `""`                                        |
-| `mailReceiver.allowOverride`                      | Defines if email content is allowed to set attributes values. Values is a comma separated list of attributes or `all` to allow all attributes | `""`                                        |
-| `mailReceiver.podAnnotations`                     | Additional pod annotations                                                                                                                    | `{}`                                        |
-| `mailReceiver.podLabels`                          | Additional pod labels                                                                                                                         | `{}`                                        |
-| `mailReceiver.command`                            | Override default container command (useful when using custom images)                                                                          | `["bash"]`                                  |
-| `mailReceiver.args`                               | Override default container args (useful when using custom images)                                                                             | `["-c", "/cj/receive.sh"]`                  |
-| `mailReceiver.nodeSelector`                       | Node labels for pod assignment                                                                                                                | `{}` (The value is evaluated as a template) |
-| `mailReceiver.tolerations`                        | List of node taints to tolerate                                                                                                               | `[]` (The value is evaluated as a template) |
-| `mailReceiver.podSecurityContext.enabled`         | Enable security context for mailReceiver pods                                                                                                 | `true`                                      |
-| `mailReceiver.podSecurityContext.fsGroup`         | Group ID for the volumes of the pod                                                                                                           | `1001`                                      |
-| `mailReceiver.containerSecurityContext.enabled`   | mailReceiver Container securityContext                                                                                                        | `false`                                     |
-| `mailReceiver.containerSecurityContext.runAsUser` | User ID for the mailReceiver container                                                                                                        | `1001`                                      |
-| `mailReceiver.podAffinityPreset`                  | Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                           | `""`                                        |
-| `mailReceiver.podAntiAffinityPreset`              | Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                      | `soft`                                      |
-| `mailReceiver.nodeAffinityPreset.type`            | Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                     | `""`                                        |
-| `mailReceiver.nodeAffinityPreset.key`             | Node label key to match Ignored if `affinity` is set.                                                                                         | `""`                                        |
-| `mailReceiver.nodeAffinityPreset.values`          | Node label values to match. Ignored if `affinity` is set.                                                                                     | `[]`                                        |
-| `mailReceiver.affinity`                           | Affinity for pod assignment                                                                                                                   | `{}` (evaluated as a template)              |
-| `mailReceiver.extraEnvVars`                       | Extra environment variables to be set on mailReceiver container                                                                               | `{}`                                        |
-| `mailReceiver.extraEnvVarsCM`                     | Name of existing ConfigMap containing extra env vars                                                                                          | `nil`                                       |
-| `mailReceiver.extraEnvVarsSecret`                 | Name of existing Secret containing extra env vars                                                                                             | `nil`                                       |
-| `mailReceiver.extraVolumeMounts`                  | Optionally specify extra list of additional volumeMounts for mailReceiver container                                                           | `[]`                                        |
-| `mailReceiver.extraVolumes`                       | Optionally specify extra list of additional volumes for mailReceiver container                                                                | `[]`                                        |
-| `mailReceiver.initContainers`                     | Add additional init containers to the mailReceiver pods                                                                                       | `{}` (evaluated as a template)              |
-| `mailReceiver.sidecars`                           | Add additional sidecar containers to the mailReceiver pods                                                                                    | `{}` (evaluated as a template)              |
-
-### Volume Permissions parameters
-
-| Parameter                             | Description                                                                                                                                               | Default                                                 |
-|---------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
-| `volumePermissions.enabled`           | Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work) | `false`                                                 |
-| `volumePermissions.image.registry`    | Init container volume-permissions image registry                                                                                                          | `docker.io`                                             |
-| `volumePermissions.image.repository`  | Init container volume-permissions image name                                                                                                              | `bitnami/bitnami-shell`                                 |
-| `volumePermissions.image.tag`         | Init container volume-permissions image tag                                                                                                               | `"10"`                                                  |
-| `volumePermissions.image.pullSecrets` | Specify docker-registry secret names as an array                                                                                                          | `[]` (does not add image pull secrets to deployed pods) |
-| `volumePermissions.image.pullPolicy`  | Init container volume-permissions image pull policy                                                                                                       | `Always`                                                |
-| `volumePermissions.resources`         | Init container resource requests/limit                                                                                                                    | `nil`                                                   |
-
-### Database parameters
-
-| Parameter                         | Description                                                                                                                              | Default                                                |
-|-----------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------|
-| `databaseType`                    | Select database type                                                                                                                     | `mariadb` (allowed values: "mariadb" and "postgresql") |
-| `mariadb.enabled`                 | Whether to deploy a MariaDB server to satisfy the database requirements                                                                  | `true`                                                 |
-| `mariadb.existingSecret`          | Optional secret storing the MariaDB passwords                                                                                            | `nil`                                                  |
-| `mariadb.auth.rootPassword`       | MariaDB admin password                                                                                                                   | `nil`                                                  |
-| `postgresql.enabled`              | Whether to deploy a PostgreSQL server to satisfy the database requirements                                                               | `false`                                                |
-| `postgresql.postgresqlDatabase`   | PostgreSQL database                                                                                                                      | `bitnami_redmine`                                      |
-| `postgresql.postgresqlUsername`   | PostgreSQL user                                                                                                                          | `bn_redmine`                                           |
-| `postgresql.postgresqlPassword`   | PostgreSQL password                                                                                                                      | `nil`                                                  |
-| `externalDatabase.host`           | Host of the external database                                                                                                            | `""`                                                   |
-| `externalDatabase.name`           | Name of the external database                                                                                                            | `bitnami_redmine`                                      |
-| `externalDatabase.user`           | External db user                                                                                                                         | `bn_redmine`                                           |
-| `externalDatabase.password`       | Password for the db user                                                                                                                 | `""`                                                   |
-| `externalDatabase.port`           | Database port number                                                                                                                     | `3306`                                                 |
-| `externalDatabase.existingSecret` | Use an existing secret for external db password. Must contain the keys `redmine-password` or `mariadb-password` depending on the DB type | `""`                                                   |
-
-### Deployment parameters
-
-| Parameter                            | Description                                                                               | Default                                     |
-|--------------------------------------|-------------------------------------------------------------------------------------------|---------------------------------------------|
-| `replicas`                           | The number of pod replicas                                                                | `1`                                         |
-| `updateStrategy.type`                | Update strategy to use for the deployment                                                 | `RollingUpdate`                             |
-| `priorityClassName`                  | Redmine priorityClassName                                                                 | `nil`                                       |
-| `nodeSelector`                       | Node labels for pod assignment                                                            | `{}` (The value is evaluated as a template) |
-| `tolerations`                        | List of node taints to tolerate                                                           | `[]` (The value is evaluated as a template) |
-| `podAnnotations`                     | Additional pod annotations                                                                | `{}`                                        |
-| `podLabels`                          | Additional pod labels                                                                     | `{}`                                        |
-| `podAffinityPreset`                  | Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`       | `""`                                        |
-| `podAntiAffinityPreset`              | Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`  | `soft`                                      |
-| `nodeAffinityPreset.type`            | Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard` | `""`                                        |
-| `nodeAffinityPreset.key`             | Node label key to match Ignored if `affinity` is set.                                     | `""`                                        |
-| `nodeAffinityPreset.values`          | Node label values to match. Ignored if `affinity` is set.                                 | `[]`                                        |
-| `affinity`                           | Affinity for pod assignment                                                               | `{}` (evaluated as a template)              |
-| `podAnnotations`                     | Pod annotations                                                                           | `{}`                                        |
-| `podSecurityContext.enabled`         | Enable security context for Redmine pods                                                  | `false`                                     |
-| `podSecurityContext.fsGroup`         | Group ID for the volumes of the pod                                                       | `0`                                         |
-| `containerSecurityContext.enabled`   | Redmine Container securityContext                                                         | `false`                                     |
-| `containerSecurityContext.runAsUser` | User ID for the Redmine container                                                         | `0`                                         |
-| `livenessProbe.enabled`              | Whether to enable the livenessProbe or not                                                | `true`                                      |
-| `livenessProbe.enabled`              | The path against which to perform the livenessProbe                                       | `/`                                         |
-| `livenessProbe.initialDelaySeconds`  | Delay before liveness probe is initiated                                                  | 300                                         |
-| `livenessProbe.periodSeconds`        | How often to perform the probe                                                            | 10                                          |
-| `livenessProbe.timeoutSeconds`       | When the probe times out                                                                  | 5                                           |
-| `livenessProbe.successThreshold`     | Minimum consecutive successes for the probe                                               | 1                                           |
-| `livenessProbe.failureThreshold`     | Minimum consecutive failures for the probe                                                | 3                                           |
-| `readinessProbe.enabled`             | Whether to enable the livenessProbe or not                                                | `true`                                      |
-| `readinessProbe.enabled`             | The path against which to perform the readinessProbe                                      | `/`                                         |
-| `readinessProbe.initialDelaySeconds` | Delay before readiness probe is initiated                                                 | 5                                           |
-| `readinessProbe.periodSeconds`       | How often to perform the probe                                                            | 10                                          |
-| `readinessProbe.timeoutSeconds`      | When the probe times out                                                                  | 1                                           |
-| `readinessProbe.successThreshold`    | Minimum consecutive successes for the probe                                               | 1                                           |
-| `readinessProbe.failureThreshold`    | Minimum consecutive failures for the probe                                                | 3                                           |
-| `customLivenessProbe`                | Override default liveness probe                                                           | `nil`                                       |
-| `customReadinessProbe`               | Override default readiness probe                                                          | `nil`                                       |
-| `resources`                          | Resources allocation (Requests and Limits)                                                | `{}`                                        |
-| `extraVolumeMounts`                  | Optionally specify extra list of additional volumeMounts for redmine container            | `[]`                                        |
-| `extraVolumes`                       | Optionally specify extra list of additional volumes for redmine container                 | `[]`                                        |
-| `initContainers`                     | Add additional init containers to the redmine pods                                        | `{}` (evaluated as a template)              |
-| `sidecars`                           | Add additional sidecar containers to the redmine pods                                     | `{}` (evaluated as a template)              |
-
-### Exposure parameters
-
-| Parameter                          | Description                                                          | Default                                      |
-|------------------------------------|----------------------------------------------------------------------|----------------------------------------------|
-| `service.type`                     | Kubernetes Service type                                              | `LoadBalancer`                               |
-| `service.port`                     | Service HTTP port                                                    | `80`                                         |
-| `service.clusterIP`                | Redmine service clusterIP IP                                         | `None`                                       |
-| `service.nodePorts.http`           | Kubernetes http node port                                            | `""`                                         |
-| `service.externalTrafficPolicy`    | Enable client source IP preservation                                 | `Cluster`                                    |
-| `service.loadBalancerIP`           | LoadBalancer service IP address                                      | `""`                                         |
-| `service.loadBalancerSourceRanges` | An array of load balancer sources                                    | `0.0.0.0/0`                                  |
-| `serviceAccount.create`            | Specifies whether a ServiceAccount should be created                 | `false`                                      |
-| `serviceAccount.name`              | The name of the ServiceAccount to create                             | Generated using the `redmine.fullname` macro |
-| `service.sessionAffinity`          | Session Affinity for Kubernetes service, can be "None" or "ClientIP" | `None`                                       |
-| `ingress.enabled`                  | Enable ingress controller resource                                   | `false`                                      |
-| `ingress.certManager`              | Add annotations for cert-manager                                     | `false`                                      |
-| `ingress.path`                     | Ingress path                                                         | `/`                                          |
-| `ingress.pathType`                 | Ingress path type                                                    | `ImplementationSpecific`                     |
-| `ingress.hostname`                 | Default host for the ingress resource                                | `redmine.local`                              |
-| `ingress.tls`                      | Enable TLS configuration                                             | `false`                                      |
-| `ingress.annotations`              | Ingress annotations                                                  | `{}`                                         |
-| `ingress.extraHosts[0].name`       | Extra hosts for your Redmine installation                            | `nil`                                        |
-| `ingress.extraHosts[0].path`       | Path within the url structure                                        | `nil`                                        |
-| `ingress.extraTls[0].hosts[0]`     | Extra TLS hosts                                                      | `nil`                                        |
-| `ingress.extraTls[0].secretName`   | TLS Secret (certificates) for extra TLS hosts                        | `nil`                                        |
-| `ingress.secrets[0].name`          | TLS Secret Name                                                      | `nil`                                        |
-| `ingress.secrets[0].certificate`   | TLS Secret Certificate                                               | `nil`                                        |
-| `ingress.secrets[0].key`           | TLS Secret Key                                                       | `nil`                                        |
-
-### Persistence parameters
-
-| Parameter                   | Description                  | Default                                     |
-|-----------------------------|------------------------------|---------------------------------------------|
-| `persistence.enabled`       | Enable persistence using PVC | `true`                                      |
-| `persistence.existingClaim` | The name of an existing PVC  | `nil`                                       |
-| `persistence.storageClass`  | PVC Storage Class            | `nil` (uses alpha storage class annotation) |
-| `persistence.accessModes`   | PVC Access Modes             | `[ReadWriteOnce]`                           |
-| `persistence.size`          | PVC Storage Request          | `8Gi`                                       |
-
-### Pod Disruption parameters
-
-| Parameter                            | Description                  | Default |
-|--------------------------------------|------------------------------|---------|
-| `podDisruptionBudget.enabled`        | Pod Disruption Budget toggle | `false` |
-| `podDisruptionBudget.minAvailable`   | Minimum available pods       | `nil`   |
-| `podDisruptionBudget.maxUnavailable` | Maximum unavailable pods     | `nil`   |
+| Name                | Description                                        | Value                 |
+| ------------------- | -------------------------------------------------- | --------------------- |
+| `kubeVersion`       | Override Kubernetes version                        | `nil`                 |
+| `nameOverride`      | String to partially override common.names.fullname | `nil`                 |
+| `fullnameOverride`  | String to fully override common.names.fullname     | `nil`                 |
+| `commonLabels`      | Labels to add to all deployed objects              | `{}`                  |
+| `commonAnnotations` | Annotations to add to all deployed objects         | `{}`                  |
+| `extraDeploy`       | Array of extra objects to deploy with the release  | `[]`                  |
+| `image.registry`    | Redmine image registry                             | `docker.io`           |
+| `image.repository`  | Redmine image repository                           | `bitnami/redmine`     |
+| `image.tag`         | Redmine image tag (immutable tags are recommended) | `4.2.1-debian-10-r48` |
+| `image.pullPolicy`  | Redmine image pull policy                          | `IfNotPresent`        |
+| `image.pullSecrets` | Redmine image pull secrets                         | `[]`                  |
+| `image.debug`       | Enable image debug mode                            | `false`               |
+
+
+### Redmine Configuration parameters
+
+| Name                    | Description                                                            | Value              |
+| ----------------------- | ---------------------------------------------------------------------- | ------------------ |
+| `redmineUsername`       | Redmine username                                                       | `user`             |
+| `redminePassword`       | Redmine user password                                                  | `""`               |
+| `redmineEmail`          | Redmine user email                                                     | `user@example.com` |
+| `redmineLanguage`       | Redmine default data language                                          | `en`               |
+| `customPostInitScripts` | Custom post-init.d user scripts                                        | `{}`               |
+| `smtpHost`              | SMTP server host                                                       | `""`               |
+| `smtpPort`              | SMTP server port                                                       | `""`               |
+| `smtpUser`              | SMTP username                                                          | `""`               |
+| `smtpPassword`          | SMTP user password                                                     | `""`               |
+| `smtpProtocol`          | SMTP protocol                                                          | `""`               |
+| `existingSecret`        | Name of existing secret containing Redmine credentials                 | `nil`              |
+| `smtpExistingSecret`    | The name of an existing secret with SMTP credentials                   | `nil`              |
+| `allowEmptyPassword`    | Allow the container to be started with blank passwords                 | `false`            |
+| `command`               | Override default container command (useful when using custom images)   | `[]`               |
+| `args`                  | Override default container args (useful when using custom images)      | `[]`               |
+| `extraEnvVars`          | Array with extra environment variables to add to the Redmine container | `[]`               |
+| `extraEnvVarsCM`        | Name of existing ConfigMap containing extra env vars                   | `nil`              |
+| `extraEnvVarsSecret`    | Name of existing Secret containing extra env vars                      | `nil`              |
+
+
+### Redmine deployment parameters
+
+| Name                                 | Description                                                                               | Value           |
+| ------------------------------------ | ----------------------------------------------------------------------------------------- | --------------- |
+| `replicaCount`                       | Number of Redmine replicas to deploy                                                      | `1`             |
+| `updateStrategy.type`                | Redmine deployment strategy type                                                          | `RollingUpdate` |
+| `updateStrategy.rollingUpdate`       | Redmine deployment rolling update configuration parameters                                | `{}`            |
+| `schedulerName`                      | Alternate scheduler                                                                       | `nil`           |
+| `serviceAccount.create`              | Specifies whether a ServiceAccount should be created                                      | `false`         |
+| `serviceAccount.name`                | The name of the ServiceAccount to create. Defaults to the `redmine.fullname` macro        | `nil`           |
+| `hostAliases`                        | Redmine pod host aliases                                                                  | `[]`            |
+| `extraVolumes`                       | Optionally specify extra list of additional volumes for Redmine pods                      | `[]`            |
+| `extraVolumeMounts`                  | Optionally specify extra list of additional volumeMounts for Redmine container(s)         | `[]`            |
+| `sidecars`                           | Add additional sidecar containers to the Redmine pod                                      | `{}`            |
+| `initContainers`                     | Add additional init containers to the Redmine pods                                        | `{}`            |
+| `podLabels`                          | Extra labels for Redmine pods                                                             | `{}`            |
+| `podAnnotations`                     | Annotations for Redmine pods                                                              | `{}`            |
+| `podAffinityPreset`                  | Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`       | `""`            |
+| `podAntiAffinityPreset`              | Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`  | `soft`          |
+| `nodeAffinityPreset.type`            | Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard` | `""`            |
+| `nodeAffinityPreset.key`             | Node label key to match. Ignored if `affinity` is set                                     | `""`            |
+| `nodeAffinityPreset.values`          | Node label values to match. Ignored if `affinity` is set                                  | `[]`            |
+| `affinity`                           | Affinity for pod assignment                                                               | `{}`            |
+| `nodeSelector`                       | Node labels for pod assignment                                                            | `{}`            |
+| `tolerations`                        | Tolerations for pod assignment                                                            | `[]`            |
+| `resources.limits`                   | The resources limits for the Redmine container                                            | `{}`            |
+| `resources.requests`                 | The requested resources for the Redmine container                                         | `{}`            |
+| `containerPort`                      | Redmine HTTP container port                                                               | `3000`          |
+| `podSecurityContext.enabled`         | Enabled Redmine pods' Security Context                                                    | `false`         |
+| `podSecurityContext.fsGroup`         | Set Redmine pod's Security Context fsGroup                                                | `1001`          |
+| `containerSecurityContext.enabled`   | Enabled Redmine containers' Security Context                                              | `false`         |
+| `containerSecurityContext.runAsUser` | Set Redmine container's Security Context runAsUser                                        | `1001`          |
+| `livenessProbe.enabled`              | Enable livenessProbe                                                                      | `true`          |
+| `livenessProbe.path`                 | Path for to check for livenessProbe                                                       | `/`             |
+| `livenessProbe.initialDelaySeconds`  | Initial delay seconds for livenessProbe                                                   | `300`           |
+| `livenessProbe.periodSeconds`        | Period seconds for livenessProbe                                                          | `10`            |
+| `livenessProbe.timeoutSeconds`       | Timeout seconds for livenessProbe                                                         | `5`             |
+| `livenessProbe.failureThreshold`     | Failure threshold for livenessProbe                                                       | `6`             |
+| `livenessProbe.successThreshold`     | Success threshold for livenessProbe                                                       | `1`             |
+| `readinessProbe.enabled`             | Enable readinessProbe                                                                     | `true`          |
+| `readinessProbe.path`                | Path to check for readinessProbe                                                          | `/`             |
+| `readinessProbe.initialDelaySeconds` | Initial delay seconds for readinessProbe                                                  | `5`             |
+| `readinessProbe.periodSeconds`       | Period seconds for readinessProbe                                                         | `10`            |
+| `readinessProbe.timeoutSeconds`      | Timeout seconds for readinessProbe                                                        | `5`             |
+| `readinessProbe.failureThreshold`    | Failure threshold for readinessProbe                                                      | `6`             |
+| `readinessProbe.successThreshold`    | Success threshold for readinessProbe                                                      | `1`             |
+| `startupProbe.enabled`               | Enable startupProbe                                                                       | `false`         |
+| `startupProbe.path`                  | Path to check for startupProbe                                                            | `/`             |
+| `startupProbe.initialDelaySeconds`   | Initial delay seconds for startupProbe                                                    | `300`           |
+| `startupProbe.periodSeconds`         | Period seconds for startupProbe                                                           | `10`            |
+| `startupProbe.timeoutSeconds`        | Timeout seconds for startupProbe                                                          | `5`             |
+| `startupProbe.failureThreshold`      | Failure threshold for startupProbe                                                        | `6`             |
+| `startupProbe.successThreshold`      | Success threshold for startupProbe                                                        | `1`             |
+| `customLivenessProbe`                | Custom livenessProbe that overrides the default one                                       | `{}`            |
+| `customReadinessProbe`               | Custom readinessProbe that overrides the default one                                      | `{}`            |
+| `customStartupProbe`                 | Custom startupProbe that overrides the default one                                        | `{}`            |
+
+
+### Traffic Exposure Parameters
+
+| Name                               | Description                                                                                           | Value                    |
+| ---------------------------------- | ----------------------------------------------------------------------------------------------------- | ------------------------ |
+| `service.type`                     | Redmine service type                                                                                  | `LoadBalancer`           |
+| `service.port`                     | Redmine service HTTP port                                                                             | `80`                     |
+| `service.nodePort`                 | Node port for HTTP                                                                                    | `nil`                    |
+| `service.clusterIP`                | Redmine service Cluster IP                                                                            | `nil`                    |
+| `service.loadBalancerIP`           | Redmine service Load Balancer IP                                                                      | `nil`                    |
+| `service.loadBalancerSourceRanges` | Redmine service Load Balancer sources                                                                 | `[]`                     |
+| `service.externalTrafficPolicy`    | Redmine service external traffic policy                                                               | `Cluster`                |
+| `service.annotations`              | Additional custom annotations for Redmine service                                                     | `{}`                     |
+| `service.extraPorts`               | Extra port to expose on Redmine service                                                               | `[]`                     |
+| `ingress.enabled`                  | Enable ingress record generation for Redmine                                                          | `false`                  |
+| `ingress.certManager`              | Add the corresponding annotations for cert-manager integration                                        | `false`                  |
+| `ingress.selfSigned`               | Create a TLS secret for this ingress record using self-signed certificates generated by Helm          | `false`                  |
+| `ingress.pathType`                 | Ingress path type                                                                                     | `ImplementationSpecific` |
+| `ingress.apiVersion`               | Force Ingress API version (automatically detected if not set)                                         | `nil`                    |
+| `ingress.hostname`                 | Default host for the ingress record                                                                   | `redmine.local`          |
+| `ingress.path`                     | Default path for the ingress record                                                                   | `ImplementationSpecific` |
+| `ingress.annotations`              | Additional custom annotations for the ingress record                                                  | `{}`                     |
+| `ingress.tls`                      | Enable TLS configuration for the host defined at `ingress.hostname` parameter                         | `false`                  |
+| `ingress.extraHosts`               | An array with additional hostname(s) to be covered with the ingress record                            | `[]`                     |
+| `ingress.extraPaths`               | An array with additional arbitrary paths that may need to be added to the ingress under the main host | `[]`                     |
+| `ingress.extraTls`                 | TLS configuration for additional hostname(s) to be covered with this ingress record                   | `[]`                     |
+| `ingress.secrets`                  | Custom TLS certificates as secrets                                                                    | `[]`                     |
+
+
+### Persistence Parameters
+
+| Name                                          | Description                                                                                     | Value   |
+| --------------------------------------------- | ----------------------------------------------------------------------------------------------- | ------- |
+| `persistence.enabled`                         | Enable persistence using Persistent Volume Claims                                               | `true`  |
+| `persistence.storageClass`                    | Persistent Volume storage class                                                                 | `nil`   |
+| `persistence.accessModes`                     | Persistent Volume access modes                                                                  | `[]`    |
+| `persistence.size`                            | Persistent Volume size                                                                          | `8Gi`   |
+| `persistence.dataSource`                      | Custom PVC data source                                                                          | `{}`    |
+| `persistence.existingClaim`                   | The name of an existing PVC to use for persistence                                              | `nil`   |
+| `volumePermissions.enabled`                   | Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup` | `false` |
+| `volumePermissions.resources.limits`          | The resources limits for the init container                                                     | `{}`    |
+| `volumePermissions.resources.requests`        | The requested resources for the init container                                                  | `{}`    |
+| `volumePermissions.securityContext.runAsUser` | Set init container's Security Context runAsUser                                                 | `0`     |
+
+
+### Other Parameters
+
+| Name                                 | Description                                                    | Value   |
+| ------------------------------------ | -------------------------------------------------------------- | ------- |
+| `podDisruptionBudget.create`         | Enable a Pod Disruption Budget creation                        | `false` |
+| `podDisruptionBudget.minAvailable`   | Minimum number/percentage of pods that should remain scheduled | `nil`   |
+| `podDisruptionBudget.maxUnavailable` | Maximum number/percentage of pods that may be made unavailable | `nil`   |
+| `autoscaling.enabled`                | Enable Horizontal POD autoscaling for Redmine                  | `false` |
+| `autoscaling.minReplicas`            | Minimum number of Redmine replicas                             | `1`     |
+| `autoscaling.maxReplicas`            | Maximum number of Redmine replicas                             | `11`    |
+| `autoscaling.targetCPU`              | Target CPU utilization percentage                              | `50`    |
+| `autoscaling.targetMemory`           | Target Memory utilization percentage                           | `50`    |
+
+
+### Database Parameters
+
+| Name                                        | Description                                                                                                                              | Value             |
+| ------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | ----------------- |
+| `databaseType`                              | Redmine database type. Allowed values: `mariadb` and `postgresql`                                                                        | `mariadb`         |
+| `mariadb.enabled`                           | Whether to deploy a MariaDB server to satisfy the database requirements                                                                  | `true`            |
+| `mariadb.architecture`                      | MariaDB architecture. Allowed values: `standalone` or `replication`                                                                      | `standalone`      |
+| `mariadb.auth.rootPassword`                 | MariaDB root password                                                                                                                    | `""`              |
+| `mariadb.auth.username`                     | MariaDB username                                                                                                                         | `bn_redmine`      |
+| `mariadb.auth.password`                     | MariaDB password                                                                                                                         | `""`              |
+| `mariadb.auth.existingSecret`               | Name of existing secret object                                                                                                           | `nil`             |
+| `mariadb.primary.persistence.enabled`       | Enable MariaDB persistence using PVC                                                                                                     | `true`            |
+| `mariadb.primary.persistence.existingClaim` | Provide an existing `PersistentVolumeClaim`, the value is evaluated as a template                                                        | `nil`             |
+| `mariadb.primary.persistence.storageClass`  | PVC Storage Class for MariaDB volume                                                                                                     | `nil`             |
+| `mariadb.primary.persistence.accessModes`   | PVC Access Mode for MariaDB volume                                                                                                       | `[]`              |
+| `mariadb.primary.persistence.size`          | PVC Storage Request for MariaDB volume                                                                                                   | `8Gi`             |
+| `mariadb.primary.persistence.hostPath`      | Set path in case you want to use local host path volumes (not recommended in production)                                                 | `nil`             |
+| `postgresql.enabled`                        | Whether to deploy a PostgreSQL server to satisfy the database requirements                                                               | `true`            |
+| `postgresql.postgresqlUsername`             | PostgreSQL username                                                                                                                      | `bn_redmine`      |
+| `postgresql.postgresqlPassword`             | PostgreSQL password                                                                                                                      | `""`              |
+| `postgresql.postgresqlDatabase`             | PostgreSQL database                                                                                                                      | `bitnami_redmine` |
+| `postgresql.existingSecret`                 | Name of existing secret object                                                                                                           | `nil`             |
+| `postgresql.persistence.enabled`            | Enable PostgreSQL persistence using PVC                                                                                                  | `true`            |
+| `postgresql.persistence.existingClaim`      | Provide an existing `PersistentVolumeClaim`, the value is evaluated as a template                                                        | `nil`             |
+| `postgresql.persistence.storageClass`       | PVC Storage Class for PostgreSQL volume                                                                                                  | `nil`             |
+| `postgresql.persistence.accessMode`         | PVC Access Mode for PostgreSQL volume                                                                                                    | `ReadWriteOnce`   |
+| `postgresql.persistence.size`               | PVC Storage Request for PostgreSQL volume                                                                                                | `8Gi`             |
+| `externalDatabase.host`                     | External Database server host                                                                                                            | `nil`             |
+| `externalDatabase.port`                     | External Database server port                                                                                                            | `5432`            |
+| `externalDatabase.user`                     | External Database username                                                                                                               | `bn_redmine`      |
+| `externalDatabase.password`                 | External Database user password                                                                                                          | `""`              |
+| `externalDatabase.database`                 | External Database database name                                                                                                          | `bitnami_redmine` |
+| `externalDatabase.existingSecret`           | Use an existing secret for external db password. Must contain the keys `redmine-password` or `mariadb-password` depending on the DB type | `nil`             |
+
+
+### Mail Receiver/Cron Job Parameters
+
+| Name                                                 | Description                                                                                                                                   | Value                 |
+| ---------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | --------------------- |
+| `mailReceiver.enabled`                               | Whether to enable scheduled mail-to-task CronJob                                                                                              | `false`               |
+| `mailReceiver.schedule`                              | Kubernetes CronJob schedule                                                                                                                   | `*/5 * * * *`         |
+| `mailReceiver.suspend`                               | Whether to create suspended CronJob                                                                                                           | `true`                |
+| `mailReceiver.image.registry`                        | Redmine MailReceiver image registry                                                                                                           | `docker.io`           |
+| `mailReceiver.image.repository`                      | Redmine MailReceiver image repository                                                                                                         | `bitnami/redmine`     |
+| `mailReceiver.image.tag`                             | Redmine MailReceiver image tag (immutable tags are recommended)                                                                               | `4.2.1-debian-10-r47` |
+| `mailReceiver.image.pullPolicy`                      | Redmine MailReceiver image pull policy                                                                                                        | `IfNotPresent`        |
+| `mailReceiver.image.pullSecrets`                     | Redmine MailReceiver image pull secrets                                                                                                       | `[]`                  |
+| `mailReceiver.podAnnotations`                        | Additional pod annotations                                                                                                                    | `{}`                  |
+| `mailReceiver.podLabels`                             | Additional pod labels                                                                                                                         | `{}`                  |
+| `mailReceiver.priorityClassName`                     | Redmine pods' priority.                                                                                                                       | `""`                  |
+| `mailReceiver.mailProtocol`                          | Mail protocol to use for reading emails. Allowed values: `IMAP` and `POP3`                                                                    | `IMAP`                |
+| `mailReceiver.host`                                  | Server to receive emails from                                                                                                                 | `""`                  |
+| `mailReceiver.port`                                  | TCP port on the `host`                                                                                                                        | `993`                 |
+| `mailReceiver.username`                              | Login to authenticate on the `host`                                                                                                           | `""`                  |
+| `mailReceiver.password`                              | Password to authenticate on the `host`                                                                                                        | `""`                  |
+| `mailReceiver.ssl`                                   | Whether use SSL/TLS to connect to the `host`                                                                                                  | `true`                |
+| `mailReceiver.startTLS`                              | Whether use StartTLS to connect to the `host`                                                                                                 | `false`               |
+| `mailReceiver.imapFolder`                            | IMAP only. Folder to read emails from                                                                                                         | `INBOX`               |
+| `mailReceiver.moveOnSuccess`                         | IMAP only. Folder to move processed emails to                                                                                                 | `""`                  |
+| `mailReceiver.moveOnFailure`                         | IMAP only. Folder to move emails with processing errors to                                                                                    | `""`                  |
+| `mailReceiver.unknownUserAction`                     | Action to perform is an email received from unregistered user                                                                                 | `ignore`              |
+| `mailReceiver.noPermissionCheck`                     | Whether skip permission check during creating a new task                                                                                      | `0`                   |
+| `mailReceiver.noAccountNotice`                       | Whether send an email to an unregistered user created during a new task creation                                                              | `1`                   |
+| `mailReceiver.defaultGroup`                          | Defines a group list to add created user to                                                                                                   | `""`                  |
+| `mailReceiver.project`                               | Defines identifier of the target project for a new task                                                                                       | `""`                  |
+| `mailReceiver.projectFromSubaddress`                 | Defines email address to select project from subaddress                                                                                       | `""`                  |
+| `mailReceiver.status`                                | Defines a new task status                                                                                                                     | `""`                  |
+| `mailReceiver.tracker`                               | Defines a new task tracker                                                                                                                    | `""`                  |
+| `mailReceiver.category`                              | Defines a new task category                                                                                                                   | `""`                  |
+| `mailReceiver.priority`                              | Defines a new task priority                                                                                                                   | `""`                  |
+| `mailReceiver.assignedTo`                            | Defines a new task assignee                                                                                                                   | `""`                  |
+| `mailReceiver.allowOverride`                         | Defines if email content is allowed to set attributes values. Values is a comma separated list of attributes or `all` to allow all attributes | `""`                  |
+| `mailReceiver.extraEnvVars`                          | Extra environment variables to be set on mailReceiver container                                                                               | `[]`                  |
+| `mailReceiver.extraEnvVarsCM`                        | Name of existing ConfigMap containing extra env vars                                                                                          | `nil`                 |
+| `mailReceiver.extraEnvVarsSecret`                    | Name of existing Secret containing extra env vars                                                                                             | `nil`                 |
+| `mailReceiver.extraVolumes`                          | Optionally specify extra list of additional volumes for mailReceiver container                                                                | `[]`                  |
+| `mailReceiver.extraVolumeMounts`                     | Optionally specify extra list of additional volumeMounts for mailReceiver container                                                           | `[]`                  |
+| `mailReceiver.command`                               | Override default container command (useful when using custom images)                                                                          | `[]`                  |
+| `mailReceiver.args`                                  | Override default container args (useful when using custom images)                                                                             | `[]`                  |
+| `mailReceiver.podSecurityContext.enabled`            | Enabled Redmine pods' Security Context                                                                                                        | `true`                |
+| `mailReceiver.podSecurityContext.fsGroup`            | Set Redmine pod's Security Context fsGroup                                                                                                    | `1001`                |
+| `mailReceiver.containerSecurityContext.enabled`      | mailReceiver Container securityContext                                                                                                        | `false`               |
+| `mailReceiver.containerSecurityContext.runAsUser`    | User ID for the mailReceiver container                                                                                                        | `1001`                |
+| `mailReceiver.containerSecurityContext.runAsNonRoot` | Whether to run the mailReceiver container as a non-root user                                                                                  | `true`                |
+| `mailReceiver.initContainers`                        | Add additional init containers to the mailReceiver pods                                                                                       | `{}`                  |
+| `mailReceiver.sidecars`                              | Add additional sidecar containers to the mailReceiver pods                                                                                    | `{}`                  |
+| `mailReceiver.podAffinityPreset`                     | Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                           | `""`                  |
+| `mailReceiver.podAntiAffinityPreset`                 | Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                      | `soft`                |
+| `mailReceiver.nodeAffinityPreset.type`               | Node affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                          | `""`                  |
+| `mailReceiver.nodeAffinityPreset.key`                | Node label key to match. Ignored if `affinity` is set.                                                                                        | `""`                  |
+| `mailReceiver.nodeAffinityPreset.values`             | Node label values to match. Ignored if `affinity` is set.                                                                                     | `[]`                  |
+| `mailReceiver.affinity`                              | Affinity for pod assignment                                                                                                                   | `{}`                  |
+| `mailReceiver.nodeSelector`                          | Node labels for pod assignment                                                                                                                | `{}`                  |
+| `mailReceiver.tolerations`                           | Tolerations for pod assignment                                                                                                                | `[]`                  |
+
 
 ### Custom Certificates parameters
-| Parameter                                            | Description                                                        | Default                                  |
-|------------------------------------------------------|--------------------------------------------------------------------|------------------------------------------|
+
+| Name                                                 | Description                                                        | Value                                    |
+| ---------------------------------------------------- | ------------------------------------------------------------------ | ---------------------------------------- |
 | `certificates.customCertificate.certificateSecret`   | Secret containing the certificate and key to add                   | `""`                                     |
-| `certificates.customCertificate.chainSecret.name`    | Name of the secret containing the certificate chain                | `""`                                     |
-| `certificates.customCertificate.chainSecret.key`     | Key of the certificate chain file inside the secret                | `""`                                     |
 | `certificates.customCertificate.certificateLocation` | Location in the container to store the certificate                 | `/etc/ssl/certs/ssl-cert-snakeoil.pem`   |
 | `certificates.customCertificate.keyLocation`         | Location in the container to store the private key                 | `/etc/ssl/private/ssl-cert-snakeoil.key` |
-| `certificates.customCertificate.chainLocation`       | Location in the container to store the certificate chain           | `/etc/ssl/certs/chain.pem`               |
+| `certificates.customCertificate.chainLocation`       | Location in the container to store the certificate chain           | `/etc/ssl/certs/mychain.pem`             |
+| `certificates.customCertificate.chainSecret.name`    | Name of the secret containing the certificate chain                | `nil`                                    |
+| `certificates.customCertificate.chainSecret.key`     | Key of the certificate chain file inside the secret                | `nil`                                    |
 | `certificates.customCA`                              | Defines a list of secrets to import into the container trust store | `[]`                                     |
-| `certificates.image.registry`                        | Container sidecar registry                                         | `docker.io`                              |
-| `certificates.image.repository`                      | Container sidecar image                                            | `bitnami/bitnami-shell`                  |
-| `certificates.image.tag`                             | Container sidecar image tag                                        | `"10"`                                   |
-| `certificates.image.pullPolicy`                      | Container sidecar image pull policy                                | `IfNotPresent`                           |
-| `certificates.image.pullSecrets`                     | Container sidecar image pull secrets                               | `image.pullSecrets`                      |
-| `certificates.extraEnvVars`                          | Container sidecar extra environment variables (eg proxy)           | `[]`                                     |
+| `certificates.image.registry`                        | Redmine image registry                                             | `docker.io`                              |
+| `certificates.image.repository`                      | Redmine image repository                                           | `bitnami/bitnami-shell`                  |
+| `certificates.image.tag`                             | Redmine image tag (immutable tags are recommended)                 | `10-debian-10-r112`                      |
+| `certificates.image.pullPolicy`                      | Redmine image pull policy                                          | `IfNotPresent`                           |
+| `certificates.image.pullSecrets`                     | Redmine image pull secrets                                         | `[]`                                     |
+| `certificates.extraEnvVars`                          | Container sidecar extra environment variables (e.g. proxy)         | `[]`                                     |
+
 
 The above parameters map to the env variables defined in [bitnami/redmine](http://github.com/bitnami/bitnami-docker-redmine). For more information please refer to the [bitnami/redmine](http://github.com/bitnami/bitnami-docker-redmine) image documentation.
 
@@ -346,7 +386,7 @@ Redmine writes uploaded files to a persistent volume. By default that volume can
 
 On certain occasions, you may need that Redmine is available under a specific sub-URI path rather than the root. A common scenario to this problem may arise if you plan to set up your Redmine container behind a reverse proxy. To deploy your Redmine container using a certain sub-URI you just need to follow these steps:
 
-#### Create a configmap containing an altered version of init.sh
+#### Create a configmap containing an altered version of post-init.sh
 
 ```yaml
 apiVersion: v1
@@ -358,19 +398,9 @@ metadata:
   ...
 data:
 
-  init.sh: |-
-
+  post-init.sh: |-
     #!/bin/bash
 
-    # Set default values depending on database variation
-    if [ -n "$REDMINE_DB_POSTGRES" ]; then
-        export REDMINE_DB_PORT_NUMBER=${REDMINE_DB_PORT_NUMBER:-5432}
-        export REDMINE_DB_USERNAME=${REDMINE_DB_USERNAME:-postgres}
-    elif [ -n "$REDMINE_DB_MYSQL" ]; then
-        export REDMINE_DB_PORT_NUMBER=${REDMINE_DB_PORT_NUMBER:-3306}
-        export REDMINE_DB_USERNAME=${REDMINE_DB_USERNAME:-root}
-    fi
-
     # REPLACE WITH YOUR OWN SUB-URI
     SUB_URI_PATH='/redmine'
 
@@ -378,13 +408,11 @@ data:
     config1=/opt/bitnami/redmine/config.ru
     config2=/opt/bitnami/redmine/config/environment.rb
 
-    if [[ ! -d /opt/bitnami/redmine/conf/ ]]; then
-        sed -i '$ d' ${config1}
-        echo 'map ActionController::Base.config.try(:relative_url_root) || "/" do' >> ${config1}
-        echo 'run Rails.application' >> ${config1}
-        echo 'end' >> ${config1}
-        echo 'Redmine::Utils::relative_url_root = "'${SUB_URI_PATH}'"' >> ${config2}
-    fi
+    sed -i '$ d' ${config1}
+    echo 'map ActionController::Base.config.try(:relative_url_root) || "/" do' >> ${config1}
+    echo 'run Rails.application' >> ${config1}
+    echo 'end' >> ${config1}
+    echo 'Redmine::Utils::relative_url_root = "'${SUB_URI_PATH}'"' >> ${config2}
 
     SUB_URI_PATH=$(echo ${SUB_URI_PATH} | sed -e 's|/|\\/|g')
     sed -i -e "s/\(relative_url_root\ \=\ \"\).*\(\"\)/\1${SUB_URI_PATH}\2/" ${config2}
@@ -404,8 +432,8 @@ extraVolumes:
 ##
 extraVolumeMounts:
   - name: "redmine-init-volume"
-    mountPath: "/init.sh"
-    subPath: init.sh
+    mountPath: "/post-init.sh"
+    subPath: post-init.sh
 ```
 
 #### Change the probes URI
@@ -506,6 +534,20 @@ Find more information about how to deal with common errors related to Bitnami’
 
 ## Upgrading
 
+### 16.0.0
+
+The [Bitnami Redmine](https://github.com/bitnami/bitnami-docker-redmine) image was refactored and now the source code is published in GitHub in the [`rootfs`](https://github.com/bitnami/bitnami-docker-redmine/tree/master/4/debian-10/rootfs) folder of the container image repository.
+
+Upgrades from previous versions require to specify `--set volumePermissions.enabled=true` in order for all features to work properly:
+
+```console
+$ helm upgrade example bitnami/redmine --set redminePassword=$REDMINE_PASSWORD --set mariadb.auth.rootPassword=$MARIADB_ROOT_PASSWORD --set mariadb.auth.password=$MARIADB_PASSWORD --set volumePermissions.enabled=true
+```
+
+In addition, the `replicas` parameter was renamed to `replicaCount`.
+
+Full compatibility is not guaranteed due to the amount of involved changes, however no breaking changes are expected aside from the ones mentioned above.
+
 ### 15.0.0
 
 [On November 13, 2020, Helm v2 support was formally finished](https://github.com/helm/charts#status-of-the-project), this major version includes all the required changes applied to the Helm Chart to be able to incorporate the different features added in Helm v3 and to be consistent with the Helm project itself regarding the Helm v2 EOL.
diff --git a/bitnami/redmine/templates/_helpers.tpl b/bitnami/redmine/templates/_helpers.tpl
index a2e48bef42..f3356fcbfc 100644
--- a/bitnami/redmine/templates/_helpers.tpl
+++ b/bitnami/redmine/templates/_helpers.tpl
@@ -26,7 +26,7 @@ Return the proper Redmine image name
 Return the proper Docker Image Registry Secret Names
 */}}
 {{- define "redmine.imagePullSecrets" -}}
-{{- include "common.images.pullSecrets" (dict "images" (list .Values.image .Values.mailReceiver.image .Values.volumePermissions.image .Values.certificates.image) "global" .Values.global) -}}
+{{- include "common.images.pullSecrets" (dict "images" (list .Values.image .Values.mailReceiver.image .Values.certificates.image) "global" .Values.global) -}}
 {{- end -}}
 
 {{/*
@@ -162,10 +162,3 @@ Return the name of the database secret with its credentials
     {{- end -}}
 {{- end -}}
 {{- end -}}
-
-{{/*
-Return the proper image name (for the init container volume-permissions image)
-*/}}
-{{- define "redmine.volumePermissions.image" -}}
-{{- include "common.images.image" ( dict "imageRoot" .Values.volumePermissions.image "global" .Values.global ) -}}
-{{- end -}}
diff --git a/bitnami/redmine/templates/cronjob.yaml b/bitnami/redmine/templates/cronjob.yaml
index c14abc0a1c..e4720c8819 100644
--- a/bitnami/redmine/templates/cronjob.yaml
+++ b/bitnami/redmine/templates/cronjob.yaml
@@ -3,6 +3,7 @@ apiVersion: batch/v1beta1
 kind: CronJob
 metadata:
   name: {{ template "redmine.mailReceiver.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: mail-receiver
     {{- if .Values.commonLabels }}
diff --git a/bitnami/redmine/templates/deployment.yaml b/bitnami/redmine/templates/deployment.yaml
index 7ac572bc16..1e54291c57 100644
--- a/bitnami/redmine/templates/deployment.yaml
+++ b/bitnami/redmine/templates/deployment.yaml
@@ -2,6 +2,7 @@ apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
 kind: Deployment
 metadata:
   name: {{ include "common.names.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: redmine
     {{- if .Values.commonLabels }}
@@ -14,7 +15,7 @@ spec:
   selector:
     matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: redmine
-  replicas: {{ .Values.replicas }}
+  replicas: {{ .Values.replicaCount }}
   strategy: {{ toYaml .Values.updateStrategy | nindent 4 }}
   template:
     metadata:
@@ -28,6 +29,9 @@ spec:
       {{- end }}
     spec:
       {{- include "redmine.imagePullSecrets" . | nindent 6 }}
+      {{- if .Values.schedulerName }}
+      schedulerName: {{ .Values.schedulerName | quote }}
+      {{- end }}
       {{- if .Values.hostAliases }}
       hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
       {{- end }}
@@ -56,14 +60,14 @@ spec:
         {{- include "certificates.initContainer" . | indent 8 }}
         {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
         - name: volume-permissions
-          image: {{ include "redmine.volumePermissions.image" . }}
-          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
+          image: {{ include "redmine.image" . }}
+          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
           command:
             - sh
             - -c
             - |
               mkdir -p "/bitnami/redmine"
-              chown -R "{{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}" "/bitnami/redmine"
+              chown -R "redmine:root" "/bitnami/redmine"
           securityContext:
             runAsUser: 0
           {{- if .Values.volumePermissions.resources }}
@@ -96,17 +100,19 @@ spec:
           args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
           {{- end }}
           env:
-            {{- if eq .Values.databaseType "mariadb" }}
-            - name: REDMINE_DB_MYSQL
-            {{- else }}
-            - name: REDMINE_DB_POSTGRES
-            {{- end }}
+            - name: BITNAMI_DEBUG
+              value: {{ ternary "true" "false" .Values.image.debug | quote }}
+            - name: ALLOW_EMPTY_PASSWORD
+              value: {{ ternary "yes" "no" .Values.allowEmptyPassword | quote }}
+            - name: REDMINE_DATABASE_TYPE
+              value: {{ .Values.databaseType | quote }}
+            - name: REDMINE_DATABASE_HOST
               value: {{ template "redmine.database.host" . }}
-            - name: REDMINE_DB_NAME
+            - name: REDMINE_DATABASE_NAME
               value: {{ template "redmine.database.name" . }}
-            - name: REDMINE_DB_USERNAME
+            - name: REDMINE_DATABASE_USER
               value: {{ template "redmine.database.username" . }}
-            - name: REDMINE_DB_PASSWORD
+            - name: REDMINE_DATABASE_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: {{ template "redmine.database.secretName" . }}
@@ -116,7 +122,7 @@ spec:
                   key: postgresql-password
                   {{- end }}
             {{- if (include "redmine.useExternalDB" .) }}
-            - name: REDMINE_DB_PORT_NUMBER
+            - name: REDMINE_DATABASE_PORT_NUMBER
               value: {{ .Values.externalDatabase.port | quote }}
             {{- end }}
             - name: REDMINE_USERNAME
@@ -131,27 +137,30 @@ spec:
             - name: REDMINE_LANG
               value: {{ .Values.redmineLanguage | quote }}
             {{- if .Values.smtpHost }}
-            - name: SMTP_HOST
+            - name: REDMINE_SMTP_HOST
               value: {{ .Values.smtpHost | quote }}
             {{- end }}
             {{- if .Values.smtpPort }}
-            - name: SMTP_PORT
+            - name: REDMINE_SMTP_PORT_NUMBER
               value: {{ .Values.smtpPort | quote }}
             {{- end }}
             {{- if .Values.smtpUser }}
-            - name: SMTP_USER
+            - name: REDMINE_SMTP_USER
               value: {{ .Values.smtpUser | quote }}
             {{- end }}
             {{- if .Values.smtpPassword }}
-            - name: SMTP_PASSWORD
+            - name: REDMINE_SMTP_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: {{ template "redmine.secretName" . }}
                   key: smtp-password
             {{- end }}
             {{- if .Values.smtpTls }}
-            - name: SMTP_TLS
-              value: {{ .Values.smtpTls | quote }}
+            - name: REDMINE_SMTP_PROTOCOL
+              value: "tls"
+            {{- else if .Values.smtpProtocol }}
+            - name: REDMINE_SMTP_PROTOCOL
+              value: {{ .Values.smtpProtocol | quote }}
             {{- end }}
             {{- if .Values.extraEnvVars }}
             {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
@@ -166,13 +175,13 @@ spec:
                 name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
             {{- end }}
           ports:
-            - name: http-redmine
-              containerPort: {{ .Values.containerPorts.http }}
+            - name: http
+              containerPort: {{ .Values.containerPort }}
           {{- if .Values.livenessProbe.enabled }}
           livenessProbe:
             httpGet:
               path: {{ .Values.livenessProbe.path }}
-              port: http-redmine
+              port: http
             initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
             periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
             timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
@@ -185,7 +194,7 @@ spec:
           readinessProbe:
             httpGet:
               path: {{ .Values.readinessProbe.path }}
-              port: http-redmine
+              port: http
             initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
             periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
             timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
@@ -194,8 +203,25 @@ spec:
           {{- else if .Values.customReadinessProbe }}
           readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
           {{- end }}
+          {{- if .Values.startupProbe.enabled }}
+          startupProbe:
+            httpGet:
+              path: {{ .Values.startupProbe.path }}
+              port: http
+            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
+            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
+            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
+            successThreshold: {{ .Values.startupProbe.successThreshold }}
+            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
+          {{- else if .Values.customStartupProbe }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
+          {{- end }}
           volumeMounts:
             {{- include "certificates.volumeMount" . | indent 12 }}
+            {{- if .Values.customPostInitScripts }}
+            - mountPath: /docker-entrypoint-init.d
+              name: custom-postinit
+            {{- end }}
             {{- if .Values.extraVolumeMounts }}
             {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
             {{- end }}
@@ -213,6 +239,12 @@ spec:
           {{- else }}
           emptyDir: {}
           {{- end }}
+        {{- if .Values.customPostInitScripts }}
+        - name: custom-postinit
+          configMap:
+            name: {{ printf "%s-postinit" (include "common.names.fullname" .) }}
+            defaultMode: 0755
+        {{- end }}
         {{- if .Values.extraVolumes }}
         {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
         {{- end }}
diff --git a/bitnami/redmine/templates/ingress.yaml b/bitnami/redmine/templates/ingress.yaml
index 02effcf6de..6c674ed734 100644
--- a/bitnami/redmine/templates/ingress.yaml
+++ b/bitnami/redmine/templates/ingress.yaml
@@ -1,23 +1,25 @@
 {{- if .Values.ingress.enabled }}
-apiVersion: {{ template "common.capabilities.ingress.apiVersion" . }}
+apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
 kind: Ingress
 metadata:
-  name: {{ include "common.names.fullname" . }}
+  name: {{ template "common.names.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: redmine
     {{- if .Values.commonLabels }}
     {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
     {{- end }}
+  {{- if or .Values.ingress.annotations .Values.commonAnnotations .Values.ingress.certManager }}
   annotations:
     {{- if .Values.ingress.certManager }}
     kubernetes.io/tls-acme: "true"
     {{- end }}
     {{- if .Values.ingress.annotations }}
-    {{- include "common.tplvalues.render" (dict "value" .Values.ingress.annotations "context" $) | nindent 4 }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.annotations "context" $) | nindent 4 }}
     {{- end }}
     {{- if .Values.commonAnnotations }}
     {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
     {{- end }}
+  {{- end }}
 spec:
   rules:
     {{- if .Values.ingress.hostname }}
@@ -31,27 +33,27 @@ spec:
             {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
             pathType: {{ .Values.ingress.pathType }}
             {{- end }}
-            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" .) "servicePort" "http-redmine" "context" $)  | nindent 14 }}
+            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" .) "servicePort" "http" "context" $)  | nindent 14 }}
     {{- end }}
     {{- range .Values.ingress.extraHosts }}
-    - host: {{ .name }}
+    - host: {{ .name | quote }}
       http:
         paths:
           - path: {{ default "/" .path }}
             {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
             pathType: {{ default "ImplementationSpecific" .pathType }}
             {{- end }}
-            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" $) "servicePort" "http-redmine" "context" $) | nindent 14 }}
+            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" $) "servicePort" "http" "context" $) | nindent 14 }}
     {{- end }}
-  {{- if or .Values.ingress.tls .Values.ingress.extraTls .Values.ingress.hosts }}
+  {{- if or (and .Values.ingress.tls (or .Values.ingress.certManager .Values.ingress.selfSigned)) .Values.ingress.extraTls }}
   tls:
-    {{- if .Values.ingress.tls }}
+    {{- if and .Values.ingress.tls (or .Values.ingress.certManager .Values.ingress.selfSigned) }}
     - hosts:
-        - {{ .Values.ingress.hostname }}
+        - {{ .Values.ingress.hostname | quote }}
       secretName: {{ printf "%s-tls" .Values.ingress.hostname }}
     {{- end }}
     {{- if .Values.ingress.extraTls }}
-    {{- toYaml .Values.ingress.extraTls | nindent 4 }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.ingress.extraTls "context" $) | nindent 4 }}
     {{- end }}
   {{- end }}
 {{- end }}
diff --git a/bitnami/redmine/templates/mail-receiver-configmap.yaml b/bitnami/redmine/templates/mail-receiver-configmap.yaml
index 56f4e2897c..0141c13d25 100644
--- a/bitnami/redmine/templates/mail-receiver-configmap.yaml
+++ b/bitnami/redmine/templates/mail-receiver-configmap.yaml
@@ -3,6 +3,7 @@ apiVersion: v1
 kind: ConfigMap
 metadata:
   name: {{ include "common.names.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: mail-receiver
     {{- if .Values.commonLabels }}
@@ -44,7 +45,7 @@ data:
     cd /opt/bitnami/redmine
 
     # Configuring Database connection
-    if [ $REDMINE_DB_MYSQL ]; then
+    if [ "$REDMINE_DATABASE_TYPE" = "mariadb" ]; then
     cat <<END > config/database.yml
         production:
             adapter: mysql2
@@ -64,7 +65,7 @@ data:
             port: <%= ENV["REDMINE_MAIL_RECEIVER_DB_PORT"] %>
             encoding: utf8
     END
-    elif [ $REDMINE_DB_POSTGRES ]; then
+    elif [ "$REDMINE_DATABASE_TYPE" = "postgresql" ]; then
     cat <<END > config/database.yml
         test:
             adapter: mysql2
diff --git a/bitnami/redmine/templates/pdb.yaml b/bitnami/redmine/templates/pdb.yaml
index 6507ece3f8..ae95644581 100644
--- a/bitnami/redmine/templates/pdb.yaml
+++ b/bitnami/redmine/templates/pdb.yaml
@@ -3,8 +3,8 @@ apiVersion: policy/v1beta1
 kind: PodDisruptionBudget
 metadata:
   name: {{ include "common.names.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: redmine
     {{- if .Values.commonLabels }}
     {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
     {{- end }}
@@ -20,5 +20,4 @@ spec:
   {{- end }}
   selector:
     matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: redmine
 {{- end }}
diff --git a/bitnami/redmine/templates/pvc.yaml b/bitnami/redmine/templates/pvc.yaml
index 4a39e9494a..2e4aacc597 100644
--- a/bitnami/redmine/templates/pvc.yaml
+++ b/bitnami/redmine/templates/pvc.yaml
@@ -3,8 +3,8 @@ kind: PersistentVolumeClaim
 apiVersion: v1
 metadata:
   name: {{ include "common.names.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: redmine
     {{- if .Values.commonLabels }}
     {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
     {{- end }}
@@ -13,11 +13,18 @@ metadata:
   {{- end }}
 spec:
   accessModes:
-    {{- range .Values.persistence.accessModes }}
+  {{- if not (empty .Values.persistence.accessModes) }}
+  {{- range .Values.persistence.accessModes }}
     - {{ . | quote }}
-    {{- end }}
+  {{- end }}
+  {{- else }}
+    - {{ .Values.persistence.accessMode | quote }}
+  {{- end }}
   resources:
     requests:
       storage: {{ .Values.persistence.size | quote }}
-  {{ include "redmine.storageClass" . }}
+  {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 2 }}
+  {{- if .Values.persistence.dataSource }}
+  dataSource: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.dataSource "context" $) | nindent 4 }}
+  {{- end }}
 {{- end }}
diff --git a/bitnami/redmine/templates/secrets.yaml b/bitnami/redmine/templates/secrets.yaml
index cdfaa048c7..b121ae716d 100644
--- a/bitnami/redmine/templates/secrets.yaml
+++ b/bitnami/redmine/templates/secrets.yaml
@@ -3,6 +3,7 @@ apiVersion: v1
 kind: Secret
 metadata:
   name: {{ include "common.names.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: redmine
     {{- if .Values.commonLabels }}
diff --git a/bitnami/redmine/templates/serviceaccount.yaml b/bitnami/redmine/templates/serviceaccount.yaml
index 6b7990574a..a2e1c3d872 100644
--- a/bitnami/redmine/templates/serviceaccount.yaml
+++ b/bitnami/redmine/templates/serviceaccount.yaml
@@ -3,6 +3,7 @@ apiVersion: v1
 kind: ServiceAccount
 metadata:
   name: {{ template "redmine.serviceAccountName" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: redmine
     {{- if .Values.commonLabels }}
diff --git a/bitnami/redmine/templates/svc.yaml b/bitnami/redmine/templates/svc.yaml
index 3c9eacf12b..a024214bc6 100644
--- a/bitnami/redmine/templates/svc.yaml
+++ b/bitnami/redmine/templates/svc.yaml
@@ -2,13 +2,19 @@ apiVersion: v1
 kind: Service
 metadata:
   name: {{ include "common.names.fullname" . }}
+  namespace: {{ .Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: redmine
     {{- if .Values.commonLabels }}
     {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
     {{- end }}
-  {{- if .Values.commonAnnotations }}
-  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- if or .Values.service.annotations .Values.commonAnnotations }}
+  annotations:
+    {{- if .Values.service.annotations }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.service.annotations "context" $) | nindent 4 }}
+    {{- end }}
+    {{- if .Values.commonAnnotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+    {{- end }}
   {{- end }}
 spec:
   type: {{ .Values.service.type }}
@@ -19,18 +25,23 @@ spec:
   {{- if (or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "NodePort")) }}
   externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy | quote }}
   {{- end }}
-  {{ if eq .Values.service.type "LoadBalancer" }}
-  loadBalancerSourceRanges: {{ .Values.service.loadBalancerSourceRanges }}
-  {{ end }}
+  {{- if (and (eq .Values.service.type "LoadBalancer") .Values.service.loadBalancerSourceRanges) }}
+  loadBalancerSourceRanges: {{- toYaml . | nindent 4 }}
+  {{- end }}
   {{- if (and (eq .Values.service.type "LoadBalancer") (not (empty .Values.service.loadBalancerIP))) }}
   loadBalancerIP: {{ .Values.service.loadBalancerIP }}
   {{- end }}
   ports:
-    - name: http-redmine
+    - name: http
       port: {{ .Values.service.port }}
-      targetPort: http-redmine
-      {{- if (and (eq .Values.service.type "NodePort") (not (empty .Values.service.nodePorts.http)))}}
-      nodePort: {{ .Values.service.nodePorts.http }}
+      protocol: TCP
+      targetPort: http
+      {{- if (and (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) (not (empty .Values.service.nodePort))) }}
+      nodePort: {{ .Values.service.nodePort }}
+      {{- else if eq .Values.service.type "ClusterIP" }}
+      nodePort: null
       {{- end }}
+    {{- if .Values.service.extraPorts }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.service.extraPorts "context" $) | nindent 4 }}
+    {{- end }}
   selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
-    app.kubernetes.io/component: redmine
diff --git a/bitnami/redmine/templates/tls-secrets.yaml b/bitnami/redmine/templates/tls-secrets.yaml
index 5640919086..f8d0d22393 100644
--- a/bitnami/redmine/templates/tls-secrets.yaml
+++ b/bitnami/redmine/templates/tls-secrets.yaml
@@ -1,16 +1,17 @@
 {{- if .Values.ingress.enabled }}
+{{- if .Values.ingress.secrets }}
 {{- range .Values.ingress.secrets }}
 apiVersion: v1
 kind: Secret
 metadata:
   name: {{ .name }}
+  namespace: {{ $.Release.Namespace | quote }}
   labels: {{- include "common.labels.standard" $ | nindent 4 }}
-    app.kubernetes.io/component: redmine
     {{- if $.Values.commonLabels }}
-    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- include "common.tplvalues.render" ( dict "value" $.Values.commonLabels "context" $ ) | nindent 4 }}
     {{- end }}
   {{- if $.Values.commonAnnotations }}
-  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
   {{- end }}
 type: kubernetes.io/tls
 data:
@@ -19,3 +20,25 @@ data:
 ---
 {{- end }}
 {{- end }}
+{{- if and .Values.ingress.tls .Values.ingress.selfSigned }}
+{{- $ca := genCA "redmine-ca" 365 }}
+{{- $cert := genSignedCert .Values.ingress.hostname nil (list .Values.ingress.hostname) 365 $ca }}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ printf "%s-tls" .Values.ingress.hostname }}
+  namespace: {{ .Release.Namespace | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
+type: kubernetes.io/tls
+data:
+  tls.crt: {{ $cert.Cert | b64enc | quote }}
+  tls.key: {{ $cert.Key | b64enc | quote }}
+  ca.crt: {{ $ca.Cert | b64enc | quote }}
+{{- end }}
+{{- end }}
diff --git a/bitnami/redmine/values.yaml b/bitnami/redmine/values.yaml
index 4adb167372..0a1510ed3e 100644
--- a/bitnami/redmine/values.yaml
+++ b/bitnami/redmine/values.yaml
@@ -1,20 +1,55 @@
+## @section Global parameters
 ## Global Docker image parameters
 ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
-## Current available global Docker image parameters: imageRegistry and imagePullSecrets
+## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
+
+## @param global.imageRegistry Global Docker image registry
+## @param global.imagePullSecrets Global Docker registry secret names as an array
+## @param global.storageClass Global StorageClass for Persistent Volume(s)
 ##
-# global:
-#   imageRegistry: myRegistryName
-#   imagePullSecrets:
-#     - myRegistryKeySecretName
-#   storageClass: myStorageClass
+global:
+  imageRegistry:
+  ## E.g.
+  ## imagePullSecrets:
+  ##   - myRegistryKeySecretName
+  ##
+  imagePullSecrets: []
+  storageClass:
 
-## Bitnami Redmine image version
+## @section Common parameters
+
+## @param kubeVersion Override Kubernetes version
+##
+kubeVersion:
+## @param nameOverride String to partially override common.names.fullname
+##
+nameOverride:
+## @param fullnameOverride String to fully override common.names.fullname
+##
+fullnameOverride:
+## @param commonLabels Labels to add to all deployed objects
+##
+commonLabels: {}
+## @param commonAnnotations Annotations to add to all deployed objects
+##
+commonAnnotations: {}
+## @param extraDeploy Array of extra objects to deploy with the release
+##
+extraDeploy: []
+
+## Bitnami Redmine image
 ## ref: https://hub.docker.com/r/bitnami/redmine/tags/
+## @param image.registry Redmine image registry
+## @param image.repository Redmine image repository
+## @param image.tag Redmine image tag (immutable tags are recommended)
+## @param image.pullPolicy Redmine image pull policy
+## @param image.pullSecrets [array] Redmine image pull secrets
+## @param image.debug Enable image debug mode
 ##
 image:
   registry: docker.io
   repository: bitnami/redmine
-  tag: 4.2.1-debian-10-r48
+  tag: 4.2.1-debian-10-r71
   ## Specify a imagePullPolicy
   ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
   ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
@@ -23,239 +58,240 @@ image:
   ## Optionally specify an array of imagePullSecrets.
   ## Secrets must be manually created in the namespace.
   ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+  ## e.g:
   ##
   # pullSecrets:
   #   - myRegistryKeySecretName
+  pullSecrets: []
+  ## Enable debug mode
+  ##
+  debug: false
 
-## Force target Kubernetes version (using Helm capabilites if not set)
-##
-kubeVersion:
-
-## Deployment pod host aliases
-## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
-##
-hostAliases: []
-
-## String to partially override redmine.fullname template (will maintain the release name)
-##
-# nameOverride:
-
-## String to fully override redmine.fullname template
-##
-# fullnameOverride:
-
-## Update strategy for Deployments. Set to recreate if persistent volume cannot be mounted to move than one pod.
-## Example:
-## updateStrategy:
-##  type: RollingUpdate
-##  rollingUpdate:
-##    maxSurge: 25%
-##    maxUnavailable: 25%
-##
-updateStrategy:
-  type: RollingUpdate
+## @section Redmine Configuration parameters
+## Redmine settings based on environment variables
+## ref: https://github.com/bitnami/bitnami-docker-redmine#environment-variables
 
-## User of the application
-## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
+## @param redmineUsername Redmine username
+## ref: https://github.com/bitnami/bitnami-docker-redmine#configuration
 ##
 redmineUsername: user
-
-## Application password
+## @param redminePassword Redmine user password
 ## Defaults to a random 10-character alphanumeric string if not set
-## ref: https://github.com/bitnami/bitnami-docker-redmine#environment-variables
+## ref: https://github.com/bitnami/bitnami-docker-redmine#configuration
 ##
-# redminePassword:
-
-## Admin email
-## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
+redminePassword: ""
+## @param redmineEmail Redmine user email
+## ref: https://github.com/bitnami/bitnami-docker-redmine#configuration
 ##
 redmineEmail: user@example.com
-
-## Redmine default data language
+## @param redmineLanguage Redmine default data language
 ## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
 ##
 redmineLanguage: en
-
+## @param customPostInitScripts Custom post-init.d user scripts
+## ref: https://github.com/bitnami/bitnami-docker-redmine/tree/master/14.0/debian-10/rootfs/post-init.d
+## NOTE: supported formats are `.sh`, `.sql` or `.php`
+## NOTE: scripts are exclusively executed during the 1st boot of the container
+## e.g:
+##
+# customPostInitScripts:
+#   enable-logs.sh: |
+#     #!/bin/bash
+#     sed -i s/;logfile/logfile/ /opt/bitnami/redmine/conf/redmine.conf
+#     ...
+customPostInitScripts: {}
 ## SMTP mail delivery configuration
 ## ref: https://github.com/bitnami/bitnami-docker-redmine/#smtp-configuration
+## @param smtpHost SMTP server host
+## @param smtpPort SMTP server port
+## @param smtpUser SMTP username
+## @param smtpPassword SMTP user password
+## @param smtpProtocol SMTP protocol
+##
+smtpHost: ""
+smtpPort: ""
+smtpUser: ""
+smtpPassword: ""
+smtpProtocol: ""
+## @param existingSecret Name of existing secret containing Redmine credentials
+## NOTE: Must contain key `redmine-password`
+## NOTE: When it's set, the `redminePassword` parameter is ignored
+##
+existingSecret:
+## @param smtpExistingSecret The name of an existing secret with SMTP credentials
+## NOTE: Must contain key `smtp-password`
+## NOTE: When it's set, the `smtpPassword` parameter is ignored
+##
+smtpExistingSecret:
+## @param allowEmptyPassword Allow the container to be started with blank passwords
+##
+allowEmptyPassword: false
+## @param command Override default container command (useful when using custom images)
 ##
-# smtpHost:
-# smtpPort:
-# smtpUser:
-# smtpPassword:
-# smtpTls:
-
-## Use an existing secret with keys "redmine-password" and "smtp-password".
-## This ignores both redminePassword and smtpPassword properties.
-# existingSecret:
-
-## An array to add extra env vars
-## For example:
+command: []
+## @param args Override default container args (useful when using custom images)
+##
+args: []
+## @param extraEnvVars Array with extra environment variables to add to the Redmine container
+## e.g:
 ##
+# extraEnvVars:
+#   - name: FOO
+#     value: "bar"
 extraEnvVars: []
-#  - name: BEARER_AUTH
-#    value: true
-
-## ConfigMap with extra environment variables
+## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
 ##
 extraEnvVarsCM:
-
-## Secret with extra environment variables
+## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
 ##
 extraEnvVarsSecret:
 
-## Extra volumes to add to the deployment
-##
-extraVolumes: []
-
-## Extra volume mounts to add to the container
-##
-extraVolumeMounts: []
-
-## Command and args for running the Redmine container (set to default if not set). Use array form
-##
-command: []
-args: []
+## @section Redmine deployment parameters
 
-## Define a disruption budget
-## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
+## @param replicaCount Number of Redmine replicas to deploy
+## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
 ##
-podDisruptionBudget:
-  enabled: false
-  # minAvailable: 1
-  # maxUnavailable: 1
-
-## Define the number of pods the deployment will create
-## Do not change unless your persistent volume allows more than one writer, ie NFS
-## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
+replicaCount: 1
+## @param updateStrategy.type Redmine deployment strategy type
+## @param updateStrategy.rollingUpdate Redmine deployment rolling update configuration parameters
+## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
+## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
+## e.g:
 ##
-replicas: 1
-
-## SecurityContext configuration
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
-##
-containerSecurityContext:
-  enabled: false
-  runAsUser: 0
-
-podSecurityContext:
-  enabled: false
-  fsGroup: 0
-
-## Redmine containers' resource requests and limits
-## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+# updateStrategy:
+#  type: RollingUpdate
+#  rollingUpdate:
+#    maxSurge: 25%
+#    maxUnavailable: 25%
+updateStrategy:
+  type: RollingUpdate
+  rollingUpdate: {}
+## @param schedulerName Alternate scheduler
+## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
 ##
-resources:
-  # We usually recommend not to specify default resources and to leave this as a conscious
-  # choice for the user. This also increases chances charts run on environments with little
-  # resources, such as Minikube. If you do want to specify resources, uncomment the following
-  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
-  limits: {}
-  #  cpu: 2
-  #  memory: 1Gi
-  requests: {}
-  #  cpu: 1
-  #  memory: 1Gi
-
-## Pods Service Account
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
+schedulerName:
+## @param serviceAccount.create Specifies whether a ServiceAccount should be created
+## @param serviceAccount.name The name of the ServiceAccount to create. Defaults to the `redmine.fullname` macro
 ##
 serviceAccount:
-  ## Specifies whether a ServiceAccount should be created
-  ##
-  create: true
-  ## The name of the ServiceAccount to use.
-  ## If not set and create is true, a name is generated using the redmine.fullname template
-  # name:
-
-## Pod Security Context
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
+  create: false
+  name:
+## @param hostAliases [array] Redmine pod host aliases
+## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
 ##
-securityContext: {}
-
-## Add labels to all the deployed resources
+hostAliases: []
+## @param extraVolumes Optionally specify extra list of additional volumes for Redmine pods
 ##
-commonLabels: {}
-
-## Add annotations to all the deployed resources
+extraVolumes: []
+## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Redmine container(s)
 ##
-commonAnnotations: {}
-
-## Additional pod annotations
-## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
+extraVolumeMounts: []
+## @param sidecars Add additional sidecar containers to the Redmine pod
+## e.g:
+##
+# sidecars:
+#   - name: your-image-name
+#     image: your-image
+#     imagePullPolicy: Always
+#     ports:
+#       - name: portname
+#         containerPort: 1234
+sidecars: {}
+## @param initContainers Add additional init containers to the Redmine pods
+## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
+## e.g:
 ##
-podAnnotations: {}
-
-## Additional pod labels
+## initContainers:
+# - name: your-image-name
+#    image: your-image
+#    imagePullPolicy: Always
+#    command: ['sh', '-c', 'copy addons from git and push to /bitnami/redmine/plugins. Should work with extraVolumeMounts and extraVolumes']
+initContainers: {}
+## @param podLabels Extra labels for Redmine pods
 ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
 ##
 podLabels: {}
-
-## lifecycleHooks for the Redmine container to automate configuration before or after startup.
-##
-lifecycleHooks: {}
-
-## Redmine pods' priority.
-## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
-##
-# priorityClassName: ""
-
-## Extra objects to deploy (value evaluated as a template)
+## @param podAnnotations Annotations for Redmine pods
+## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
 ##
-extraDeploy: []
-
-## Pod affinity preset
+podAnnotations: {}
+## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
 ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
-## Allowed values: soft, hard
 ##
 podAffinityPreset: ""
-
-## Pod anti-affinity preset
+## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
 ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
-## Allowed values: soft, hard
 ##
 podAntiAffinityPreset: soft
-
 ## Node affinity preset
 ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
-## Allowed values: soft, hard
 ##
 nodeAffinityPreset:
-  ## Node affinity type
-  ## Allowed values: soft, hard
+  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
   ##
   type: ""
-  ## Node label key to match
-  ## E.g.
-  ## key: "kubernetes.io/e2e-az-name"
+  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
   ##
   key: ""
-  ## Node label values to match
+  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
   ## E.g.
   ## values:
   ##   - e2e-az1
   ##   - e2e-az2
   ##
   values: []
-
-## Affinity for pod assignment
+## @param affinity Affinity for pod assignment
 ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
+## NOTE: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
 ##
 affinity: {}
-
-## Node labels for pod assignment. Evaluated as a template.
-## Ref: https://kubernetes.io/docs/user-guide/node-selection/
+## @param nodeSelector Node labels for pod assignment
+## ref: https://kubernetes.io/docs/user-guide/node-selection/
 ##
 nodeSelector: {}
-
-## Tolerations for pod assignment
-## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+## @param tolerations Tolerations for pod assignment
+## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
 ##
 tolerations: []
-
-## Configure extra options for liveness and readiness probes
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
+## Redmine containers' resource requests and limits
+## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+## @param resources.limits The resources limits for the Redmine container
+## @param resources.requests [object] The requested resources for the Redmine container
+##
+resources:
+  limits: {}
+  requests:
+    memory: 512Mi
+    cpu: 300m
+## Container ports
+## @param containerPort Redmine HTTP container port
+##
+containerPort: 3000
+## Configure Pods Security Context
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+## @param podSecurityContext.enabled Enabled Redmine pods' Security Context
+## @param podSecurityContext.fsGroup Set Redmine pod's Security Context fsGroup
+##
+podSecurityContext:
+  enabled: false
+  fsGroup: 1001
+## Configure Container Security Context (only main container)
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
+## @param containerSecurityContext.enabled Enabled Redmine containers' Security Context
+## @param containerSecurityContext.runAsUser Set Redmine container's Security Context runAsUser
+##
+containerSecurityContext:
+  enabled: false
+  runAsUser: 1001
+## Configure extra options for Redmine containers' liveness and readiness probes
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
+## @param livenessProbe.enabled Enable livenessProbe
+## @param livenessProbe.path Path for to check for livenessProbe
+## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
+## @param livenessProbe.periodSeconds Period seconds for livenessProbe
+## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
+## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
+## @param livenessProbe.successThreshold Success threshold for livenessProbe
 ##
 livenessProbe:
   enabled: true
@@ -263,116 +299,301 @@ livenessProbe:
   initialDelaySeconds: 300
   periodSeconds: 10
   timeoutSeconds: 5
+  failureThreshold: 6
   successThreshold: 1
-  failureThreshold: 3
-
+## @param readinessProbe.enabled Enable readinessProbe
+## @param readinessProbe.path Path to check for readinessProbe
+## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
+## @param readinessProbe.periodSeconds Period seconds for readinessProbe
+## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
+## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
+## @param readinessProbe.successThreshold Success threshold for readinessProbe
+##
 readinessProbe:
   enabled: true
   path: /
   initialDelaySeconds: 5
   periodSeconds: 10
-  timeoutSeconds: 1
+  timeoutSeconds: 5
+  failureThreshold: 6
   successThreshold: 1
-  failureThreshold: 3
-
-## Custom Liveness probes for Redmine
+## @param startupProbe.enabled Enable startupProbe
+## @param startupProbe.path Path to check for startupProbe
+## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
+## @param startupProbe.periodSeconds Period seconds for startupProbe
+## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
+## @param startupProbe.failureThreshold Failure threshold for startupProbe
+## @param startupProbe.successThreshold Success threshold for startupProbe
+##
+startupProbe:
+  enabled: false
+  path: /
+  initialDelaySeconds: 300
+  periodSeconds: 10
+  timeoutSeconds: 5
+  failureThreshold: 6
+  successThreshold: 1
+## @param customLivenessProbe Custom livenessProbe that overrides the default one
 ##
 customLivenessProbe: {}
-
-## Custom Rediness probes Redmine
-##
+## @param customReadinessProbe Custom readinessProbe that overrides the default one
+#
 customReadinessProbe: {}
+## @param customStartupProbe Custom startupProbe that overrides the default one
+#
+customStartupProbe: {}
 
-## Add init containers to the Redmine pods.
-## Example:
-## initContainers:
-##   - name: your-image-name
-##     image: your-image
-##     imagePullPolicy: Always
-##     ports:
-##       - name: portname
-##         containerPort: 1234
+## @section Traffic Exposure Parameters
+
+## Redmine service parameters
 ##
-initContainers: {}
+service:
+  ## @param service.type Redmine service type
+  ##
+  type: LoadBalancer
+  ## @param service.port Redmine service HTTP port
+  ##
+  port: 80
+  ## Node ports to expose
+  ## @param service.nodePort Node port for HTTP
+  ## NOTE: choose port between <30000-32767>
+  ##
+  nodePort:
+  ## @param service.clusterIP Redmine service Cluster IP
+  ## e.g.:
+  ## clusterIP: None
+  ##
+  clusterIP:
+  ## @param service.loadBalancerIP Redmine service Load Balancer IP
+  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
+  ##
+  loadBalancerIP:
+  ## @param service.loadBalancerSourceRanges Redmine service Load Balancer sources
+  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
+  ## e.g:
+  ##
+  # loadBalancerSourceRanges:
+  #   - 10.10.10.0/24
+  loadBalancerSourceRanges: []
+  ## @param service.externalTrafficPolicy Redmine service external traffic policy
+  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
+  ##
+  externalTrafficPolicy: Cluster
+  ## @param service.annotations Additional custom annotations for Redmine service
+  ##
+  annotations: {}
+  ## @param service.extraPorts Extra port to expose on Redmine service
+  ##
+  extraPorts: []
 
-## Add sidecars to the Redmine pods.
-## Example:
-## sidecars:
-##   - name: your-image-name
-##     image: your-image
-##     imagePullPolicy: Always
-##     ports:
-##       - name: portname
-##         containerPort: 1234
+## Configure the ingress resource that allows you to access the Redmine installation
+## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
 ##
-sidecars: {}
+ingress:
+  ## @param ingress.enabled Enable ingress record generation for Redmine
+  ##
+  enabled: false
+  ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
+  ##
+  certManager: false
+  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
+  ##
+  selfSigned: false
+  ## @param ingress.pathType Ingress path type
+  ##
+  pathType: ImplementationSpecific
+  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
+  ##
+  apiVersion:
+  ## @param ingress.hostname Default host for the ingress record
+  ##
+  hostname: redmine.local
+  ## @param ingress.path Default path for the ingress record
+  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
+  ##
+  path: /
+  ## @param ingress.annotations Additional custom annotations for the ingress record
+  ## NOTE: If `ingress.certManager=true`, annotation `kubernetes.io/tls-acme: "true"` will automatically be added
+  ##
+  annotations: {}
+  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
+  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
+  ## You can:
+  ##   - Use the `ingress.secrets` parameter to create this TLS secret
+  ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
+  ##   - Relay on Helm to create self-signed certificates by setting `ingress.tls=true` and `ingress.certManager=false`
+  ##
+  tls: false
+  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
+  ## e.g:
+  ##
+  # extraHosts:
+  #   - name: redmine.local
+  #     path: /
+  extraHosts: []
+  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
+  ## e.g:
+  ##
+  # extraPaths:
+  # - path: /*
+  #   backend:
+  #     serviceName: ssl-redirect
+  #     servicePort: use-annotation
+  extraPaths: []
+  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
+  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
+  ## e.g:
+  ##
+  # extraTls:
+  # - hosts:
+  #     - redmine.local
+  #   secretName: redmine.local-tls
+  extraTls: []
+  ## @param ingress.secrets Custom TLS certificates as secrets
+  ## NOTE: 'key' and 'certificate' are expected in PEM format
+  ## NOTE: 'name' should line up with a 'secretName' set further up
+  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
+  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
+  ## It is also possible to create and manage the certificates outside of this helm chart
+  ## Please see README.md for more information
+  ## e.g:
+  ##
+  # secrets:
+  #   - name: redmine.local-tls
+  #     key: |-
+  #       -----BEGIN RSA PRIVATE KEY-----
+  #       ...
+  #       -----END RSA PRIVATE KEY-----
+  #     certificate: |-
+  #       -----BEGIN CERTIFICATE-----
+  #       ...
+  #       -----END CERTIFICATE-----
+  secrets: []
+
+## @section Persistence Parameters
 
-## Enable persistence using Persistent Volume Claims
+## Persistence Parameters
 ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
 ##
 persistence:
+  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
+  ##
   enabled: true
-  ## A manually manage Persistent Volume Claim
-  ## Requires persistence.enable: true
-  ## If defined, PVC must be created manually before volume will be bound
-  # existingClaim:
-
-  ## redmine data Persistent Volume Storage Class
+  ## @param persistence.storageClass Persistent Volume storage class
   ## If defined, storageClassName: <storageClass>
   ## If set to "-", storageClassName: "", which disables dynamic provisioning
-  ## If undefined (the default) or set to null, no storageClassName spec is
-  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
-  ##   GKE, AWS & OpenStack)
+  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
+  ##
+  storageClass:
+  ## @param persistence.accessModes [array] Persistent Volume access modes
   ##
-  # storageClass: "-"
   accessModes:
     - ReadWriteOnce
+  ## @param persistence.size Persistent Volume size
+  ##
   size: 8Gi
+  ## @param persistence.dataSource Custom PVC data source
+  ##
+  dataSource: {}
+  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
+  ##
+  existingClaim:
 
-## Database type. Allowed values: "mariadb" and "postgresql"
-## ref: https://github.com/bitnami/bitnami-docker-redmine#run-the-application-using-postgresql-database
+## 'volumePermissions' init container parameters
+## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
+##   based on the podSecurityContext/containerSecurityContext parameters
 ##
-databaseType: mariadb
+volumePermissions:
+  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
+  ##
+  enabled: false
+  ## Init container's resource requests and limits
+  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+  ## @param volumePermissions.resources.limits The resources limits for the init container
+  ## @param volumePermissions.resources.requests The requested resources for the init container
+  ##
+  resources:
+    limits: {}
+    requests: {}
+  ## Init container Container Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
+  ## @param volumePermissions.securityContext.runAsUser Set init container's Security Context runAsUser
+  ##
+  securityContext:
+    runAsUser: 0
 
-## MariaDB chart configuration
+## @section Other Parameters
+
+## Redmine Pod Disruption Budget configuration
+## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
+## @param podDisruptionBudget.create Enable a Pod Disruption Budget creation
+## @param podDisruptionBudget.minAvailable Minimum number/percentage of pods that should remain scheduled
+## @param podDisruptionBudget.maxUnavailable Maximum number/percentage of pods that may be made unavailable
 ##
-## https://github.com/bitnami/charts/blob/master/bitnami/mariadb/values.yaml
+podDisruptionBudget:
+  create: false
+  minAvailable:
+  maxUnavailable:
+
+## Redmine Autoscaling configuration
+## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
+## @param autoscaling.enabled Enable Horizontal POD autoscaling for Redmine
+## @param autoscaling.minReplicas Minimum number of Redmine replicas
+## @param autoscaling.maxReplicas Maximum number of Redmine replicas
+## @param autoscaling.targetCPU Target CPU utilization percentage
+## @param autoscaling.targetMemory Target Memory utilization percentage
+##
+autoscaling:
+  enabled: false
+  minReplicas: 1
+  maxReplicas: 11
+  targetCPU: 50
+  targetMemory: 50
+
+## @section Database Parameters
+
+## @param databaseType Redmine database type. Allowed values: `mariadb` and `postgresql`
+## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
+##
+databaseType: mariadb
+## MariaDB chart configuration
+## ref: https://github.com/bitnami/charts/blob/master/bitnami/mariadb/values.yaml
 ##
 mariadb:
-  ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
+  ## @param mariadb.enabled Whether to deploy a MariaDB server to satisfy the database requirements
   ##
   enabled: true
-  ## Disable MariaDB replication
-  ##
-  replication:
-    enabled: false
-
-  ## Use existing secret (ignores root, auth and replication passwords)
+  ## @param mariadb.architecture MariaDB architecture. Allowed values: `standalone` or `replication`
   ##
-  # existingSecret:
-
-  ## Create a database and a database user
-  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
+  architecture: standalone
+  ## @param mariadb.auth.rootPassword MariaDB root password
+  ## @param mariadb.auth.username MariaDB username
+  ## @param mariadb.auth.password MariaDB password
+  ## @param mariadb.auth.existingSecret Name of existing secret object
+  ## ref: https://hub.docker.com/_/mariadb/
   ##
   auth:
-    database: bitnami_redmine
+    rootPassword: ""
     username: bn_redmine
-    ## If the password is not specified, mariadb will generate a random password
+    password: ""
+    ## Existing secret with MariaDB credentials
+    ## NOTE: When it's set the previous parameters are ignored.
     ##
-    # password:
-
-    ## MariaDB admin password
-    ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run
-    ##
-    # rootPassword:
-
+    # existingSecret: my-secret
+    existingSecret:
   ## Enable persistence using Persistent Volume Claims
   ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
   ##
   primary:
     persistence:
+      ## @param mariadb.primary.persistence.enabled Enable MariaDB persistence using PVC
+      ##
       enabled: true
-      ## mariadb data Persistent Volume Storage Class
+      ## @param mariadb.primary.persistence.existingClaim Provide an existing `PersistentVolumeClaim`, the value is evaluated as a template
+      ##
+      # existingClaim: your-claim
+      existingClaim:
+      ## @param mariadb.primary.persistence.storageClass PVC Storage Class for MariaDB volume
       ## If defined, storageClassName: <storageClass>
       ## If set to "-", storageClassName: "", which disables dynamic provisioning
       ## If undefined (the default) or set to null, no storageClassName spec is
@@ -380,42 +601,55 @@ mariadb:
       ##   GKE, AWS & OpenStack)
       ##
       # storageClass: "-"
-      accessMode: ReadWriteOnce
+      storageClass:
+      ## @param mariadb.primary.persistence.accessModes [array] PVC Access Mode for MariaDB volume
+      ##
+      accessModes:
+        - ReadWriteOnce
+      ## @param mariadb.primary.persistence.size PVC Storage Request for MariaDB volume
+      ##
       size: 8Gi
-
+      ## @param mariadb.primary.persistence.hostPath Set path in case you want to use local host path volumes (not recommended in production)
+      ##
+      hostPath:
 ## PostgreSQL chart configuration
-##
-## https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
+## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
 ##
 postgresql:
-  ## Whether to deploy a PostgreSQL server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
+  ## @param postgresql.enabled Whether to deploy a PostgreSQL server to satisfy the database requirements
   ##
-  enabled: false
-
-  ## Create a database and a database user
-  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/#creating-a-database-on-first-run
+  enabled: true
+  ## @param postgresql.postgresqlUsername PostgreSQL username
+  ## ref: https://hub.docker.com/_/postgres/
   ##
-  postgresqlDatabase: bitnami_redmine
-  postgresqlUsername: bn_redmine
+  postgresqlUsername: "bn_redmine"
+  ## @param postgresql.postgresqlPassword PostgreSQL password
+  ## ref: https://hub.docker.com/_/postgres/
   ##
-  ## If the password is not specified, postgresql will generate a random password
-  # postgresqlPassword:
-
-  ## In case of postgresql.enabled = true, allow the usage of existing secrets for postgresql
+  postgresqlPassword: ""
+  ## @param postgresql.postgresqlDatabase PostgreSQL database
+  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-on-first-run
   ##
-  existingSecret: ""
-
+  postgresqlDatabase: bitnami_redmine
+  ## @param postgresql.existingSecret Name of existing secret object
+  ## The secret should contain the following keys:
+  ## postgresql-postgres-password (for root user)
+  ## postgresql-password (for the unprivileged user)
+  ##
+  # existingSecret: my-secret
+  existingSecret:
   ## Enable persistence using Persistent Volume Claims
   ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
   ##
   persistence:
+    ## @param postgresql.persistence.enabled Enable PostgreSQL persistence using PVC
+    ##
     enabled: true
-    ## A manually manage Persistent Volume Claim
-    ## Requires postgresql.persistence.enable: true
-    ## If defined, PVC must be created manually before volume will be bound
-    # existingClaim:
-
-    ## postgresql data Persistent Volume Storage Class
+    ## @param postgresql.persistence.existingClaim Provide an existing `PersistentVolumeClaim`, the value is evaluated as a template
+    ##
+    # existingClaim: your-claim
+    existingClaim:
+    ## @param postgresql.persistence.storageClass PVC Storage Class for PostgreSQL volume
     ## If defined, storageClassName: <storageClass>
     ## If set to "-", storageClassName: "", which disables dynamic provisioning
     ## If undefined (the default) or set to null, no storageClassName spec is
@@ -423,469 +657,313 @@ postgresql:
     ##   GKE, AWS & OpenStack)
     ##
     # storageClass: "-"
+    storageClass:
+    ## @param postgresql.persistence.accessMode PVC Access Mode for PostgreSQL volume
+    ##
     accessMode: ReadWriteOnce
+    ## @param postgresql.persistence.size PVC Storage Request for PostgreSQL volume
+    ##
     size: 8Gi
-
-## All of these values are only used when:
-## a) mariadb.enabled is set to false and databaseType=mariadb
-## b) postgresql.enabled is set to false and databaseType=postgresql
-##
+## External Database Configuration
+## All of these values are only used when postgresql.enabled is set to false
 externalDatabase:
-  ## Database host
+  ## @param externalDatabase.host External Database server host
   ##
-  host: ""
-
-  ## Database name
+  host:
+  ## @param externalDatabase.port External Database server port
   ##
-  name: bitnami_redmine
-
-  ## Database User
+  port: 5432
+  ## @param externalDatabase.user External Database username
   ##
   user: bn_redmine
-
-  ## Database Password
+  ## @param externalDatabase.password External Database user password
   ##
   password: ""
-
-  ## Database port number (use 5432 when using PostgreSQL)
-  ##
-  port: 3306
-
-  ## Use existing secret containing the database password
-  ## Must contain the key "postgresql-password" in case that databaseType=postgresql
-  ## Must contain the key "mariadb-password" in case that databaseType=mariadb
-  # existingSecret:
-
-## Container ports
-##
-containerPorts:
-  http: 3000
-
-## Kubernetes configuration
-##   minikube: NodePort
-##   ingress: ClusterIP
-##   elsewhere: LoadBalancer
-##
-service:
-  type: LoadBalancer
-  # HTTP Port
-  port: 80
-  ## clusterIP: ""
-  ## loadBalancerIP for the Redmine Service (optional, cloud specific)
-  ## ref: http://kubernetes.io/docs/user-guide/services/#type-loadbalancer
-  ## loadBalancerIP:
-  ## Control hosts connecting to "LoadBalancer" only
-  ##
-  loadBalancerSourceRanges:
-    - 0.0.0.0/0
-  ##
-  ## nodePorts:
-  ##   http: <to set explicitly, choose port between 30000-32767>
-  ##
-  nodePorts:
-    http: ""
-  ## Enable client source IP preservation
-  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
-  ##
-  externalTrafficPolicy: Cluster
-
-  ## Control where client requests go, to the same pod or round-robin
-  ## Values: ClientIP or None
-  ## ref: https://kubernetes.io/docs/user-guide/services/
-  ##
-  sessionAffinity: "None"
-
-## Configure the ingress resource that allows you to access the
-## Redmine installation. Set up the URL
-## ref: http://kubernetes.io/docs/user-guide/ingress/
-##
-ingress:
-  ## Set to true to enable ingress record generation
-  ##
-  enabled: false
-
-  ## Set this to true in order to add the corresponding annotations for cert-manager
-  ##
-  certManager: false
-
-  ## When the ingress is enabled, a host pointing to this will be created
-  ##
-  hostname: redmine.local
-
-  ## The Path to Redmine. You may need to set this to '/*' in order to use this
-  ## with ALB ingress controllers.
-  ##
-  path: /
-
-  ## Ingress Path type
-  ##
-  pathType: ImplementationSpecific
-
-  ## Override API Version (automatically detected if not set)
-  ##
-  apiVersion:
-
-  ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
-  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
-  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
-  ##
-  tls: false
-
-  ## Ingress annotations done as key:value pairs
-  ## For a full list of possible ingress annotations,
-  ## please see https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
+  ## @param externalDatabase.database External Database database name
   ##
-  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
-  ##
-  annotations:
-    # kubernetes.io/ingress.class: nginx
-    ## Keep the connection open with the API server even if idle (the default is 60 seconds)
-    ## Setting it to 10 minutes which should be enough for our current use case of deploying/upgrading/deleting apps
-    ##
-    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
-
-  ## The list of additional hostnames to be covered with this ingress record.
-  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
-  ## extraHosts:
-  ## - name: redmine.local
-  ##   path: /
+  database: bitnami_redmine
+  ## @param externalDatabase.existingSecret Use an existing secret for external db password. Must contain the keys `redmine-password` or `mariadb-password` depending on the DB type
   ##
+  # existingSecret: my-secret
+  existingSecret:
 
-  ## The tls configuration for additional hostnames to be covered with this ingress record.
-  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
-  ## extraTls:
-  ## - hosts:
-  ##     - redmine.local
-  ##   secretName: redmine.local-tls
-  ##
-
-  ## If you're providing your own certificates, please use this to add the certificates as secrets
-  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
-  ## -----BEGIN RSA PRIVATE KEY-----
-  ##
-  ## name should line up with a tlsSecret set further up
-  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
-  ##
-  ## It is also possible to create and manage the certificates outside of this helm chart
-  ## Please see README.md for more information
-  ##
-  secrets: []
-  ## - name: redmine.local-tls
-  ##   key:
-  ##   certificate:
-  ##
+## @section Mail Receiver/Cron Job Parameters
 
 ## Configure CronJob scheduler for receiving emails and converting them to tasks
 ## ref: http://www.redmine.org/projects/redmine/wiki/RedmineReceivingEmails
 ##
 mailReceiver:
-  ## Whether to enable scheduled task
+  ## @param mailReceiver.enabled Whether to enable scheduled mail-to-task CronJob
   ##
   enabled: false
-
-  ## CronJob schedule
+  ## @param mailReceiver.schedule Kubernetes CronJob schedule
   ##
   schedule: "*/5 * * * *"
-
-  ## CronJob suspend flag
+  ## @param mailReceiver.suspend Whether to create suspended CronJob
   ##
   suspend: true
-
+  ## @param mailReceiver.image.registry Redmine MailReceiver image registry
+  ## @param mailReceiver.image.repository Redmine MailReceiver image repository
+  ## @param mailReceiver.image.tag Redmine MailReceiver image tag (immutable tags are recommended)
+  ## @param mailReceiver.image.pullPolicy Redmine MailReceiver image pull policy
+  ## @param mailReceiver.image.pullSecrets [array] Redmine MailReceiver image pull secrets
+  ##
   image:
     registry: docker.io
     repository: bitnami/redmine
-    tag: 4.2.1-debian-10-r47
+    tag: 4.2.1-debian-10-r70
     ## Specify a imagePullPolicy
     ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
     ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
     ##
     pullPolicy: IfNotPresent
-
-  ## Additional pod annotations
+    pullSecrets: []
+  ## @param mailReceiver.podAnnotations Additional pod annotations
   ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
   ##
   podAnnotations: {}
-
-  ## Additional pod labels
+  ## @param mailReceiver.podLabels Additional pod labels
   ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
   ##
   podLabels: {}
-
-  ## Redmine pods' priority.
+  ## @param mailReceiver.priorityClassName Redmine pods' priority.
   ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
   ##
-  # priorityClassName: ""
-
-  ## Protocol to use to get emails from configured server.
-  ## Supported values are "IMAP" or "POP3"
+  priorityClassName: ""
+  ## @param mailReceiver.mailProtocol Mail protocol to use for reading emails. Allowed values: `IMAP` and `POP3`
   ##
   mailProtocol: IMAP
-
-  ## Server hostname to connect to
+  ## @param mailReceiver.host Server to receive emails from
   ##
   host: ""
-
-  ## Server TCP port to connect to
+  ## @param mailReceiver.port TCP port on the `host`
   ##
   port: 993
-
-  ## Username to authenticate on server
+  ## @param mailReceiver.username Login to authenticate on the `host`
   ##
   username: ""
-
-  ## Password to authenticate on server
+  ## @param mailReceiver.password Password to authenticate on the `host`
   ##
   password: ""
-
-  ## ssl flag for redmine mail client
+  ## @param mailReceiver.ssl Whether use SSL/TLS to connect to the `host`
   ## If true then client will use SSL/TLS
   ##
   ssl: true
-
-  ## starttls flag for redmine mail client
+  ## @param mailReceiver.startTLS Whether use StartTLS to connect to the `host`
   ## If true then client will use StartTLS
   ##
   startTLS: false
-
-  ## IMAP only. Folder to read emails from
+  ## @param mailReceiver.imapFolder IMAP only. Folder to read emails from
   ##
   imapFolder: "INBOX"
-
-  ## Folder on mail server to move correctly parsed emails to
+  ## @param mailReceiver.moveOnSuccess IMAP only. Folder to move processed emails to
   ## If empty - just leave emails as read
   ##
   moveOnSuccess: ""
-
-  ## Folder on mail server to move emails with parsing errors to
+  ## @param mailReceiver.moveOnFailure IMAP only. Folder to move emails with processing errors to
   ## If empty - just leave emails as read
   ##
   moveOnFailure: ""
-
-  ## Action to perform for unknown email sender
+  ## @param mailReceiver.unknownUserAction Action to perform is an email received from unregistered user
   ## ref: http://www.redmine.org/projects/redmine/wiki/RedmineReceivingEmails
   ##
   unknownUserAction: ignore
-
+  ## @param mailReceiver.noPermissionCheck Whether skip permission check during creating a new task
   ## If set to 1 then redmine does not check task creator (source email) permissions for creating a new task
   ## If set to 0 then task creator must have permission to create a new task
   ##
   noPermissionCheck: 0
-
-  ## Whether send a just created user (the creator of the task) email about his new account
+  ## @param mailReceiver.noAccountNotice Whether send an email to an unregistered user created during a new task creation
   ## 0 - send, 1 - not send
   ##
   noAccountNotice: 1
-
-  ## Defines a group list to add created user to
+  ## @param mailReceiver.defaultGroup Defines a group list to add created user to
   ## Groups must be enumerated as names separated by comma without spaces
   ##
   defaultGroup: ""
-
-  ## Defines a project to create a new task in
+  ## @param mailReceiver.project Defines identifier of the target project for a new task
   ##
   project: ""
-
-  ## Defines an email to use as a base for getting project name for a new task
+  ## @param mailReceiver.projectFromSubaddress Defines email address to select project from subaddress
   ##
   projectFromSubaddress: ""
-
-  ## Defines a new task status
+  ## @param mailReceiver.status Defines a new task status
   ##
   status: ""
-
-  ## Defines a new task tracker
+  ## @param mailReceiver.tracker Defines a new task tracker
   ##
   tracker: ""
-
-  ## Defines a new task category
+  ## @param mailReceiver.category Defines a new task category
   ##
   category: ""
-
-  ## Defines a new task priority
+  ## @param mailReceiver.priority Defines a new task priority
   ##
   priority: ""
-
-  ## Defines a new task assignee
+  ## @param mailReceiver.assignedTo Defines a new task assignee
   ##
   assignedTo: ""
-
-  ## Defines a list of attributes which can be overridden by received email body
-  ## "all" means that all attributes can be overridden
+  ## @param mailReceiver.allowOverride Defines if email content is allowed to set attributes values. Values is a comma separated list of attributes or `all` to allow all attributes
   ##
   allowOverride: ""
-
-  ## An array to add extra env vars
+  ## @param mailReceiver.extraEnvVars Extra environment variables to be set on mailReceiver container
   ## For example:
   ##
   extraEnvVars: []
   #  - name: BEARER_AUTH
-  #    value: true
-
-  ## ConfigMap with extra environment variables
+  #    value: "true"
+  ## @param mailReceiver.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
   ##
   extraEnvVarsCM:
-
-  ## Secret with extra environment variables
+  ## @param mailReceiver.extraEnvVarsSecret Name of existing Secret containing extra env vars
   ##
   extraEnvVarsSecret:
-
-  ## Extra volumes to add to the deployment
+  ## @param mailReceiver.extraVolumes Optionally specify extra list of additional volumes for mailReceiver container
   ##
   extraVolumes: []
-
-  ## Extra volume mounts to add to the container
+  ## @param mailReceiver.extraVolumeMounts Optionally specify extra list of additional volumeMounts for mailReceiver container
   ##
   extraVolumeMounts: []
-
-  ## Command and args for running the Redmine container (set to default if not set). Use array form
+  ## @param mailReceiver.command Override default container command (useful when using custom images)
   ##
   command: ["bash"]
+  ## @param mailReceiver.args Override default container args (useful when using custom images)
+  ##
   args: ["-c", "/cj/receive.sh"]
-
-  ## SecurityContext configuration
-  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
+  ## Configure Pods Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param mailReceiver.podSecurityContext.enabled Enabled Redmine pods' Security Context
+  ## @param mailReceiver.podSecurityContext.fsGroup Set Redmine pod's Security Context fsGroup
+  ##
+  podSecurityContext:
+    enabled: true
+    fsGroup: 1001
+  ## @param
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
+  ## @param mailReceiver.containerSecurityContext.enabled mailReceiver Container securityContext
+  ## @param mailReceiver.containerSecurityContext.runAsUser User ID for the mailReceiver container
+  ## @param mailReceiver.containerSecurityContext.runAsNonRoot Whether to run the mailReceiver container as a non-root user
   ##
   containerSecurityContext:
     enabled: false
     runAsUser: 1001
     runAsNonRoot: true
-
-  podSecurityContext:
-    enabled: true
-    fsGroup: 1001
-
-  ## Add init containers to the Redmine pods.
+  ## @param mailReceiver.initContainers Add additional init containers to the mailReceiver pods
   ## Example:
-  ## initContainers:
-  ##   - name: your-image-name
-  ##     image: your-image
-  ##     imagePullPolicy: Always
-  ##     ports:
-  ##       - name: portname
-  ##         containerPort: 1234
   ##
+  # initContainers:
+  #   - name: your-image-name
+  #     image: your-image
+  #     imagePullPolicy: Always
+  #     ports:
+  #       - name: portname
+  #         containerPort: 1234
+  #
   initContainers: {}
-
-  ## Add sidecars to the Redmine pods.
+  ## @param mailReceiver.sidecars Add additional sidecar containers to the mailReceiver pods
   ## Example:
-  ## sidecars:
-  ##   - name: your-image-name
-  ##     image: your-image
-  ##     imagePullPolicy: Always
-  ##     ports:
-  ##       - name: portname
-  ##         containerPort: 1234
   ##
+  # sidecars:
+  #   - name: your-image-name
+  #     image: your-image
+  #     imagePullPolicy: Always
+  #     ports:
+  #       - name: portname
+  #         containerPort: 1234
+  #
   sidecars: {}
-
-  ## Pod affinity preset
+  ## @param mailReceiver.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
   ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
   ## Allowed values: soft, hard
   ##
   podAffinityPreset: ""
-
-  ## Pod anti-affinity preset
+  ## @param mailReceiver.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
   ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
   ## Allowed values: soft, hard
   ##
   podAntiAffinityPreset: soft
-
-  ## Node affinity preset
+  ## @param mailReceiver.nodeAffinityPreset.type Node affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
+  ## @param mailReceiver.nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set.
+  ## @param mailReceiver.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
   ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
-  ## Allowed values: soft, hard
   ##
   nodeAffinityPreset:
-    ## Node affinity type
     ## Allowed values: soft, hard
     ##
     type: ""
     ## Node label key to match
     ## E.g.
-    ## key: "kubernetes.io/e2e-az-name"
     ##
+    # key: "kubernetes.io/e2e-az-name"
     key: ""
     ## Node label values to match
     ## E.g.
-    ## values:
-    ##   - e2e-az1
-    ##   - e2e-az2
     ##
+    # values:
+    #   - e2e-az1
+    #   - e2e-az2
     values: []
-
-  ## Affinity for pod assignment
+  ## @param mailReceiver.affinity Affinity for pod assignment
   ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
   ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
   ##
   affinity: {}
-
-  ## Node labels for pod assignment. Evaluated as a template.
+  ## @param mailReceiver.nodeSelector Node labels for pod assignment
   ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
   ##
   nodeSelector: {}
-
-  ## Tolerations for pod assignment
+  ## @param mailReceiver.tolerations Tolerations for pod assignment
   ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
   ##
   tolerations: []
 
-## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
-##
-volumePermissions:
-  enabled: false
-  image:
-    registry: docker.io
-    repository: bitnami/bitnami-shell
-    tag: 10-debian-10-r112
-    pullPolicy: Always
-    ## Optionally specify an array of imagePullSecrets.
-    ## Secrets must be manually created in the namespace.
-    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
-    ##
-    pullSecrets: []
-    ##   - myRegistryKeySecretName
-  ## Init containers' resource requests and limits
-  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
-  ##
-  resources:
-    ## We usually recommend not to specify default resources and to leave this as a conscious
-    ## choice for the user. This also increases chances charts run on environments with little
-    ## resources, such as Minikube. If you do want to specify resources, uncomment the following
-    ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
-    ##
-    limits: {}
-    ##   cpu: 100m
-    ##   memory: 128Mi
-    ##
-    requests: {}
-    ##   cpu: 100m
-    ##   memory: 128Mi
-    ##
+## @section Custom Certificates parameters
 
-# Add custom certificates and certificate authorities to redmine container
+## Add custom certificates and certificate authorities to redmine container
+##
 certificates:
+  ## @param certificates.customCertificate.certificateSecret Secret containing the certificate and key to add
+  ## @param certificates.customCertificate.certificateLocation Location in the container to store the certificate
+  ## @param certificates.customCertificate.keyLocation Location in the container to store the private key
+  ## @param certificates.customCertificate.chainLocation Location in the container to store the certificate chain
+  ##
   customCertificate:
     certificateSecret: ""
-    chainSecret: {}
-    # name: secret-name
-    # key: secret-key
+    ## @param certificates.customCertificate.chainSecret.name Name of the secret containing the certificate chain
+    ## @param certificates.customCertificate.chainSecret.key Key of the certificate chain file inside the secret
+    chainSecret:
+      # e.g.:
+      # name: secret-key
+      name:
+      # e.g.:
+      # key: secret-key
+      key:
     certificateLocation: /etc/ssl/certs/ssl-cert-snakeoil.pem
     keyLocation: /etc/ssl/private/ssl-cert-snakeoil.key
     chainLocation: /etc/ssl/certs/mychain.pem
+  ## @param certificates.customCA [array] Defines a list of secrets to import into the container trust store
+  ##
   customCA: []
   # - secret: custom-CA
   # - secret: more-custom-CAs
+  ## @param certificates.image.registry Redmine image registry
+  ## @param certificates.image.repository Redmine image repository
+  ## @param certificates.image.tag Redmine image tag (immutable tags are recommended)
+  ## @param certificates.image.pullPolicy Redmine image pull policy
+  ## @param certificates.image.pullSecrets [array] Redmine image pull secrets
+  ##
   image:
     registry: docker.io
     repository: bitnami/bitnami-shell
-    tag: 10-debian-10-r112
+    tag: 10-debian-10-r133
     ## Specify a imagePullPolicy
     ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
     ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
     ##
     pullPolicy: IfNotPresent
-    # pullPolicy:
-    # pullSecrets
-    #   - myRegistryKeySecretName
+    pullSecrets: []
+    # - myRegistryKeySecretName
+  ## @param certificates.extraEnvVars [array] Container sidecar extra environment variables (e.g. proxy)
+  ##
   extraEnvVars: []
   # - name: myvar
   #   value: myval
