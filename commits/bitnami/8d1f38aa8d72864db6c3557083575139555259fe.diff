commit 8d1f38aa8d72864db6c3557083575139555259fe
Author: Daniel Arteaga <darteaga@vmware.com>
Date:   Thu Jan 28 18:41:15 2021 +0100

    [bitnami/influxdb] MAJOR: adapt the chart to use InfluxDB 2.0 (#5097)
    
    * [bitnami/influxdb] MAJOR: adapt the chart to use InfluxDB 2.0
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix: bump chart version
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * feat(): update backup scripts and use common helpers
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix: some missing and typos, add docs
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix: linter issue
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix: update probes to be compatible with old images
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix(influxdb): add password check when upgrade
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix(influxdb): usePasswordFiles instead of 4 fields
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix(influxdb): readme parameters section refactor
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix: update bitnami/influxdb/README.md
    
    Co-authored-by: Juan Ariza Toledano <juanariza@vmware.com>
    
    * fix(influxdb): add missing common values and adapt ingress to latest standards
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix(influxdb): add extravolumes and custom probes
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * fix(influxdb): remove warning about minideb tags since it hasn't revision tag
    
    Signed-off-by: darteaga <darteaga@vmware.com>
    
    * [bitnami/influxdb] Update components versions
    
    Signed-off-by: Bitnami Containers <containers@bitnami.com>
    
    Co-authored-by: Juan Ariza Toledano <juanariza@vmware.com>
    Co-authored-by: Bitnami Containers <containers@bitnami.com>

diff --git a/bitnami/influxdb/Chart.lock b/bitnami/influxdb/Chart.lock
index f8b2cfd019..982ed42d92 100644
--- a/bitnami/influxdb/Chart.lock
+++ b/bitnami/influxdb/Chart.lock
@@ -1,6 +1,6 @@
 dependencies:
 - name: common
   repository: https://charts.bitnami.com/bitnami
-  version: 1.2.3
-digest: sha256:3fc1fbf3ae204e0121f1e202d6d57f9381f3a45d8821647d1dfe0a475644da0c
-generated: "2021-01-09T06:46:23.505828937Z"
+  version: 1.3.7
+digest: sha256:8d8e2b6a63a344d8bd0153181d5b3345d14b04094d339736a9199e3fb907fb19
+generated: "2021-01-28T16:00:41.688359683Z"
diff --git a/bitnami/influxdb/Chart.yaml b/bitnami/influxdb/Chart.yaml
index 0d5e726621..48e413bdfb 100644
--- a/bitnami/influxdb/Chart.yaml
+++ b/bitnami/influxdb/Chart.yaml
@@ -1,7 +1,7 @@
 annotations:
   category: Database
 apiVersion: v2
-appVersion: 1.8.3
+appVersion: 2.0.2
 dependencies:
   - name: common
     repository: https://charts.bitnami.com/bitnami
@@ -24,4 +24,4 @@ name: influxdb
 sources:
   - https://github.com/bitnami/bitnami-docker-influxdb
   - https://www.influxdata.com/products/influxdb-overview/
-version: 1.1.9
+version: 2.0.0
diff --git a/bitnami/influxdb/README.md b/bitnami/influxdb/README.md
index 61f3c1bf68..0c97dea6ed 100644
--- a/bitnami/influxdb/README.md
+++ b/bitnami/influxdb/README.md
@@ -51,169 +51,226 @@ The command removes all the Kubernetes components associated with the chart and
 
 The following tables lists the configurable parameters of the InfluxDB<sup>TM</sup> chart and their default values.
 
-| Parameter                                         | Description                                                                                                                         | Default                                                 |
-|---------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
-| `global.imageRegistry`                            | Global Docker image registry                                                                                                        | `nil`                                                   |
-| `global.imagePullSecrets`                         | Global Docker registry secret names as an array                                                                                     | `[]` (does not add image pull secrets to deployed pods) |
-| `global.storageClass`                             | Global storage class for dynamic provisioning                                                                                       | `nil`                                                   |
-| `image.registry`                                  | InfluxDB<sup>TM</sup> image registry                                                                                                | `docker.io`                                             |
-| `image.repository`                                | InfluxDB<sup>TM</sup> image name                                                                                                    | `bitnami/influxdb`                                      |
-| `image.tag`                                       | InfluxDB<sup>TM</sup> image tag                                                                                                     | `{TAG_NAME}`                                            |
-| `image.pullPolicy`                                | InfluxDB<sup>TM</sup> image pull policy                                                                                             | `IfNotPresent`                                          |
-| `image.pullSecrets`                               | Specify docker-registry secret names as an array                                                                                    | `[]` (does not add image pull secrets to deployed pods) |
-| `image.debug`                                     | Specify if debug logs should be enabled                                                                                             | `false`                                                 |
-| `nameOverride`                                    | String to partially override influxdb.fullname template with a string (will prepend the release name)                               | `nil`                                                   |
-| `fullnameOverride`                                | String to fully override influxdb.fullname template with a string                                                                   | `nil`                                                   |
-| `clusterDomain`                                   | Default Kubernetes cluster domain                                                                                                   | `cluster.local`                                         |
-| `architecture`                                    | InfluxDB<sup>TM</sup> architecture (`standalone` or `high-availability`)                                                            | `standalone`                                            |
-| `database`                                        | Database to be created on first run                                                                                                 | `my_database`                                           |
-| `authEnabled`                                     | Enable/disable authentication                                                                                                       | `true`                                                  |
-| `adminUser.name`                                  | InfluxDB<sup>TM</sup> admin user name                                                                                               | `admin`                                                 |
-| `adminUser.pwd`                                   | InfluxDB<sup>TM</sup> admin user's password                                                                                         | `nil`                                                   |
-| `adminUser.usePasswordFile`                       | Mount admin user's password as file instead of environment variable                                                                 | `false`                                                 |
-| `user.name`                                       | Name for InfluxDB<sup>TM</sup> user with 'admin' privileges on the db specified at `database`                                       | `nil`                                                   |
-| `user.pwd`                                        | InfluxDB<sup>TM</sup> password for `user.name` user                                                                                 | `nil`                                                   |
-| `user.usePasswordFile`                            | Mount `user.name` user's password as file instead of environment variable                                                           | `nil`                                                   |
-| `readUser.name`                                   | Name for InfluxDB<sup>TM</sup> user with 'read' privileges on the db specified at `database`                                        | `nil`                                                   |
-| `readUser.pwd`                                    | InfluxDB<sup>TM</sup> password for `readUser.name` user                                                                             | `nil`                                                   |
-| `readUser.usePasswordFile`                        | Mount `readUser.name` user's password as file instead of environment variable                                                       | `nil`                                                   |
-| `writeUser.name`                                  | Name for InfluxDB<sup>TM</sup> user with 'write' privileges on the db specified at `database`                                       | `nil`                                                   |
-| `writeUser.pwd`                                   | InfluxDB<sup>TM</sup> password for `writeUser.name` user                                                                            | `nil`                                                   |
-| `writeUser.usePasswordFile`                       | Mount `writeUser.name` user's password as file instead of environment variable                                                      | `nil`                                                   |
-| `existingSecret`                                  | Name of existing Secret object with InfluxDB<sup>TM</sup> credentials (`adminUser.password`, `user.password`, `readUser.password`, and `writeUser.pwd` will be ignored and picked up from this secret) | `nil`|
-| `influxdb.configuration`                          | Specify content for influxdb.conf                                                                                                   | `nil (do not create influxdb.conf)`                     |
-| `influxdb.existingConfiguration`                  | Name of existing ConfigMap object with the InfluxDB<sup>TM</sup> configuration (`influxdb.configuration` will be ignored).          | `nil`                                                   |
-| `influxdb.initdbScripts`                          | Dictionary of initdb scripts                                                                                                        | `nil`                                                   |
-| `influxdb.initdbScriptsCM`                        | Name of existing ConfigMap object with the initdb scripts (`influxdb.initdbScripts` will be ignored).                               | `nil`                                                   |
-| `influxdb.initdbScriptsSecret`                    | Secret with initdb scripts that contain sensitive information (Note: can be used with `initdbScriptsConfigMap` or `initdbScripts`)  | `nil`                                                   |
-| `influxdb.extraEnvVars`                           | Array containing extra env vars to configure InfluxDB<sup>TM</sup>                                                                  | `nil`                                                   |
-| `influxdb.replicaCount`                           | The number of InfluxDB<sup>TM</sup> replicas to deploy                                                                              | `1`                                                     |
-| `influxdb.podAffinityPreset`                      | InfluxDB<sup>TM</sup> Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                           | `""`                                                    |
-| `influxdb.podAntiAffinityPreset`                  | InfluxDB<sup>TM</sup> Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                      | `""`                                                    |
-| `influxdb.nodeAffinityPreset.type`                | InfluxDB<sup>TM</sup> Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                     | `""`                                                    |
-| `influxdb.nodeAffinityPreset.key`                 | InfluxDB<sup>TM</sup> Node label key to match Ignored if `affinity` is set.                                                         | `""`                                                    |
-| `influxdb.nodeAffinityPreset.values`              | InfluxDB<sup>TM</sup> Node label values to match. Ignored if `affinity` is set.                                                     | `[]`                                                    |
-| `influxdb.affinity`                               | InfluxDB<sup>TM</sup> Affinity for pod assignment                                                                                   | `{}` (evaluated as a template)                          |
-| `influxdb.nodeSelector`                           | InfluxDB<sup>TM</sup> Node labels for pod assignment                                                                                | `{}` (evaluated as a template)                          |
-| `influxdb.tolerations`                            | InfluxDB<sup>TM</sup> Tolerations for pod assignment                                                                                | `[]` (evaluated as a template)                          |
-| `infludb.podManagementPolicy`                     | Pod Management Policy [`OrderedReady` or `Parallel`]                                                                                | `OrderedReady`                                          |
-| `influxdb.securityContext.enabled`                | Enable security context for InfluxDB<sup>TM</sup>                                                                                   | `true`                                                  |
-| `influxdb.securityContext.fsGroup`                | Group ID for the InfluxDB<sup>TM</sup> filesystem                                                                                   | `1001`                                                  |
-| `influxdb.securityContext.runAsUser`              | User ID for the InfluxDB<sup>TM</sup> container                                                                                     | `1001`                                                  |
-| `influxdb.resources`                              | The [resources] to allocate for container                                                                                           | `{}`                                                    |
-| `influxdb.livenessProbe`                          | Liveness probe configuration for InfluxDB<sup>TM</sup>                                                                              | `Check values.yaml file`                                |
-| `influxdb.readinessProbe`                         | Readiness probe configuration for InfluxDB<sup>TM</sup>                                                                             | `Check values.yaml file`                                |
-| `influxdb.containerPorts.http`                    | InfluxDB<sup>TM</sup> container HTTP port                                                                                           | `8086`                                                  |
-| `influxdb.containerPorts.rpc`                     | InfluxDB<sup>TM</sup> container RPC port                                                                                            | `8088`                                                  |
-| `influxdb.service.type`                           | Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)                                                                 | `ClusterIP`                                             |
-| `influxdb.service.port`                           | InfluxDB<sup>TM</sup> HTTP port                                                                                                     | `8086`                                                  |
-| `influxdb.service.rpcPort`                        | InfluxDB<sup>TM</sup> RPC port                                                                                                      | `8088`                                                  |
-| `influxdb.service.nodePorts.http`                 | Kubernetes HTTP node port                                                                                                           | `""`                                                    |
-| `influxdb.service.nodePorts.rpc`                  | Kubernetes RPC node port                                                                                                            | `""`                                                    |
-| `influxdb.service.annotations`                    | Annotations for InfluxDB<sup>TM</sup> service                                                                                       | `{}`                                                    |
-| `influxdb.service.loadBalancerIP`                 | loadBalancerIP if service type is `LoadBalancer`                                                                                    | `nil`                                                   |
-| `influxdb.service.loadBalancerSourceRanges`       | Address that are allowed when service is LoadBalancer                                                                               | `[]`                                                    |
-| `influxdb.service.clusterIP`                      | Static clusterIP or None for headless services                                                                                      | `nil`                                                   |
-| `relay.image.registry`                            | InfluxDB Relay<sup>TM</sup> image registry                                                                                          | `docker.io`                                             |
-| `relay.image.repository`                          | InfluxDB Relay<sup>TM</sup> image name                                                                                              | `bitnami/influxdb-relay`                                |
-| `relay.image.tag`                                 | InfluxDB Relay<sup>TM</sup> image tag                                                                                               | `{TAG_NAME}`                                            |
-| `relay.image.pullPolicy`                          | InfluxDB Relay<sup>TM</sup> image pull policy                                                                                       | `IfNotPresent`                                          |
-| `relay.image.pullSecrets`                         | Specify docker-registry secret names as an array                                                                                    | `[]` (does not add image pull secrets to deployed pods) |
-| `relay.configuration`                             | Specify content for relay.toml                                                                                                      | `Check values.yaml file`                                |
-| `relay.existingConfiguration`                     | Name of existing ConfigMap object with the InfluxDB Relay<sup>TM</sup> configuration (`relay.configuration` will be ignored)        | `nil`                                                   |
-| `relay.replicaCount`                              | The number of InfluxDB Relay<sup>TM</sup> replicas to deploy                                                                        | `1`                                                     |
-| `relay.podAffinityPreset`                         | InfluxDB Relay<sup>TM</sup> Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                     | `""`                                                    |
-| `relay.podAntiAffinityPreset`                     | InfluxDB Relay<sup>TM</sup> Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                | `""`                                                    |
-| `relay.nodeAffinityPreset.type`                   | InfluxDB Relay<sup>TM</sup> Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`               | `""`                                                    |
-| `relay.nodeAffinityPreset.key`                    | InfluxDB Relay<sup>TM</sup> Node label key to match Ignored if `affinity` is set.                                                   | `""`                                                    |
-| `relay.nodeAffinityPreset.values`                 | InfluxDB Relay<sup>TM</sup> Node label values to match. Ignored if `affinity` is set.                                               | `[]`                                                    |
-| `relay.affinity`                                  | InfluxDB Relay<sup>TM</sup> Affinity for pod assignment                                                                             | `{}` (evaluated as a template)                          |
-| `relay.nodeSelector`                              | InfluxDB Relay<sup>TM</sup> Node labels for pod assignment                                                                          | `{}` (evaluated as a template)                          |
-| `relay.tolerations`                               | InfluxDB Relay<sup>TM</sup> Tolerations for pod assignment                                                                          | `[]` (evaluated as a template)                          |
-| `relay.securityContext.enabled`                   | Enable security context for InfluxDB Relay<sup>TM</sup>                                                                             | `true`                                                  |
-| `relay.securityContext.fsGroup`                   | Group ID for the InfluxDB Relay<sup>TM</sup> filesystem                                                                             | `1001`                                                  |
-| `relay.securityContext.runAsUser`                 | User ID for the InfluxDB Relay<sup>TM</sup> container                                                                               | `1001`                                                  |
-| `relay.resources`                                 | The [resources] to allocate for container                                                                                           | `{}`                                                    |
-| `relay.livenessProbe`                             | Liveness probe configuration for InfluxDB Relay<sup>TM</sup>                                                                        | `Check values.yaml file`                                |
-| `relay.readinessProbe`                            | Readiness probe configuration for InfluxDB Relay<sup>TM</sup>                                                                       | `Check values.yaml file`                                |
-| `relay.containerPorts.http`                       | InfluxDB Relay<sup>TM</sup> container HTTP port                                                                                     | `9096`                                                  |
-| `relay.service.type`                              | Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)                                                                 | `ClusterIP`                                             |
-| `relay.service.port`                              | InfluxDB Relay<sup>TM</sup> HTTP port                                                                                               | `9096`                                                  |
-| `relay.service.nodePort`                          | Kubernetes HTTP node port                                                                                                           | `""`                                                    |
-| `relay.service.annotations`                       | Annotations for InfluxDB Relay<sup>TM</sup> service                                                                                 | `{}`                                                    |
-| `relay.service.loadBalancerIP`                    | loadBalancerIP if service type is `LoadBalancer`                                                                                    | `nil`                                                   |
-| `relay.service.loadBalancerSourceRanges`          | Address that are allowed when service is LoadBalancer                                                                               | `[]`                                                    |
-| `relay.service.clusterIP`                         | Static clusterIP or None for headless services                                                                                      | `nil`                                                   |
-| `ingress.enabled`                                 | Enable ingress controller resource                                                                                                  | `false`                                                 |
-| `ingress.certManager`                             | Add annotations for cert-manager                                                                                                    | `false`                                                 |
-| `ingress.annotations`                             | Ingress annotations                                                                                                                 | `[]`                                                    |
-| `ingress.hosts[0].name`                           | Hostname for InfluxDB<sup>TM</sup> service                                                                                          | `influxdb.local`                                        |
-| `ingress.hosts[0].path`                           | Path within the url structure                                                                                                       | `/`                                                     |
-| `ingress.tls[0].hosts[0]`                         | TLS hosts                                                                                                                           | `influxdb.local`                                        |
-| `ingress.tls[0].secretName`                       | TLS Secret (certificates)                                                                                                           | `influxdb.local-tls`                                    |
-| `ingress.secrets[0].name`                         | TLS Secret Name                                                                                                                     | `nil`                                                   |
-| `ingress.secrets[0].certificate`                  | TLS Secret Certificate                                                                                                              | `nil`                                                   |
-| `ingress.secrets[0].key`                          | TLS Secret Key                                                                                                                      | `nil`                                                   |
-| `metrics.enabled`                                 | Enable the export of Prometheus metrics                                                                                             | `false`                                                 |
-| `metrics.service.type`                            | Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)                                                                 | `ClusterIP`                                             |
-| `metrics.service.port`                            | InfluxDB<sup>TM</sup> Prometheus port                                                                                               | `9122`                                                  |
-| `metrics.service.nodePort`                        | Kubernetes HTTP node port                                                                                                           | `""`                                                    |
-| `metrics.service.annotations`                     | Annotations for Prometheus metrics service                                                                                          | `Check values.yaml file`                                |
-| `metrics.service.loadBalancerIP`                  | loadBalancerIP if service type is `LoadBalancer`                                                                                    | `nil`                                                   |
-| `metrics.service.loadBalancerSourceRanges`        | Address that are allowed when service is LoadBalancer                                                                               | `[]`                                                    |
-| `metrics.service.clusterIP`                       | Static clusterIP or None for headless services                                                                                      | `nil`                                                   |
-| `metrics.serviceMonitor.enabled`                  | if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)                              | `false`                                                 |
-| `metrics.serviceMonitor.namespace`                | Namespace in which Prometheus is running                                                                                            | `nil`                                                   |
-| `metrics.serviceMonitor.interval`                 | Interval at which metrics should be scraped.                                                                                        | `nil` (Prometheus Operator default value)               |
-| `metrics.serviceMonitor.scrapeTimeout`            | Timeout after which the scrape is ended                                                                                             | `nil` (Prometheus Operator default value)               |
-| `metrics.serviceMonitor.selector`                 | Prometheus instance selector labels                                                                                                 | `nil`                                                   |
-| `networkPolicy.enabled`                           | Enable NetworkPolicy                                                                                                                | `false`                                                 |
-| `networkPolicy.allowExternal`                     | Don't require client label for connections                                                                                          | `true`                                                  |
-| `persistence.enabled`                             | Enable data persistence                                                                                                             | `true`                                                  |
-| `persistence.existingClaim`                       | Use a existing PVC which must be created manually before bound                                                                      | `nil`                                                   |
-| `persistence.storageClass`                        | Specify the `storageClass` used to provision the volume                                                                             | `nil`                                                   |
-| `persistence.accessMode`                          | Access mode of data volume                                                                                                          | `ReadWriteOnce`                                         |
-| `persistence.size`                                | Size of data volume                                                                                                                 | `8Gi`                                                   |
-| `volumePermissions.enabled`                       | Enable init container that changes the owner and group of the persistent volume mountpoint to `runAsUser:fsGroup`                   | `false`                                                 |
-| `volumePermissions.image.registry`                | Init container volume-permissions image registry                                                                                    | `docker.io`                                             |
-| `volumePermissions.image.repository`              | Init container volume-permissions image name                                                                                        | `bitnami/minideb`                                       |
-| `volumePermissions.image.tag`                     | Init container volume-permissions image tag                                                                                         | `buster`                                                |
-| `volumePermissions.image.pullPolicy`              | Init container volume-permissions image pull policy                                                                                 | `Always`                                                |
-| `volumePermissions.image.pullSecrets`             | Specify docker-registry secret names as an array                                                                                    | `[]` (does not add image pull secrets to deployed pods) |
-| `volumePermissions.securityContext.runAsUser`     | User ID for the init container (when facing issues in OpenShift or uid unknown, try value "auto")                                   | `0`                                                     |
-| `backup.enabled`                                  | enable InfluxDB<sup>TM</sup> backup                                                                                                 | `false`                                                 |
-| `backup.directory`                                | directory where backups are stored in                                                                                               | `"/backups"`                                            |
-| `backup.retentionDays`                            | retention time in days for backups (older backups are deleted)                                                                      | `10`                                                    |
-| `backup.cronjob.schedule`                         | crontab style time schedule for backup execution                                                                                    | `"0 2 * * *"`                                           |
-| `backup.cronjob.historyLimit`                     | cronjob historylimit                                                                                                                | `1`                                                     |
-| `backup.cronjob.annotations`                      | backup pod annotations                                                                                                              | `{}`                                                    |
-| `backup.uploadProviders.google.enabled`           | enable upload to google storage bucket                                                                                              | `false`                                                 |
-| `backup.uploadProviders.google.secret`            | json secret with serviceaccount data to access Google storage bucket                                                                | `""`                                                    |
-| `backup.uploadProviders.google.secretKey`         | service account secret key name                                                                                                     | `"key.json"`                                            |
-| `backup.uploadProviders.google.existingSecret`    | Name of existing secret object with Google serviceaccount json credentials                                                          | `""`                                                    |
-| `backup.uploadProviders.google.bucketName`        | google storage bucket name name                                                                                                     | `"gs://bucket/influxdb"`                                |
-| `backup.uploadProviders.google.image.registry`    | Google Cloud SDK image registry                                                                                                     | `docker.io`                                             |
-| `backup.uploadProviders.google.image.repository`  | Google Cloud SDK image name                                                                                                         | `bitnami/google-cloud-sdk`                              |
-| `backup.uploadProviders.google.image.tag`         | Google Cloud SDK image tag                                                                                                          | `{TAG_NAME}`                                            |
-| `backup.uploadProviders.google.image.pullPolicy`  | Google Cloud SDK image pull policy                                                                                                  | `IfNotPresent`                                          |
-| `backup.uploadProviders.google.image.pullSecrets` | Specify docker-registry secret names as an array                                                                                    | `[]` (does not add image pull secrets to deployed pods) |
-| `backup.uploadProviders.azure.enabled`            | enable upload to azure storage container                                                                                            | `false`                                                 |
-| `backup.uploadProviders.azure.secret`             | secret with credentials to access Azure storage                                                                                     | `""`                                                    |
-| `backup.uploadProviders.azure.secretKey`          | service account secret key name                                                                                                     | `"connection-string"`                                   |
-| `backup.uploadProviders.azure.existingSecret`     | Name of existing secret object                                                                                                      | `""`                                                    |
-| `backup.uploadProviders.azure.containerName`      | destination container                                                                                                               | `"influxdb-container"`                                  |
-| `backup.uploadProviders.azure.image.registry`     | Azure CLI image registry                                                                                                            | `docker.io`                                             |
-| `backup.uploadProviders.azure.image.repository`   | Azure CLI image name                                                                                                                | `bitnami/azure-cli`                                     |
-| `backup.uploadProviders.azure.image.tag`          | Azure CLI image tag                                                                                                                 | `{TAG_NAME}`                                            |
-| `backup.uploadProviders.azure.image.pullPolicy`   | Azure CLI image pull policy                                                                                                         | `IfNotPresent`                                          |
-| `backup.uploadProviders.azure.image.pullSecrets`  | Specify docker-registry secret names as an array                                                                                    | `[]` (does not add image pull secrets to deployed pods) |
-
+| Parameter                 | Description                                     | Default                                                 |
+| ------------------------- | ----------------------------------------------- | ------------------------------------------------------- |
+| `global.imageRegistry`    | Global Docker image registry                    | `nil`                                                   |
+| `global.imagePullSecrets` | Global Docker registry secret names as an array | `[]` (does not add image pull secrets to deployed pods) |
+| `global.storageClass`     | Global storage class for dynamic provisioning   | `nil`                                                   |
+
+### Common parameters
+
+| Parameter                     | Description                                                                                           | Default                        |
+| ----------------------------- | ----------------------------------------------------------------------------------------------------- | ------------------------------ |
+| `nameOverride`                | String to partially override influxdb.fullname template with a string (will prepend the release name) | `nil`                          |
+| `fullnameOverride`            | String to fully override influxdb.fullname template with a string                                     | `nil`                          |
+| `commonLabels`                | Labels to add to all deployed objects                                                                 | `{}`                           |
+| `commonAnnotations`           | Annotations to add to all deployed objects                                                            | `{}`                           |
+| `clusterDomain`               | Default Kubernetes cluster domain                                                                     | `cluster.local`                |
+| `extraDeploy`                 | Array of extra objects to deploy with the release                                                     | `[]` (evaluated as a template) |
+| `kubeVersion`                 | Force target Kubernetes version (using Helm capabilities if not set)                                  | `nil`                          |
+| `networkPolicy.enabled`       | Enable NetworkPolicy                                                                                  | `false`                        |
+| `networkPolicy.allowExternal` | Don't require client label for connections                                                            | `true`                         |
+| `persistence.enabled`         | Enable data persistence                                                                               | `true`                         |
+| `persistence.existingClaim`   | Use a existing PVC which must be created manually before bound                                        | `nil`                          |
+| `persistence.storageClass`    | Specify the `storageClass` used to provision the volume                                               | `nil`                          |
+| `persistence.accessMode`      | Access mode of data volume                                                                            | `ReadWriteOnce`                |
+| `persistence.size`            | Size of data volume                                                                                   | `8Gi`                          |
+
+### InfluxDB<sup>TM</sup> parameters
+
+| Parameter                                   | Description                                                                                                                                                                                                                                                          | Default                                                 |
+| ------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `image.registry`                            | InfluxDB<sup>TM</sup> image registry                                                                                                                                                                                                                                 | `docker.io`                                             |
+| `image.repository`                          | InfluxDB<sup>TM</sup> image name                                                                                                                                                                                                                                     | `bitnami/influxdb`                                      |
+| `image.tag`                                 | InfluxDB<sup>TM</sup> image tag                                                                                                                                                                                                                                      | `{TAG_NAME}`                                            |
+| `image.pullPolicy`                          | InfluxDB<sup>TM</sup> image pull policy                                                                                                                                                                                                                              | `IfNotPresent`                                          |
+| `image.pullSecrets`                         | Specify docker-registry secret names as an array                                                                                                                                                                                                                     | `[]` (does not add image pull secrets to deployed pods) |
+| `image.debug`                               | Specify if debug logs should be enabled                                                                                                                                                                                                                              | `false`                                                 |
+| `architecture`                              | InfluxDB<sup>TM</sup> architecture (`standalone` or `high-availability`)                                                                                                                                                                                             | `standalone`                                            |
+| `auth.enabled`                              | Enable/disable authentication (Variable to keep compatibility with InfluxDB v1, in v2 it will be ignored)                                                                                                                                                            | `true`                                                  |
+| `auth.admin.username`                       | InfluxDB<sup>TM</sup> admin user name                                                                                                                                                                                                                                | `admin`                                                 |
+| `auth.admin.password`                       | InfluxDB<sup>TM</sup> admin user's password                                                                                                                                                                                                                          | `nil`                                                   |
+| `auth.admin.token`                          | InfluxDB<sup>TM</sup> admin user's token. Only valid with InfluxDB<sup>TM</sup> v2                                                                                                                                                                                   | `nil`                                                   |
+| `auth.admin.org`                            | InfluxDB<sup>TM</sup> admin user's org. Only valid with InfluxDB<sup>TM</sup> v2                                                                                                                                                                                     | `primary`                                               |
+| `auth.admin.bucket`                         | InfluxDB<sup>TM</sup> admin user's bucket. Only valid with InfluxDB<sup>TM</sup> v2                                                                                                                                                                                  | `primary`                                               |
+| `auth.admin.usePasswordFile`                | Mount admin user's password as file instead of environment variable                                                                                                                                                                                                  | `false`                                                 |
+| `auth.createUserToken`                      | Whether to create tokens for the different users. Take into account these tokens are going to be created by CLI randomly and they will not be accessible from a secret. See more influxdb 2.0 [auth ref](https://docs.influxdata.com/influxdb/v2.0/security/tokens/) | `false`                                                 |
+| `auth.user.username`                        | Name for InfluxDB<sup>TM</sup> user with 'admin' privileges on the bucket specified at `auth.user.bucket` and `auth.user.org` or `auth.admin.org`                                                                                                                    | `nil`                                                   |
+| `auth.user.password`                        | InfluxDB<sup>TM</sup> password for `user.name` user                                                                                                                                                                                                                  | `nil`                                                   |
+| `auth.user.usePasswordFile`                 | Mount `user.name` user's password as file instead of environment variable                                                                                                                                                                                            | `nil`                                                   |
+| `auth.user.bucket`                          | Bucket to be created on first run                                                                                                                                                                                                                                    | `my_database`                                           |
+| `auth.user.org`                             | Org to be created on first run                                                                                                                                                                                                                                       | `my_database`                                           |
+| `auth.readUser.username`                    | Name for InfluxDB<sup>TM</sup> user with 'read' privileges on the bucket specified at `auth.user.bucket`                                                                                                                                                             | `nil`                                                   |
+| `auth.readUser.password`                    | InfluxDB<sup>TM</sup> password for `auth.readUser.username` user                                                                                                                                                                                                     | `nil`                                                   |
+| `auth.readUser.usePasswordFile`             | Mount `auth.readUser.username` user's password as file instead of environment variable                                                                                                                                                                               | `nil`                                                   |
+| `auth.writeUser.username`                   | Name for InfluxDB<sup>TM</sup> user with 'read' privileges on the bucket specified at `auth.user.bucket`                                                                                                                                                             | `nil`                                                   |
+| `auth.writeUser.password`                   | InfluxDB<sup>TM</sup> password for `auth.writeUser.username` user                                                                                                                                                                                                    | `nil`                                                   |
+| `auth.writeUser.usePasswordFile`            | Mount `auth.writeUser.username` user's password as file instead of environment variable                                                                                                                                                                              | `nil`                                                   |
+| `auth.existingSecret`                       | Name of existing Secret object with InfluxDB<sup>TM</sup> credentials (`auth.admin.password`, `auth.user.password`, `auth.readUser.password`, and `auth.writeUser.password` will be ignored and picked up from this secret)                                          | `nil`                                                   |
+| `influxdb.configuration`                    | Specify content for influxdb.conf                                                                                                                                                                                                                                    | `nil (do not create influxdb.conf)`                     |
+| `influxdb.existingConfiguration`            | Name of existing ConfigMap object with the InfluxDB<sup>TM</sup> configuration (`influxdb.configuration` will be ignored).                                                                                                                                           | `nil`                                                   |
+| `influxdb.initdbScripts`                    | Dictionary of initdb scripts                                                                                                                                                                                                                                         | `nil`                                                   |
+| `influxdb.initdbScriptsCM`                  | Name of existing ConfigMap object with the initdb scripts (`influxdb.initdbScripts` will be ignored).                                                                                                                                                                | `nil`                                                   |
+| `influxdb.initdbScriptsSecret`              | Secret with initdb scripts that contain sensitive information (Note: can be used with `initdbScriptsConfigMap` or `initdbScripts`)                                                                                                                                   | `nil`                                                   |
+| `influxdb.extraEnvVars`                     | Array containing extra env vars to configure InfluxDB<sup>TM</sup>                                                                                                                                                                                                   | `nil`                                                   |
+| `influxdb.replicaCount`                     | The number of InfluxDB<sup>TM</sup> replicas to deploy                                                                                                                                                                                                               | `1`                                                     |
+| `influxdb.podAffinityPreset`                | InfluxDB<sup>TM</sup> Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                                                                                                                            | `""`                                                    |
+| `influxdb.podAntiAffinityPreset`            | InfluxDB<sup>TM</sup> Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                                                                                                                       | `""`                                                    |
+| `influxdb.nodeAffinityPreset.type`          | InfluxDB<sup>TM</sup> Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                                                                                                                                                      | `""`                                                    |
+| `influxdb.nodeAffinityPreset.key`           | InfluxDB<sup>TM</sup> Node label key to match Ignored if `affinity` is set.                                                                                                                                                                                          | `""`                                                    |
+| `influxdb.nodeAffinityPreset.values`        | InfluxDB<sup>TM</sup> Node label values to match. Ignored if `affinity` is set.                                                                                                                                                                                      | `[]`                                                    |
+| `influxdb.affinity`                         | InfluxDB<sup>TM</sup> Affinity for pod assignment                                                                                                                                                                                                                    | `{}` (evaluated as a template)                          |
+| `influxdb.nodeSelector`                     | InfluxDB<sup>TM</sup> Node labels for pod assignment                                                                                                                                                                                                                 | `{}` (evaluated as a template)                          |
+| `influxdb.tolerations`                      | InfluxDB<sup>TM</sup> Tolerations for pod assignment                                                                                                                                                                                                                 | `[]` (evaluated as a template)                          |
+| `influxdb.extraVolumeMounts`                | Array of extra volume mounts to be added to the container (evaluated as template). Normally used with extraVolumes.                                                                                                                                                  | `[]` (evaluated as a template)                          |
+| `influxdb.extraVolumes`                     | Array of extra volumes to be added to the deployment (evaluated as template). Requires setting extraVolumeMounts                                                                                                                                                     | `[]` (evaluated as a template)                          |
+| `influxdb.podManagementPolicy`              | Pod Management Policy [`OrderedReady` or `Parallel`]                                                                                                                                                                                                                 | `OrderedReady`                                          |
+| `influxdb.securityContext.enabled`          | Enable security context for InfluxDB<sup>TM</sup>                                                                                                                                                                                                                    | `true`                                                  |
+| `influxdb.securityContext.fsGroup`          | Group ID for the InfluxDB<sup>TM</sup> filesystem                                                                                                                                                                                                                    | `1001`                                                  |
+| `influxdb.securityContext.runAsUser`        | User ID for the InfluxDB<sup>TM</sup> container                                                                                                                                                                                                                      | `1001`                                                  |
+| `influxdb.resources`                        | The [resources] to allocate for container                                                                                                                                                                                                                            | `{}`                                                    |
+| `influxdb.livenessProbe`                    | Liveness probe configuration for InfluxDB<sup>TM</sup>                                                                                                                                                                                                               | `Check values.yaml file`                                |
+| `influxdb.readinessProbe`                   | Readiness probe configuration for InfluxDB<sup>TM</sup>                                                                                                                                                                                                              | `Check values.yaml file`                                |
+| `influxdb.customLivenessProbe`              | Override default liveness probe                                                                                                                                                                                                                                      | `nil`                                                   |
+| `influxdb.customReadinessProbe`             | Override default readiness probe                                                                                                                                                                                                                                     | `nil`                                                   |
+| `influxdb.containerPorts.http`              | InfluxDB<sup>TM</sup> container HTTP port                                                                                                                                                                                                                            | `8086`                                                  |
+| `influxdb.containerPorts.rpc`               | InfluxDB<sup>TM</sup> container RPC port                                                                                                                                                                                                                             | `8088`                                                  |
+| `influxdb.service.type`                     | Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)                                                                                                                                                                                                  | `ClusterIP`                                             |
+| `influxdb.service.port`                     | InfluxDB<sup>TM</sup> HTTP port                                                                                                                                                                                                                                      | `8086`                                                  |
+| `influxdb.service.rpcPort`                  | InfluxDB<sup>TM</sup> RPC port                                                                                                                                                                                                                                       | `8088`                                                  |
+| `influxdb.service.nodePorts.http`           | Kubernetes HTTP node port                                                                                                                                                                                                                                            | `""`                                                    |
+| `influxdb.service.nodePorts.rpc`            | Kubernetes RPC node port                                                                                                                                                                                                                                             | `""`                                                    |
+| `influxdb.service.annotations`              | Annotations for InfluxDB<sup>TM</sup> service                                                                                                                                                                                                                        | `{}`                                                    |
+| `influxdb.service.loadBalancerIP`           | loadBalancerIP if service type is `LoadBalancer`                                                                                                                                                                                                                     | `nil`                                                   |
+| `influxdb.service.loadBalancerSourceRanges` | Address that are allowed when service is LoadBalancer                                                                                                                                                                                                                | `[]`                                                    |
+| `influxdb.service.clusterIP`                | Static clusterIP or None for headless services                                                                                                                                                                                                                       | `nil`                                                   |
+
+### InfluxDB Relay<sup>TM</sup> parameters
+
+| Parameter                                | Description                                                                                                                  | Default                                                 |
+| ---------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `relay.image.registry`                   | InfluxDB Relay<sup>TM</sup> image registry                                                                                   | `docker.io`                                             |
+| `relay.image.repository`                 | InfluxDB Relay<sup>TM</sup> image name                                                                                       | `bitnami/influxdb-relay`                                |
+| `relay.image.tag`                        | InfluxDB Relay<sup>TM</sup> image tag                                                                                        | `{TAG_NAME}`                                            |
+| `relay.image.pullPolicy`                 | InfluxDB Relay<sup>TM</sup> image pull policy                                                                                | `IfNotPresent`                                          |
+| `relay.image.pullSecrets`                | Specify docker-registry secret names as an array                                                                             | `[]` (does not add image pull secrets to deployed pods) |
+| `relay.configuration`                    | Specify content for relay.toml                                                                                               | `Check values.yaml file`                                |
+| `relay.existingConfiguration`            | Name of existing ConfigMap object with the InfluxDB Relay<sup>TM</sup> configuration (`relay.configuration` will be ignored) | `nil`                                                   |
+| `relay.replicaCount`                     | The number of InfluxDB Relay<sup>TM</sup> replicas to deploy                                                                 | `1`                                                     |
+| `relay.podAffinityPreset`                | InfluxDB Relay<sup>TM</sup> Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`              | `""`                                                    |
+| `relay.podAntiAffinityPreset`            | InfluxDB Relay<sup>TM</sup> Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`         | `""`                                                    |
+| `relay.nodeAffinityPreset.type`          | InfluxDB Relay<sup>TM</sup> Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`        | `""`                                                    |
+| `relay.nodeAffinityPreset.key`           | InfluxDB Relay<sup>TM</sup> Node label key to match Ignored if `affinity` is set.                                            | `""`                                                    |
+| `relay.nodeAffinityPreset.values`        | InfluxDB Relay<sup>TM</sup> Node label values to match. Ignored if `affinity` is set.                                        | `[]`                                                    |
+| `relay.affinity`                         | InfluxDB Relay<sup>TM</sup> Affinity for pod assignment                                                                      | `{}` (evaluated as a template)                          |
+| `relay.nodeSelector`                     | InfluxDB Relay<sup>TM</sup> Node labels for pod assignment                                                                   | `{}` (evaluated as a template)                          |
+| `relay.tolerations`                      | InfluxDB Relay<sup>TM</sup> Tolerations for pod assignment                                                                   | `[]` (evaluated as a template)                          |
+| `relay.extraVolumeMounts`                | Array of extra volume mounts to be added to the container (evaluated as template). Normally used with extraVolumes.          | `[]` (evaluated as a template)                          |
+| `relay.extraVolumes`                     | Array of extra volumes to be added to the deployment (evaluated as template). Requires setting extraVolumeMounts             | `[]` (evaluated as a template)                          |
+| `relay.securityContext.enabled`          | Enable security context for InfluxDB Relay<sup>TM</sup>                                                                      | `true`                                                  |
+| `relay.securityContext.fsGroup`          | Group ID for the InfluxDB Relay<sup>TM</sup> filesystem                                                                      | `1001`                                                  |
+| `relay.securityContext.runAsUser`        | User ID for the InfluxDB Relay<sup>TM</sup> container                                                                        | `1001`                                                  |
+| `relay.resources`                        | The [resources] to allocate for container                                                                                    | `{}`                                                    |
+| `relay.livenessProbe`                    | Liveness probe configuration for InfluxDB Relay<sup>TM</sup>                                                                 | `Check values.yaml file`                                |
+| `relay.readinessProbe`                   | Readiness probe configuration for InfluxDB Relay<sup>TM</sup>                                                                | `Check values.yaml file`                                |
+| `relay.customLivenessProbe`              | Override default liveness probe                                                                                              | `nil`                                                   |
+| `relay.customReadinessProbe`             | Override default readiness probe                                                                                             | `nil`                                                   |
+| `relay.containerPorts.http`              | InfluxDB Relay<sup>TM</sup> container HTTP port                                                                              | `9096`                                                  |
+| `relay.service.type`                     | Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)                                                          | `ClusterIP`                                             |
+| `relay.service.port`                     | InfluxDB Relay<sup>TM</sup> HTTP port                                                                                        | `9096`                                                  |
+| `relay.service.nodePort`                 | Kubernetes HTTP node port                                                                                                    | `""`                                                    |
+| `relay.service.annotations`              | Annotations for InfluxDB Relay<sup>TM</sup> service                                                                          | `{}`                                                    |
+| `relay.service.loadBalancerIP`           | loadBalancerIP if service type is `LoadBalancer`                                                                             | `nil`                                                   |
+| `relay.service.loadBalancerSourceRanges` | Address that are allowed when service is LoadBalancer                                                                        | `[]`                                                    |
+| `relay.service.clusterIP`                | Static clusterIP or None for headless services                                                                               | `nil`                                                   |
+
+### Exposing parameters
+
+| Parameter                        | Description                                                   | Default                        |
+| -------------------------------- | ------------------------------------------------------------- | ------------------------------ |
+| `ingress.enabled`                | Enable ingress controller resource                            | `false`                        |
+| `ingress.certManager`            | Add annotations for cert-manager                              | `false`                        |
+| `ingress.hostname`               | Default host for the ingress resource                         | `phabricator.local`            |
+| `ingress.apiVersion`             | Force Ingress API version (automatically detected if not set) | `nil`                          |
+| `ingress.path`                   | Ingress path                                                  | `/`                            |
+| `ingress.pathType`               | Ingress path type                                             | `ImplementationSpecific`       |
+| `ingress.tls`                    | Create TLS Secret                                             | `false`                        |
+| `ingress.annotations`            | Ingress annotations                                           | `[]` (evaluated as a template) |
+| `ingress.extraHosts[0].name`     | Additional hostnames to be covered                            | `nil`                          |
+| `ingress.extraHosts[0].path`     | Additional hostnames to be covered                            | `nil`                          |
+| `ingress.extraPaths`             | Additional arbitrary path/backend objects                     | `nil`                          |
+| `ingress.extraTls[0].hosts[0]`   | TLS configuration for additional hostnames to be covered      | `nil`                          |
+| `ingress.extraTls[0].secretName` | TLS configuration for additional hostnames to be covered      | `nil`                          |
+| `ingress.secrets[0].name`        | TLS Secret Name                                               | `nil`                          |
+| `ingress.secrets[0].certificate` | TLS Secret Certificate                                        | `nil`                          |
+| `ingress.secrets[0].key`         | TLS Secret Key                                                | `nil`                          |
+
+### Metrics parameters
+
+| Parameter                                  | Description                                                                                            | Default                                   |
+| ------------------------------------------ | ------------------------------------------------------------------------------------------------------ | ----------------------------------------- |
+| `metrics.enabled`                          | Enable the export of Prometheus metrics                                                                | `false`                                   |
+| `metrics.service.type`                     | Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)                                    | `ClusterIP`                               |
+| `metrics.service.port`                     | InfluxDB<sup>TM</sup> Prometheus port                                                                  | `9122`                                    |
+| `metrics.service.nodePort`                 | Kubernetes HTTP node port                                                                              | `""`                                      |
+| `metrics.service.annotations`              | Annotations for Prometheus metrics service                                                             | `Check values.yaml file`                  |
+| `metrics.service.loadBalancerIP`           | loadBalancerIP if service type is `LoadBalancer`                                                       | `nil`                                     |
+| `metrics.service.loadBalancerSourceRanges` | Address that are allowed when service is LoadBalancer                                                  | `[]`                                      |
+| `metrics.service.clusterIP`                | Static clusterIP or None for headless services                                                         | `nil`                                     |
+| `metrics.serviceMonitor.enabled`           | if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`) | `false`                                   |
+| `metrics.serviceMonitor.namespace`         | Namespace in which Prometheus is running                                                               | `nil`                                     |
+| `metrics.serviceMonitor.interval`          | Interval at which metrics should be scraped.                                                           | `nil` (Prometheus Operator default value) |
+| `metrics.serviceMonitor.scrapeTimeout`     | Timeout after which the scrape is ended                                                                | `nil` (Prometheus Operator default value) |
+| `metrics.serviceMonitor.selector`          | Prometheus instance selector labels                                                                    | `nil`                                     |
+
+### Volume permissions parameters
+
+| Parameter                                     | Description                                                                                                       | Default                                                 |
+| --------------------------------------------- | ----------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `volumePermissions.enabled`                   | Enable init container that changes the owner and group of the persistent volume mountpoint to `runAsUser:fsGroup` | `false`                                                 |
+| `volumePermissions.image.registry`            | Init container volume-permissions image registry                                                                  | `docker.io`                                             |
+| `volumePermissions.image.repository`          | Init container volume-permissions image name                                                                      | `bitnami/minideb`                                       |
+| `volumePermissions.image.tag`                 | Init container volume-permissions image tag                                                                       | `buster`                                                |
+| `volumePermissions.image.pullPolicy`          | Init container volume-permissions image pull policy                                                               | `Always`                                                |
+| `volumePermissions.image.pullSecrets`         | Specify docker-registry secret names as an array                                                                  | `[]` (does not add image pull secrets to deployed pods) |
+| `volumePermissions.securityContext.runAsUser` | User ID for the init container (when facing issues in OpenShift or uid unknown, try value "auto")                 | `0`                                                     |
+
+### InfluxDB<sup>TM</sup> backup parameters
+
+| Parameter                                         | Description                                                                | Default                                                 |
+| ------------------------------------------------- | -------------------------------------------------------------------------- | ------------------------------------------------------- |
+| `backup.enabled`                                  | enable InfluxDB<sup>TM</sup> backup                                        | `false`                                                 |
+| `backup.directory`                                | directory where backups are stored in                                      | `"/backups"`                                            |
+| `backup.retentionDays`                            | retention time in days for backups (older backups are deleted)             | `10`                                                    |
+| `backup.cronjob.schedule`                         | crontab style time schedule for backup execution                           | `"0 2 * * *"`                                           |
+| `backup.cronjob.historyLimit`                     | cronjob historylimit                                                       | `1`                                                     |
+| `backup.cronjob.annotations`                      | backup pod annotations                                                     | `{}`                                                    |
+| `backup.uploadProviders.google.enabled`           | enable upload to google storage bucket                                     | `false`                                                 |
+| `backup.uploadProviders.google.secret`            | json secret with serviceaccount data to access Google storage bucket       | `""`                                                    |
+| `backup.uploadProviders.google.secretKey`         | service account secret key name                                            | `"key.json"`                                            |
+| `backup.uploadProviders.google.existingSecret`    | Name of existing secret object with Google serviceaccount json credentials | `""`                                                    |
+| `backup.uploadProviders.google.bucketName`        | google storage bucket name name                                            | `"gs://bucket/influxdb"`                                |
+| `backup.uploadProviders.google.image.registry`    | Google Cloud SDK image registry                                            | `docker.io`                                             |
+| `backup.uploadProviders.google.image.repository`  | Google Cloud SDK image name                                                | `bitnami/google-cloud-sdk`                              |
+| `backup.uploadProviders.google.image.tag`         | Google Cloud SDK image tag                                                 | `{TAG_NAME}`                                            |
+| `backup.uploadProviders.google.image.pullPolicy`  | Google Cloud SDK image pull policy                                         | `IfNotPresent`                                          |
+| `backup.uploadProviders.google.image.pullSecrets` | Specify docker-registry secret names as an array                           | `[]` (does not add image pull secrets to deployed pods) |
+| `backup.uploadProviders.azure.enabled`            | enable upload to azure storage container                                   | `false`                                                 |
+| `backup.uploadProviders.azure.secret`             | secret with credentials to access Azure storage                            | `""`                                                    |
+| `backup.uploadProviders.azure.secretKey`          | service account secret key name                                            | `"connection-string"`                                   |
+| `backup.uploadProviders.azure.existingSecret`     | Name of existing secret object                                             | `""`                                                    |
+| `backup.uploadProviders.azure.containerName`      | destination container                                                      | `"influxdb-container"`                                  |
+| `backup.uploadProviders.azure.image.registry`     | Azure CLI image registry                                                   | `docker.io`                                             |
+| `backup.uploadProviders.azure.image.repository`   | Azure CLI image name                                                       | `bitnami/azure-cli`                                     |
+| `backup.uploadProviders.azure.image.tag`          | Azure CLI image tag                                                        | `{TAG_NAME}`                                            |
+| `backup.uploadProviders.azure.image.pullPolicy`   | Azure CLI image pull policy                                                | `IfNotPresent`                                          |
+| `backup.uploadProviders.azure.image.pullSecrets`  | Specify docker-registry secret names as an array                           | `[]` (does not add image pull secrets to deployed pods) |
 
 Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
 
 ```console
 $ helm install my-release \
-  --set adminUser.name=admin-user bitnami/influxdb
+  --set auth.admin.username=admin-user bitnami/influxdb
 ```
 
 The above command sets the InfluxDB<sup>TM</sup> admin user to `admin-user`.
@@ -370,23 +427,75 @@ Find more information about how to deal with common errors related to Bitnami’
 
 ## Upgrade
 
-It's necessary to specify the existing passwords while performing an upgrade to ensure the secrets are not updated with invalid randomly generated passwords. Remember to specify the existing values of the `adminUser.pwd`, `user.pwd`, `readUser.pwd` and `writeUser.pwd` parameters when upgrading the chart:
+It's necessary to specify the existing passwords while performing an upgrade to ensure the secrets are not updated with invalid randomly generated passwords. Remember to specify the existing values of the `auth.admin.password`, `user.pwd`, ` auth.readUser.password` and `auth.writeUser.password` parameters when upgrading the chart:
 
 ```bash
 $ helm upgrade my-release bitnami/influxdb \
-    --set adminUser.pwd=[ADMIN_USER_PASSWORD] \
-    --set user.pwd=[USER_PASSWORD] \
-    --set readUser.pwd=[READ_USER_PASSWORD] \
-    --set writeUser.pwd=[WRITE_USER_PASSWORD]
+    --set auth.admin.password=[ADMIN_USER_PASSWORD] \
+    --set auth.user.password=[USER_PASSWORD] \
+    --set auth.readUser.password=[READ_USER_PASSWORD] \
+    --set auth.writeUser.password=[WRITE_USER_PASSWORD]
 ```
 
 > Note: you need to substitute the placeholders _[ADMIN_USER_PASSWORD]_, _[USER_PASSWORD]_, _[READ_USER_PASSWORD]_, and _[WRITE_USER_PASSWORD]_ with the values obtained from instructions in the installation notes.
 
 ## Upgrading
 
+### To 2.0.0
+
+This version adds support to InfluxDB<sup>TM</sup> +2.0, since this version the chart is only verified to work with InfluxDB<sup>TM</sup> +2.0 bitnami images.
+However, you can use images for versions ~1.x.x taking into account the chart may need some modification to run with them.
+
+#### Installing InfluxDB<sup>TM</sup> v1 in chart v2.
+
+```
+$ helm install bitnami/influxdb --set image.tag=1.8.3-debian-10-r88
+```
+
+As a consecuece some breaking changes have been included in this version.
+
+- Authentication values has been moved to `auth.<property>...`.
+- We keep `auth.readUser` and `auth.writeUser` user options in order to be compatible with InfluxDB v1. If you are using InfluxDB 2.0, please, use the CLI to create user and tokens through initDb scripts at `influxdb.initdbScripts` or the UI due to we are not able to automacally provide a token for them to be used. See more [InfluxDB<sup>TM</sup> 2.0 auth](https://docs.influxdata.com/influxdb/v2.0/security/tokens/)
+- InfluxDB<sup>TM</sup> 2.0 has removed database concept, now it is called Bucket so the property `database` has been also moved to `auth.user.bucket`.
+- Removed support for `files/docker-entrypoint-initdb.d/*.{sh,txt}`, please use `.influxdb.initdbScripts` or `.Values.influxdb.initdbScriptsCM` instead.
+- Removed support for `files/conf/influxdb.conf`, please use `.influxdb.configuration` or `.influxdb.existingConfiguration` instead.
+- Removed support for `files/conf/relay.toml`, please use `.Values.relay.configuration` or `.Values.relay.existingConfiguration` instead.
+- `ingress.hosts` parameter has been replaced by `ingress.hostname` and `ingress.extraHosts` that may give us a bit more flexibility.
+
+#### Migrating form InfluxDB<sup>TM</sup> v1 to v2
+
+Since this release could mean lot of concepts changes, we strongly recommend to not do it direcly using the chart upgrade. Please, read more info in their [upgrade guide](https://docs.influxdata.com/influxdb/v2.0/upgrade/v1-to-v2/).
+
+We actually recommend to backup all the data form a previous helm release, install new release using latest version of the chart and images and then restore data following their guides.
+
+#### Upgrading the chart form 1.x.x to 2.x.x using InfluxDB<sup>TM</sup> v1 images.
+
+> NOTE: Please, create a backup of your database before running any of those actions.
+
+Having an already existing chart release called `influxdb` and deployed like
+
+```console
+$ helm install influxdb bitnami/influxdb
+```
+
+##### Export secrets and required values to update
+
+```console
+$ export INFLUXDB_ADMIN_PASSWORD=$(kubectl get secret --namespace default influxdb -o jsonpath="{.data.admin-user-password}" | base64 --decode)
+```
+
+##### Upgrade the chart release
+
+> NOTE: Please remember to migrate all the values to its new path following the above notes, e.g: `adminUser.pwd` -> `auth.admin.password`.
+
+```console
+$ helm upgrade influxdb bitnami/influxdb --set image.tag=1.8.3-debian-10-r99 \
+  --set auth.admin.password=${INFLUXDB_ADMIN_PASSWORD}
+```
+
 ### To 1.1.0
 
-This version also introduces `bitnami/common`, a [library chart](https://helm.sh/docs/topics/library_charts/#helm) as a dependency. More documentation about this new utility could be found [here](https://github.com/bitnami/charts/tree/master/bitnami/common#bitnami-common-library-chart). Please, make sure that you have updated the chart dependencies before executing any upgrade.
+This version introduces `bitnami/common`, a [library chart](https://helm.sh/docs/topics/library_charts/#helm) as a dependency. More documentation about this new utility could be found [here](https://github.com/bitnami/charts/tree/master/bitnami/common#bitnami-common-library-chart). Please, make sure that you have updated the chart dependencies before executing any upgrade.
 
 ### To 1.0.0
 
@@ -395,7 +504,7 @@ This version also introduces `bitnami/common`, a [library chart](https://helm.sh
 **What changes were introduced in this major version?**
 
 - Previous versions of this Helm Chart use `apiVersion: v1` (installable by both Helm 2 and 3), this Helm Chart was updated to `apiVersion: v2` (installable by Helm 3 only). [Here](https://helm.sh/docs/topics/charts/#the-apiversion-field) you can find more information about the `apiVersion` field.
-- The different fields present in the *Chart.yaml* file has been ordered alphabetically in a homogeneous way for all the Bitnami Helm Charts
+- The different fields present in the _Chart.yaml_ file has been ordered alphabetically in a homogeneous way for all the Bitnami Helm Charts
 
 **Considerations when upgrading to this version**
 
diff --git a/bitnami/influxdb/templates/NOTES.txt b/bitnami/influxdb/templates/NOTES.txt
index 4e2bc63ca1..f9ce0f4ced 100644
--- a/bitnami/influxdb/templates/NOTES.txt
+++ b/bitnami/influxdb/templates/NOTES.txt
@@ -5,24 +5,24 @@
 InfluxDB(TM) can be accessed through following DNS names from within your cluster:
 
     {{- if eq .Values.architecture "high-availability" }}
-    InfluxDB Relay(TM) (write operations): {{ include "influxdb.fullname" . }}-relay.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.relay.service.port }})
-    InfluxDB(TM) servers (read operations):  {{ include "influxdb.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.influxdb.service.port }})
+    InfluxDB Relay(TM) (write operations): {{ include "common.names.fullname" . }}-relay.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.relay.service.port }})
+    InfluxDB(TM) servers (read operations):  {{ include "common.names.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.influxdb.service.port }})
     {{- else }}
-    InfluxDB(TM): {{ include "influxdb.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.influxdb.service.port }})
+    InfluxDB(TM): {{ include "common.names.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.influxdb.service.port }})
     {{- end }}
     {{- if .Values.metrics.enabled }}
-    InfluxDB(TM) Prometheus Metrics: {{ include "influxdb.fullname" . }}-metrics.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.metrics.service.port }})
+    InfluxDB(TM) Prometheus Metrics: {{ include "common.names.fullname" . }}-metrics.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }} (port {{ .Values.metrics.service.port }})
     {{- end }}
 
 {{- if .Values.authEnabled }}
 
-To get the password for the {{ .Values.adminUser.name }} user, run:
+To get the password for the {{ .Values.auth.admin.username }} user, run:
 
     export ADMIN_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ include "influxdb.secretName" . }} -o jsonpath="{.data.admin-user-password}" | base64 --decode)
 
-{{- if .Values.user.name }}
+{{- if .Values.auth.user.username }}
 
-To get the password for the {{ .Values.user.name }} user, run:
+To get the password for the {{ .Values.auth.user.username }} user, run:
 
     export USER_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ include "influxdb.secretName" . }} -o jsonpath="{.data.user-password}" | base64 --decode)
 
@@ -49,38 +49,38 @@ To connect to your database run the following commands:
 
     (write operations):
 
-    kubectl run {{ include "influxdb.fullname" . }}-client --rm --tty -i --restart='Never' --namespace {{ .Release.Namespace }} {{ if .Values.authEnabled }}--env="INFLUX_USERNAME={{ .Values.adminUser.name }}" --env="INFLUX_PASSWORD=$ADMIN_PASSWORD"{{ end }} \
-        {{ if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}--labels="{{ include "influxdb.fullname" . }}-client=true" {{ end }}--image {{ include "influxdb.image" . }} \
-        --command -- influx -host {{ include "influxdb.fullname" . }}-relay -port {{ .Values.relay.service.port }}
+    kubectl run {{ include "common.names.fullname" . }}-client --rm --tty -i --restart='Never' --namespace {{ .Release.Namespace }} {{ if .Values.authEnabled }}--env="INFLUX_USERNAME={{ .Values.auth.admin.username }}" --env="INFLUX_PASSWORD=$ADMIN_PASSWORD"{{ end }} \
+        {{ if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}--labels="{{ include "common.names.fullname" . }}-client=true" {{ end }}--image {{ include "influxdb.image" . }} \
+        --command -- influx -host {{ include "common.names.fullname" . }}-relay -port {{ .Values.relay.service.port }}
 
     (read operations):
 
     {{- end }}
 
-    kubectl run {{ include "influxdb.fullname" . }}-client --rm --tty -i --restart='Never' --namespace {{ .Release.Namespace }} {{ if .Values.authEnabled }}--env="INFLUX_USERNAME={{ .Values.adminUser.name }}" --env="INFLUX_PASSWORD=$ADMIN_PASSWORD"{{ end }} \
-        {{ if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}--labels="{{ include "influxdb.fullname" . }}-client=true" {{ end }}--image {{ include "influxdb.image" . }} \
-        --command -- influx -host {{ include "influxdb.fullname" . }} -port {{ .Values.influxdb.service.port }}
+    kubectl run {{ include "common.names.fullname" . }}-client --rm --tty -i --restart='Never' --namespace {{ .Release.Namespace }} {{ if .Values.authEnabled }}--env="INFLUX_USERNAME={{ .Values.auth.admin.username }}" --env="INFLUX_PASSWORD=$ADMIN_PASSWORD"{{ end }} \
+        {{ if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}--labels="{{ include "common.names.fullname" . }}-client=true" {{ end }}--image {{ include "influxdb.image" . }} \
+        --command -- influx -host {{ include "common.names.fullname" . }} -port {{ .Values.influxdb.service.port }}
 
 {{- if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}
 
-Note: Since NetworkPolicy is enabled, only pods with label "{{ include "influxdb.fullname" . }}-client=true" will be able to connect to InfluxDB(TM) server(s).
+Note: Since NetworkPolicy is enabled, only pods with label "{{ include "common.names.fullname" . }}-client=true" will be able to connect to InfluxDB(TM) server(s).
 
 {{- end }}
 
 To connect to your database from outside the cluster execute the following commands:
 
 {{- if .Values.ingress.enabled }}
-{{- $ingressHost := first .Values.ingress.hosts }}
-
+{{- $ingressHost := .Values.ingress.hostname }}
+  {{- if .Values.ingress.extraHosts }}
   You should be able to access your new InfluxDB(TM) server(s) through:
-
-    {{- range .Values.ingress.hosts }}
+  {{- end }}
+    {{- range .Values.ingress.extraHosts }}
     {{ if .tls }}https{{- else }}http{{ end }}://{{ .name }}
     {{- end }}
 
   e.g.:
 
-    {{ if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.adminUser.name }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{ end }} influx -host {{ $ingressHost.name }} -port 80
+    {{ if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.auth.admin.username }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{ end }} influx -host {{ $ingressHost }} -port 80
 
 {{- else if contains "NodePort" .Values.influxdb.service.type }}
 
@@ -88,36 +88,36 @@ To connect to your database from outside the cluster execute the following comma
 
   (write operations):
 
-    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "influxdb.fullname" . }}-relay)
+    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "common.names.fullname" . }}-relay)
     export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
-    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.adminUser.name }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $NODE_IP -port $NODE_PORT
+    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.auth.admin.username }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $NODE_IP -port $NODE_PORT
 
   (read operations):
 
     {{- end }}
 
-    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "influxdb.fullname" . }})
+    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "common.names.fullname" . }})
     export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
-    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.adminUser.name }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $NODE_IP -port $NODE_PORT
+    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.auth.admin.username }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $NODE_IP -port $NODE_PORT
 
 {{- else if contains "LoadBalancer" .Values.influxdb.service.type }}
 
   NOTE: It may take a few minutes for the LoadBalancer IP to be available.
-        Watch the status with: 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "influxdb.fullname" . }}-relay'
+        Watch the status with: 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "common.names.fullname" . }}-relay'
 
   {{- if eq .Values.architecture "high-availability" }}
 
   (write operations):
 
-    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "influxdb.fullname" . }}-relay -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
-    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.adminUser.name }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $SERVICE_IP -port {{ .Values.relay.service.port }}
+    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "common.names.fullname" . }}-relay -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
+    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.auth.admin.username }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $SERVICE_IP -port {{ .Values.relay.service.port }}
 
   (read operations):
 
   {{- end }}
 
-    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "influxdb.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
-    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.adminUser.name }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $SERVICE_IP -port {{ .Values.influxdb.service.port }}
+    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "common.names.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
+    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.auth.admin.username }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host $SERVICE_IP -port {{ .Values.influxdb.service.port }}
 
 {{- else if contains "ClusterIP" .Values.influxdb.service.type }}
 
@@ -125,17 +125,45 @@ To connect to your database from outside the cluster execute the following comma
 
   (write operations):
 
-    kubectl port-forward svc/{{ include "influxdb.fullname" . }}-relay 9096:{{ .Values.relay.service.port }} &
-    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.adminUser.name }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host 127.0.0.1 -port 9096
+    kubectl port-forward svc/{{ include "common.names.fullname" . }}-relay 9096:{{ .Values.relay.service.port }} &
+    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.auth.admin.username }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host 127.0.0.1 -port 9096
 
   (read operations):
 
   {{- end }}
 
-    kubectl port-forward svc/{{ include "influxdb.fullname" . }} 8086:{{ .Values.influxdb.service.port }} &
-    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.adminUser.name }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host 127.0.0.1 -port 8086
+    kubectl port-forward svc/{{ include "common.names.fullname" . }} 8086:{{ .Values.influxdb.service.port }} &
+    {{- if .Values.authEnabled }}INFLUX_USERNAME="{{ .Values.auth.admin.username }}" INFLUX_PASSWORD="$ADMIN_PASSWORD"{{- end }} influx -host 127.0.0.1 -port 8086
 
 {{- end }}
 
 {{- include "influxdb.validateValues" . }}
-{{- include "influxdb.checkRollingTags" . }}
+
+{{- include "common.warnings.rollingTag" .Values.image }}
+{{- include "common.warnings.rollingTag" .Values.relay.image  }}
+{{- include "common.warnings.rollingTag" .Values.backup.uploadProviders.google.image }}
+{{- include "common.warnings.rollingTag" .Values.backup.uploadProviders.azure.image }}
+
+{{- $passwordValueConfigs := list -}}
+{{- if not .Values.auth.existingSecret -}}
+    {{- $secretName := include "influxdb.secretName" . -}}
+
+    {{- $adminPasswordConfig := dict "valueKey" "auth.admin.password" "secret" $secretName "field" "admin-user-password" "context" $ -}}
+    {{- $passwordValueConfigs = append $passwordValueConfigs $adminPasswordConfig -}}
+
+    {{- if .Values.auth.user.username }}
+      {{- $userPasswordConfig := dict "valueKey" "auth.user.password" "secret" $secretName "field" "user-password" "context" $ -}}
+      {{- $passwordValueConfigs = append $passwordValueConfigs $userPasswordConfig -}}
+    {{- end }}
+    {{- if .Values.auth.readUser.username }}
+      {{- $readUserPasswordConfig := dict "valueKey" "auth.readUser.password" "secret" $secretName "field" "read-user-password" "context" $ -}}
+      {{- $passwordValueConfigs = append $passwordValueConfigs $readUserPasswordConfig -}}
+    {{- end }}
+    {{- if .Values.auth.writeUser.username }}
+      {{- $writeUserPasswordConfig := dict "valueKey" "auth.writeUser.password" "secret" $secretName "field" "write-user-password" "context" $ -}}
+      {{- $passwordValueConfigs = append $passwordValueConfigs $writeUserPasswordConfig -}}
+    {{- end }}
+{{- end -}}
+
+{{- $passwordValidationErrors := include "common.validations.values.multiple.empty" (dict "required" $passwordValueConfigs "context" $) -}}
+{{- include "common.errors.upgrade.passwords.empty" (dict "validationErrors" $passwordValidationErrors "context" $) -}}
diff --git a/bitnami/influxdb/templates/_helpers.tpl b/bitnami/influxdb/templates/_helpers.tpl
index 91c130b7aa..6ec2e9da31 100644
--- a/bitnami/influxdb/templates/_helpers.tpl
+++ b/bitnami/influxdb/templates/_helpers.tpl
@@ -1,218 +1,56 @@
 {{/* vim: set filetype=mustache: */}}
-{{/*
-Expand the name of the chart.
-*/}}
-{{- define "influxdb.name" -}}
-{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
-{{- end -}}
-
-{{/*
-Create a default fully qualified app name.
-We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
-If release name contains chart name it will be used as a full name.
-*/}}
-{{- define "influxdb.fullname" -}}
-{{- if .Values.fullnameOverride -}}
-    {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
-{{- else -}}
-    {{- $name := default .Chart.Name .Values.nameOverride -}}
-    {{- if contains $name .Release.Name -}}
-        {{- .Release.Name | trunc 63 | trimSuffix "-" -}}
-    {{- else -}}
-        {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
-    {{- end -}}
-{{- end -}}
-{{- end -}}
-
-{{/*
-Create chart name and version as used by the chart label.
-*/}}
-{{- define "influxdb.chart" -}}
-{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
-{{- end -}}
-
-{{/*
-Common labels
-*/}}
-{{- define "influxdb.labels" -}}
-app.kubernetes.io/name: {{ include "influxdb.name" . }}
-helm.sh/chart: {{ include "influxdb.chart" . }}
-app.kubernetes.io/instance: {{ .Release.Name }}
-app.kubernetes.io/managed-by: {{ .Release.Service }}
-{{- end -}}
 
-{{/*
-Labels to use on deploy.spec.selector.matchLabels and svc.spec.selector
-*/}}
-{{- define "influxdb.matchLabels" -}}
-app.kubernetes.io/name: {{ include "influxdb.name" . }}
-app.kubernetes.io/instance: {{ .Release.Name }}
-{{- end -}}
 
 {{/*
 Return the proper InfluxDB(TM) image name
 */}}
 {{- define "influxdb.image" -}}
-{{- $registryName := .Values.image.registry -}}
-{{- $repositoryName := .Values.image.repository -}}
-{{- $tag := .Values.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-{{- end -}}
+{{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
 {{- end -}}
 
 {{/*
 Return the proper InfluxDB Relay(TM) image name
 */}}
 {{- define "influxdb.relay.image" -}}
-{{- $registryName := .Values.relay.image.registry -}}
-{{- $repositoryName := .Values.relay.image.repository -}}
-{{- $tag := .Values.relay.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-{{- end -}}
+{{ include "common.images.image" (dict "imageRoot" .Values.relay.image "global" .Values.global) }}
 {{- end -}}
 
 {{/*
 Return the proper init container volume-permissions image name
 */}}
 {{- define "influxdb.volumePermissions.image" -}}
-{{- $registryName := .Values.volumePermissions.image.registry -}}
-{{- $repositoryName := .Values.volumePermissions.image.repository -}}
-{{- $tag := .Values.volumePermissions.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-{{- end -}}
+{{ include "common.images.image" (dict "imageRoot" .Values.volumePermissions.image "global" .Values.global) }}
 {{- end -}}
 
 {{/*
 Return the proper gcloud-sdk image name
 */}}
 {{- define "gcloudSdk.image" -}}
-{{- $registryName := .Values.backup.uploadProviders.google.image.registry -}}
-{{- $repositoryName := .Values.backup.uploadProviders.google.image.repository -}}
-{{- $tag := .Values.backup.uploadProviders.google.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-{{- end -}}
+{{ include "common.images.image" (dict "imageRoot" .Values.backup.uploadProviders.google.image "global" .Values.global) }}
 {{- end -}}
 
 {{/*
 Return the proper azure-cli image name
 */}}
 {{- define "azureCli.image" -}}
-{{- $registryName := .Values.backup.uploadProviders.azure.image.registry -}}
-{{- $repositoryName := .Values.backup.uploadProviders.azure.image.repository -}}
-{{- $tag := .Values.backup.uploadProviders.azure.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-{{- end -}}
+{{ include "common.images.image" (dict "imageRoot" .Values.backup.uploadProviders.azure.image "global" .Values.global) }}
 {{- end -}}
 
 {{/*
 Return the proper Docker Image Registry Secret Names
 */}}
 {{- define "influxdb.imagePullSecrets" -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
-Also, we can not use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imagePullSecrets }}
-imagePullSecrets:
-        {{- range .Values.global.imagePullSecrets }}
-  - name: {{ . }}
-        {{- end }}
-    {{- else if or .Values.image.pullSecrets .Values.relay.image.pullSecrets .Values.volumePermissions.image.pullSecrets }}
-imagePullSecrets:
-        {{- range .Values.image.pullSecrets }}
-  - name: {{ . }}
-        {{- end }}
-        {{- range .Values.relay.image.pullSecrets }}
-  - name: {{ . }}
-        {{- end }}
-        {{- range .Values.volumePermissions.image.pullSecrets }}
-  - name: {{ . }}
-        {{- end }}
-    {{- end -}}
-{{- else if or .Values.image.pullSecrets .Values.relay.image.pullSecrets .Values.volumePermissions.image.pullSecrets }}
-imagePullSecrets:
-    {{- range .Values.image.pullSecrets }}
-  - name: {{ . }}
-    {{- end }}
-    {{- range .Values.relay.image.pullSecrets }}
-  - name: {{ . }}
-    {{- end }}
-    {{- range .Values.volumePermissions.image.pullSecrets }}
-  - name: {{ . }}
-    {{- end }}
-{{- end -}}
+{{ include "common.images.pullSecrets" (dict "images" (list .Values.image .Values.relay.image .Values.volumePermissions.image .Values.backup.uploadProviders.google.image .Values.backup.uploadProviders.azure.image) "global" .Values.global) }}
 {{- end -}}
 
 {{/*
 Return the InfluxDB(TM) credentials secret.
 */}}
 {{- define "influxdb.secretName" -}}
-{{- if .Values.existingSecret -}}
-    {{- printf "%s" (tpl .Values.existingSecret $) -}}
+{{- if .Values.auth.existingSecret -}}
+    {{- printf "%s" (tpl .Values.auth.existingSecret $) -}}
 {{- else -}}
-    {{- printf "%s" (include "influxdb.fullname" .) -}}
+    {{- printf "%s" (include "common.names.fullname" .) -}}
 {{- end -}}
 {{- end -}}
 
@@ -223,7 +61,7 @@ Return the InfluxDB(TM) configuration configmap.
 {{- if .Values.influxdb.existingConfiguration -}}
     {{- printf "%s" (tpl .Values.influxdb.existingConfiguration $) -}}
 {{- else -}}
-    {{- printf "%s" (include "influxdb.fullname" .) -}}
+    {{- printf "%s" (include "common.names.fullname" .) -}}
 {{- end -}}
 {{- end -}}
 
@@ -234,7 +72,7 @@ Return the InfluxDB(TM) PVC name.
 {{- if .Values.persistence.existingClaim }}
     {{- printf "%s" (tpl .Values.persistence.existingClaim $) -}}
 {{- else -}}
-    {{- printf "%s" (include "influxdb.fullname" .) -}}
+    {{- printf "%s" (include "common.names.fullname" .) -}}
 {{- end -}}
 {{- end -}}
 
@@ -245,7 +83,7 @@ Return the InfluxDB(TM) initialization scripts configmap.
 {{- if .Values.influxdb.initdbScriptsCM -}}
     {{- printf "%s" (tpl .Values.influxdb.initdbScriptsCM $) -}}
 {{- else -}}
-    {{- printf "%s-initdb-scripts" (include "influxdb.fullname" .) -}}
+    {{- printf "%s-initdb-scripts" (include "common.names.fullname" .) -}}
 {{- end -}}
 {{- end -}}
 
@@ -263,44 +101,10 @@ Return the InfluxDB(TM) configuration configmap.
 {{- if .Values.relay.existingConfiguration -}}
     {{- printf "%s" (tpl .Values.relay.existingConfiguration $) -}}
 {{- else -}}
-    {{- printf "%s-relay" (include "influxdb.fullname" .) -}}
+    {{- printf "%s-relay" (include "common.names.fullname" .) -}}
 {{- end -}}
 {{- end -}}
 
-{{/*
-Return the proper Storage Class for InfluxDB(TM)
-*/}}
-{{- define "influxdb.storageClass" -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
-*/}}
-{{- if .Values.global -}}
-    {{- if .Values.global.storageClass -}}
-        {{- if (eq "-" .Values.global.storageClass) -}}
-            {{- printf "storageClassName: \"\"" -}}
-        {{- else }}
-            {{- printf "storageClassName: %s" .Values.global.storageClass -}}
-        {{- end -}}
-    {{- else -}}
-        {{- if .Values.persistence.storageClass -}}
-              {{- if (eq "-" .Values.persistence.storageClass) -}}
-                  {{- printf "storageClassName: \"\"" -}}
-              {{- else }}
-                  {{- printf "storageClassName: %s" .Values.persistence.storageClass -}}
-              {{- end -}}
-        {{- end -}}
-    {{- end -}}
-{{- else -}}
-    {{- if .Values.persistence.storageClass -}}
-        {{- if (eq "-" .Values.persistence.storageClass) -}}
-            {{- printf "storageClassName: \"\"" -}}
-        {{- else }}
-            {{- printf "storageClassName: %s" .Values.persistence.storageClass -}}
-        {{- end -}}
-    {{- end -}}
-{{- end -}}
-{{- end -}}
 
 {{/*
 Return the appropriate apiVersion for networkPolicy
@@ -313,16 +117,6 @@ Return the appropriate apiVersion for networkPolicy
 {{- end -}}
 {{- end -}}
 
-{{/*
-Check if there are rolling tags in the images
-*/}}
-{{- define "influxdb.checkRollingTags" -}}
-{{- if and (contains "bitnami/" .Values.image.repository) (not (.Values.image.tag | toString | regexFind "-r\\d+$|sha256:")) }}
-WARNING: Rolling tag detected ({{ .Values.image.repository }}:{{ .Values.image.tag }}), please note that it is strongly recommended to avoid using rolling tags in a production environment.
-+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/
-{{- end }}
-{{- end -}}
-
 {{/*
 Compile all warnings into a single message, and call fail.
 */}}
@@ -357,14 +151,3 @@ influxdb: replicaCount
     use the "high-availability" architecture (--set architecture="high-availability")
 {{- end -}}
 {{- end -}}
-
-{{/*
-Return the appropriate apiVersion for ingress.
-*/}}
-{{- define "ingress.apiVersion" -}}
-{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
-{{- print "networking.k8s.io/v1beta1" -}}
-{{- else -}}
-{{- print "extensions/v1beta1" -}}
-{{- end -}}
-{{- end -}}
diff --git a/bitnami/influxdb/templates/extradeploy.yaml b/bitnami/influxdb/templates/extradeploy.yaml
new file mode 100644
index 0000000000..9ac65f9e16
--- /dev/null
+++ b/bitnami/influxdb/templates/extradeploy.yaml
@@ -0,0 +1,4 @@
+{{- range .Values.extraDeploy }}
+---
+{{ include "common.tplvalues.render" (dict "value" . "context" $) }}
+{{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/configmap-backup.yaml b/bitnami/influxdb/templates/influxdb/configmap-backup.yaml
index 14bd91a4f7..a79220a5f7 100644
--- a/bitnami/influxdb/templates/influxdb/configmap-backup.yaml
+++ b/bitnami/influxdb/templates/influxdb/configmap-backup.yaml
@@ -2,26 +2,66 @@
 apiVersion: v1
 kind: ConfigMap
 metadata:
-  name: {{ include "influxdb.fullname" . }}-backup
+  name: {{ include "common.names.fullname" . }}-backup
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 data:
   backup.sh: |-
     #!/bin/bash
 
     set -e
 
+    . /opt/bitnami/scripts/libinfluxdb.sh
+
     DATE="$(date +%Y%m%d_%H%M%S)"
+    BRANCH="$(influxdb_branch)"
+
+    host="{{ include "common.names.fullname" . }}.{{ .Release.Namespace }}.svc"
+
+    get_orgs() {
+      INFLUX_TOKEN="${INFLUXDB_ADMIN_USER_TOKEN}" influx --host "http://${host}:{{ .Values.influxdb.service.port }}" org list 2> /dev/null | grep -v 'ID' | awk -F '\t' 'BEGIN{ORS=" "} {print $2}'
+    }
+
+    get_databases() {
+        local org_name="${1:-}"
+        if [[ "${BRANCH}" = "1" ]]; then
+            influx -username "{{ .Values.auth.admin.username }}" -password "${INFLUXDB_ADMIN_USER_PASSWORD}" -host "${host}" -port {{ .Values.influxdb.service.port }} -execute 'SHOW DATABASES' | sed -e '1,3d'
+        else
+            INFLUX_TOKEN="${INFLUXDB_ADMIN_USER_TOKEN}" influx --host "http://${host}:{{ .Values.influxdb.service.port }}" bucket list --org "${org_name}" 2> /dev/null | grep -v 'ID' | awk -F '\t' 'BEGIN{ORS=" "} {print $2}'
+        fi
+    }
+
+    if [[ "${BRANCH}" = "1" ]]; then
+        for DATABASE in $(get_databases); do
+            echo "backuping ${DATABASE} db to {{ .Values.backup.directory }}/${DATABASE}"
+            mkdir -p {{ .Values.backup.directory }}/${DATABASE}
+
+            influxd backup -host "${host}" -port {{ .Values.influxdb.service.port }} -portable -db ${DATABASE} {{ .Values.backup.directory }}/"${DATABASE}/${DATE}"
+        done
+
+        echo "deleting old backups"
+        find {{ .Values.backup.directory }} -mindepth 2 -maxdepth 2 -not -name ".snapshot" -not -name "lost+found" -type d -mtime +{{ .Values.backup.retentionDays }} -exec rm -r {} \;
+    else
+        for ORG in $(get_orgs); do
+            for BUCKET in $(get_databases "${ORG}"); do
+                backup_dir="{{ .Values.backup.directory }}/${ORG}/${BUCKET}"
+                echo "backuping ${BUCKET} bucket to ${backup_dir}"
+                mkdir -p "${backup_dir}"
 
-    for DATABASE in $(influx -username {{ .Values.adminUser.name }} -password "${INFLUXDB_ADMIN_USER_PASSWORD}" -host {{ include "influxdb.fullname" . }}.{{ .Release.Namespace }}.svc -port {{ .Values.influxdb.service.port }} -execute 'SHOW DATABASES' | sed -e '1,3d'); do
-        echo "backuping ${DATABASE} db to {{ .Values.backup.directory }}/${DATABASE}"
-        mkdir -p {{ .Values.backup.directory }}/${DATABASE}
-        influxd backup -host {{ include "influxdb.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.influxdb.service.rpcPort }} -portable -db ${DATABASE} {{ .Values.backup.directory }}/"${DATABASE}/${DATE}"
-    done
+                INFLUX_TOKEN="${INFLUXDB_ADMIN_USER_TOKEN}" influx --host "http://${host}:{{ .Values.influxdb.service.port }}" backup --bucket "${BUCKET}" "${backup_dir}/${DATE}"
+            done
+        done
 
-    echo "deleting old backups"
-    find {{ .Values.backup.directory }} -not -name ".snapshot" -not -name "lost+found" -mindepth 2 -maxdepth 2 -type d -mtime +{{ .Values.backup.retentionDays }} -exec rm -r {} \;
+        echo "deleting old backups"
+        find {{ .Values.backup.directory }} -mindepth 3 -maxdepth 3 -not -name ".snapshot" -not -name "lost+found" -type d -mtime +{{ .Values.backup.retentionDays }} -exec rm -r {} \;
+    fi
   upload-google.sh: |-
     #!/bin/sh
 
diff --git a/bitnami/influxdb/templates/influxdb/configmap-initdb-scripts.yaml b/bitnami/influxdb/templates/influxdb/configmap-initdb-scripts.yaml
index b6a5e89021..222d629cbf 100644
--- a/bitnami/influxdb/templates/influxdb/configmap-initdb-scripts.yaml
+++ b/bitnami/influxdb/templates/influxdb/configmap-initdb-scripts.yaml
@@ -1,16 +1,17 @@
-{{- if and (or (.Files.Glob "files/docker-entrypoint-initdb.d/*.{sh,txt}") .Values.influxdb.initdbScripts) (not .Values.influxdb.initdbScriptsCM) }}
+{{- if and (.Values.influxdb.initdbScripts) (not .Values.influxdb.initdbScriptsCM) }}
 apiVersion: v1
 kind: ConfigMap
 metadata:
-  name: {{ include "influxdb.fullname" . }}-initdb-scripts
+  name: {{ include "common.names.fullname" . }}-initdb-scripts
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 data:
-{{- with .Files.Glob "files/docker-entrypoint-initdb.d/*.{sh,txt}" }}
-{{ .AsConfig | indent 2 }}
-{{- end }}
-{{- with .Values.influxdb.initdbScripts }}
-{{ tpl (toYaml .) $ | indent 2 }}
-{{- end }}
+  {{ include "common.tplvalues.render" (dict "value" .Values.influxdb.initdbScripts "context" $) | nindent 2 }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/configmap.yaml b/bitnami/influxdb/templates/influxdb/configmap.yaml
index 8160e17a28..a13da4d525 100644
--- a/bitnami/influxdb/templates/influxdb/configmap.yaml
+++ b/bitnami/influxdb/templates/influxdb/configmap.yaml
@@ -1,17 +1,19 @@
-{{- if and (or (.Files.Glob "files/conf/influxdb.conf") .Values.influxdb.configuration) (not .Values.influxdb.existingConfiguration) }}
+{{- if and .Values.influxdb.configuration (not .Values.influxdb.existingConfiguration) }}
 apiVersion: v1
 kind: ConfigMap
 metadata:
-  name: {{ include "influxdb.fullname" . }}
+  name: {{ include "common.names.fullname" . }}
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 data:
-{{- if (.Files.Glob "files/conf/influxdb.conf") }}
-{{ (.Files.Glob "files/conf/influxdb.conf").AsConfig | indent 2 }}
-{{- else if .Values.influxdb.configuration }}
   influxdb.conf: |-
     # User-supplied configuration:
-{{ tpl .Values.influxdb.configuration . | indent 4 }}
-{{- end }}
+    {{ include "common.tplvalues.render" (dict "value" .Values.influxdb.configuration "context" $) | nindent 4 }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/cronjob-backup.yaml b/bitnami/influxdb/templates/influxdb/cronjob-backup.yaml
index 631f31e801..7d33bb0a46 100644
--- a/bitnami/influxdb/templates/influxdb/cronjob-backup.yaml
+++ b/bitnami/influxdb/templates/influxdb/cronjob-backup.yaml
@@ -2,9 +2,15 @@
 apiVersion: batch/v1beta1
 kind: CronJob
 metadata:
-  name: "{{ template "influxdb.fullname" . }}-backup"
+  name: "{{ template "common.names.fullname" . }}-backup"
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   schedule: {{.Values.backup.cronjob.schedule | quote }}
   concurrencyPolicy: Forbid
@@ -15,9 +21,9 @@ spec:
       template:
         metadata:
           labels:
-            {{- include "influxdb.matchLabels" . | nindent 12 }}
+            {{- include "common.labels.matchLabels" . | nindent 12 }}
           annotations:
-            {{- toYaml .Values.backup.cronjob.podAnnotations | nindent 12 }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.backup.cronjob.podAnnotations "context" $) | nindent 12 }}
         spec:
           {{- if .Values.backup.cronjob.securityContext.enabled }}
           securityContext:
@@ -28,7 +34,7 @@ spec:
           volumes:
             - name: backup-scripts
               configMap:
-                name: {{ include "influxdb.fullname" . }}-backup
+                name: {{ include "common.names.fullname" . }}-backup
                 defaultMode: 0755
             {{- if .Values.backup.uploadProviders.google.enabled }}
             - name: google-cloud-key
@@ -36,29 +42,34 @@ spec:
             {{- if .Values.backup.uploadProviders.google.existingSecret }}
                 secretName: {{ .Values.backup.uploadProviders.google.existingSecret | quote }}
             {{- else }}
-                secretName: {{ include "influxdb.fullname" . }}-backup-gcloud
+                secretName: {{ include "common.names.fullname" . }}-backup-gcloud
             {{- end }}
             {{- end }}
-            - name: {{ include "influxdb.fullname" . }}-backups
+            - name: {{ include "common.names.fullname" . }}-backups
             {{- if .Values.persistence.enabled }}
               persistentVolumeClaim:
-                claimName: {{ include "influxdb.fullname" . }}-backups
+                claimName: {{ include "common.names.fullname" . }}-backups
             {{- else }}
                 emptyDir: {}
             {{- end }}
           initContainers:
             - name: influxdb-backup
-              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
+              image: {{ include "influxdb.image" . | quote }}
               env:
                 - name: INFLUXDB_ADMIN_USER_PASSWORD
                   valueFrom:
                     secretKeyRef:
                       name: {{ include "influxdb.secretName" . }}
                       key: admin-user-password
+                - name: INFLUXDB_ADMIN_USER_TOKEN
+                  valueFrom:
+                    secretKeyRef:
+                      name: {{ include "influxdb.secretName" . }}
+                      key: admin-user-token
               command:
                 - "/tmp/backup.sh"
               volumeMounts:
-                - name: {{ include "influxdb.fullname" . }}-backups
+                - name: {{ include "common.names.fullname" . }}-backups
                   mountPath: {{ .Values.backup.directory | quote }}
                 - name: backup-scripts
                   mountPath: /tmp/backup.sh
@@ -74,7 +85,7 @@ spec:
               command:
                 - "/tmp/upload-google.sh"
               volumeMounts:
-                - name: {{ include "influxdb.fullname" . }}-backups
+                - name: {{ include "common.names.fullname" . }}-backups
                   mountPath: {{ .Values.backup.directory | quote }}
                 - name: backup-scripts
                   mountPath: /tmp/upload-google.sh
@@ -94,11 +105,11 @@ spec:
                       {{- if .Values.backup.uploadProviders.azure.existingSecret }}
                       name: {{ .Values.backup.uploadProviders.azure.existingSecret | quote }}
                       {{- else }}
-                      name: {{ include "influxdb.fullname" . }}-backup-azure
+                      name: {{ include "common.names.fullname" . }}-backup-azure
                       {{- end }}
                       key: {{ .Values.backup.uploadProviders.azure.secretKey }}
               volumeMounts:
-                - name: {{ include "influxdb.fullname" . }}-backups
+                - name: {{ include "common.names.fullname" . }}-backups
                   mountPath: {{ .Values.backup.directory | quote }}
                 - name: backup-scripts
                   mountPath: /tmp/upload-azure.sh
diff --git a/bitnami/influxdb/templates/influxdb/deployment-standalone.yaml b/bitnami/influxdb/templates/influxdb/deployment-standalone.yaml
index 395411db8b..7bf6826ff0 100644
--- a/bitnami/influxdb/templates/influxdb/deployment-standalone.yaml
+++ b/bitnami/influxdb/templates/influxdb/deployment-standalone.yaml
@@ -2,10 +2,16 @@
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ include "influxdb.fullname" . }}
+  name: {{ include "common.names.fullname" . }}
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   replicas: 1
   strategy:
@@ -15,12 +21,12 @@ spec:
     {{- end }}
   selector:
     matchLabels:
-      {{- include "influxdb.matchLabels" . | nindent 6 }}
+      {{- include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: influxdb
   template:
     metadata:
       labels:
-        {{- include "influxdb.labels" . | nindent 8 }}
+        {{- include "common.labels.standard" . | nindent 8 }}
         app.kubernetes.io/component: influxdb
     spec:
       {{- include "influxdb.imagePullSecrets" . | nindent 6 }}
@@ -85,11 +91,14 @@ spec:
                 fieldRef:
                   fieldPath: status.podIP
             - name: INFLUXDB_HTTP_AUTH_ENABLED
-              value: {{ .Values.authEnabled | quote }}
-            {{- if .Values.adminUser.name }}
+              value: {{ .Values.auth.enabled | quote }}
+            - name: INFLUXDB_CREATE_USER_TOKEN
+              value: {{ ternary "yes" "no" .Values.auth.createUserToken | quote }}
+            {{- if .Values.auth.admin.username }}
             - name: INFLUXDB_ADMIN_USER
-              value: {{ .Values.adminUser.name | quote }}
-            {{- if .Values.adminUser.usePasswordFile }}
+              value: {{ .Values.auth.admin.username | quote }}
+            {{- end }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_ADMIN_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/admin-user-password"
             {{- else }}
@@ -99,11 +108,24 @@ spec:
                   name: {{ include "influxdb.secretName" . }}
                   key: admin-user-password
             {{- end }}
+            {{- if .Values.auth.usePasswordFiles }}
+            - name: INFLUXDB_ADMIN_USER_TOKEN_FILE
+              value: "/opt/bitnami/influxdb/secrets/admin-user-token"
+            {{- else }}
+            - name: INFLUXDB_ADMIN_USER_TOKEN
+              valueFrom:
+                secretKeyRef:
+                  name: {{ include "influxdb.secretName" . }}
+                  key: admin-user-token
             {{- end }}
-            {{- if .Values.user.name }}
+            - name: INFLUXDB_ADMIN_BUCKET
+              value: {{ .Values.auth.admin.bucket | quote }}
+            - name: INFLUXDB_ADMIN_ORG
+              value: {{ .Values.auth.admin.org | quote }}
+            {{- if .Values.auth.user.username }}
             - name: INFLUXDB_USER
-              value: {{ .Values.user.name | quote }}
-            {{- if .Values.user.usePasswordFile }}
+              value: {{ .Values.auth.user.username | quote }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/user-password"
             {{- else }}
@@ -114,10 +136,18 @@ spec:
                   key: user-password
             {{- end }}
             {{- end }}
-            {{- if .Values.readUser.name }}
+            {{- if .Values.auth.user.bucket }}
+            - name: INFLUXDB_USER_BUCKET
+              value: {{ .Values.auth.user.bucket | quote }}
+            {{- end }}
+            {{- if .Values.auth.user.org }}
+            - name: INFLUXDB_USER_ORG
+              value: {{ .Values.auth.user.org | quote }}
+            {{- end }}
+            {{- if .Values.auth.readUser.username }}
             - name: INFLUXDB_READ_USER
-              value: {{ .Values.readUser.name | quote }}
-            {{- if .Values.readUser.usePasswordFile }}
+              value: {{ .Values.auth.readUser.username | quote }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_READ_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/read-user-password"
             {{- else }}
@@ -128,10 +158,10 @@ spec:
                   key: read-user-password
             {{- end }}
             {{- end }}
-            {{- if .Values.writeUser.name }}
+            {{- if .Values.auth.writeUser.username }}
             - name: INFLUXDB_WRITE_USER
-              value: {{ .Values.writeUser.name | quote }}
-            {{- if .Values.writeUser.usePasswordFile }}
+              value: {{ .Values.auth.writeUser.username | quote }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_WRITE_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/write-user-password"
             {{- else }}
@@ -142,9 +172,9 @@ spec:
                   key: write-user-password
             {{- end }}
             {{- end }}
-            {{- if .Values.database }}
+            {{- if .Values.auth.user.bucket }}
             - name: INFLUXDB_DB
-              value: {{ .Values.database | quote }}
+              value: {{ .Values.auth.user.bucket | quote }}
             {{- end }}
             {{- if .Values.influxdb.extraEnvVars }}
             {{- tpl (toYaml .Values.influxdb.extraEnvVars) $ | nindent 12 }}
@@ -158,49 +188,67 @@ spec:
               protocol: TCP
           {{- if .Values.influxdb.livenessProbe.enabled }}
           {{- $livenessTimeout := sub (int .Values.influxdb.livenessProbe.timeoutSeconds) 1 }}
-          livenessProbe:
+          livenessProbe: {{- omit .Values.influxdb.livenessProbe "enabled" | toYaml | nindent 12 }}
             exec:
               command:
                 - bash
                 - -c
                 - |
-                  if [[ -f "${INFLUXDB_ADMIN_USER_PASSWORD_FILE:-}" ]]; then
-                      export INFLUXDB_ADMIN_USER_PASSWORD="$(< "${INFLUXDB_ADMIN_USER_PASSWORD_FILE}")"
+                  . /opt/bitnami/scripts/libinfluxdb.sh
+
+                  influxdb_env
+
+                  {{- if .Values.auth.enabled }}
+                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
+                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"
+                  {{- end }}
+
+                  branch=$(influxdb_branch)
+
+                  if [[ "$branch" = "2" ]]; then
+                      timeout {{ $livenessTimeout }}s influx --host http://$POD_IP:{{ .Values.influxdb.containerPorts.http }} ping
+                  else
+                      timeout {{ $livenessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
                   fi
-                  {{ if .Values.authEnabled }}INFLUX_USERNAME="$INFLUXDB_ADMIN_USER" INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"{{ end }} timeout {{ $livenessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
-            initialDelaySeconds: {{ .Values.influxdb.livenessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.influxdb.livenessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.influxdb.livenessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.influxdb.livenessProbe.successThreshold }}
-            failureThreshold: {{ .Values.influxdb.livenessProbe.failureThreshold }}
+          {{- else if .Values.influxdb.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.customLivenessProbe "context" $) | nindent 12 }}
           {{- end }}
           {{- if .Values.influxdb.readinessProbe.enabled }}
           {{- $readinessTimeout := sub (int .Values.influxdb.readinessProbe.timeoutSeconds) 1 }}
-          readinessProbe:
+          readinessProbe: {{- omit .Values.influxdb.readinessProbe "enabled" | toYaml | nindent 12 }}
             exec:
               command:
                 - bash
                 - -c
                 - |
-                  if [[ -f "${INFLUXDB_ADMIN_USER_PASSWORD_FILE:-}" ]]; then
-                      export INFLUXDB_ADMIN_USER_PASSWORD="$(< "${INFLUXDB_ADMIN_USER_PASSWORD_FILE}")"
+                  . /opt/bitnami/scripts/libinfluxdb.sh
+
+                  influxdb_env
+
+                  {{- if .Values.auth.enabled }}
+                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
+                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"
+                  {{- end }}
+
+                  branch=$(influxdb_branch)
+
+                  if [[ "$branch" = "2" ]]; then
+                      timeout {{ $readinessTimeout }}s influx --host http://$POD_IP:{{ .Values.influxdb.containerPorts.http }} ping
+                  else
+                      timeout {{ $readinessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
                   fi
-                  {{ if .Values.authEnabled }}INFLUX_USERNAME="$INFLUXDB_ADMIN_USER" INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"{{ end }} timeout {{ $readinessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
-            initialDelaySeconds: {{ .Values.influxdb.readinessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.influxdb.readinessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.influxdb.readinessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.influxdb.readinessProbe.successThreshold }}
-            failureThreshold: {{ .Values.influxdb.readinessProbe.failureThreshold }}
+          {{- else if .Values.influxdb.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.customReadinessProbe "context" $) | nindent 12 }}
           {{- end }}
           {{- if .Values.influxdb.resources }}
           resources: {{- toYaml .Values.influxdb.resources | nindent 12 }}
           {{- end }}
           volumeMounts:
-            {{- if or (.Files.Glob "files/conf/influxdb.conf") .Values.influxdb.configuration .Values.influxdb.existingConfiguration  }}
+            {{- if or .Values.influxdb.configuration .Values.influxdb.existingConfiguration  }}
             - name: influxdb-config
               mountPath: /opt/bitnami/influxdb/etc
             {{- end }}
-            {{- if or (.Files.Glob "files/docker-entrypoint-initdb.d/*.{sh,txt}") .Values.influxdb.initdbScripts .Values.influxdb.initdbScriptsCM }}
+            {{- if or .Values.influxdb.initdbScripts .Values.influxdb.initdbScriptsCM }}
             - name: custom-init-scripts
               mountPath: /docker-entrypoint-initdb.d/
             {{- end }}
@@ -208,7 +256,7 @@ spec:
             - name: custom-init-scripts-secret
               mountPath: /docker-entrypoint-initdb.d/secret
             {{- end }}
-            {{- if or .Values.adminUser.usePasswordFile .Values.user.usePasswordFile .Values.readUser.usePasswordFile .Values.writeUser.usePasswordFile }}
+            {{- if  .Values.auth.usePasswordFiles }}
             - name: influxdb-credentials
               mountPath: /opt/bitnami/influxdb/secrets/
             {{- end }}
@@ -216,13 +264,16 @@ spec:
             - name: data
               mountPath: /bitnami/influxdb
             {{- end }}
+          {{- if .Values.influxdb.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.extraVolumeMounts "context" $) | nindent 12 }}
+          {{- end }}
       volumes:
-        {{- if or (.Files.Glob "files/conf/influxdb.conf") .Values.influxdb.configuration .Values.influxdb.existingConfiguration }}
+        {{- if or .Values.influxdb.configuration .Values.influxdb.existingConfiguration }}
         - name: influxdb-config
           configMap:
             name: {{ include "influxdb.configmapName" . }}
         {{- end }}
-        {{- if or (.Files.Glob "files/docker-entrypoint-initdb.d/*.{sh,txt}") .Values.influxdb.initdbScripts .Values.influxdb.initdbScriptsCM }}
+        {{- if or .Values.influxdb.initdbScripts .Values.influxdb.initdbScriptsCM }}
         - name: custom-init-scripts
           configMap:
             name: {{ include "influxdb.initdbScriptsConfigmapName" . }}
@@ -232,27 +283,10 @@ spec:
           secret:
             secretName: {{ template "influxdb.initdbScriptsSecret" . }}
         {{- end }}
-        {{- if or .Values.adminUser.usePasswordFile .Values.user.usePasswordFile .Values.readUser.usePasswordFile .Values.writeUser.usePasswordFile }}
+        {{- if .Values.auth.usePasswordFiles }}
         - name: influxdb-credentials
           secret:
             secretName: {{ include "influxdb.secretName" . }}
-            items:
-              {{- if .Values.adminUser.usePasswordFile }}
-              - key: admin-user-password
-                path: admin-user-password
-              {{- end }}
-              {{- if .Values.user.usePasswordFile }}
-              - key: user-password
-                path: user-password
-              {{- end }}
-              {{- if .Values.readUser.usePasswordFile }}
-              - key: read-user-password
-                path: read-user-password
-              {{- end }}
-              {{- if .Values.writeUser.usePasswordFile }}
-              - key: write-user-password
-                path: write-user-password
-              {{- end }}
         {{- end }}
         - name: data
           {{- if .Values.persistence.enabled }}
@@ -261,4 +295,7 @@ spec:
           {{- else }}
           emptyDir: {}
           {{- end }}
+      {{- if .Values.influxdb.extraVolumes }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.extraVolumes "context" $) | nindent 8 }}
+      {{- end }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/pvc-backup.yaml b/bitnami/influxdb/templates/influxdb/pvc-backup.yaml
index 1e326dbceb..c639444436 100644
--- a/bitnami/influxdb/templates/influxdb/pvc-backup.yaml
+++ b/bitnami/influxdb/templates/influxdb/pvc-backup.yaml
@@ -2,9 +2,15 @@
 kind: PersistentVolumeClaim
 apiVersion: v1
 metadata:
-  name: {{ include "influxdb.fullname" . }}-backups
+  name: {{ include "common.names.fullname" . }}-backups
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   accessModes:
   {{- range .Values.persistence.accessModes }}
@@ -13,5 +19,5 @@ spec:
   resources:
     requests:
       storage: {{ .Values.persistence.size | quote }}
-{{- include "influxdb.storageClass" . | nindent 2 }}
+  {{- include "common.storage.class" ( dict "persistence" .Values.persistence "global" $) | nindent 2 }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/pvc.yaml b/bitnami/influxdb/templates/influxdb/pvc.yaml
index 3c8b802af6..43e8f047f6 100644
--- a/bitnami/influxdb/templates/influxdb/pvc.yaml
+++ b/bitnami/influxdb/templates/influxdb/pvc.yaml
@@ -2,9 +2,15 @@
 kind: PersistentVolumeClaim
 apiVersion: v1
 metadata:
-  name: {{ include "influxdb.fullname" . }}
+  name: {{ include "common.names.fullname" . }}
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   accessModes:
   {{- range .Values.persistence.accessModes }}
@@ -13,5 +19,5 @@ spec:
   resources:
     requests:
       storage: {{ .Values.persistence.size | quote }}
-{{- include "influxdb.storageClass" . | nindent 2 }}
+  {{- include "common.storage.class" ( dict "persistence" .Values.persistence "global" $) | nindent 2 }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/secrets-backup.yaml b/bitnami/influxdb/templates/influxdb/secrets-backup.yaml
index aae194a005..e09f97ef66 100644
--- a/bitnami/influxdb/templates/influxdb/secrets-backup.yaml
+++ b/bitnami/influxdb/templates/influxdb/secrets-backup.yaml
@@ -3,9 +3,15 @@
 apiVersion: v1
 kind: Secret
 metadata:
-  name: {{ include "influxdb.fullname" . }}-backup-gcloud
+  name: {{ include "common.names.fullname" . }}-backup-gcloud
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 type: Opaque
 data:
   {{ .Values.backup.uploadProviders.google.secretKey }}: {{ .Values.backup.uploadProviders.google.secret | b64enc | quote }}
@@ -15,9 +21,9 @@ data:
 apiVersion: v1
 kind: Secret
 metadata:
-  name: {{ include "influxdb.fullname" . }}-backup-azure
+  name: {{ include "common.names.fullname" . }}-backup-azure
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
 type: Opaque
 data:
   {{ .Values.backup.uploadProviders.azure.secretKey }}: {{ .Values.backup.uploadProviders.azure.secret | b64enc | quote }}
diff --git a/bitnami/influxdb/templates/influxdb/secrets.yaml b/bitnami/influxdb/templates/influxdb/secrets.yaml
index 7eddf1286d..f8a186e5d1 100644
--- a/bitnami/influxdb/templates/influxdb/secrets.yaml
+++ b/bitnami/influxdb/templates/influxdb/secrets.yaml
@@ -1,20 +1,27 @@
-{{- if (not .Values.existingSecret) -}}
+{{- if (not .Values.auth.existingSecret) -}}
 apiVersion: v1
 kind: Secret
 metadata:
-  name: {{ include "influxdb.fullname" . }}
+  name: {{ include "common.names.fullname" . }}
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 type: Opaque
 data:
-  admin-user-password: {{ ternary (randAlphaNum 10) .Values.adminUser.pwd (empty .Values.adminUser.pwd) | b64enc | quote }}
-  {{- if .Values.user.name }}
-  user-password: {{ ternary (randAlphaNum 10) .Values.user.pwd (empty .Values.user.pwd) | b64enc | quote }}
+  admin-user-password: {{ ternary (randAlphaNum 10) .Values.auth.admin.password (empty .Values.auth.admin.password) | b64enc | quote }}
+  admin-user-token: {{ ternary (randAlphaNum 20) .Values.auth.admin.token (empty .Values.auth.admin.token) | b64enc | quote }}
+  {{- if .Values.auth.user.username }}
+  user-password: {{ ternary (randAlphaNum 10) .Values.auth.user.password (empty .Values.auth.user.password) | b64enc | quote }}
   {{- end }}
-  {{- if .Values.readUser.name }}
-  read-user-password: {{ ternary (randAlphaNum 10) .Values.readUser.pwd (empty .Values.readUser.pwd) | b64enc | quote }}
+  {{- if .Values.auth.readUser.username }}
+  read-user-password: {{ ternary (randAlphaNum 10) .Values.auth.readUser.password (empty .Values.auth.readUser.password) | b64enc | quote }}
   {{- end }}
-  {{- if .Values.writeUser.name }}
-  write-user-password: {{ ternary (randAlphaNum 10) .Values.writeUser.pwd (empty .Values.writeUser.pwd) | b64enc | quote }}
+  {{- if .Values.auth.writeUser.username }}
+  write-user-password: {{ ternary (randAlphaNum 10) .Values.auth.writeUser.password (empty .Values.auth.writeUser.password) | b64enc | quote }}
   {{- end }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/service-headless.yaml b/bitnami/influxdb/templates/influxdb/service-headless.yaml
index fc5a52f143..fad4554ae2 100644
--- a/bitnami/influxdb/templates/influxdb/service-headless.yaml
+++ b/bitnami/influxdb/templates/influxdb/service-headless.yaml
@@ -2,10 +2,16 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "influxdb.fullname" . }}-headless
+  name: {{ include "common.names.fullname" . }}-headless
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   type: ClusterIP
   clusterIP: None
@@ -19,6 +25,6 @@ spec:
       protocol: TCP
       name: rpc
   selector:
-    {{- include "influxdb.matchLabels" . | nindent 4 }}
+    {{- include "common.labels.matchLabels" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/service-metrics.yaml b/bitnami/influxdb/templates/influxdb/service-metrics.yaml
index 5875c6b84d..726228dfb2 100644
--- a/bitnami/influxdb/templates/influxdb/service-metrics.yaml
+++ b/bitnami/influxdb/templates/influxdb/service-metrics.yaml
@@ -2,12 +2,21 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "influxdb.fullname" . }}-metrics
+  name: {{ include "common.names.fullname" . }}-metrics
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if or .Values.metrics.service.annotations .Values.commonAnnotations }}
+  annotations:
+  {{- if .Values.commonAnnotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
   {{- if .Values.metrics.service.annotations }}
-  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.service.annotations "context" $) | nindent 4 }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.service.annotations "context" $) | nindent 4 }}
+  {{- end }}
   {{- end }}
 spec:
   type: {{ .Values.metrics.service.type }}
@@ -34,6 +43,6 @@ spec:
       nodePort: null
       {{- end }}
   selector:
-    {{- include "influxdb.matchLabels" . | nindent 4 }}
+    {{- include "common.labels.matchLabels" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
 {{- end }}
diff --git a/bitnami/influxdb/templates/influxdb/service.yaml b/bitnami/influxdb/templates/influxdb/service.yaml
index 4c4b648241..8e8d6011ae 100644
--- a/bitnami/influxdb/templates/influxdb/service.yaml
+++ b/bitnami/influxdb/templates/influxdb/service.yaml
@@ -1,12 +1,21 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "influxdb.fullname" . }}
+  name: {{ include "common.names.fullname" . }}
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if or .Values.influxdb.service.annotations .Values.commonAnnotations }}
+  annotations:
+  {{- if .Values.commonAnnotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
   {{- if .Values.influxdb.service.annotations }}
-  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.influxdb.service.annotations "context" $) | nindent 4 }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.influxdb.service.annotations "context" $) | nindent 4 }}
+  {{- end }}
   {{- end }}
 spec:
   type: {{ .Values.influxdb.service.type }}
@@ -42,5 +51,5 @@ spec:
       nodePort: null
       {{- end }}
   selector:
-    {{- include "influxdb.matchLabels" . | nindent 4 }}
+    {{- include "common.labels.matchLabels" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
diff --git a/bitnami/influxdb/templates/influxdb/servicemonitor.yaml b/bitnami/influxdb/templates/influxdb/servicemonitor.yaml
index d39cd5ff5c..894d0e664f 100644
--- a/bitnami/influxdb/templates/influxdb/servicemonitor.yaml
+++ b/bitnami/influxdb/templates/influxdb/servicemonitor.yaml
@@ -2,19 +2,25 @@
 apiVersion: monitoring.coreos.com/v1
 kind: ServiceMonitor
 metadata:
-  name: {{ include "influxdb.fullname" . }}
+  name: {{ include "common.names.fullname" . }}
   {{- if .Values.metrics.serviceMonitor.namespace }}
   namespace: {{ .Values.metrics.serviceMonitor.namespace }}
   {{- end }}
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
     {{- range $key, $value := .Values.metrics.serviceMonitor.selector }}
     {{ $key }}: {{ $value | quote }}
     {{- end }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   selector:
-    matchLabels: {{ include "influxdb.matchLabels" . | nindent 6 }}
+    matchLabels: {{ include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: influxdb
   endpoints:
     - port: http
diff --git a/bitnami/influxdb/templates/influxdb/statefulset-high-availability.yaml b/bitnami/influxdb/templates/influxdb/statefulset-high-availability.yaml
index 41a1013299..a6e804f13a 100644
--- a/bitnami/influxdb/templates/influxdb/statefulset-high-availability.yaml
+++ b/bitnami/influxdb/templates/influxdb/statefulset-high-availability.yaml
@@ -2,12 +2,18 @@
 apiVersion: apps/v1
 kind: StatefulSet
 metadata:
-  name: {{ include "influxdb.fullname" . }}
+  name: {{ include "common.names.fullname" . }}
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: influxdb
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
-  serviceName: {{ include "influxdb.fullname" . }}-headless
+  serviceName: {{ include "common.names.fullname" . }}-headless
   podManagementPolicy: {{ .Values.influxdb.podManagementPolicy }}
   replicas: {{ .Values.influxdb.replicaCount }}
   updateStrategy:
@@ -17,12 +23,12 @@ spec:
     {{- end }}
   selector:
     matchLabels:
-      {{- include "influxdb.matchLabels" . | nindent 6 }}
+      {{- include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: influxdb
   template:
     metadata:
       labels:
-        {{ include "influxdb.labels" . | nindent 8 }}
+        {{ include "common.labels.standard" . | nindent 8 }}
         app.kubernetes.io/component: influxdb
     spec:
       {{- include "influxdb.imagePullSecrets" . | nindent 6 }}
@@ -86,11 +92,14 @@ spec:
                 fieldRef:
                   fieldPath: status.podIP
             - name: INFLUXDB_HTTP_AUTH_ENABLED
-              value: {{ .Values.authEnabled | quote }}
-            {{- if .Values.adminUser.name }}
+              value: {{ .Values.auth.enabled | quote }}
+            - name: INFLUXDB_CREATE_USER_TOKEN
+              value: {{ ternary "yes" "no" .Values.auth.createUserToken | quote }}
+            {{- if .Values.auth.admin.username }}
             - name: INFLUXDB_ADMIN_USER
-              value: {{ .Values.adminUser.name | quote }}
-            {{- if .Values.adminUser.usePasswordFile }}
+              value: {{ .Values.auth.admin.username | quote }}
+            {{- end }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_ADMIN_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/admin-user-password"
             {{- else }}
@@ -100,11 +109,24 @@ spec:
                   name: {{ include "influxdb.secretName" . }}
                   key: admin-user-password
             {{- end }}
+            {{- if .Values.auth.usePasswordFiles }}
+            - name: INFLUXDB_ADMIN_USER_TOKEN_FILE
+              value: "/opt/bitnami/influxdb/secrets/admin-user-token"
+            {{- else }}
+            - name: INFLUXDB_ADMIN_USER_TOKEN
+              valueFrom:
+                secretKeyRef:
+                  name: {{ include "influxdb.secretName" . }}
+                  key: admin-user-token
             {{- end }}
-            {{- if .Values.user.name }}
+            - name: INFLUXDB_ADMIN_BUCKET
+              value: {{ .Values.auth.admin.bucket | quote }}
+            - name: INFLUXDB_ADMIN_ORG
+              value: {{ .Values.auth.admin.org | quote }}
+            {{- if .Values.auth.user.username }}
             - name: INFLUXDB_USER
-              value: {{ .Values.user.name | quote }}
-            {{- if .Values.user.usePasswordFile }}
+              value: {{ .Values.auth.user.username | quote }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/user-password"
             {{- else }}
@@ -115,10 +137,18 @@ spec:
                   key: user-password
             {{- end }}
             {{- end }}
-            {{- if .Values.readUser.name }}
+            {{- if .Values.auth.user.bucket }}
+            - name: INFLUXDB_USER_BUCKET
+              value: {{ .Values.auth.user.bucket | quote }}
+            {{- end }}
+            {{- if .Values.auth.user.org }}
+            - name: INFLUXDB_USER_ORG
+              value: {{ .Values.auth.user.org | quote }}
+            {{- end }}
+            {{- if .Values.auth.readUser.username }}
             - name: INFLUXDB_READ_USER
-              value: {{ .Values.readUser.name | quote }}
-            {{- if .Values.readUser.usePasswordFile }}
+              value: {{ .Values.auth.readUser.username | quote }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_READ_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/read-user-password"
             {{- else }}
@@ -129,10 +159,10 @@ spec:
                   key: read-user-password
             {{- end }}
             {{- end }}
-            {{- if .Values.writeUser.name }}
+            {{- if .Values.auth.writeUser.username }}
             - name: INFLUXDB_WRITE_USER
-              value: {{ .Values.writeUser.name | quote }}
-            {{- if .Values.writeUser.usePasswordFile }}
+              value: {{ .Values.auth.writeUser.username | quote }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: INFLUXDB_WRITE_USER_PASSWORD_FILE
               value: "/opt/bitnami/influxdb/secrets/write-user-password"
             {{- else }}
@@ -143,9 +173,9 @@ spec:
                   key: write-user-password
             {{- end }}
             {{- end }}
-            {{- if .Values.database }}
+            {{- if .Values.auth.user.bucket }}
             - name: INFLUXDB_DB
-              value: {{ .Values.database | quote }}
+              value: {{ .Values.auth.user.bucket | quote }}
             {{- end }}
             {{- if .Values.influxdb.extraEnvVars }}
             {{- tpl (toYaml .Values.influxdb.extraEnvVars) $ | nindent 12 }}
@@ -159,39 +189,57 @@ spec:
               protocol: TCP
           {{- if .Values.influxdb.livenessProbe.enabled }}
           {{- $livenessTimeout := sub (int .Values.influxdb.livenessProbe.timeoutSeconds) 1 }}
-          livenessProbe:
+          livenessProbe: {{- omit .Values.influxdb.livenessProbe "enabled" | toYaml | nindent 12 }}
             exec:
               command:
                 - bash
                 - -c
                 - |
-                  if [[ -f "${INFLUXDB_ADMIN_USER_PASSWORD_FILE:-}" ]]; then
-                      export INFLUXDB_ADMIN_USER_PASSWORD="$(< "${INFLUXDB_ADMIN_USER_PASSWORD_FILE}")"
+                  . /opt/bitnami/scripts/libinfluxdb.sh
+
+                  influxdb_env
+
+                  {{- if .Values.auth.enabled }}
+                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
+                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"
+                  {{- end }}
+
+                  branch=$(influxdb_branch)
+
+                  if [[ "$branch" = "2" ]]; then
+                      timeout {{ $livenessTimeout }}s influx --host http://$POD_IP:{{ .Values.influxdb.containerPorts.http }} ping
+                  else
+                      timeout {{ $livenessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
                   fi
-                  {{ if .Values.authEnabled }}INFLUX_USERNAME="$INFLUXDB_ADMIN_USER" INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"{{ end }} timeout {{ $livenessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
-            initialDelaySeconds: {{ .Values.influxdb.livenessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.influxdb.livenessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.influxdb.livenessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.influxdb.livenessProbe.successThreshold }}
-            failureThreshold: {{ .Values.influxdb.livenessProbe.failureThreshold }}
+          {{- else if .Values.influxdb.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.customLivenessProbe "context" $) | nindent 12 }}
           {{- end }}
           {{- if .Values.influxdb.readinessProbe.enabled }}
           {{- $readinessTimeout := sub (int .Values.influxdb.readinessProbe.timeoutSeconds) 1 }}
-          readinessProbe:
+          readinessProbe: {{- omit .Values.influxdb.readinessProbe "enabled" | toYaml | nindent 12 }}
             exec:
               command:
                 - bash
                 - -c
                 - |
-                  if [[ -f "${INFLUXDB_ADMIN_USER_PASSWORD_FILE:-}" ]]; then
-                      export INFLUXDB_ADMIN_USER_PASSWORD="$(< "${INFLUXDB_ADMIN_USER_PASSWORD_FILE}")"
+                  . /opt/bitnami/scripts/libinfluxdb.sh
+
+                  influxdb_env
+
+                  {{- if .Values.auth.enabled }}
+                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
+                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"
+                  {{- end }}
+
+                  branch=$(influxdb_branch)
+
+                  if [[ "$branch" = "2" ]]; then
+                      timeout {{ $readinessTimeout }}s influx --host http://$POD_IP:{{ .Values.influxdb.containerPorts.http }} ping
+                  else
+                      timeout {{ $readinessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
                   fi
-                  {{ if .Values.authEnabled }}INFLUX_USERNAME="$INFLUXDB_ADMIN_USER" INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"{{ end }} timeout {{ $readinessTimeout }}s influx -host $POD_IP -port {{ .Values.influxdb.containerPorts.http }} -execute "SHOW DATABASES"
-            initialDelaySeconds: {{ .Values.influxdb.readinessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.influxdb.readinessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.influxdb.readinessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.influxdb.readinessProbe.successThreshold }}
-            failureThreshold: {{ .Values.influxdb.readinessProbe.failureThreshold }}
+          {{- else if .Values.influxdb.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.customReadinessProbe "context" $) | nindent 12 }}
           {{- end }}
           {{- if .Values.influxdb.resources }}
           resources: {{- toYaml .Values.influxdb.resources | nindent 12 }}
@@ -209,7 +257,7 @@ spec:
             - name: custom-init-scripts-secret
               mountPath: /docker-entrypoint-initdb.d/secret
             {{- end }}
-            {{- if or .Values.adminUser.usePasswordFile .Values.user.usePasswordFile .Values.readUser.usePasswordFile .Values.writeUser.usePasswordFile }}
+            {{- if .Values.auth.usePasswordFiles }}
             - name: influxdb-credentials
               mountPath: /opt/bitnami/influxdb/secrets/
             {{- end }}
@@ -217,6 +265,9 @@ spec:
             - name: data
               mountPath: /bitnami/influxdb
             {{- end }}
+          {{- if .Values.influxdb.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.extraVolumeMounts "context" $) | nindent 12 }}
+          {{- end }}
       volumes:
         {{- if or (.Files.Glob "files/conf/influxdb.conf") .Values.influxdb.configuration .Values.influxdb.existingConfiguration }}
         - name: influxdb-config
@@ -233,28 +284,14 @@ spec:
           secret:
             secretName: {{ template "influxdb.initdbScriptsSecret" . }}
         {{- end }}
-        {{- if or .Values.adminUser.usePasswordFile .Values.user.usePasswordFile .Values.readUser.usePasswordFile .Values.writeUser.usePasswordFile }}
+        {{- if .Values.auth.usePasswordFiles }}
         - name: influxdb-credentials
           secret:
             secretName: {{ include "influxdb.secretName" . }}
-            items:
-              {{- if .Values.adminUser.usePasswordFile }}
-              - key: admin-user-password
-                path: admin-user-password
-              {{- end }}
-              {{- if .Values.user.usePasswordFile }}
-              - key: user-password
-                path: user-password
-              {{- end }}
-              {{- if .Values.readUser.usePasswordFile }}
-              - key: read-user-password
-                path: read-user-password
-              {{- end }}
-              {{- if .Values.writeUser.usePasswordFile }}
-              - key: write-user-password
-                path: write-user-password
-              {{- end }}
         {{- end }}
+      {{- if .Values.influxdb.extraVolumes }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.influxdb.extraVolumes "context" $) | nindent 8 }}
+      {{- end }}
   {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
         - name: data
           persistentVolumeClaim:
@@ -274,6 +311,6 @@ spec:
         resources:
           requests:
             storage: {{ .Values.persistence.size | quote }}
-{{- include "influxdb.storageClass" . | nindent 8 }}
+        {{- include "common.storage.class" ( dict "persistence" .Values.persistence "global" $) | nindent 8 }}
   {{- end }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/ingress.yaml b/bitnami/influxdb/templates/ingress.yaml
index a39751d7fe..b2892642d4 100644
--- a/bitnami/influxdb/templates/ingress.yaml
+++ b/bitnami/influxdb/templates/ingress.yaml
@@ -1,36 +1,67 @@
 {{- if .Values.ingress.enabled -}}
 {{- $architecture := .Values.architecture }}
-apiVersion: {{ include "ingress.apiVersion" . }}
+apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
 kind: Ingress
 metadata:
-  name: {{ template "influxdb.fullname" . }}
-  labels: {{- include "influxdb.labels" . | nindent 4 }}
+  name: {{ template "common.names.fullname" . }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if or .Values.ingress.annotations .Values.commonAnnotations .Values.ingress.certManager }}
   annotations:
+    {{- if .Values.commonAnnotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+    {{- end }}
     {{- if .Values.ingress.certManager }}
     kubernetes.io/tls-acme: "true"
     {{- end }}
     {{- range $key, $value := .Values.ingress.annotations }}
-    {{ $key }}: {{ $value | quote }}
+    {{ $key }}: {{ include "common.tplvalues.render" ( dict "value" $value "context" $ ) | quote }}
     {{- end }}
+  {{- end }}
 spec:
   rules:
-  {{- range .Values.ingress.hosts }}
-    - host: {{ .name }}
+    {{- if .Values.ingress.hostname }}
+    - host: {{ .Values.ingress.hostname }}
       http:
         paths:
+          {{- if .Values.ingress.extraPaths }}
+          {{- toYaml .Values.ingress.extraPaths | nindent 10 }}
+          {{- end }}
           {{- if eq $architecture "high-availability" }}
           - path: /write
-            backend:
-              serviceName: {{ include "influxdb.fullname" $ }}-relay
-              servicePort: http
-          {{- end }}        
-          - path: /*
-            backend:
-              serviceName: {{ include "influxdb.fullname" $ }}
-              servicePort: http
-  {{- end }}
-  {{- if .Values.ingress.tls }}
+            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
+            pathType: {{ .Values.ingress.pathType }}
+            {{- end }}
+            {{- $relayServiceName := printf "%s-%s" (include "common.names.fullname" .) "relay" -}}
+            backend: {{- include "common.ingress.backend" (dict "serviceName" $relayServiceName  "servicePort" "http" "context" $)  | nindent 14 }}
+          {{- end }}
+          - path: {{ default "/*" .Values.ingress.path }}
+            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
+            pathType: {{ .Values.ingress.pathType }}
+            {{- end }}
+            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" .) "servicePort" "http" "context" $)  | nindent 14 }}
+    {{- end }}
+    {{- range .Values.ingress.extraHosts }}
+    - host: {{ .name | quote }}
+      http:
+        paths:
+          - path: {{ default "/" .path }}
+            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
+            pathType: {{ default "ImplementationSpecific" .pathType }}
+            {{- end }}
+            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" $) "servicePort" "http" "context" $) | nindent 14 }}
+    {{- end }}
+  {{- if or .Values.ingress.tls .Values.ingress.extraTls }}
   tls:
-    {{- toYaml .Values.ingress.tls | nindent 4 }}
+    {{- if .Values.ingress.tls }}
+    - hosts:
+        - {{ .Values.ingress.hostname }}
+      secretName: {{ printf "%s-tls" .Values.ingress.hostname }}
+    {{- end }}
+    {{- if .Values.ingress.extraTls }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.extraTls "context" $ ) | nindent 4 }}
+    {{- end }}
   {{- end }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/networkpolicy.yaml b/bitnami/influxdb/templates/networkpolicy.yaml
index 00d3f49400..f4bcd9b0e3 100644
--- a/bitnami/influxdb/templates/networkpolicy.yaml
+++ b/bitnami/influxdb/templates/networkpolicy.yaml
@@ -2,11 +2,17 @@
 kind: NetworkPolicy
 apiVersion: {{ template "influxdb.networkPolicy.apiVersion" . }}
 metadata:
-  name: {{ include "influxdb.fullname" . }}
-  labels: {{- include "influxdb.labels" . | nindent 4 }}
+  name: {{ include "common.names.fullname" . }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   podSelector:
-    matchLabels:  {{ include "influxdb.matchLabels" . | nindent 6 }}
+    matchLabels:  {{ include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: influxdb
   policyTypes:
     - Ingress
@@ -21,10 +27,10 @@ spec:
       from:
         - podSelector:
             matchLabels:
-              {{ template "influxdb.fullname" . }}-client: "true"
+              {{ template "common.names.fullname" . }}-client: "true"
         {{- if eq .Values.architecture "high-availability" }}
         - podSelector:
-            matchLabels: {{- include "influxdb.matchLabels" . | nindent 14 }}
+            matchLabels: {{- include "common.labels.matchLabels" . | nindent 14 }}
               app.kubernetes.io/component: relay
         {{- end }}
       {{- end }}
diff --git a/bitnami/influxdb/templates/relay/configmap.yaml b/bitnami/influxdb/templates/relay/configmap.yaml
index f236d71c97..c61a383f9f 100644
--- a/bitnami/influxdb/templates/relay/configmap.yaml
+++ b/bitnami/influxdb/templates/relay/configmap.yaml
@@ -1,16 +1,18 @@
-{{- if and (eq .Values.architecture "high-availability") (or (.Files.Glob "files/conf/relay.toml") .Values.relay.configuration) (not .Values.relay.existingConfiguration) }}
+{{- if and (eq .Values.architecture "high-availability") .Values.relay.configuration (not .Values.relay.existingConfiguration) }}
 apiVersion: v1
 kind: ConfigMap
 metadata:
-  name: {{ include "influxdb.fullname" . }}-relay
+  name: {{ include "common.names.fullname" . }}-relay
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: relay
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 data:
-{{- if (.Files.Glob "files/conf/relay.toml") }}
-{{ (.Files.Glob "files/conf/relay.toml").AsConfig | indent 2 }}
-{{- else if .Values.relay.configuration }}
   relay.toml: |-
-{{ tpl .Values.relay.configuration . | indent 4 }}
-{{- end }}
+    {{ include "common.tplvalues.render" (dict "value" .Values.relay.configuration "context" $) | nindent 4 }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/relay/deployment.yaml b/bitnami/influxdb/templates/relay/deployment.yaml
index a51da32a50..f528046cce 100644
--- a/bitnami/influxdb/templates/relay/deployment.yaml
+++ b/bitnami/influxdb/templates/relay/deployment.yaml
@@ -2,10 +2,16 @@
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ include "influxdb.fullname" . }}-relay
+  name: {{ include "common.names.fullname" . }}-relay
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: relay
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 spec:
   replicas: {{ .Values.relay.replicaCount }}
   strategy:
@@ -15,12 +21,12 @@ spec:
     {{- end }}
   selector:
     matchLabels:
-      {{- include "influxdb.matchLabels" . | nindent 6 }}
+      {{- include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: relay
   template:
     metadata:
       labels:
-        {{- include "influxdb.labels" . | nindent 8 }}
+        {{- include "common.labels.standard" . | nindent 8 }}
         app.kubernetes.io/component: relay
     spec:
       {{- include "influxdb.imagePullSecrets" . | nindent 6 }}
@@ -60,24 +66,18 @@ spec:
               containerPort: {{ .Values.relay.containerPorts.http }}
               protocol: TCP
           {{- if .Values.relay.livenessProbe.enabled }}
-          livenessProbe:
+          livenessProbe: {{- omit .Values.relay.livenessProbe "enabled" | toYaml | nindent 12 }}
             tcpSocket:
               port: http
-            initialDelaySeconds: {{ .Values.relay.livenessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.relay.livenessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.relay.livenessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.relay.livenessProbe.successThreshold }}
-            failureThreshold: {{ .Values.relay.livenessProbe.failureThreshold }}
+          {{- else if .Values.relay.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.relay.customLivenessProbe "context" $) | nindent 12 }}
           {{- end }}
           {{- if .Values.relay.readinessProbe.enabled }}
-          readinessProbe:
+          readinessProbe: {{- omit .Values.relay.readinessProbe "enabled" | toYaml | nindent 12 }}
             tcpSocket:
               port: http
-            initialDelaySeconds: {{ .Values.relay.readinessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.relay.readinessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.relay.readinessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.relay.readinessProbe.successThreshold }}
-            failureThreshold: {{ .Values.relay.readinessProbe.failureThreshold }}
+          {{- else if .Values.relay.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.relay.customReadinessProbe "context" $) | nindent 12 }}
           {{- end }}
           {{- if .Values.relay.resources }}
           resources: {{- toYaml .Values.relay.resources | nindent 12 }}
@@ -85,8 +85,14 @@ spec:
           volumeMounts:
             - name: relay-config
               mountPath: /conf
+          {{- if .Values.relay.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.relay.extraVolumeMounts "context" $) | nindent 12 }}
+          {{- end }}
       volumes:
         - name: relay-config
           configMap:
             name: {{ include "influxdb.relay.configmapName" . }}
+      {{- if .Values.relay.extraVolumes }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.relay.extraVolumes "context" $) | nindent 8 }}
+      {{- end }}
 {{- end }}
diff --git a/bitnami/influxdb/templates/relay/service.yaml b/bitnami/influxdb/templates/relay/service.yaml
index cc2ece76d3..60f71f7ea7 100644
--- a/bitnami/influxdb/templates/relay/service.yaml
+++ b/bitnami/influxdb/templates/relay/service.yaml
@@ -2,12 +2,21 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "influxdb.fullname" . }}-relay
+  name: {{ include "common.names.fullname" . }}-relay
   labels:
-    {{- include "influxdb.labels" . | nindent 4 }}
+    {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: relay
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if or .Values.relay.service.annotations .Values.commonAnnotations }}
+  annotations:
+  {{- if .Values.commonAnnotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
   {{- if .Values.relay.service.annotations }}
-  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.relay.service.annotations "context" $) | nindent 4 }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.relay.service.annotations "context" $) | nindent 4 }}
+  {{- end }}
   {{- end }}
 spec:
   type: {{ .Values.relay.service.type }}
@@ -34,6 +43,6 @@ spec:
       nodePort: null
       {{- end }}
   selector:
-    {{- include "influxdb.matchLabels" . | nindent 4 }}
+    {{- include "common.labels.matchLabels" . | nindent 4 }}
     app.kubernetes.io/component: relay
-  {{- end }}
+{{- end }}
diff --git a/bitnami/influxdb/values.yaml b/bitnami/influxdb/values.yaml
index 48168ea28f..32e3c65b7d 100644
--- a/bitnami/influxdb/values.yaml
+++ b/bitnami/influxdb/values.yaml
@@ -12,13 +12,17 @@
 # This is a YAML-formatted file.
 # Declare variables to be passed into your templates.
 
+## Force target Kubernetes version (using Helm capabilites if not set)
+##
+kubeVersion:
+
 ## Bitnami InfluxDB(TM) image
 ## ref: https://hub.docker.com/r/bitnami/influxdb/tags/
 ##
 image:
   registry: docker.io
   repository: bitnami/influxdb
-  tag: 1.8.3-debian-10-r88
+  tag: 2.0.2-debian-10-r0
 
   ## Specify a imagePullPolicy. Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
   ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
@@ -47,49 +51,71 @@ image:
 ##
 clusterDomain: cluster.local
 
-## InfluxDB(TM) architecture. Allowed values: standalone or high-availability
-##
-architecture: standalone
-
-## Database to be created on first run
-## ref: https://github.com/bitnami/bitnami-docker-influxdb#creating-a-database-on-first-run
+## Common annotations to add to all MySQL resources (sub-charts are not considered). Evaluated as a template
 ##
-database: my_database
+commonAnnotations: {}
 
-## Enable/disable authentication
-## ref: https://github.com/bitnami/bitnami-docker-influxdb#allowing-empty-passwords
+## Common labels to add to all MySQL resources (sub-charts are not considered). Evaluated as a template
 ##
-authEnabled: true
+commonLabels: {}
 
-## InfluxDB(TM) admin credentials
-##
-adminUser:
-  name: admin
-  pwd:
-  usePasswordFile: false
-## InfluxDB(TM) credentials for user with 'admin' privileges on the db specified at 'database' parameter
-##
-user:
-  name:
-  pwd:
-  usePasswordFile: false
-## InfluxDB(TM) credentials for user with 'read' privileges on the db specified at 'database' parameter
-##
-readUser:
-  name:
-  pwd:
-  usePasswordFile: false
-## InfluxDB(TM) credentials for user with 'write' privileges on the db specified at 'database' parameter
+## InfluxDB(TM) architecture. Allowed values: standalone or high-availability
 ##
-writeUser:
-  name:
-  pwd:
-  usePasswordFile: false
+architecture: standalone
 
-## Secret with InfluxDB(TM) credentials
-## NOTE: This will override the users/passwords defined at adminUser, user, readUser and writeUser
+## Authentication parameters
 ##
-# existingSecret:
+auth:
+  ## Variable to keep compatibility with influxdb v1
+  enabled: true
+  ## Whether to use files to provide secrets instead of env vars.
+  ##
+  usePasswordFiles: false
+  ## InfluxDB(TM) admin credentials
+  ##
+  admin:
+    username: admin
+    password:
+    token:
+    ## Primary org name and id
+    ##
+    org: primary
+    ## Primary bucket name and id
+    ##
+    bucket: primary
+  ## Whether to automatically create users' tokens
+  ## You should take into account these tokens are going to be created by CLI
+  ## so it is not possible to get them by k8s secrets nor to provide them though
+  ## values
+  ## See more influxdb 2.0 auth ref: https://docs.influxdata.com/influxdb/v2.0/security/tokens/
+  ##
+  createUserToken: false
+  ## InfluxDB(TM) credentials for user with 'admin' privileges on the db specified at 'database' parameter
+  ##
+  user:
+    username:
+    password:
+    ## Org where to create the user, Default: primary.org
+    ##
+    org:
+    ## Whether to create a new bucket or use the primary bucket
+    ## already create. If it is not null a new bucket will be created.
+    ##
+    bucket:
+  ## InfluxDB(TM) credentials for user with 'read' privileges on the db specified at 'database' parameter
+  ##
+  readUser:
+    username:
+    password:
+  ## InfluxDB(TM) credentials for user with 'write' privileges on the db specified at 'database' parameter
+  ##
+  writeUser:
+    username:
+    password:
+  ## Secret with InfluxDB(TM) credentials
+  ## NOTE: This will override the users/passwords defined at adminUser, user, readUser and writeUser
+  ##
+  existingSecret:
 
 ## InfluxDB(TM) backend parameters
 ##
@@ -200,6 +226,14 @@ influxdb:
   ##
   tolerations: []
 
+  ## Extra volumes to add to the deployment
+  ##
+  extraVolumes: []
+
+  ## Extra volume mounts to add to the container
+  ##
+  extraVolumeMounts: []
+
   ## K8s Security Context for InfluxDB(TM) pods
   ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   ##
@@ -241,6 +275,14 @@ influxdb:
     successThreshold: 1
     failureThreshold: 6
 
+  ## Custom Liveness probe
+  ##
+  customLivenessProbe: {}
+
+  ## Custom Readiness probe
+  ##
+  customReadinessProbe: {}
+
   ## Container ports
   ##
   containerPorts:
@@ -317,8 +359,8 @@ relay:
     # Array of InfluxDB(TM) instances to use as backends for Relay.
     output = [
         {{- $influxdbReplicaCount := int .Values.influxdb.replicaCount }}
-        {{- $influxdbFullname := include "influxdb.fullname" . }}
-        {{- $influxdbHeadlessServiceName := printf "%s-headless" (include "influxdb.fullname" .) }}
+        {{- $influxdbFullname := include "common.names.fullname" . }}
+        {{- $influxdbHeadlessServiceName := printf "%s-headless" (include "common.names.fullname" .) }}
         {{- $releaseName := .Release.Namespace }}
         {{- $clusterDomain:= .Values.clusterDomain }}
         {{- range $e, $i := until $influxdbReplicaCount }}
@@ -389,6 +431,14 @@ relay:
   ##
   tolerations: []
 
+  ## Extra volumes to add to the deployment
+  ##
+  extraVolumes: []
+
+  ## Extra volume mounts to add to the container
+  ##
+  extraVolumeMounts: []
+
   ## K8s Security Context for InfluxDB(TM) pods
   ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   ##
@@ -430,6 +480,14 @@ relay:
     successThreshold: 1
     failureThreshold: 6
 
+  ## Custom Liveness probe
+  ##
+  customLivenessProbe: {}
+
+  ## Custom Readiness probe
+  ##
+  customReadinessProbe: {}
+
   ## Container ports
   ##
   containerPorts:
@@ -465,38 +523,74 @@ relay:
     ##
     annotations: {}
 
-## Ingress parameters
+## Configure the ingress resource that allows you to access the
+## influxdb installation. Set up the URL
+## ref: http://kubernetes.io/docs/user-guide/ingress/
 ##
 ingress:
   ## Set to true to enable ingress record generation
+  ##
   enabled: false
 
+  ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
+  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
+  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
+  ##
+  tls: false
+
   ## Set this to true in order to add the corresponding annotations for cert-manager
+  ##
   certManager: false
 
+  ## Ingress Path type
+  ##
+  pathType: ImplementationSpecific
+
+  ## Override API Version (automatically detected if not set)
+  ##
+  apiVersion:
+
+  ## When the ingress is enabled, a host pointing to this will be created
+  ##
+  hostname: influxdb.local
+
+  ## The Path to influxdb. You may need to set this to '/*' in order to use this
+  ## with ALB ingress controllers.
+  ##
+  path: /*
+
   ## Ingress annotations done as key:value pairs
   ## For a full list of possible ingress annotations, please see
-  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
+  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
   ##
-  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
   ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
-  annotations:
-  #  kubernetes.io/ingress.class: nginx
+  ##
+  annotations: {}
 
-  ## The list of hostnames to be covered with this ingress record.
-  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
-  hosts:
-    - name: influxdb.local
-      path: /
+  ## The list of additional hostnames to be covered with this ingress record.
+  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
+  ## extraHosts:
+  ## - name: influxdb.local
+  ##   path: /
+  ##
 
-  ## The tls configuration for the ingress
+  ## Any additional arbitrary paths that may need to be added to the ingress under the main host.
+  ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
+  ## extraPaths:
+  ## - path: /*
+  ##   backend:
+  ##     serviceName: ssl-redirect
+  ##     servicePort: use-annotation
+  ##
+
+  ## The tls configuration for additional hostnames to be covered with this ingress record.
   ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
-  # tls:
-  # - hosts:
-  #   - influxdb.local
-  #   secretName: influxdb.local-tls
+  ## extraTls:
+  ## - hosts:
+  ##     - influxdb.local
+  ##   secretName: influxdb.local-tls
+  ##
 
-  secrets:
   ## If you're providing your own certificates, please use this to add the certificates as secrets
   ## key and certificate should start with -----BEGIN CERTIFICATE----- or
   ## -----BEGIN RSA PRIVATE KEY-----
@@ -506,9 +600,12 @@ ingress:
   ##
   ## It is also possible to create and manage the certificates outside of this helm chart
   ## Please see README.md for more information
-  # - name: influxdb.local-tls
-  #   key:
-  #   certificate:
+  ##
+  secrets: []
+  ## - name: influxdb.local-tls
+  ##   key:
+  ##   certificate:
+  ##
 
 ## Prometheus metrics
 ## ref: https://docs.influxdata.com/influxdb/v1.7/administration/server_monitoring/#influxdb-metrics-http-endpoint
@@ -689,7 +786,7 @@ backup:
       image:
         registry: docker.io
         repository: bitnami/google-cloud-sdk
-        tag: 0.322.0-debian-10-r1
+        tag: 0.325.0-debian-10-r1
 
         ## Specify a imagePullPolicy. Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
         ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
@@ -714,7 +811,7 @@ backup:
       image:
         registry: docker.io
         repository: bitnami/azure-cli
-        tag: 2.17.1-debian-10-r4
+        tag: 2.18.0-debian-10-r7
 
         ## Specify a imagePullPolicy. Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
         ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
@@ -725,3 +822,7 @@ backup:
         ##
         # pullSecrets:
         #   - myRegistryKeySecretName
+
+## Array with extra yaml to deploy with the chart. Evaluated as a template
+##
+extraDeploy: []
