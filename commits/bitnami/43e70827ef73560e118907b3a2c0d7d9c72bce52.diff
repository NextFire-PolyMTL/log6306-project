commit 43e70827ef73560e118907b3a2c0d7d9c72bce52
Author: Juan Ariza Toledano <juan@bitnami.com>
Date:   Wed Jun 17 09:22:06 2020 +0200

    [bitnami/rabbitmq] Rely on container initialization + refactoring to follow Helm chart best practices (#2843)
    
    * [bitnami/rabbitmq] Rely on container initialization + refactoring to follow Helm chart best practices
    
    Signed-off-by: juan131 <juanariza@vmware.com>

diff --git a/bitnami/rabbitmq/Chart.yaml b/bitnami/rabbitmq/Chart.yaml
index ec0a19fbb7..d5ebda88e2 100644
--- a/bitnami/rabbitmq/Chart.yaml
+++ b/bitnami/rabbitmq/Chart.yaml
@@ -1,6 +1,6 @@
 apiVersion: v1
 name: rabbitmq
-version: 6.28.1
+version: 7.0.0
 appVersion: 3.8.5
 description: Open source message broker software that implements the Advanced Message Queuing Protocol (AMQP)
 keywords:
diff --git a/bitnami/rabbitmq/README.md b/bitnami/rabbitmq/README.md
index aefada2d5e..4d11397263 100644
--- a/bitnami/rabbitmq/README.md
+++ b/bitnami/rabbitmq/README.md
@@ -47,137 +47,188 @@ The command removes all the Kubernetes components associated with the chart and
 
 The following table lists the configurable parameters of the RabbitMQ chart and their default values.
 
-| Parameter                                 | Description                                                                                                                                                | Default                                                                                     |
-|-------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|
-| `global.imageRegistry`                    | Global Docker image registry                                                                                                                               | `nil`                                                                                       |
-| `global.imagePullSecrets`                 | Global Docker registry secret names as an array                                                                                                            | `[]` (does not add image pull secrets to deployed pods)                                     |
-| `global.storageClass`                     | Global storage class for dynamic provisioning                                                                                                              | `nil`                                                                                       |
-| `image.registry`                          | Rabbitmq Image registry                                                                                                                                    | `docker.io`                                                                                 |
-| `image.repository`                        | Rabbitmq Image name                                                                                                                                        | `bitnami/rabbitmq`                                                                          |
-| `image.tag`                               | Rabbitmq Image tag                                                                                                                                         | `{TAG_NAME}`                                                                                |
-| `image.pullPolicy`                        | Image pull policy                                                                                                                                          | `IfNotPresent`                                                                              |
-| `image.pullSecrets`                       | Specify docker-registry secret names as an array                                                                                                           | `nil`                                                                                       |
-| `image.debug`                             | Specify if debug values should be set                                                                                                                      | `false`                                                                                     |
-| `nameOverride`                            | String to partially override rabbitmq.fullname template with a string (will prepend the release name)                                                      | `nil`                                                                                       |
-| `fullnameOverride`                        | String to fully override rabbitmq.fullname template with a string                                                                                          | `nil`                                                                                       |
-| `rbacEnabled`                             | Specify if rbac is enabled in your cluster                                                                                                                 | `true`                                                                                      |
-| `serviceAccount.create`                      | Enable creation of ServiceAccount for RabbitMQ pods | `true`                                        |
-| `serviceAccount.name`                        | Name of the created serviceAccount               | Generated using the `kafka.fullname` template |
-| `podManagementPolicy`                     | Pod management policy                                                                                                                                      | `OrderedReady`                                                                              |
-| `rabbitmq.username`                       | RabbitMQ application username                                                                                                                              | `user`                                                                                      |
-| `rabbitmq.password`                       | RabbitMQ application password                                                                                                                              | _random 10 character long alphanumeric string_                                              |
-| `rabbitmq.existingPasswordSecret`         | Existing secret with RabbitMQ credentials                                                                                                                  | `nil`                                                                                       |
-| `rabbitmq.erlangCookie`                   | Erlang cookie                                                                                                                                              | _random 32 character long alphanumeric string_                                              |
-| `rabbitmq.existingErlangSecret`           | Existing secret with RabbitMQ Erlang cookie                                                                                                                | `nil`                                                                                       |
-| `rabbitmq.plugins`                        | List of plugins to enable                                                                                                                                  | `rabbitmq_management rabbitmq_peer_discovery_k8s`                                           |
-| `rabbitmq.extraPlugins`                   | Extra plugings to enable                                                                                                                                   | `nil`
-| `rabbitmq.communityPlugins`               | Community plugins to install and enable         | []                                                |
-| `rabbitmq.clustering.address_type`        | Switch clustering mode                                                                                                                                     | `ip` or `hostname`                                                                          |
-| `rabbitmq.clustering.k8s_domain`          | Customize internal k8s cluster domain                                                                                                                      | `cluster.local`                                                                             |
-| `rabbitmq.clustering.rebalance`           | Rebalance master for queues in cluster when new replica is created                                                                                         | `false`                                                                                     |
-| `rabbitmq.logs`                           | Value for the RABBITMQ_LOGS environment variable                                                                                                           | `-`                                                                                         |
-| `rabbitmq.setUlimitNofiles`               | Specify if max file descriptor limit should be set                                                                                                         | `true`                                                                                      |
-| `rabbitmq.ulimitNofiles`                  | Max File Descriptor limit                                                                                                                                  | `65536`                                                                                     |
-| `rabbitmq.maxAvailableSchedulers`         | RabbitMQ maximum available scheduler threads                                                                                                               | `2`                                                                                         |
-| `rabbitmq.onlineSchedulers`               | RabbitMQ online scheduler threads                                                                                                                          | `1`                                                                                         |
-| `rabbitmq.env`                            | RabbitMQ [environment variables](https://www.rabbitmq.com/configure.html#customise-environment)                                                            | `{}`                                                                                        |
-| `rabbitmq.configuration`                  | Required cluster configuration                                                                                                                             | See values.yaml                                                                             |
-| `rabbitmq.extraConfiguration`             | Extra configuration to add to rabbitmq.conf                                                                                                                | See values.yaml                                                                             |
-| `rabbitmq.advancedConfiguration`          | Extra configuration (in classic format) to add to advanced.config                                                                                          | See values.yaml                                                                             |
-| `rabbitmq.tls.enabled`                    | Enable TLS support to rabbitmq                                                                                                                             | `false`                                                                                     |
-| `rabbitmq.tls.failIfNoPeerCert`           | When set to true, TLS connection will be rejected if client fails to provide a certificate                                                                 | `true`                                                                                      |
-| `rabbitmq.tls.sslOptionsVerify`           | `verify_peer`                                                                                                                                              | Should [peer verification](https://www.rabbitmq.com/ssl.html#peer-verification) be enabled? |
-| `rabbitmq.tls.caCertificate`              | Ca certificate                                                                                                                                             | Certificate Authority (CA) bundle content                                                   |
-| `rabbitmq.tls.serverCertificate`          | Server certificate                                                                                                                                         | Server certificate content                                                                  |
-| `rabbitmq.tls.serverKey`                  | Server Key                                                                                                                                                 | Server private key content                                                                  |
-| `rabbitmq.tls.existingSecret`             | Existing secret with certificate content to rabbitmq credentials                                                                                           | `nil`                                                                                       |
-| `ldap.enabled`                            | Enable LDAP support                                                                                                                                        | `false`                                                                                     |
-| `ldap.server`                             | LDAP server                                                                                                                                                | `""`                                                                                        |
-| `ldap.port`                               | LDAP port                                                                                                                                                  | `389`                                                                                       |
-| `ldap.user_dn_pattern`                    | DN used to bind to LDAP                                                                                                                                    | `cn=${username},dc=example,dc=org`                                                          |
-| `ldap.tls.enabled`                        | Enable TLS for LDAP connections                                                                                                                            | `false` (if set to true, check advancedConfiguration parameter in values.yml)               |
-| `service.type`                            | Kubernetes Service type                                                                                                                                    | `ClusterIP`                                                                                 |
-| `service.port`                            | Amqp port                                                                                                                                                  | `5672`                                                                                      |
-| `service.loadBalancerIP`                  | LoadBalancerIP for the service                                                                                                                             | `nil`                                                                                       |
-| `service.externalIP`                      | ExternalIP for the service                                                                                                                                 | `nil`                                                                                       |
-| `service.tlsPort`                         | Amqp TLS port                                                                                                                                              | `5671`                                                                                      |
-| `service.distPort`                        | Erlang distribution server port                                                                                                                            | `25672`                                                                                     |
-| `service.nodePort`                        | Node port override, if serviceType NodePort                                                                                                                | _random available between 30000-32767_                                                      |
-| `service.nodeTlsPort`                     | Node port override, if serviceType NodePort                                                                                                                | _random available between 30000-32767_                                                      |
-| `service.managerPort`                     | RabbitMQ Manager port                                                                                                                                      | `15672`                                                                                     |
-| `service.extraPorts`                      | Extra ports to expose in the service                                                                                                                       | `nil`                                                                                       |
-| `service.extraContainerPorts`             | Extra ports to be included in container spec, primarily informational                                                                                      | `nil`                                                                                       |
-| `persistence.enabled`                     | Use a PVC to persist data                                                                                                                                  | `true`                                                                                      |
-| `service.labels`                          | service labels                                                                                                                                             | {}                                                                                          |
-| `service.annotations`                     | service annotations                                                                                                                                        | {}                                                                                          |
-| `schedulerName`                           | Name of the k8s service (other than default)                                                                                                               | `nil`                                                                                       |
-| `persistence.storageClass`                | Storage class of backing PVC                                                                                                                               | `nil` (uses alpha storage class annotation)                                                 |
-| `persistence.existingClaim`               | RabbitMQ data Persistent Volume existing claim name, evaluated as a template                                                                               | ""                                                                                          |
-| `persistence.selector`                    | Selector to match an existing Persistent Volume                                                                                                            | `nil`                                                                                       |
-| `persistence.accessMode`                  | Use volume as ReadOnly or ReadWrite                                                                                                                        | `ReadWriteOnce`                                                                             |
-| `persistence.size`                        | Size of data volume                                                                                                                                        | `8Gi`                                                                                       |
-| `persistence.path`                        | Mount path of the data volume                                                                                                                              | `/opt/bitnami/rabbitmq/var/lib/rabbitmq`                                                    |
-| `securityContext.enabled`                 | Enable security context                                                                                                                                    | `true`                                                                                      |
-| `securityContext.fsGroup`                 | Group ID for the container                                                                                                                                 | `1001`                                                                                      |
-| `securityContext.runAsUser`               | User ID for the container                                                                                                                                  | `1001`                                                                                      |
-| `resources`                               | resource needs and limits to apply to the pod                                                                                                              | {}                                                                                          |
-| `replicas`                                | Replica count                                                                                                                                              | `1`                                                                                         |
-| `priorityClassName`                       | Pod priority class name                                                                                                                                    | ``                                                                                          |
-| `networkPolicy.enabled`                   | Enable NetworkPolicy                                                                                                                                       | `false`                                                                                     |
-| `networkPolicy.allowExternal`             | Don't require client label for connections                                                                                                                 | `true`                                                                                      |
-| `networkPolicy.additionalRules`           | Additional NetworkPolicy rules                                                                                                                             | `nil`                                                                                       |
-| `nodeSelector`                            | Node labels for pod assignment                                                                                                                             | {}                                                                                          |
-| `affinity`                                | Affinity settings for pod assignment                                                                                                                       | {}                                                                                          |
-| `tolerations`                             | Toleration labels for pod assignment                                                                                                                       | []                                                                                          |
-| `updateStrategy`                          | Statefulset update strategy policy                                                                                                                         | `RollingUpdate`                                                                             |
-| `ingress.enabled`                         | Enable ingress resource for Management console                                                                                                             | `false`                                                                                     |
-| `ingress.hostName`                        | Hostname to your RabbitMQ installation                                                                                                                     | `nil`                                                                                       |
-| `ingress.path`                            | Path within the url structure                                                                                                                              | `/`                                                                                         |
-| `ingress.tls`                             | enable ingress with tls                                                                                                                                    | `false`                                                                                     |
-| `ingress.tlsSecret`                       | tls type secret to be used                                                                                                                                 | `myTlsSecret`                                                                               |
-| `ingress.annotations`                     | ingress annotations as an array                                                                                                                            | []                                                                                          |
-| `livenessProbe.enabled`                   | would you like a livenessProbed to be enabled                                                                                                              | `true`                                                                                      |
-| `livenessProbe.initialDelaySeconds`       | number of seconds                                                                                                                                          | 120                                                                                         |
-| `livenessProbe.timeoutSeconds`            | number of seconds                                                                                                                                          | 20                                                                                          |
-| `livenessProbe.periodSeconds`             | number of seconds                                                                                                                                          | 30                                                                                          |
-| `livenessProbe.failureThreshold`          | number of failures                                                                                                                                         | 6                                                                                           |
-| `livenessProbe.successThreshold`          | number of successes                                                                                                                                        | 1                                                                                           |
-| `livenessProbe.commandOverride`           | Custom command for liveness probe                                                                                                                          | []                                                                                          |
-| `podDisruptionBudget`                     | Pod Disruption Budget settings                                                                                                                             | {}                                                                                          |
-| `readinessProbe.enabled`                  | would you like a readinessProbe to be enabled                                                                                                              | `true`                                                                                      |
-| `readinessProbe.initialDelaySeconds`      | number of seconds                                                                                                                                          | 10                                                                                          |
-| `readinessProbe.timeoutSeconds`           | number of seconds                                                                                                                                          | 20                                                                                          |
-| `readinessProbe.periodSeconds`            | number of seconds                                                                                                                                          | 30                                                                                          |
-| `readinessProbe.failureThreshold`         | number of failures                                                                                                                                         | 3                                                                                           |
-| `readinessProbe.successThreshold`         | number of successes                                                                                                                                        | 1                                                                                           |
-| `readinessProbe.commandOverride`          | Custom command for readiness probe                                                                                                                         | []                                                                                          |
-| `metrics.enabled`                         | Enable prometheus to access rabbitmq metrics                                                                                                               | `false`                                                                                     |
-| `metrics.port`                            | Port where the server will expose Prometheus metrics                                                                                                       | `9419`                                                                                      |
-| `metrics.plugins`                         | Plugins to enable prometheus metrics in rabbitmq                                                                                                           | `rabbitmq_prometheus`                                                                       |
-| `metrics.podAnnotations`                  | Annotations for enabling prometheus to access the metrics endpoint                                                                                         | `{prometheus.io/scrape: "true", prometheus.io/port: "9419"}`                                |
-| `metrics.serviceMonitor.enabled`          | Create ServiceMonitor Resource for scraping metrics using PrometheusOperator                                                                               | `false`                                                                                     |
-| `metrics.serviceMonitor.namespace`        | Namespace where servicemonitor resource should be created                                                                                                  | `nil`                                                                                       |
-| `metrics.serviceMonitor.interval`         | Specify the interval at which metrics should be scraped                                                                                                    | `30s`                                                                                       |
-| `metrics.serviceMonitor.scrapeTimeout`    | Specify the timeout after which the scrape is ended                                                                                                        | `nil`                                                                                       |
-| `metrics.serviceMonitor.relabellings`     | Specify Metric Relabellings to add to the scrape endpoint                                                                                                  | `nil`                                                                                       |
-| `metrics.serviceMonitor.honorLabels`      | honorLabels chooses the metric's labels on collisions with target labels.                                                                                  | `false`                                                                                     |
-| `metrics.serviceMonitor.additionalLabels` | Used to pass Labels that are required by the Installed Prometheus Operator                                                                                 | `{}`                                                                                        |
-| `metrics.serviceMonitor.release`          | Used to pass Labels release that sometimes should be custom for Prometheus Operator                                                                        | `nil`                                                                                       |
-| `metrics.prometheusRule.enabled`          | Set this to true to create prometheusRules for Prometheus operator                                                                                         | `false`                                                                                     |
-| `metrics.prometheusRule.additionalLabels` | Additional labels that can be used so prometheusRules will be discovered by Prometheus                                                                     | `{}`                                                                                        |
-| `metrics.prometheusRule.namespace`        | namespace where prometheusRules resource should be created                                                                                                 | Same namespace as rabbitmq                                                                  |
-| `metrics.prometheusRule.rules`            | [rules](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/) to be created, check values for an example.                            | `[]`                                                                                        |
-| `podLabels`                               | Additional labels for the statefulset pod(s).                                                                                                              | {}                                                                                          |
-| `volumePermissions.enabled`               | Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work)  | `false                                                                                      |
-| `volumePermissions.image.registry`        | Init container volume-permissions image registry                                                                                                           | `docker.io`                                                                                 |
-| `volumePermissions.image.repository`      | Init container volume-permissions image name                                                                                                               | `bitnami/minideb`                                                                           |
-| `volumePermissions.image.tag`             | Init container volume-permissions image tag                                                                                                                | `buster`                                                                                    |
-| `volumePermissions.image.pullPolicy`      | Init container volume-permissions image pull policy                                                                                                        | `Always`                                                                                    |
-| `volumePermissions.resources`             | Init container resource requests/limit                                                                                                                     | `nil`                                                                                       |
-| `forceBoot.enabled`                       | Executes 'rabbitmqctl force_boot' to force boot cluster shut down unexpectedly in an unknown order. Use it only if you prefer availability over integrity. | `false`                                                                                     |
-| `extraSecrets`                            | Optionally specify extra secrets to be created by the chart.                                                                                               | `{}`                                                                                        |
-| `extraVolumeMounts`                       | Optionally specify extra list of additional volumeMounts .                                                                                                 | `{}`                                                                                        |
-| `extraVolumes`                            | Optionally specify extra list of additional volumes .                                                                                                      | `{}`                                                                                        |
+| Parameter                                         | Description                                                                                             | Default                                                 |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `global.imageRegistry`                            | Global Docker image registry                                                                            | `nil`                                                   |
+| `global.imagePullSecrets`                         | Global Docker registry secret names as an array                                                         | `[]` (does not add image pull secrets to deployed pods) |
+| `global.storageClass`                             | Global storage class for dynamic provisioning                                                           | `nil`                                                   |
+
+### Common parameters
+
+| Parameter                                         | Description                                                                                             | Default                                                 |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `nameOverride`                                    | String to partially override rabbitmq.fullname                                                          | `nil`                                                   |
+| `fullnameOverride`                                | String to fully override rabbitmq.fullname                                                              | `nil`                                                   |
+| `clusterDomain`                                   | Default Kubernetes cluster domain                                                                       | `cluster.local`                                         |
+
+### RabbitMQ parameters
+
+| Parameter                                         | Description                                                                                             | Default                                                 |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `image.registry`                                  | RabbitMQ image registry                                                                                 | `docker.io`                                             |
+| `image.repository`                                | RabbitMQ image name                                                                                     | `bitnami/rabbitmq`                                      |
+| `image.tag`                                       | RabbitMQ image tag                                                                                      | `{TAG_NAME}`                                            |
+| `image.pullPolicy`                                | RabbitMQ image pull policy                                                                              | `IfNotPresent`                                          |
+| `image.pullSecrets`                               | Specify docker-registry secret names as an array                                                        | `[]` (does not add image pull secrets to deployed pods) |
+| `image.debug`                                     | Set to true if you would like to see extra information on logs                                          | `false`                                                 |
+| `auth.username`                                   | RabbitMQ application username                                                                           | `user`                                                  |
+| `auth.password`                                   | RabbitMQ application password                                                                           | _random 10 character long alphanumeric string_          |
+| `auth.existingPasswordSecret`                     | Existing secret with RabbitMQ credentials                                                               | `nil`                                                   |
+| `auth.erlangCookie`                               | Erlang cookie                                                                                           | _random 32 character long alphanumeric string_          |
+| `auth.existingErlangSecret`                       | Existing secret with RabbitMQ Erlang cookie                                                             | `nil`                                                   |
+| `auth.tls.enabled`                                | Enable TLS support on RabbitMQ                                                                          | `false`                                                 |
+| `auth.tls.failIfNoPeerCert`                       | When set to true, TLS connection will be rejected if client fails to provide a certificate              | `true`                                                  |
+| `auth.tls.sslOptionsVerify`                       | Should [peer verification](https://www.rabbitmq.com/ssl.html#peer-verification) be enabled?             | `verify_peer`                                           |
+| `auth.tls.caCertificate`                          | Certificate Authority (CA) bundle content                                                               | `nil`                                                   |
+| `auth.tls.serverCertificate`                      | Server certificate content                                                                              | `nil`                                                   |
+| `auth.tls.serverKey`                              | Server private key content                                                                              | `nil`                                                   |
+| `auth.tls.existingSecret`                         | Existing secret with certificate content to RabbitMQ credentials                                        | `nil`                                                   |
+| `logs`                                            | Path of the RabbitMQ server's Erlang log file                                                           | `-`                                                     |
+| `ulimitNofiles`                                   | Max File Descriptor limit                                                                               | `65536`                                                 |
+| `maxAvailableSchedulers`                          | RabbitMQ maximum available scheduler threads                                                            | `2`                                                     |
+| `onlineSchedulers`                                | RabbitMQ online scheduler threads                                                                       | `1`                                                     |
+| `memoryHighWatermark.enabled`                     | Enable configuring Memory high watermark on RabbitMQ                                                    | `false`                                                 |
+| `memoryHighWatermark.type`                        | Memory high watermark type. Either `absolute` or `relative`                                             | `relative`                                              |
+| `memoryHighWatermark.value`                       | Memory high watermark value                                                                             | `0.4`                                                   |
+| `plugins`                                         | List of plugins to enable                                                                               | `rabbitmq_management rabbitmq_peer_discovery_k8s`       |
+| `extraPlugins`                                    | Extra plugings to enable                                                                                | `nil`                                                   |
+| `clustering.addressType`                          | Switch clustering mode. Either `ip` or `hostname`                                                       | `hostname`                                              |
+| `clustering.rebalance`                            | Rebalance master for queues in cluster when new replica is created                                      | `false`                                                 |
+| `clustering.forceBoot`                            | Rebalance master for queues in cluster when new replica is created                                      | `false`                                                 |
+| `loadDefinition.enabled`                          | Enable loading a RabbitMQ definitions file to configure RabbitMQ                                        | `false`                                                 |
+| `loadDefinition.existingSecret`                   | Existing secret with the load definitions file                                                          | `nil`                                                   |
+| `command`                                         | Override default container command (useful when using custom images)                                    | `nil`                                                   |
+| `args`                                            | Override default container args (useful when using custom images)                                       | `nil`                                                   |
+| `extraEnvVars`                                    | Extra environment variables to add to RabbitMQ pods                                                     | `[]`                                                    |
+| `extraEnvVarsCM`                                  | Name of existing ConfigMap containing extra env vars                                                    | `nil`                                                   |
+| `extraEnvVarsSecret`                              | Name of existing Secret containing extra env vars (in case of sensitive data)                           | `nil`                                                   |
+| `extraContainerPorts`                             | Extra ports to be included in container spec, primarily informational                                   | `[]`                                                    |
+| `configuration`                                   | RabbitMQ configuration                                                                                  | Check `values.yaml` file                                |
+| `extraConfiguration`                              | Extra configuration to be appended to RabbitMQ configuration                                            | Check `values.yaml` file                                |
+| `advancedConfiguration`                           | Extra configuration (in classic format)                                                                 | Check `values.yaml` file                                |
+| `ldap.enabled`                                    | Enable LDAP support                                                                                     | `false`                                                 |
+| `ldap.server`                                     | LDAP server                                                                                             | `""`                                                    |
+| `ldap.port`                                       | LDAP port                                                                                               | `389`                                                   |
+| `ldap.user_dn_pattern`                            | DN used to bind to LDAP                                                                                 | `cn=${username},dc=example,dc=org`                      |
+| `ldap.tls.enabled`                                | Enable TLS for LDAP connections (check advancedConfiguration parameter in values.yml)                   | `false`                                                 |
+
+### Statefulset parameters
+
+| Parameter                                         | Description                                                                                             | Default                                                 |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `replicaCount`                                    | Number of RabbitMQ nodes                                                                                | `1`                                                     |
+| `schedulerName`                                   | Name of the k8s service (other than default)                                                            | `nil`                                                   |
+| `podManagementPolicy`                             | Pod management policy                                                                                   | `OrderedReady`                                          |
+| `updateStrategyType`                              | Update strategy type for the statefulset                                                                | `RollingUpdate`                                         |
+| `rollingUpdatePartition`                          | Partition update strategy                                                                               | `nil`                                                   |
+| `podLabels`                                       | RabbitMQ pod labels                                                                                     | `{}` (evaluated as a template)                          |
+| `podAnnotations`                                  | RabbitMQ Pod annotations                                                                                | `{}` (evaluated as a template)                          |
+| `affinity`                                        | Affinity for pod assignment                                                                             | `{}` (evaluated as a template)                          |
+| `priorityClassName`                               | Name of the existing priority class to be used by kafka pods                                            |  `""`                                                   |
+| `nodeSelector`                                    | Node labels for pod assignment                                                                          | `{}` (evaluated as a template)                          |
+| `tolerations`                                     | Tolerations for pod assignment                                                                          | `[]` (evaluated as a template)                          |
+| `podSecurityContext`                              | RabbitMQ pods' Security Context                                                                         | `{}`                                                    |
+| `containerSecurityContext`                        | RabbitMQ containers' Security Context                                                                   | `{}`                                                    |
+| `resources.limits`                                | The resources limits for RabbitMQ containers                                                            | `{}`                                                    |
+| `resources.requests`                              | The requested resources for RabbitMQ containers                                                         | `{}`                                                    |
+| `livenessProbe`                                   | Liveness probe configuration for RabbitMQ                                                               | Check `values.yaml` file                                |
+| `readinessProbe`                                  | Readiness probe configuration for RabbitMQ                                                              | Check `values.yaml` file                                |
+| `customLivenessProbe`                             | Override default liveness probe                                                                         | `nil`                                                   |
+| `customReadinessProbe`                            | Override default readiness probe                                                                        | `nil`                                                   |
+| `pdb.create`                                      | Enable/disable a Pod Disruption Budget creation                                                         | `false`                                                 |
+| `pdb.minAvailable`                                | Minimum number/percentage of pods that should remain scheduled                                          | `nil`                                                   |
+| `pdb.maxUnavailable`                              | Maximum number/percentage of pods that may be made unavailable                                          | `1`                                                     |
+| `initContainers`                                  | Add additional init containers to the RabbitMQ pod                                                      | `{}` (evaluated as a template)                          |
+| `sidecars`                                        | Add additional sidecar containers to the RabbitMQ pod                                                   | `{}` (evaluated as a template)                          |
+| `extraVolumeMounts`                               | Optionally specify extra list of additional volumeMounts .                                              | `{}`                                                    |
+| `extraVolumes`                                    | Optionally specify extra list of additional volumes .                                                   | `{}`                                                    |
+| `extraSecrets`                                    | Optionally specify extra secrets to be created by the chart.                                            | `{}`                                                    |
+
+### Exposure parameters
+
+| Parameter                                         | Description                                                                                             | Default                                                 |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `service.type`                                    | Kubernetes Service type                                                                                 | `ClusterIP`                                             |
+| `service.port`                                    | Amqp port                                                                                               | `5672`                                                  |
+| `service.tlsPort`                                 | Amqp TLS port                                                                                           | `5671`                                                  |
+| `service.nodePort`                                | Node port override, if serviceType NodePort or LoadBalancer                                             | `nil`                                                   |
+| `service.tlsNodePort`                             | Node port override, if serviceType NodePort or LoadBalancer                                             | `nil`                                                   |
+| `service.distPort`                                | Erlang distribution server port                                                                         | `25672`                                                 |
+| `service.managerPort`                             | RabbitMQ Manager port                                                                                   | `15672`                                                 |
+| `service.metricsPort`                             | RabbitMQ Prometheues metrics port                                                                       | `9419`                                                  |
+| `service.extraPorts`                              | Extra ports to expose in the service                                                                    | `[]`                                                    |
+| `service.loadBalancerSourceRanges`                | Address(es) that are allowed when service is LoadBalancer                                               | `[]`                                                    |
+| `service.loadBalancerIP`                          | LoadBalancerIP for the service                                                                          | `nil`                                                   |
+| `service.externalIP`                              | ExternalIP for the service                                                                              | `nil`                                                   |
+| `service.labels`                                  | Service labels                                                                                          | `{}` (evaluated as a template)                          |
+| `service.annotations`                             | Service annotations                                                                                     | `{}` (evaluated as a template)                          |
+| `ingress.enabled`                                 | Enable ingress resource for Management console                                                          | `false`                                                 |
+| `ingress.certManager`                             | Add annotations for cert-manager                                                                        | `false`                                                 |
+| `ingress.hostname`                                | Default host for the ingress resource                                                                   | `rabbitmq.local`                                        |
+| `ingress.annotations`                             | Ingress annotations                                                                                     | `[]`                                                    |
+| `ingress.tls`                                     | Enable TLS configuration for the hostname defined at `ingress.hostname` parameter                       | `false`                                                 |
+| `ingress.extraHosts[0].name`                      | Additional hostnames to be covered                                                                      | `nil`                                                   |
+| `ingress.extraHosts[0].path`                      | Additional hostnames to be covered                                                                      | `nil`                                                   |
+| `ingress.extraTls[0].hosts[0]`                    | TLS configuration for additional hostnames to be covered                                                | `nil`                                                   |
+| `ingress.extraTls[0].secretName`                  | TLS configuration for additional hostnames to be covered                                                | `nil`                                                   |
+| `ingress.secrets[0].name`                         | TLS Secret Name                                                                                         | `nil`                                                   |
+| `ingress.secrets[0].certificate`                  | TLS Secret Certificate                                                                                  | `nil`                                                   |
+| `ingress.secrets[0].key`                          | TLS Secret Key                                                                                          | `nil`                                                   |
+| `networkPolicy.enabled`                           | Enable NetworkPolicy                                                                                    | `false`                                                 |
+| `networkPolicy.allowExternal`                     | Don't require client label for connections                                                              | `true`                                                  |
+| `networkPolicy.additionalRules`                   | Additional NetworkPolicy rules                                                                          | `nil`                                                   |
+
+### Persistence parameters
+
+| Parameter                                         | Description                                                                                             | Default                                                 |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `persistence.enabled`                             | Enable RabbitMQ data persistence using PVC                                                              | `true`                                                  |
+| `persistence.existingClaim`                       | Provide an existing `PersistentVolumeClaim`, the value is evaluated as a template                       | `nil`                                                   |
+| `persistence.storageClass`                        | PVC Storage Class for RabbitMQ data volume                                                              | `nil`                                                   |
+| `persistence.accessMode`                          | PVC Access Mode for RabbitMQ data volume                                                                | `ReadWriteOnce`                                         |
+| `persistence.size`                                | PVC Storage Request for RabbitMQ data volume                                                            | `8Gi`                                                   |
+| `persistence.selector`                            | Selector to match an existing Persistent Volume                                                         | `{}`(evaluated as a template)                           |
+
+### RBAC parameters
+
+| Parameter                                         | Description                                                                                             | Default                                                 |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `serviceAccount.create`                           | Enable creation of ServiceAccount for RabbitMQ pods                                                     | `true`                                                  |
+| `serviceAccount.name`                             | Name of the created serviceAccount                                                                      | Generated using the `rabbitmq.fullname` template        |
+| `rbac.create`                                     | Weather to create & use RBAC resources or not                                                           | `false`                                                 |
+
+### Volume Permissions parameters
+
+| Parameter                                         | Description                                                                                                             | Default                                                 |
+|---------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------|
+| `volumePermissions.enabled`                       | Enable init container that changes the owner and group of the persistent volume(s) mountpoint to `runAsUser:fsGroup`    | `false`                                                 |
+| `volumePermissions.image.registry`                | Init container volume-permissions image registry                                                                        | `docker.io`                                             |
+| `volumePermissions.image.repository`              | Init container volume-permissions image name                                                                            | `bitnami/minideb`                                       |
+| `volumePermissions.image.tag`                     | Init container volume-permissions image tag                                                                             | `buster`                                                |
+| `volumePermissions.image.pullPolicy`              | Init container volume-permissions image pull policy                                                                     | `Always`                                                |
+| `volumePermissions.image.pullSecrets`             | Specify docker-registry secret names as an array                                                                        | `[]` (does not add image pull secrets to deployed pods) |
+| `volumePermissions.resources.limits`              | Init container volume-permissions resource  limits                                                                      | `{}`                                                    |
+| `volumePermissions.resources.requests`            | Init container volume-permissions resource  requests                                                                    | `{}`                                                    |
+
+### Metrics parameters
+
+| Parameter                                         | Description                                                                                             | Default                                                      |
+|---------------------------------------------------|---------------------------------------------------------------------------------------------------------|--------------------------------------------------------------|
+| `metrics.enabled`                                 | Enable exposing RabbitMQ metrics to be gathered by Prometheus                                           | `false`                                                      |
+| `metrics.plugins`                                 | Plugins to enable Prometheus metrics in RabbitMQ                                                        | `rabbitmq_prometheus`                                        |
+| `metrics.podAnnotations`                          | Annotations for enabling prometheus to access the metrics endpoint                                      | `{prometheus.io/scrape: "true", prometheus.io/port: "9419"}` |
+| `metrics.serviceMonitor.enabled`                  | Create ServiceMonitor Resource for scraping metrics using PrometheusOperator                            | `false`                                                      |
+| `metrics.serviceMonitor.namespace`                | Namespace which Prometheus is running in                                                                | `monitoring`                                                 |
+| `metrics.serviceMonitor.interval`                 | Interval at which metrics should be scraped                                                             | `30s`                                                        |
+| `metrics.serviceMonitor.scrapeTimeout`            | Specify the timeout after which the scrape is ended                                                     | `nil`                                                        |
+| `metrics.serviceMonitor.relabellings`             | Specify Metric Relabellings to add to the scrape endpoint                                               | `nil`                                                        |
+| `metrics.serviceMonitor.honorLabels`              | honorLabels chooses the metric's labels on collisions with target labels.                               | `false`                                                      |
+| `metrics.serviceMonitor.additionalLabels`         | Used to pass Labels that are required by the Installed Prometheus Operator                              | `{}`                                                         |
+| `metrics.serviceMonitor.release`                  | Used to pass Labels release that sometimes should be custom for Prometheus Operator                     | `nil`                                                        |
+| `metrics.prometheusRule.enabled`                  | Set this to true to create prometheusRules for Prometheus operator                                      | `false`                                                      |
+| `metrics.prometheusRule.additionalLabels`         | Additional labels that can be used so prometheusRules will be discovered by Prometheus                  | `{}`                                                         |
+| `metrics.prometheusRule.namespace`                | namespace where prometheusRules resource should be created                                              | `monitoring`                                                 |
+| `metrics.prometheusRule.rules`                    | Rules to be created, check values for an example.                                                       | `[]`                                                         |
 
 The above parameters map to the env variables defined in [bitnami/rabbitmq](http://github.com/bitnami/bitnami-docker-rabbitmq). For more information please refer to the [bitnami/rabbitmq](http://github.com/bitnami/bitnami-docker-rabbitmq) image documentation.
 
@@ -185,7 +236,7 @@ Specify each parameter using the `--set key=value[,key=value]` argument to `helm
 
 ```bash
 $ helm install my-release \
-  --set rabbitmq.username=admin,rabbitmq.password=secretpassword,rabbitmq.erlangCookie=secretcookie \
+  --set auth.username=admin,auth.password=secretpassword,auth.erlangCookie=secretcookie \
     bitnami/rabbitmq
 ```
 
@@ -211,60 +262,114 @@ Bitnami will release a new chart updating its containers if a new version of the
 
 This chart includes a `values-production.yaml` file where you can find some parameters oriented to production configuration in comparison to the regular `values.yaml`. You can use this file instead of the default one. In case you want to spread the deployment accross nodes you should configure the affinity parameters.
 
+- Increase the number of replicas:
+
+```diff
+- replicaCount: 1
++ replicaCount: 3
+```
+
 - Resource needs and limits to apply to the pod:
+
 ```diff
-- resources: {}
-+ resources:
-+   requests:
-+     memory: 256Mi
-+     cpu: 100m
+resources:
+- requests: {}
++ requests:
++   memory: 2Gi
++   cpu: 1000m
+- limits: {}
++ limits:
++   memory: 2Gi
++   cpu: 1000m
 ```
 
-- Replica count:
+- Enable Memory high watermark relative limit:
+
 ```diff
-- replicas: 1
-+ replicas: 3
+- memoryHighWatermark.enabled: false
++ memoryHighWatermark.enabled: true
 ```
 
-- Node labels for pod assignment:
+- Enable NetworkPolicy:
+
 ```diff
-- nodeSelector: {}
-+ nodeSelector:
-+   beta.kubernetes.io/arch: amd64
+- networkPolicy.enabled: false
++ networkPolicy.enabled: true
+- networkPolicy.allowExternal: true
++ networkPolicy.allowExternal: false
 ```
 
-- Enable ingress with TLS:
+- Enable Pod Disruption Budget:
+
 ```diff
-- ingress.tls: false
-+ ingress.tls: true
+- pdb.create: false
++ pdb.create: true
 ```
 
-- Enable prometheus metrics:
+- Enable Prometheus metrics:
+
 ```diff
 - metrics.enabled: false
 + metrics.enabled: true
 ```
 
-- Enable init container that changes volume permissions in the data directory:
-```diff
-- volumePermissions.enabled: false
-+ volumePermissions.enabled: true
-```
 To horizontally scale this chart once it has been deployed you have two options:
 
-- Use `kubectl scale` command
-
+- Use `kubectl scale` command.
 - Upgrading the chart with the following parameters:
 
 ```console
-replicas=3
-rabbitmq.password="$RABBITMQ_PASSWORD"
-rabbitmq.erlangCookie="$RABBITMQ_ERLANG_COOKIE"
+replicaCount=3
+auth.password="$RABBITMQ_PASSWORD"
+auth.erlangCookie="$RABBITMQ_ERLANG_COOKIE"
 ```
 
 > Note: please note it's mandatory to indicate the password and erlangCookie that was set the first time the chart was installed to upgrade the chart. Otherwise, new pods won't be able to join the cluster.
 
+### Enabling TLS support
+
+To enable TLS support you must generate the certificates using RabbitMQ [documentation](https://www.rabbitmq.com/ssl.html#automated-certificate-generation). Once you have your certificate, you have two alternatives:
+
+A) Create a secret including the certificates:
+
+```bash
+$ kubectl create secret generic rabbitmq-certificates --from-file=./ca.crt --from-file=./tls.crt --from-file=./tls.key
+```
+
+Then, install the RabbitMQ chart setting the parameters below:
+
+```console
+tls.enabled=true
+tls.existingSecret=rabbitmq-certificates
+```
+
+B) Include the certificates in your values.yaml:
+
+```yaml
+auth:
+  enabled: true
+  caCertificate: |-
+    -----BEGIN CERTIFICATE-----
+    MIIDRTCCAi2gAwIBAgIJAJPh+paO6a3cMA0GCSqGSIb3DQEBCwUAMDExIDAeBgNV
+    ...
+    -----END CERTIFICATE-----
+  serverCertificate: |-
+    -----BEGIN CERTIFICATE-----
+    MIIDqjCCApKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAxMSAwHgYDVQQDDBdUTFNH
+    ...
+    -----END CERTIFICATE-----
+  serverKey: |-
+    -----BEGIN RSA PRIVATE KEY-----
+    MIIEpAIBAAKCAQEA2iX3M4d3LHrRAoVUbeFZN3EaGzKhyBsz7GWwTgETiNj+AL7p
+    ....
+    -----END RSA PRIVATE KEY-----
+```
+
+- Setting [auth.tls.failIfNoPeerCert](https://www.rabbitmq.com/ssl.html#peer-verification-configuration) to `false` allows a TLS connection if client fails to provide a certificate.
+- When setting [auth.tls.sslOptionsVerify](https://www.rabbitmq.com/ssl.html#peer-verification-configuration) to `verify_peer`, the node must perform peer verification. When set to `verify_none`, peer verification will be disabled and certificate exchange won't be performed.
+
 ### Load Definitions
+
 It is possible to [load a RabbitMQ definitions file to configure RabbitMQ](http://www.rabbitmq.com/management.html#load-definitions). Because definitions may contain RabbitMQ credentials, [store the JSON as a Kubernetes secret](https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-files-from-a-pod). Within the secret's data, choose a key name that corresponds with the desired load definitions filename (i.e. `load_definition.json`) and use the JSON object as the value. For example:
 
 ```yaml
@@ -284,9 +389,7 @@ stringData:
     }
 ```
 
-Then, specify the `management.load_definitions` property as an `extraConfiguration` pointing to the load definition file path within the container (i.e. `/app/load_definition.json`) and set `loadDefinition.enable` to `true`.
-
-Any load definitions specified will be available within in the container at `/app`.
+Then, specify the `management.load_definitions` property as an `extraConfiguration` pointing to the load definition file path within the container (i.e. `/app/load_definition.json`) and set `loadDefinition.enable` to `true`. Any load definitions specified will be available within in the container at `/app`.
 
 > Loading a definition will take precedence over any configuration done through [Helm values](#parameters).
 
@@ -303,44 +406,13 @@ extraSecrets:
           }
         ]
       }
-rabbitmq:
-  loadDefinition:
-    enabled: true
-    secretName: load-definition
-  extraConfiguration: |
-    management.load_definitions = /app/load_definition.json
+loadDefinition:
+  enabled: true
+  existingSecret: load-definition
+extraConfiguration: |
+  management.load_definitions = /app/load_definition.json
 ```
 
-### Enabling TLS support
-
-To enable TLS support you must generate the certificates using RabbitMQ [documentation](https://www.rabbitmq.com/ssl.html#automated-certificate-generation).
-
-You must include in your values.yaml the caCertificate, serverCertificate and serverKey files.
-
-```yaml
-  caCertificate: |-
-    -----BEGIN CERTIFICATE-----
-    MIIDRTCCAi2gAwIBAgIJAJPh+paO6a3cMA0GCSqGSIb3DQEBCwUAMDExIDAeBgNV
-    ...
-    -----END CERTIFICATE-----
-  serverCertificate: |-
-    -----BEGIN CERTIFICATE-----
-    MIIDqjCCApKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAxMSAwHgYDVQQDDBdUTFNH
-    ...
-    -----END CERTIFICATE-----
-  serverKey: |-
-    -----BEGIN RSA PRIVATE KEY-----
-    MIIEpAIBAAKCAQEA2iX3M4d3LHrRAoVUbeFZN3EaGzKhyBsz7GWwTgETiNj+AL7p
-    ....
-    -----END RSA PRIVATE KEY-----
-```
-
-This will be generate a secret with the certs, but is possible specify an existing secret using `existingSecret: name-of-existing-secret-to-rabbitmq`. The secret is of type `kubernetes.io/tls`.
-
-Disabling [failIfNoPeerCert](https://www.rabbitmq.com/ssl.html#peer-verification-configuration) allows a TLS connection if client fails to provide a certificate
-
-[sslOptionsVerify](https://www.rabbitmq.com/ssl.html#peer-verification-configuration): When the sslOptionsVerify option is set to verify_peer, the client does send us a certificate, the node must perform peer verification. When set to verify_none, peer verification will be disabled and certificate exchange won't be performed.
-
 ### LDAP
 
 LDAP support can be enabled in the chart by specifying the `ldap.` parameters while creating a release. The following parameters should be configured to properly enable the LDAP support in the chart.
@@ -362,7 +434,40 @@ ldap.user_dn_pattern="cn=${username},dc=example,dc=org"
 
 If `ldap.tls.enabled` is set to true, consider using `ldap.port=636` and checking the settings in the advancedConfiguration.
 
-### Common issues
+### Memory high watermark
+
+It is possible to configure Memory high watermark on RabbitMQ to define [memory thresholds](https://www.rabbitmq.com/memory.html#threshold) using the `memoryHighWatermark.*` parameters. To do so, you have two alternatives:
+
+A) Set an absolute limit of RAM to be used on each RabbitMQ node:
+
+```console
+memoryHighWatermark.enabled="true"
+memoryHighWatermark.type="absolute"
+memoryHighWatermark.value="512MB"
+```
+
+B) Set a relative limit of RAM to be used on each RabbitMQ node. To enable this feature, you must define the memory limits at POD level too:
+
+```console
+memoryHighWatermark.enabled="true"
+memoryHighWatermark.type="relative"
+memoryHighWatermark.value="0.4"
+resources.limits.memory="2Gi"
+```
+
+### Adding extra environment variables
+
+In case you want to add extra environment variables (useful for advanced operations like custom init scripts), you can use the `extraEnvVars` property.
+
+```yaml
+extraEnvVars:
+  - name: LOG_LEVEL
+    value: error
+```
+
+Alternatively, you can use a ConfigMap or a Secret with the environment variables. To do so, use the `.extraEnvVarsCM` or the `extraEnvVarsSecret` properties.
+
+### Known issues
 
 - Changing the password through RabbitMQ's UI can make the pod fail due to the default liveness probes. If you do so, remember to make the chart aware of the new password. Updating the default secret with the password you set through RabbitMQ's UI will automatically recreate the pods. If you are using your own secret, you may have to manually recreate the pods.
 
@@ -393,6 +498,43 @@ You can enable this `initContainer` by setting `volumePermissions.enabled` to `t
 
 ## Upgrading
 
+It's necessary to set the `auth.password` and `auth.erlangCookie` parameters when upgrading for readiness/liveness probes to work properly. When you install this chart for the first time, some notes will be displayed providing the credentials you must use under the 'Credentials' section. Please note down the password and the cookie, and run the command below to upgrade your chart:
+
+```bash
+$ helm upgrade my-release bitnami/rabbitmq --set auth.password=[PASSWORD] --set auth.erlangCookie=[RABBITMQ_ERLANG_COOKIE]
+```
+
+| Note: you need to substitute the placeholders [PASSWORD] and [RABBITMQ_ERLANG_COOKIE] with the values obtained in the installation notes.
+
+### To 7.0.0
+
+- Several parameters were renamed or dissapeared in favor of new ones on this major version:
+  - `replicas` is renamed to `replicaCount`.
+  - `securityContext.*` is deprecated in favor of `podSecurityContext` and `containerSecurityContext`.
+  - Authentication parameters were reorganized under the `auth.*` parameter:
+    - `rabbitmq.username`, `rabbitmq.password`, and `rabbitmq.erlangCookie` are now `auth.username`, `auth.password`, and `auth.erlangCookie` respectively.
+    - `rabbitmq.tls.*` parameters are now under `auth.tls.*`.
+  - Parameters prefixed with `rabbitmq.` were renamed removing the prefix. E.g. `rabbitmq.configuration` -> renamed to `configuration`.
+  - `rabbitmq.rabbitmqClusterNodeName` is deprecated.
+  - `rabbitmq.setUlimitNofiles` is deprecated.
+  - `forceBoot.enabled` is renamed to `clustering.forceBoot`.
+  - `loadDefinition.secretName` is renamed to `loadDefinition.existingSecret`.
+  - `metics.port` is remamed to `service.metricsPort`.
+  - `service.extraContainerPorts` is renamed to `extraContainerPorts`.
+  - `service.nodeTlsPort` is renamed to `service.tlsNodePort`.
+  - `podDisruptionBudget` is deprecated in favor of `pdb.create`, `pdb.minAvailable`, and `pdb.maxUnavailable`.
+  - `rbacEnabled` -> deprecated in favor of `rbac.create`.
+  - New parameters: `serviceAccount.create`, and `serviceAccount.name`.
+  - New parameters: `memoryHighWatermark.enabled`, `memoryHighWatermark.type`, and `memoryHighWatermark.value`.
+- Chart labels and Ingress configuration were adapted to follow the Helm charts best practices.
+- Initialization logic now relies on the container.
+- Repleces several macros with the ones defined at 'common' library chart.
+
+Consequences:
+
+- Backwards compatibility is not guaranteed.
+- Compatibility with non Bitnami images is not guaranteed anymore.
+
 ### To 6.0.0
 
 This new version updates the RabbitMQ image to a [new version based on bash instead of node.js](https://github.com/bitnami/bitnami-docker-rabbitmq#3715-r18-3715-ol-7-r19). However, since this Chart overwrites the container's command, the changes to the container shouldn't affect the Chart. To upgrade, it may be needed to enable the `fastBoot` option, as it is already the case from upgrading from 5.X to 5.Y.
diff --git a/bitnami/rabbitmq/ci/default-values.yaml b/bitnami/rabbitmq/ci/default-values.yaml
deleted file mode 100644
index fc2ba605ad..0000000000
--- a/bitnami/rabbitmq/ci/default-values.yaml
+++ /dev/null
@@ -1 +0,0 @@
-# Leave this file empty to ensure that CI runs builds against the default configuration in values.yaml.
diff --git a/bitnami/rabbitmq/ci/networkpolicy-values.yaml b/bitnami/rabbitmq/ci/networkpolicy-values.yaml
deleted file mode 100644
index 716d683c5c..0000000000
--- a/bitnami/rabbitmq/ci/networkpolicy-values.yaml
+++ /dev/null
@@ -1,11 +0,0 @@
-networkPolicy:
-  enable: true
-  allowExternal: false
-  additionalRules:
-    - matchLabels:
-        - role: foo
-    - matchExpressions:
-        - key: role
-          operator: In
-          values:
-            - bar
diff --git a/bitnami/rabbitmq/requirements.lock b/bitnami/rabbitmq/requirements.lock
new file mode 100644
index 0000000000..696b68b5c6
--- /dev/null
+++ b/bitnami/rabbitmq/requirements.lock
@@ -0,0 +1,6 @@
+dependencies:
+- name: common
+  repository: https://charts.bitnami.com/bitnami
+  version: 0.3.1
+digest: sha256:4bd22b874a925f8e8e5bcb930b384cc741f85235317493107432b1b46347c4a5
+generated: "2020-06-09T10:42:32.527328+02:00"
diff --git a/bitnami/rabbitmq/requirements.yaml b/bitnami/rabbitmq/requirements.yaml
new file mode 100644
index 0000000000..0c2495d0f4
--- /dev/null
+++ b/bitnami/rabbitmq/requirements.yaml
@@ -0,0 +1,6 @@
+dependencies:
+  - name: common
+    version: 0.x.x
+    repository: https://charts.bitnami.com/bitnami
+    tags:
+      - bitnami-common
diff --git a/bitnami/rabbitmq/templates/NOTES.txt b/bitnami/rabbitmq/templates/NOTES.txt
index 6c0fdc45b3..46458ed6be 100644
--- a/bitnami/rabbitmq/templates/NOTES.txt
+++ b/bitnami/rabbitmq/templates/NOTES.txt
@@ -3,21 +3,68 @@
 
 Credentials:
 
-    echo "Username      : {{ .Values.rabbitmq.username }}"
-    echo "Password      : $(kubectl get secret --namespace {{ .Release.Namespace }} {{ template "rabbitmq.fullname" . }} -o jsonpath="{.data.rabbitmq-password}" | base64 --decode)"
-    echo "ErLang Cookie : $(kubectl get secret --namespace {{ .Release.Namespace }} {{ template "rabbitmq.fullname" . }} -o jsonpath="{.data.rabbitmq-erlang-cookie}" | base64 --decode)"
+    echo "Username      : {{ .Values.auth.username }}"
+    echo "Password      : $(kubectl get secret --namespace {{ .Release.Namespace }} {{ include "rabbitmq.fullname" . }} -o jsonpath="{.data.rabbitmq-password}" | base64 --decode)"
+    echo "ErLang Cookie : $(kubectl get secret --namespace {{ .Release.Namespace }} {{ include "rabbitmq.fullname" . }} -o jsonpath="{.data.rabbitmq-erlang-cookie}" | base64 --decode)"
 
-RabbitMQ can be accessed within the cluster on port {{ .Values.service.nodePort }} at {{ template "rabbitmq.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.rabbitmq.clustering.k8s_domain }}
+RabbitMQ can be accessed within the cluster on port {{ .Values.service.nodePort }} at {{ include "rabbitmq.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clustering.k8s_domain }}
 
 To access for outside the cluster, perform the following steps:
 
+{{- if .Values.ingress.enabled }}
+{{- if contains "NodePort" .Values.service.type }}
+
+To Access the RabbitMQ AMQP port:
+
+1. Obtain the NodePort IP and ports:
+
+    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
+    export NODE_PORT_AMQP=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ include "rabbitmq.fullname" . }})
+    echo "URL : amqp://$NODE_IP:$NODE_PORT_AMQP/"
+
+{{- else if contains "LoadBalancer" .Values.service.type }}
+
+To Access the RabbitMQ AMQP port:
+
+1. Obtain the LoadBalancer IP:
+
+NOTE: It may take a few minutes for the LoadBalancer IP to be available.
+      Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ include "rabbitmq.fullname" . }}'
+
+    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "rabbitmq.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
+    echo "URL : amqp://$SERVICE_IP:{{ .Values.service.port }}/"
+
+{{- else if contains "ClusterIP"  .Values.service.type }}
+
+To Access the RabbitMQ AMQP port:
+
+1. Create a port-forward to the AMQP port:
+
+    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "rabbitmq.fullname" . }} {{ .Values.service.port }}:{{ .Values.service.port }} &
+    echo "URL : amqp://127.0.0.1:{{ .Values.service.port }}/"
+
+{{- end }}
+
+2. Access RabbitMQ using using the obtained URL.
+
+To Access the RabbitMQ Management interface:
+
+1. Get the RabbitMQ Management URL and associate its hostname to your cluster external IP:
+
+   export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters
+   echo "RabbitMQ Management: http{{ if .Values.ingress.tls }}s{{ end }}://{{ .Values.ingress.hostname }}/"
+   echo "$CLUSTER_IP  {{ .Values.ingress.hostname }}" | sudo tee -a /etc/hosts
+
+2. Open a browser and access RabbitMQ Management using the obtained URL.
+
+{{- else }}
 {{- if contains "NodePort" .Values.service.type }}
 
 Obtain the NodePort IP and ports:
 
     export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
-    export NODE_PORT_AMQP=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ template "rabbitmq.fullname" . }})
-    export NODE_PORT_STATS=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[3].nodePort}" services {{ template "rabbitmq.fullname" . }})
+    export NODE_PORT_AMQP=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ include "rabbitmq.fullname" . }})
+    export NODE_PORT_STATS=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[3].nodePort}" services {{ include "rabbitmq.fullname" . }})
 
 To Access the RabbitMQ AMQP port:
 
@@ -32,9 +79,9 @@ To Access the RabbitMQ Management interface:
 Obtain the LoadBalancer IP:
 
 NOTE: It may take a few minutes for the LoadBalancer IP to be available.
-      Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "rabbitmq.fullname" . }}'
+      Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ include "rabbitmq.fullname" . }}'
 
-    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "rabbitmq.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
+    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "rabbitmq.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
 
 To Access the RabbitMQ AMQP port:
 
@@ -49,31 +96,26 @@ To Access the RabbitMQ Management interface:
 To Access the RabbitMQ AMQP port:
 
     echo "URL : amqp://127.0.0.1:{{ .Values.service.port }}/"
-    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ template "rabbitmq.fullname" . }} {{ .Values.service.port }}:{{ .Values.service.port }}
+    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "rabbitmq.fullname" . }} {{ .Values.service.port }}:{{ .Values.service.port }}
 
 To Access the RabbitMQ Management interface:
 
     echo "URL : http://127.0.0.1:{{ .Values.service.managerPort }}/"
-    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ template "rabbitmq.fullname" . }} {{ .Values.service.managerPort }}:{{ .Values.service.managerPort }}
+    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "rabbitmq.fullname" . }} {{ .Values.service.managerPort }}:{{ .Values.service.managerPort }}
 
 {{- end }}
+{{- end }}
 
 {{- if .Values.metrics.enabled }}
 
 To access the RabbitMQ Prometheus metrics, get the RabbitMQ Prometheus URL by running:
 
-    echo "Prometheus Metrics URL: http://127.0.0.1:{{ .Values.metrics.port }}/metrics"
-    kubectl port-forward --namespace {{ .Release.Namespace }} {{ template "rabbitmq.fullname" . }}-0 {{ .Values.metrics.port }}:{{ .Values.metrics.port }}
+    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "rabbitmq.fullname" . }} {{ .Values.service.metricsPort }}:{{ .Values.service.metricsPort }} &
+    echo "Prometheus Metrics URL: http://127.0.0.1:{{ .Values.service.metricsPort }}/metrics"
 
-Then, open the URL obtained in a browser.
+Then, open the obtained URL in a browser.
 
 {{- end }}
 
+{{- include "common.warnings.rollingTag" .Values.image }}
 {{- include "rabbitmq.validateValues" . -}}
-
-{{- if and (contains "bitnami/" .Values.image.repository) (not (.Values.image.tag | toString | regexFind "-r\\d+$|sha256:")) }}
-
-WARNING: Rolling tag detected ({{ .Values.image.repository }}:{{ .Values.image.tag }}), please note that it is strongly recommended to avoid using rolling tags in a production environment.
-+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/
-
-{{- end }}
diff --git a/bitnami/rabbitmq/templates/_helpers.tpl b/bitnami/rabbitmq/templates/_helpers.tpl
index 91daae3eba..108b2ab336 100644
--- a/bitnami/rabbitmq/templates/_helpers.tpl
+++ b/bitnami/rabbitmq/templates/_helpers.tpl
@@ -3,7 +3,7 @@
 Expand the name of the chart.
 */}}
 {{- define "rabbitmq.name" -}}
-{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
+{{- include "common.names.name" . -}}
 {{- end -}}
 
 {{/*
@@ -12,59 +12,50 @@ We truncate at 63 chars because some Kubernetes name fields are limited to this
 If release name contains chart name it will be used as a full name.
 */}}
 {{- define "rabbitmq.fullname" -}}
-{{- if .Values.fullnameOverride -}}
-{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
-{{- else -}}
-{{- $name := default .Chart.Name .Values.nameOverride -}}
-{{- if contains $name .Release.Name -}}
-{{- .Release.Name | trunc 63 | trimSuffix "-" -}}
-{{- else -}}
-{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
-{{- end -}}
-{{- end -}}
+{{- include "common.names.fullname" . -}}
 {{- end -}}
 
 {{/*
-Create chart name and version as used by the chart label.
+Return the proper RabbitMQ image name
 */}}
-{{- define "rabbitmq.chart" -}}
-{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
+{{- define "rabbitmq.image" -}}
+{{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
 {{- end -}}
 
 {{/*
-Return the proper RabbitMQ plugin list
+Return the proper image name (for the init container volume-permissions image)
 */}}
-{{- define "rabbitmq.plugins" -}}
-{{- $plugins := .Values.rabbitmq.plugins -}}
-{{- if .Values.rabbitmq.extraPlugins -}}
-{{- $plugins = printf "%s %s" $plugins .Values.rabbitmq.extraPlugins -}}
-{{- end -}}
-{{- if .Values.metrics.enabled -}}
-{{- $plugins = printf "%s %s" $plugins .Values.metrics.plugins -}}
-{{- end -}}
-{{- printf "[%s]." $plugins | replace " " ", " | indent 4 -}}
+{{- define "rabbitmq.volumePermissions.image" -}}
+{{ include "common.images.image" (dict "imageRoot" .Values.volumePermissions.image "global" .Values.global) }}
 {{- end -}}
 
 {{/*
-Return the proper RabbitMQ image name
+Return the proper Docker Image Registry Secret Names
 */}}
-{{- define "rabbitmq.image" -}}
-{{- $registryName := .Values.image.registry -}}
-{{- $repositoryName := .Values.image.repository -}}
-{{- $tag := .Values.image.tag | toString -}}
+{{- define "rabbitmq.imagePullSecrets" -}}
+{{ include "common.images.pullSecrets" (dict "images" (list .Values.image .Values.volumePermissions.image) "global" .Values.global) }}
+{{- end -}}
+
 {{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
+Return podAnnotations
 */}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
+{{- define "rabbitmq.podAnnotations" -}}
+{{- if .Values.podAnnotations }}
+{{ toYaml .Values.podAnnotations }}
+{{- end }}
+{{- if .Values.metrics.enabled }}
+{{ include "common.tplvalues.render" (dict "value" .Values.metrics.podAnnotations "context" $) }}
+{{- end }}
+{{- end -}}
+
+{{/*
+ Create the name of the service account to use
+ */}}
+{{- define "rabbitmq.serviceAccountName" -}}
+{{- if .Values.serviceAccount.create -}}
+    {{ default (include "rabbitmq.fullname" .) .Values.serviceAccount.name }}
 {{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+    {{ default "default" .Values.serviceAccount.name }}
 {{- end -}}
 {{- end -}}
 
@@ -72,8 +63,8 @@ Also, we can't use a single if because lazy evaluation is not an option
 Get the password secret.
 */}}
 {{- define "rabbitmq.secretPasswordName" -}}
-    {{- if .Values.rabbitmq.existingPasswordSecret -}}
-        {{- printf "%s" .Values.rabbitmq.existingPasswordSecret -}}
+    {{- if .Values.auth.existingPasswordSecret -}}
+        {{- printf "%s" .Values.auth.existingPasswordSecret -}}
     {{- else -}}
         {{- printf "%s" (include "rabbitmq.fullname" .) -}}
     {{- end -}}
@@ -83,104 +74,72 @@ Get the password secret.
 Get the erlang secret.
 */}}
 {{- define "rabbitmq.secretErlangName" -}}
-    {{- if .Values.rabbitmq.existingErlangSecret -}}
-        {{- printf "%s" .Values.rabbitmq.existingErlangSecret -}}
+    {{- if .Values.auth.existingErlangSecret -}}
+        {{- printf "%s" .Values.auth.existingErlangSecret -}}
     {{- else -}}
         {{- printf "%s" (include "rabbitmq.fullname" .) -}}
     {{- end -}}
 {{- end -}}
 
 {{/*
-Return the proper Docker Image Registry Secret Names
-*/}}
-{{- define "rabbitmq.imagePullSecrets" -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
-Also, we can not use a single if because lazy evaluation is not an option
+Get the TLS secret.
 */}}
-{{- if .Values.global }}
-{{- if .Values.global.imagePullSecrets }}
-imagePullSecrets:
-{{- range .Values.global.imagePullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- else if or .Values.image.pullSecrets .Values.volumePermissions.image.pullSecrets }}
-imagePullSecrets:
-{{- range .Values.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- range .Values.volumePermissions.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- end -}}
-{{- else if or .Values.image.pullSecrets .Values.volumePermissions.image.pullSecrets }}
-imagePullSecrets:
-{{- range .Values.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- range .Values.volumePermissions.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- end -}}
+{{- define "rabbitmq.secretTLSName" -}}
+    {{- if .Values.auth.tls.existingSecret -}}
+        {{- printf "%s" .Values.auth.tls.existingSecret -}}
+    {{- else -}}
+        {{- printf "%s-certs" (include "rabbitmq.fullname" .) -}}
+    {{- end -}}
 {{- end -}}
 
 {{/*
-Return the proper image name (for the init container volume-permissions image)
-*/}}
-{{- define "rabbitmq.volumePermissions.image" -}}
-{{- $registryName := .Values.volumePermissions.image.registry -}}
-{{- $repositoryName := .Values.volumePermissions.image.repository -}}
-{{- $tag := .Values.volumePermissions.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
+Return the proper RabbitMQ plugin list
 */}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
+{{- define "rabbitmq.plugins" -}}
+{{- $plugins := .Values.plugins -}}
+{{- if .Values.extraPlugins -}}
+{{- $plugins = printf "%s %s" $plugins .Values.extraPlugins -}}
+{{- end -}}
+{{- if .Values.metrics.enabled -}}
+{{- $plugins = printf "%s %s" $plugins .Values.metrics.plugins -}}
 {{- end -}}
+{{- printf "%s" $plugins | replace " " ", " -}}
 {{- end -}}
 
 {{/*
-Return  the proper Storage Class
-*/}}
-{{- define "rabbitmq.storageClass" -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
-*/}}
-{{- if .Values.global -}}
-    {{- if .Values.global.storageClass -}}
-        {{- if (eq "-" .Values.global.storageClass) -}}
-            {{- printf "storageClassName: \"\"" -}}
-        {{- else }}
-            {{- printf "storageClassName: %s" .Values.global.storageClass -}}
-        {{- end -}}
-    {{- else -}}
-        {{- if .Values.persistence.storageClass -}}
-              {{- if (eq "-" .Values.persistence.storageClass) -}}
-                  {{- printf "storageClassName: \"\"" -}}
-              {{- else }}
-                  {{- printf "storageClassName: %s" .Values.persistence.storageClass -}}
-              {{- end -}}
-        {{- end -}}
-    {{- end -}}
-{{- else -}}
-    {{- if .Values.persistence.storageClass -}}
-        {{- if (eq "-" .Values.persistence.storageClass) -}}
-            {{- printf "storageClassName: \"\"" -}}
-        {{- else }}
-            {{- printf "storageClassName: %s" .Values.persistence.storageClass -}}
-        {{- end -}}
-    {{- end -}}
-{{- end -}}
+Return the number of bytes given a value
+following a base 2 o base 10 number system.
+Usage:
+{{ include "rabbitmq.toBytes" .Values.path.to.the.Value }}
+*/}}
+{{- define "rabbitmq.toBytes" -}}
+{{- $value := int (regexReplaceAll "([0-9]+).*" . "${1}") }}
+{{- $unit := regexReplaceAll "[0-9]+(.*)" . "${1}" }}
+{{- if eq $unit "Ki" }}
+    {{- mul $value 1024 }}
+{{- else if eq $unit "Mi" }}
+    {{- mul $value 1024 1024 }}
+{{- else if eq $unit "Gi" }}
+    {{- mul $value 1024 1024 1024 }}
+{{- else if eq $unit "Ti" }}
+    {{- mul $value 1024 1024 1024 1024 }}
+{{- else if eq $unit "Pi" }}
+    {{- mul $value 1024 1024 1024 1024 1024 }}
+{{- else if eq $unit "Ei" }}
+    {{- mul $value 1024 1024 1024 1024 1024 1024 }}
+{{- else if eq $unit "K" }}
+    {{- mul $value 1000 }}
+{{- else if eq $unit "M" }}
+    {{- mul $value 1000 1000 }}
+{{- else if eq $unit "G" }}
+    {{- mul $value 1000 1000 1000 }}
+{{- else if eq $unit "T" }}
+    {{- mul $value 1000 1000 1000 1000 }}
+{{- else if eq $unit "P" }}
+    {{- mul $value 1000 1000 1000 1000 1000 }}
+{{- else if eq $unit "E" }}
+    {{- mul $value 1000 1000 1000 1000 1000 1000 }}
+{{- end }}
 {{- end -}}
 
 {{/*
@@ -189,6 +148,7 @@ Compile all warnings into a single message, and call fail.
 {{- define "rabbitmq.validateValues" -}}
 {{- $messages := list -}}
 {{- $messages := append $messages (include "rabbitmq.validateValues.ldap" .) -}}
+{{- $messages := append $messages (include "rabbitmq.validateValues.memoryHighWatermark" .) -}}
 {{- $messages := without $messages "" -}}
 {{- $message := join "\n" $messages -}}
 
@@ -217,37 +177,29 @@ rabbitmq: LDAP
 {{- end -}}
 
 {{/*
-Renders a value that contains template.
-Usage:
-{{ include "rabbitmq.tplValue" (dict "value" .Values.path.to.the.Value "context" $) }}
+Validate values of rabbitmq - Memory high watermark
 */}}
-{{- define "rabbitmq.tplValue" -}}
-    {{- if typeIs "string" .value }}
-        {{- tpl .value .context }}
-    {{- else }}
-        {{- tpl (.value | toYaml) .context }}
-    {{- end }}
-{{- end -}}
+{{- define "rabbitmq.validateValues.memoryHighWatermark" -}}
+{{- if and (not (eq .Values.memoryHighWatermark.type "absolute")) (not (eq .Values.memoryHighWatermark.type "relative")) }}
+rabbitmq: memoryHighWatermark.type
+    Invalid Memory high watermark type. Valid values are "absolute" and
+    "relative". Please set a valid mode (--set memoryHighWatermark.type="xxxx")
+{{- else if and .Values.memoryHighWatermark.enabled (not .Values.resources.limits.memory) (eq .Values.memoryHighWatermark.type "relative") }}
+rabbitmq: memoryHighWatermark
+    You enabled configuring memory high watermark using a relative limit. However,
+    no memory limits were defined at POD level. Define your POD limits as shown below:
 
-{{/*
-Return podAnnotations
-*/}}
-{{- define "rabbitmq.podAnnotations" -}}
-{{- if .Values.podAnnotations }}
-{{ toYaml .Values.podAnnotations }}
-{{- end }}
-{{- if .Values.metrics.enabled }}
-{{ include "rabbitmq.tplValue" ( dict "value" .Values.metrics.podAnnotations "context" $) }}
-{{- end }}
-{{- end -}}
+    $ helm install {{ .Release.Name }} bitnami/rabbitmq \
+      --set memoryHighWatermark.enabled=true \
+      --set memoryHighWatermark.type="relative" \
+      --set memoryHighWatermark.value="0.4" \
+      --set resources.limits.memory="2Gi"
 
-{{/*
- Create the name of the service account to use
- */}}
-{{- define "rabbitmq.serviceAccountName" -}}
-{{- if .Values.serviceAccount.create -}}
-    {{ default (include "rabbitmq.fullname" .) .Values.serviceAccount.name }}
-{{- else -}}
-    {{ default "default" .Values.serviceAccount.name }}
+    Altenatively, user an absolute value for the memory memory high watermark :
+
+    $ helm install {{ .Release.Name }} bitnami/rabbitmq \
+      --set memoryHighWatermark.enabled=true \
+      --set memoryHighWatermark.type="absolute" \
+      --set memoryHighWatermark.value="512MB"
+{{- end -}}
 {{- end -}}
-{{- end -}}
\ No newline at end of file
diff --git a/bitnami/rabbitmq/templates/certs.yaml b/bitnami/rabbitmq/templates/certs.yaml
index 67d4b93082..c6f97969af 100644
--- a/bitnami/rabbitmq/templates/certs.yaml
+++ b/bitnami/rabbitmq/templates/certs.yaml
@@ -1,20 +1,16 @@
-{{- if and (not .Values.rabbitmq.tls.existingSecret) ( .Values.rabbitmq.tls.enabled) }}
+{{- if and .Values.auth.tls.enabled (not .Values.auth.tls.existingSecret) }}
 apiVersion: v1
 kind: Secret
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}-certs
+  name: {{ include "rabbitmq.fullname" . }}-certs
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 type: kubernetes.io/tls
 data:
   ca.crt:
-    {{ required "A valid .Values.rabbitmq.tls.caCertificate entry required!" .Values.rabbitmq.tls.caCertificate | b64enc | quote }}
+    {{ required "A valid .Values.auth.tls.caCertificate entry required!" .Values.auth.tls.caCertificate | b64enc | quote }}
   tls.crt:
-    {{ required "A valid .Values.rabbitmq.tls.serverCertificate entry required!" .Values.rabbitmq.tls.serverCertificate| b64enc | quote }}
+    {{ required "A valid .Values.auth.tls.serverCertificate entry required!" .Values.auth.tls.serverCertificate| b64enc | quote }}
   tls.key:
-    {{ required "A valid .Values.rabbitmq.tls.serverKey entry required!" .Values.rabbitmq.tls.serverKey | b64enc | quote }}
+    {{ required "A valid .Values.auth.tls.serverKey entry required!" .Values.auth.tls.serverKey | b64enc | quote }}
 {{- end }}
diff --git a/bitnami/rabbitmq/templates/configuration.yaml b/bitnami/rabbitmq/templates/configuration.yaml
index be9982b0b9..96518e50bd 100644
--- a/bitnami/rabbitmq/templates/configuration.yaml
+++ b/bitnami/rabbitmq/templates/configuration.yaml
@@ -3,43 +3,11 @@ kind: ConfigMap
 metadata:
   name: {{ template "rabbitmq.fullname" . }}-config
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 data:
-  enabled_plugins: |-
-{{ template "rabbitmq.plugins" . }}
   rabbitmq.conf: |-
-    ##username and password
-    default_user={{.Values.rabbitmq.username}}
-    default_pass=CHANGEME
-{{ .Values.rabbitmq.configuration | indent 4 }}
-{{ .Values.rabbitmq.extraConfiguration | indent 4 }}
-{{- if .Values.rabbitmq.tls.enabled }}
-    ssl_options.verify={{ .Values.rabbitmq.tls.sslOptionsVerify }}
-    listeners.ssl.default={{ .Values.service.tlsPort }}
-    ssl_options.fail_if_no_peer_cert={{ .Values.rabbitmq.tls.failIfNoPeerCert }}
-    ssl_options.cacertfile = /opt/bitnami/rabbitmq/certs/ca_certificate.pem
-    ssl_options.certfile = /opt/bitnami/rabbitmq/certs/server_certificate.pem
-    ssl_options.keyfile = /opt/bitnami/rabbitmq/certs/server_key.pem
-{{- end }}
-{{- if .Values.ldap.enabled }}
-    auth_backends.1 = rabbit_auth_backend_ldap
-    auth_backends.2 = internal
-    auth_ldap.servers.1  = {{ .Values.ldap.server }}
-    auth_ldap.port = {{ .Values.ldap.port }}
-    auth_ldap.user_dn_pattern = {{ .Values.ldap.user_dn_pattern  }}
-{{- if .Values.ldap.tls.enabled }}
-    auth_ldap.use_ssl = true
-{{- end }}
-{{- end }}
-{{- if .Values.metrics.enabled }}
-    prometheus.tcp.port = {{ .Values.metrics.port }}
-{{- end }}
-
-{{ if .Values.rabbitmq.advancedConfiguration}}
+    {{- include "common.tplvalues.render" (dict "value" .Values.configuration "context" $) | nindent 4 }}
+  {{- if .Values.advancedConfiguration}}
   advanced.config: |-
-{{ .Values.rabbitmq.advancedConfiguration | indent 4 }}
-{{- end }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.advancedConfiguration "context" $) | nindent 4 }}
+  {{- end }}
diff --git a/bitnami/rabbitmq/templates/healthchecks.yaml b/bitnami/rabbitmq/templates/healthchecks.yaml
deleted file mode 100644
index 8c5bff4e1d..0000000000
--- a/bitnami/rabbitmq/templates/healthchecks.yaml
+++ /dev/null
@@ -1,33 +0,0 @@
-apiVersion: v1
-kind: ConfigMap
-metadata:
-  name: {{ template "rabbitmq.fullname" . }}-healthchecks
-  namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
-data:
-  rabbitmq-health-check: |-
-    #!/bin/sh
-    START_FLAG=/opt/bitnami/rabbitmq/var/lib/rabbitmq/.start
-    if [ -f ${START_FLAG} ]; then
-        rabbitmqctl node_health_check
-        RESULT=$?
-        if [ $RESULT -ne 0 ]; then
-          rabbitmqctl status
-          exit $?
-        fi
-        rm -f ${START_FLAG}
-        exit ${RESULT}
-    fi
-    rabbitmq-api-check $1 $2
-  rabbitmq-api-check: |-
-    #!/bin/sh
-    set -e
-    URL=$1
-    EXPECTED=$2
-    ACTUAL=$(curl --silent --show-error --fail "${URL}")
-    echo "${ACTUAL}"
-    test "${EXPECTED}" = "${ACTUAL}"
\ No newline at end of file
diff --git a/bitnami/rabbitmq/templates/ingress.yaml b/bitnami/rabbitmq/templates/ingress.yaml
index 6004e13501..438a89a69b 100644
--- a/bitnami/rabbitmq/templates/ingress.yaml
+++ b/bitnami/rabbitmq/templates/ingress.yaml
@@ -1,42 +1,46 @@
 {{- if .Values.ingress.enabled }}
-apiVersion: extensions/v1beta1
+apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
 kind: Ingress
 metadata:
-  name: "{{ template "rabbitmq.fullname" . }}"
+  name: {{ include "rabbitmq.fullname" . }}
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: "{{ template "rabbitmq.name" . }}"
-    chart: "{{ template "rabbitmq.chart" .  }}"
-    release: {{ .Release.Name | quote }}
-    heritage: {{ .Release.Service | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
   annotations:
-    {{- if .Values.ingress.tls }}
-    ingress.kubernetes.io/secure-backends: "true"
+    {{- if .Values.ingress.certManager }}
+    kubernetes.io/tls-acme: "true"
     {{- end }}
-    {{- range $key, $value := .Values.ingress.annotations }}
-    {{ $key }}: {{ $value | quote }}
+    {{- if .Values.ingress.annotations }}
+    {{ include "common.tplvalues.render" (dict "value" .Values.ingress.annotations "context" $) | nindent 4 }}
     {{- end }}
 spec:
   rules:
-  {{- if .Values.ingress.hostName }}
-  - host: {{ .Values.ingress.hostName }}
-    http:
-  {{- else }}
-  - http:
-  {{- end }}
-      paths:
-        - path: {{ .Values.ingress.path }}
-          backend:
-            serviceName: {{ template "rabbitmq.fullname" . }}
-            servicePort: {{ .Values.service.managerPort }}
-{{- if .Values.ingress.tls }}
+    {{- if .Values.ingress.hostname }}
+    - host: {{ .Values.ingress.hostname }}
+      http:
+        paths:
+          - path: /
+            backend:
+              serviceName: {{ template "rabbitmq.fullname" . }}
+              servicePort: http-stats
+    {{- end }}
+    {{- range .Values.ingress.extraHosts }}
+    - host: {{ .name }}
+      http:
+        paths:
+          - path: {{ default "/" .path }}
+            backend:
+              serviceName: {{ template "rabbitmq.fullname" $ }}
+              servicePort: http
+    {{- end }}
+  {{- if or .Values.ingress.tls .Values.ingress.extraTls }}
   tls:
-  - hosts:
-    {{- if  .Values.ingress.hostName }}
-    - {{ .Values.ingress.hostName }}
-    secretName: {{  .Values.ingress.tlsSecret }}
-    {{- else}}
-    - secretName: {{  .Values.ingress.tlsSecret }}
+    {{- if .Values.ingress.tls }}
+    - hosts:
+        - {{ .Values.ingress.hostname }}
+      secretName: {{ printf "%s-tls" .Values.ingress.hostname }}
     {{- end }}
-{{- end }}
+    {{- if .Values.ingress.extraTls }}
+    {{- toYaml .Values.ingress.extraTls | nindent 4 }}
+    {{- end }}
+  {{- end }}
 {{- end }}
diff --git a/bitnami/rabbitmq/templates/networkpolicy.yaml b/bitnami/rabbitmq/templates/networkpolicy.yaml
index 0c5156b64f..f7f75d6d65 100644
--- a/bitnami/rabbitmq/templates/networkpolicy.yaml
+++ b/bitnami/rabbitmq/templates/networkpolicy.yaml
@@ -2,18 +2,12 @@
 kind: NetworkPolicy
 apiVersion: networking.k8s.io/v1
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}
+  name: {{ include "rabbitmq.fullname" . }}
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" . }}
-    release: {{ .Release.Name | quote }}
-    heritage: {{ .Release.Service | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 spec:
   podSelector:
-    matchLabels:
-      app: {{ template "rabbitmq.name" . }}
-      release: {{ .Release.Name | quote }}
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
   ingress:
     # Allow inbound connections
     - ports:
@@ -31,11 +25,11 @@ spec:
             matchLabels:
               app: {{ template "rabbitmq.name" . }}
               release: {{ .Release.Name }}
-        {{- with .Values.networkPolicy.additionalRules }}
-{{ toYaml . | indent 8 }}
+        {{- if .Values.networkPolicy.additionalRules }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.networkPolicy.additionalRules "context" $) | nindent 8 }}
         {{- end }}
       {{- end }}
     # Allow prometheus scrapes
     - ports:
-        - port: {{ .Values.metrics.port }}
+        - port: {{ .Values.service.metricsPort }}
 {{- end }}
diff --git a/bitnami/rabbitmq/templates/pdb.yaml b/bitnami/rabbitmq/templates/pdb.yaml
index 82b731f65d..ad631d657b 100644
--- a/bitnami/rabbitmq/templates/pdb.yaml
+++ b/bitnami/rabbitmq/templates/pdb.yaml
@@ -1,18 +1,17 @@
-{{- if .Values.podDisruptionBudget -}}
+{{- if .Values.pdb.create }}
 apiVersion: policy/v1beta1
 kind: PodDisruptionBudget
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}
+  name: {{ include "rabbitmq.fullname" . }}
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 spec:
+  {{- if .Values.pdb.minAvailable }}
+  minAvailable: {{ .Values.pdb.minAvailable }}
+  {{- end }}
+  {{- if .Values.pdb.maxUnavailable }}
+  maxUnavailable: {{ .Values.pdb.maxUnavailable }}
+  {{- end }}
   selector:
-    matchLabels:
-      app: {{ template "rabbitmq.name" . }}
-      release: "{{ .Release.Name }}"
-{{ toYaml .Values.podDisruptionBudget | indent 2 }}
-{{- end -}}
+    matchLabels: {{ include "common.labels.matchLabels" . | nindent 6 }}
+{{- end }}
diff --git a/bitnami/rabbitmq/templates/plugins-configmap.yaml b/bitnami/rabbitmq/templates/plugins-configmap.yaml
deleted file mode 100644
index fca1082e2e..0000000000
--- a/bitnami/rabbitmq/templates/plugins-configmap.yaml
+++ /dev/null
@@ -1,28 +0,0 @@
-{{- if .Values.rabbitmq.communityPlugins -}}
-apiVersion: v1
-kind: ConfigMap
-metadata:
-  name: {{ include "rabbitmq.fullname" . }}-plugins
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
-data:
-  install-plugins.sh: |
-    #!/bin/bash
-    echo "==> Plugin installation"
-    echo $RABBITMQ_PLUGINS_DIR
-    pluginPath=/opt/bitnami/rabbitmq/plugins
-    {{- $totalPlugins := len .Values.rabbitmq.communityPlugins }}
-    echo "Total plugins defined in chart installation: {{ $totalPlugins }}"
-    {{- range $i, $plugin := .Values.rabbitmq.communityPlugins }}
-    echo "Installing plugin {{ add $i 1 }} out of {{ $totalPlugins }}: {{ $plugin }}"
-    pluginUrl={{ $plugin }}
-    # remove the version number from the plugin name
-    pluginName=$(echo ${pluginUrl##*/} | sed "s/\-.*//")
-    curl -X GET $pluginUrl -L -o $pluginPath/$pluginName.ez
-    rabbitmq-plugins enable $pluginName
-    {{- end }}
-    echo "==> End of Plugin installation"
-{{- end -}}
diff --git a/bitnami/rabbitmq/templates/prometheusrule.yaml b/bitnami/rabbitmq/templates/prometheusrule.yaml
index 1996ef6d50..fbb8a29d70 100644
--- a/bitnami/rabbitmq/templates/prometheusrule.yaml
+++ b/bitnami/rabbitmq/templates/prometheusrule.yaml
@@ -2,24 +2,20 @@
 apiVersion: monitoring.coreos.com/v1
 kind: PrometheusRule
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}
-{{- if .Values.metrics.prometheusRule.namespace }}
+  name: {{ include "rabbitmq.fullname" . }}
+  {{- if .Values.metrics.prometheusRule.namespace }}
   namespace: {{ .Values.metrics.prometheusRule.namespace }}
-{{- else }}
+  {{- else }}
   namespace: {{ .Release.Namespace }}
-{{- end }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" . }}
-    release: {{ .Release.Name | quote }}
-    heritage: {{ .Release.Service | quote }}
-{{- with .Values.metrics.prometheusRule.additionalLabels }}
-{{ toYaml . | indent 4 }}
-{{- end }}
+  {{- end }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.metrics.prometheusRule.additionalLabels }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.metrics.prometheusRule.additionalLabels "context" $) | nindent 4 }}
+    {{- end }}
 spec:
-{{- with .Values.metrics.prometheusRule.rules }}
   groups:
+  {{- with .Values.metrics.prometheusRule.rules }}
     - name: {{ template "rabbitmq.name" $ }}
-      rules: {{ tpl (toYaml .) $ | nindent 8 }}
-{{- end }}
+      rules: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
+  {{- end }}
 {{- end }}
diff --git a/bitnami/rabbitmq/templates/role.yaml b/bitnami/rabbitmq/templates/role.yaml
index be7879af8e..41291eb3da 100644
--- a/bitnami/rabbitmq/templates/role.yaml
+++ b/bitnami/rabbitmq/templates/role.yaml
@@ -1,14 +1,10 @@
-{{- if .Values.rbacEnabled }}
+{{- if .Values.rbac.create }}
 kind: Role
 apiVersion: rbac.authorization.k8s.io/v1
 metadata:
   name: {{ template "rabbitmq.fullname" . }}-endpoint-reader
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 rules:
   - apiGroups: [""]
     resources: ["endpoints"]
diff --git a/bitnami/rabbitmq/templates/rolebinding.yaml b/bitnami/rabbitmq/templates/rolebinding.yaml
index c8dc82165b..732a39a816 100644
--- a/bitnami/rabbitmq/templates/rolebinding.yaml
+++ b/bitnami/rabbitmq/templates/rolebinding.yaml
@@ -1,17 +1,13 @@
-{{- if and .Values.serviceAccount.create .Values.rbacEnabled }}
+{{- if and .Values.serviceAccount.create .Values.rbac.create }}
 kind: RoleBinding
 apiVersion: rbac.authorization.k8s.io/v1
 metadata:
   name: {{ template "rabbitmq.fullname" . }}-endpoint-reader
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 subjects:
-- kind: ServiceAccount
-  name: {{ template "rabbitmq.serviceAccountName" . }}
+  - kind: ServiceAccount
+    name: {{ template "rabbitmq.serviceAccountName" . }}
 roleRef:
   apiGroup: rbac.authorization.k8s.io
   kind: Role
diff --git a/bitnami/rabbitmq/templates/secrets.yaml b/bitnami/rabbitmq/templates/secrets.yaml
index 1749013f82..9c4fb06978 100644
--- a/bitnami/rabbitmq/templates/secrets.yaml
+++ b/bitnami/rabbitmq/templates/secrets.yaml
@@ -1,26 +1,26 @@
-{{- if or (not .Values.rabbitmq.existingErlangSecret) (not .Values.rabbitmq.existingPasswordSecret) }}
+{{- if or (not .Values.auth.existingErlangSecret) (not .Values.auth.existingPasswordSecret) }}
 apiVersion: v1
 kind: Secret
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}
+  name: {{ include "rabbitmq.fullname" . }}
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 type: Opaque
 data:
-  {{ if not .Values.rabbitmq.existingPasswordSecret }}{{ if .Values.rabbitmq.password }}
-  rabbitmq-password: {{ .Values.rabbitmq.password | b64enc | quote }}
-  {{ else }}
+  {{- if not .Values.auth.existingPasswordSecret }}
+  {{- if .Values.auth.password }}
+  rabbitmq-password: {{ .Values.auth.password | b64enc | quote }}
+  {{- else }}
   rabbitmq-password: {{ randAlphaNum 10 | b64enc | quote }}
-  {{ end }}{{ end }}
-  {{ if not .Values.rabbitmq.existingErlangSecret }}{{ if .Values.rabbitmq.erlangCookie }}
-  rabbitmq-erlang-cookie: {{ .Values.rabbitmq.erlangCookie | b64enc | quote }}
-  {{ else }}
+  {{- end }}
+  {{- end }}
+  {{- if not .Values.auth.existingErlangSecret }}
+  {{- if .Values.auth.erlangCookie }}
+  rabbitmq-erlang-cookie: {{ .Values.auth.erlangCookie | b64enc | quote }}
+  {{- else }}
   rabbitmq-erlang-cookie: {{ randAlphaNum 32 | b64enc | quote }}
-  {{ end }}{{ end }}
+  {{- end }}
+  {{- end }}
 {{- end }}
 {{- range $key, $value := .Values.extraSecrets }}
 ---
@@ -29,12 +29,7 @@ kind: Secret
 metadata:
   name: {{ $key }}
   namespace: {{ $.Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" $ }}
-    chart: {{ template "rabbitmq.chart" $ }}
-    release: "{{ $.Release.Name }}"
-    heritage: "{{ $.Release.Service }}"
+  labels: {{- include "common.labels.standard" $ | nindent 4 }}
 type: Opaque
-stringData:
-{{ $value | toYaml | nindent 2 }}
+stringData: {{- $value | toYaml | nindent 2 }}
 {{- end }}
diff --git a/bitnami/rabbitmq/templates/serviceaccount.yaml b/bitnami/rabbitmq/templates/serviceaccount.yaml
index 18ecb7c715..88c53ae72f 100644
--- a/bitnami/rabbitmq/templates/serviceaccount.yaml
+++ b/bitnami/rabbitmq/templates/serviceaccount.yaml
@@ -2,13 +2,10 @@
 apiVersion: v1
 kind: ServiceAccount
 metadata:
-  name: {{ template "rabbitmq.serviceAccountName" . }}
+  name: {{ include "rabbitmq.serviceAccountName" . }}
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 secrets:
-  - name: "{{ template "rabbitmq.fullname" . }}"
+  - name: {{ include "rabbitmq.fullname" . }}
 {{- end }}
+
diff --git a/bitnami/rabbitmq/templates/servicemonitor.yaml b/bitnami/rabbitmq/templates/servicemonitor.yaml
index bee352d2e2..2d6d4ad677 100644
--- a/bitnami/rabbitmq/templates/servicemonitor.yaml
+++ b/bitnami/rabbitmq/templates/servicemonitor.yaml
@@ -2,37 +2,34 @@
 apiVersion: monitoring.coreos.com/v1
 kind: ServiceMonitor
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}
+  name: {{ include "rabbitmq.fullname" . }}
   {{- if .Values.metrics.serviceMonitor.namespace }}
   namespace: {{ .Values.metrics.serviceMonitor.namespace }}
   {{- else }}
   namespace: {{ .Release.Namespace }}
   {{- end }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    heritage: "{{ .Release.Service }}"
-    release: {{ if .Values.metrics.serviceMonitor.release }}"{{ .Values.metrics.serviceMonitor.release }}"{{ else }}"{{ .Release.Name }}"{{ end }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
     {{- if .Values.metrics.serviceMonitor.additionalLabels }}
-{{ toYaml .Values.metrics.serviceMonitor.additionalLabels | indent 4 }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.metrics.serviceMonitor.additionalLabels "context" $) | nindent 4 }}
     {{- end }}
 spec:
   endpoints:
-  - port: metrics
-    interval: {{ .Values.metrics.serviceMonitor.interval }}
-    {{- if .Values.metrics.serviceMonitor.scrapeTimeout }}
-    scrapeTimeout: {{ .Values.metrics.serviceMonitor.scrapeTimeout }}
-    {{- end }}
-    honorLabels: {{ .Values.metrics.serviceMonitor.honorLabels }}
-    {{- if .Values.metrics.serviceMonitor.relabellings }}
-    metricRelabelings:
-{{ toYaml .Values.metrics.serviceMonitor.relabellings | indent 6 }}
-    {{- end }}
+    - port: metrics
+      {{- if .Values.metrics.serviceMonitor.interval }}
+      interval: {{ .Values.metrics.serviceMonitor.interval }}
+      {{- end }}
+      {{- if .Values.metrics.serviceMonitor.scrapeTimeout }}
+      scrapeTimeout: {{ .Values.metrics.serviceMonitor.scrapeTimeout }}
+      {{- end }}
+      {{- if .Values.metrics.serviceMonitor.honorLabels }}
+      honorLabels: {{ .Values.metrics.serviceMonitor.honorLabels }}
+      {{- end }}
+      {{- if .Values.metrics.serviceMonitor.relabellings }}
+      metricRelabelings: {{- toYaml .Values.metrics.serviceMonitor.relabellings | nindent 6 }}
+      {{- end }}
   namespaceSelector:
     matchNames:
       - {{ .Release.Namespace }}
   selector:
-    matchLabels:
-      app: {{ template "rabbitmq.name" . }}
-      release: "{{ .Release.Name }}"
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
 {{- end }}
diff --git a/bitnami/rabbitmq/templates/statefulset.yaml b/bitnami/rabbitmq/templates/statefulset.yaml
index c95f79dce3..43414d7fe0 100644
--- a/bitnami/rabbitmq/templates/statefulset.yaml
+++ b/bitnami/rabbitmq/templates/statefulset.yaml
@@ -1,205 +1,96 @@
 apiVersion: apps/v1
 kind: StatefulSet
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}
+  name: {{ include "rabbitmq.fullname" . }}
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
-    {{- if .Values.podLabels }}
-    {{- toYaml .Values.podLabels | nindent 4 }}
-    {{- end }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 spec:
   serviceName: {{ template "rabbitmq.fullname" . }}-headless
   podManagementPolicy: {{ .Values.podManagementPolicy }}
-  replicas: {{ .Values.replicas }}
+  replicas: {{ .Values.replicaCount }}
   updateStrategy:
-    type: {{ .Values.updateStrategy.type }}
-    {{- if (eq "Recreate" .Values.updateStrategy.type) }}
+    type: {{ .Values.updateStrategyType }}
+    {{- if (eq "OnDelete" .Values.updateStrategyType) }}
     rollingUpdate: null
     {{- end }}
   selector:
-    matchLabels:
-      app: {{ template "rabbitmq.name" . }}
-      release: "{{ .Release.Name }}"
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
   template:
     metadata:
-      labels:
-        app: {{ template "rabbitmq.name" . }}
-        release: "{{ .Release.Name }}"
-        chart: {{ template "rabbitmq.chart" .  }}
-      {{- if .Values.podLabels }}
-      {{- toYaml .Values.podLabels | nindent 8 }}
-      {{- end }}
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
+        {{- if .Values.podLabels }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
+        {{- end }}
       annotations:
-        {{- if or (not .Values.rabbitmq.existingErlangSecret) (not .Values.rabbitmq.existingPasswordSecret) }}
+        {{- if or (not .Values.auth.existingErlangSecret) (not .Values.auth.existingPasswordSecret) }}
         checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
         {{- end }}
+        {{- if and .Values.auth.tls.enabled (not .Values.auth.tls.existingSecret) }}
+        checksum/secret-cert: {{ include (print $.Template.BasePath "/certs.yaml") . | sha256sum }}
+        {{- end }}
         {{- if or .Values.podAnnotations .Values.metrics.enabled }}
         {{- include "rabbitmq.podAnnotations" . | nindent 8 }}
         {{- end }}
     spec:
+      {{- include "rabbitmq.imagePullSecrets" . | nindent 6 }}
       {{- if .Values.schedulerName }}
-      schedulerName: "{{ .Values.schedulerName }}"
+      schedulerName: {{ .Values.schedulerName | quote }}
       {{- end }}
-{{- include "rabbitmq.imagePullSecrets" . | indent 6 }}
-      {{- if .Values.serviceAccount.create }}
       serviceAccountName: {{ template "rabbitmq.serviceAccountName" . }}
-      {{- end }}
       {{- if .Values.affinity }}
-      affinity: {{- include "rabbitmq.tplValue" (dict "value" .Values.affinity "context" .) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.priorityClassName }}
-      priorityClassName: {{ .Values.priorityClassName }}
+      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" .) | nindent 8 }}
       {{- end }}
       {{- if .Values.nodeSelector }}
-      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
+      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" .) | nindent 8 }}
       {{- end }}
       {{- if .Values.tolerations }}
-      tolerations: {{- toYaml .Values.tolerations | nindent 8 }}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.priorityClassName }}
+      priorityClassName: {{ .Values.priorityClassName }}
+      {{- end }}
+      {{- if .Values.podSecurityContext }}
+      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
       {{- end }}
       terminationGracePeriodSeconds: 10
-      {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled .Values.securityContext.enabled }}
+      {{- if or (.Values.initContainers) (and .Values.volumePermissions.enabled .Values.persistence.enabled .Values.podSecurityContext) }}
       initContainers:
+        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled .Values.podSecurityContext }}
         - name: volume-permissions
-          image: "{{ template "rabbitmq.volumePermissions.image" . }}"
-          imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
-          command: ["/bin/chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }}", "{{ .Values.persistence.path }}"]
+          image: {{ include "rabbitmq.volumePermissions.image" . }}
+          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
+          command:
+            - /bin/bash
+          args:
+            - -ec
+            - |
+              mkdir -p "/bitnami/rabbitmq/mnesia"
+              chown -R "{{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}" "/bitnami/rabbitmq/mnesia"
           securityContext:
             runAsUser: 0
           {{- if .Values.volumePermissions.resources }}
-          resources: {{- toYaml .Values.volumePermissions.resources | indent 12 }}
+          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
           {{- end }}
           volumeMounts:
             - name: data
-              mountPath: "{{ .Values.persistence.path }}"
+              mountPath: /bitnami/rabbitmq/mnesia
+        {{- end }}
+        {{- if .Values.initContainers }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
+        {{- end }}
       {{- end }}
       containers:
         - name: rabbitmq
           image: {{ template "rabbitmq.image" . }}
           imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
-          command:
-            - bash
-            - -ec
-            - |
-               mkdir -p /opt/bitnami/rabbitmq/.rabbitmq/
-               mkdir -p /opt/bitnami/rabbitmq/etc/rabbitmq/
-               touch /opt/bitnami/rabbitmq/var/lib/rabbitmq/.start
-               #persist the erlang cookie in both places for server and cli tools
-               echo $RABBITMQ_ERL_COOKIE > /opt/bitnami/rabbitmq/var/lib/rabbitmq/.erlang.cookie
-               cp /opt/bitnami/rabbitmq/var/lib/rabbitmq/.erlang.cookie /opt/bitnami/rabbitmq/.rabbitmq/
-               #change permission so only the user has access to the cookie file
-               chmod 600 /opt/bitnami/rabbitmq/.rabbitmq/.erlang.cookie /opt/bitnami/rabbitmq/var/lib/rabbitmq/.erlang.cookie
-               #copy the mounted configuration to both places
-               cp  /opt/bitnami/rabbitmq/conf/* /opt/bitnami/rabbitmq/etc/rabbitmq
-               # Apply resources limits
-               {{- if .Values.rabbitmq.setUlimitNofiles }}
-               ulimit -n "${RABBITMQ_ULIMIT_NOFILES}"
-               {{- end }}
-               #replace the default password that is generated
-               sed -i "/CHANGEME/cdefault_pass=${RABBITMQ_PASSWORD//\\/\\\\}" /opt/bitnami/rabbitmq/etc/rabbitmq/rabbitmq.conf
-               {{- if and .Values.persistence.enabled .Values.forceBoot.enabled }}
-               if [ -d "{{ .Values.persistence.path }}/mnesia/${RABBITMQ_NODENAME}" ]; then rabbitmqctl force_boot; fi
-               {{- end }}
-               {{- if .Values.rabbitmq.communityPlugins }}
-               . /opt/scripts/install-plugins.sh
-               {{- end }}
-               exec rabbitmq-server
-          {{- if .Values.resources }}
-          resources: {{- toYaml .Values.resources | nindent 12 }}
+          {{- if .Values.containerSecurityContext }}
+          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
           {{- end }}
-          volumeMounts:
-            {{- if .Values.extraVolumeMounts }}
-            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
-            {{- end }}
-            {{- if .Values.rabbitmq.communityPlugins }}
-            - name: {{ template "rabbitmq.fullname" . }}-plugins
-              mountPath: /opt/scripts
-            {{- end }}
-            - name: config-volume
-              mountPath: /opt/bitnami/rabbitmq/conf
-            - name: healthchecks
-              mountPath: /usr/local/sbin/rabbitmq-api-check
-              subPath: rabbitmq-api-check
-            - name: healthchecks
-              mountPath: /usr/local/sbin/rabbitmq-health-check
-              subPath: rabbitmq-health-check
-            {{- if .Values.rabbitmq.tls.enabled }}
-            - name: {{ template "rabbitmq.fullname" . }}-certs
-              mountPath: /opt/bitnami/rabbitmq/certs
-            {{- end }}
-            - name: data
-              mountPath: "{{ .Values.persistence.path }}"
-            {{- if .Values.rabbitmq.loadDefinition.enabled }}
-            - name: load-definition-volume
-              mountPath: /app
-              readOnly: true
-            {{- end }}
-          ports:
-            - name: epmd
-              containerPort: 4369
-            - name: amqp
-              containerPort: {{ .Values.service.port }}
-            {{- if .Values.rabbitmq.tls.enabled }}
-            - name: amqp-ssl
-              containerPort: {{ .Values.service.tlsPort }}
-            {{- end }}
-            - name: dist
-              containerPort: {{ .Values.service.distPort }}
-            - name: stats
-              containerPort: {{ .Values.service.managerPort }}
-            {{- if .Values.metrics.enabled }}
-            - name: metrics
-              containerPort: {{ .Values.metrics.port }}
-            {{- end }}
-            {{- if .Values.service.extraContainerPorts }}
-            {{- toYaml .Values.service.extraContainerPorts | nindent 12 }}
-            {{- end }}
-            {{- if .Values.livenessProbe.enabled }}
-          livenessProbe:
-            exec:
-              command:
-                {{- if .Values.livenessProbe.commandOverride }}
-                {{- toYaml .Values.livenessProbe.commandOverride | nindent 16 }}
-                {{- else }}
-                - sh
-                - -c
-                - rabbitmq-api-check "http://{{ .Values.rabbitmq.username }}:$RABBITMQ_PASSWORD@127.0.0.1:{{ .Values.service.managerPort }}/api/healthchecks/node" '{"status":"ok"}'
-                {{- end }}
-            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
-            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
-            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
-            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
-            successThreshold: {{ .Values.livenessProbe.successThreshold }}
+          {{- if .Values.command }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
           {{- end }}
-          {{- if .Values.readinessProbe.enabled }}
-          readinessProbe:
-            exec:
-              command:
-                {{- if .Values.readinessProbe.commandOverride }}
-                {{- toYaml .Values.readinessProbe.commandOverride | nindent 16 }}
-                {{- else }}
-                - sh
-                - -c
-                - rabbitmq-health-check "http://{{ .Values.rabbitmq.username }}:$RABBITMQ_PASSWORD@127.0.0.1:{{ .Values.service.managerPort }}/api/healthchecks/node" '{"status":"ok"}'
-                {{- end }}
-            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
-            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
-            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
-            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
-            successThreshold: {{ .Values.readinessProbe.successThreshold }}
-          {{- end }}
-          {{- if and (gt (.Values.replicas | int) 1) ( eq .Values.rabbitmq.clustering.rebalance true) }}
-          lifecycle:
-            postStart:
-              exec:
-                command:
-                  - /bin/sh
-                  - -c
-                  - until rabbitmqctl cluster_status >/dev/null; do echo Waiting for
-                    cluster readiness...; sleep 5 ; done; rabbitmq-queues rebalance "all"
+          {{- if .Values.args }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
           {{- end }}
           env:
             - name: BITNAMI_DEBUG
@@ -219,19 +110,17 @@ spec:
             - name: K8S_SERVICE_NAME
               value: "{{ template "rabbitmq.fullname" . }}-headless"
             - name: K8S_ADDRESS_TYPE
-              value: {{ .Values.rabbitmq.clustering.address_type }}
-            {{- if (eq "hostname" .Values.rabbitmq.clustering.address_type) }}
-            - name: RABBITMQ_NODENAME
-              value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.{{ .Values.rabbitmq.clustering.k8s_domain }}"
+              value: {{ .Values.clustering.addressType }}
+            - name: RABBITMQ_FORCE_BOOT
+              value: {{ ternary "true" "false" .Values.clustering.forceBoot | quote }}
+            {{- if (eq "hostname" .Values.clustering.addressType) }}
+            - name: RABBITMQ_NODE_NAME
+              value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.{{ .Values.clusterDomain }}"
             - name: K8S_HOSTNAME_SUFFIX
-              value: ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.{{ .Values.rabbitmq.clustering.k8s_domain }}"
+              value: ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.{{ .Values.clusterDomain }}"
             {{- else }}
-            - name: RABBITMQ_NODENAME
-              {{- if .Values.rabbitmq.rabbitmqClusterNodeName }}
-              value: {{ .Values.rabbitmq.rabbitmqClusterNodeName | quote }}
-              {{- else }}
+            - name: RABBITMQ_NODE_NAME
               value: "rabbit@$(MY_POD_NAME)"
-              {{- end }}
             {{- end }}
             {{- if .Values.ldap.enabled }}
             - name: RABBITMQ_LDAP_ENABLE
@@ -246,12 +135,12 @@ spec:
               value: {{ .Values.ldap.user_dn_pattern }}
             {{- end }}
             - name: RABBITMQ_LOGS
-              value: {{ .Values.rabbitmq.logs | quote }}
+              value: {{ .Values.logs | quote }}
             - name: RABBITMQ_ULIMIT_NOFILES
-              value: {{ .Values.rabbitmq.ulimitNofiles | quote }}
-            {{- if and .Values.rabbitmq.maxAvailableSchedulers }}
+              value: {{ .Values.ulimitNofiles | quote }}
+            {{- if and .Values.maxAvailableSchedulers }}
             - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
-              value: {{ printf "+S %s:%s" (toString .Values.rabbitmq.maxAvailableSchedulers) (toString .Values.rabbitmq.onlineSchedulers) -}}
+              value: {{ printf "+S %s:%s" (toString .Values.maxAvailableSchedulers) (toString .Values.onlineSchedulers) -}}
             {{- end }}
             - name: RABBITMQ_USE_LONGNAME
               value: "true"
@@ -265,23 +154,117 @@ spec:
                 secretKeyRef:
                   name: {{ template "rabbitmq.secretPasswordName" . }}
                   key: rabbitmq-password
-            {{- range $key, $value := .Values.rabbitmq.env }}
+            - name: RABBITMQ_PLUGINS
+              value: {{ include "rabbitmq.plugins" . | quote }}
+            {{- range $key, $value := .Values.extraEnvVars }}
             - name: {{ $key }}
               value: {{ $value | quote }}
             {{- end }}
-      {{- if .Values.securityContext.enabled }}
-      securityContext:
-        fsGroup: {{ .Values.securityContext.fsGroup }}
-        runAsUser: {{ .Values.securityContext.runAsUser }}
-        {{- if .Values.securityContext.extra }}
-        {{- toYaml .Values.securityContext.extra | nindent 8 }}
+          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
+          envFrom:
+            {{- if .Values.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ tpl .Values.extraEnvVarsCM . | quote }}
+            {{- end }}
+            {{- if .Values.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ tpl .Values.extraEnvVarsSecret . | quote }}
+            {{- end }}
+          {{- end }}
+          ports:
+            - name: amqp
+              containerPort: 5672
+            {{- if .Values.auth.tls.enabled }}
+            - name: amqp-ssl
+              containerPort: 5671
+            {{- end }}
+            - name: dist
+              containerPort: 25672
+            - name: stats
+              containerPort: 15672
+            - name: epmd
+              containerPort: 4369
+            {{- if .Values.metrics.enabled }}
+            - name: metrics
+              containerPort: 9419
+            {{- end }}
+            {{- if .Values.extraContainerPorts }}
+            {{- toYaml .Values.extraContainerPorts | nindent 12 }}
+            {{- end }}
+          {{- if .Values.livenessProbe.enabled }}
+          livenessProbe:
+            exec:
+              command:
+                - /bin/bash
+                - -ec
+                - |
+                  /opt/bitnami/scripts/rabbitmq/apicheck.sh "http://{{ .Values.auth.username }}:$RABBITMQ_PASSWORD@127.0.0.1:{{ .Values.service.managerPort }}/api/healthchecks/node" '{"status":"ok"}'
+            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
+            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
+            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
+            successThreshold: {{ .Values.livenessProbe.successThreshold }}
+            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
+          {{- else if .Values.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.readinessProbe.enabled }}
+          readinessProbe:
+            exec:
+              command:
+                - /bin/bash
+                - -ec
+                - |
+                  /opt/bitnami/scripts/rabbitmq/healthcheck.sh "http://{{ .Values.auth.username }}:$RABBITMQ_PASSWORD@127.0.0.1:{{ .Values.service.managerPort }}/api/healthchecks/node" '{"status":"ok"}'
+            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
+            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
+            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
+            successThreshold: {{ .Values.readinessProbe.successThreshold }}
+            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
+          {{- else if .Values.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.resources }}
+          resources: {{- toYaml .Values.resources | nindent 12 }}
+          {{- end }}
+          {{- if and .Values.clustering.rebalance (gt (.Values.replicaCount | int) 1) }}
+          lifecycle:
+            postStart:
+              exec:
+                command:
+                  - /bin/bash
+                  - -ec
+                  - |
+                    until rabbitmqctl cluster_status >/dev/null; do
+                        echo "Waiting for cluster readiness..."
+                        sleep 5
+                    done
+                    rabbitmq-queues rebalance "all"
+          {{- end }}
+          volumeMounts:
+            - name: configuration
+              mountPath: /bitnami/rabbitmq/conf
+            - name: data
+              mountPath: /bitnami/rabbitmq/mnesia
+            {{- if .Values.auth.tls.enabled }}
+            - name: certs
+              mountPath: /opt/bitnami/rabbitmq/certs
+            {{- end }}
+            {{- if .Values.loadDefinition.enabled }}
+            - name: load-definition-volume
+              mountPath: /app
+              readOnly: true
+            {{- end }}
+            {{- if .Values.extraVolumeMounts }}
+            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
+            {{- end }}
+        {{- if .Values.sidecars }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
         {{- end }}
-      {{- end }}
       volumes:
-        {{- if .Values.rabbitmq.tls.enabled }}
-        - name: {{ template "rabbitmq.fullname" . }}-certs
+        {{- if .Values.auth.tls.enabled }}
+        - name: certs
           secret:
-            secretName: {{ if .Values.rabbitmq.tls.existingSecret }}{{ .Values.rabbitmq.tls.existingSecret }}{{- else }}{{ template "rabbitmq.fullname" . }}-certs{{- end }}
+            secretName: {{ template "rabbitmq.secretTLSName" . }}
             items:
               - key: ca.crt
                 path: ca_certificate.pem
@@ -290,69 +273,46 @@ spec:
               - key: tls.key
                 path: server_key.pem
         {{- end }}
-        {{- if .Values.rabbitmq.communityPlugins }}
-        - name: {{ template "rabbitmq.fullname" . }}-plugins
-          configMap:
-            name: {{ template "rabbitmq.fullname" . }}-plugins
-        {{- end }}
-        - name: config-volume
+        - name: configuration
           configMap:
             name: {{ template "rabbitmq.fullname" . }}-config
             items:
               - key: rabbitmq.conf
                 path: rabbitmq.conf
-              {{- if .Values.rabbitmq.advancedConfiguration}}
-              - key: advanced.config
-                path: advanced.config
+              {{- if .Values.advancedConfiguration}}
+              - key: advanced.conf
+                path: advanced.conf
               {{- end }}
-              - key: enabled_plugins
-                path: enabled_plugins
-        - name: healthchecks
-          configMap:
-            name: {{ template "rabbitmq.fullname" . }}-healthchecks
-            items:
-              - key: rabbitmq-health-check
-                path: rabbitmq-health-check
-                mode: 111
-              - key: rabbitmq-api-check
-                path: rabbitmq-api-check
-                mode: 111
-        {{- if .Values.rabbitmq.loadDefinition.enabled }}
+        {{- if .Values.loadDefinition.enabled }}
         - name: load-definition-volume
           secret:
-            secretName: {{ tpl .Values.rabbitmq.loadDefinition.secretName . | quote }}
+            secretName: {{ tpl .Values.loadDefinition.existingSecret . | quote }}
         {{- end }}
         {{- if .Values.extraVolumes }}
         {{- toYaml .Values.extraVolumes | nindent 8 }}
         {{- end }}
-      {{- if not .Values.persistence.enabled }}
+  {{- if not .Values.persistence.enabled }}
         - name: data
           emptyDir: {}
-      {{- else if .Values.persistence.existingClaim }}
+  {{- else if .Values.persistence.existingClaim }}
         - name: data
           persistentVolumeClaim:
-          {{- with .Values.persistence.existingClaim }}
+            {{- with .Values.persistence.existingClaim }}
             claimName: {{ tpl . $ }}
-          {{- end }}
+            {{- end }}
   {{- else }}
   volumeClaimTemplates:
     - metadata:
         name: data
-        labels:
-          app: {{ template "rabbitmq.name" . }}
-          release: "{{ .Release.Name }}"
-          heritage: "{{ .Release.Service }}"
+        labels: {{- include "common.labels.matchLabels" . | nindent 10 }}
       spec:
         accessModes:
           - {{ .Values.persistence.accessMode | quote }}
         resources:
           requests:
             storage: {{ .Values.persistence.size | quote }}
-        {{ include "rabbitmq.storageClass" . }}
+        {{ include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) }}
         {{- if .Values.persistence.selector }}
-        selector:
-          {{- with .Values.persistence.selector -}}
-          {{ toYaml . | nindent 10 }}
-          {{- end -}}
+        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
         {{- end -}}
   {{- end }}
diff --git a/bitnami/rabbitmq/templates/svc-headless.yaml b/bitnami/rabbitmq/templates/svc-headless.yaml
index 8909342614..9d14abe740 100644
--- a/bitnami/rabbitmq/templates/svc-headless.yaml
+++ b/bitnami/rabbitmq/templates/svc-headless.yaml
@@ -1,13 +1,9 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}-headless
+  name: {{ include "rabbitmq.fullname" . }}-headless
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" .  }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
 spec:
   clusterIP: None
   ports:
@@ -17,7 +13,7 @@ spec:
     - name: amqp
       port: {{ .Values.service.port }}
       targetPort: amqp
-    {{- if .Values.rabbitmq.tls.enabled }}
+    {{- if .Values.auth.tls.enabled }}
     - name: amqp-tls
       port: {{ .Values.service.tlsPort }}
       targetPort: amqp-tls
@@ -28,6 +24,4 @@ spec:
     - name: stats
       port: {{ .Values.service.managerPort }}
       targetPort: stats
-  selector:
-    app: {{ template "rabbitmq.name" . }}
-    release: "{{ .Release.Name }}"
+  selector: {{ include "common.labels.matchLabels" . | nindent 4 }}
diff --git a/bitnami/rabbitmq/templates/svc.yaml b/bitnami/rabbitmq/templates/svc.yaml
index 4167e9c56a..16cb2e018b 100644
--- a/bitnami/rabbitmq/templates/svc.yaml
+++ b/bitnami/rabbitmq/templates/svc.yaml
@@ -1,81 +1,74 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "rabbitmq.fullname" . }}
+  name: {{ include "rabbitmq.fullname" . }}
   namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "rabbitmq.name" . }}
-    chart: {{ template "rabbitmq.chart" . }}
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
-{{- if .Values.service.labels }}
-{{- toYaml .Values.service.labels | indent 4 }}
-{{- end }}
-{{- if .Values.service.annotations }}
-  annotations:
-{{ toYaml .Values.service.annotations | indent 4 }}
-{{- end }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.service.labels }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.service.labels "context" $) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.service.annotations }}
+  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.service.annotations "context" $) | nindent 4 }}
+  {{- end }}
 spec:
   type: {{ .Values.service.type }}
-{{- if and (eq .Values.service.type "LoadBalancer") .Values.service.loadBalancerSourceRanges }}
-  loadBalancerSourceRanges:
-  {{ with .Values.service.loadBalancerSourceRanges }}
-{{ toYaml . | indent 4 }}
-{{- end }}
-{{- end }}
-  {{- if (and (eq .Values.service.type "LoadBalancer") (not (empty .Values.service.loadBalancerIP))) }}
+  {{- if eq .Values.service.type "LoadBalancer" }}
+  {{- if not (empty .Values.service.loadBalancerIP) }}
   loadBalancerIP: {{ .Values.service.loadBalancerIP }}
   {{- end }}
-  {{- if (not (empty .Values.service.externalIP)) }}
-  externalIPs: 
-  - {{ .Values.service.externalIP}}
+  {{- if .Values.service.loadBalancerSourceRanges }}
+  loadBalancerSourceRanges: {{- toYaml .Values.service.loadBalancerSourceRanges | nindent 4 }}
+  {{- end }}
+  {{- end }}
+  {{- if .Values.service.externalIPs }}
+  externalIPs: {{- toYaml .Values.service.externalIPs | nindent 4 }}
   {{- end }}
   ports:
-    - name: epmd
-      port: 4369
-      targetPort: epmd
-      {{- if (eq .Values.service.type "ClusterIP") }}
-      nodePort: null
-      {{- end }}
     - name: amqp
       port: {{ .Values.service.port }}
       targetPort: amqp
       {{- if (eq .Values.service.type "ClusterIP") }}
       nodePort: null
-      {{- else if (and (eq .Values.service.type "NodePort") (not (empty .Values.service.nodePort))) }}
+      {{- else if and (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) (not (empty .Values.service.nodePort)) }}
       nodePort: {{ .Values.service.nodePort }}
       {{- end }}
-    {{- if .Values.rabbitmq.tls.enabled }}
+    {{- if .Values.auth.tls.enabled }}
     - name: amqp-ssl
       port: {{ .Values.service.tlsPort }}
       targetPort: amqp-ssl
-      {{- if (and (eq .Values.service.type "NodePort") (not (empty .Values.service.nodeTlsPort))) }}
-      nodePort: {{ .Values.service.nodeTlsPort }}
+      {{- if (eq .Values.service.type "ClusterIP") }}
+      nodePort: null
+      {{- else if and (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) (not (empty .Values.service.tlsNodePort)) }}
+      nodePort: {{ .Values.service.tlsNodePort }}
       {{- end }}
     {{- end }}
+    - name: epmd
+      port: 4369
+      targetPort: epmd
+      {{- if (eq .Values.service.type "ClusterIP") }}
+      nodePort: null
+      {{- end }}
     - name: dist
       port: {{ .Values.service.distPort }}
       targetPort: dist
-      {{- if (eq .Values.service.type "ClusterIP") }}
+      {{- if eq .Values.service.type "ClusterIP" }}
       nodePort: null
       {{- end }}
-    - name: stats
+    - name: http-stats
       port: {{ .Values.service.managerPort }}
       targetPort: stats
-      {{- if (eq .Values.service.type "ClusterIP") }}
+      {{- if eq .Values.service.type "ClusterIP" }}
       nodePort: null
       {{- end }}
-  {{- if .Values.metrics.enabled }}
+    {{- if .Values.metrics.enabled }}
     - name: metrics
-      port: {{ .Values.metrics.port }}
+      port: {{ .Values.service.metricsPort }}
       targetPort: metrics
-      {{- if (eq .Values.service.type "ClusterIP") }}
+      {{- if eq .Values.service.type "ClusterIP" }}
       nodePort: null
       {{- end }}
-  {{- end }}
-{{- if .Values.service.extraPorts }}
-{{ toYaml .Values.service.extraPorts | indent 4 }}
-{{- end }}
-  selector:
-    app: {{ template "rabbitmq.name" . }}
-    release: "{{ .Release.Name }}"
+    {{- end }}
+    {{- if .Values.service.extraPorts }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.service.extraPorts "context" $) | nindent 4 }}
+    {{- end }}
+  selector: {{ include "common.labels.matchLabels" . | nindent 4 }}
diff --git a/bitnami/rabbitmq/templates/tls-secrets.yaml b/bitnami/rabbitmq/templates/tls-secrets.yaml
new file mode 100644
index 0000000000..b3e4c48b24
--- /dev/null
+++ b/bitnami/rabbitmq/templates/tls-secrets.yaml
@@ -0,0 +1,14 @@
+{{- if .Values.ingress.enabled }}
+{{- range .Values.ingress.secrets }}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ .name }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+type: kubernetes.io/tls
+data:
+  tls.crt: {{ .certificate | b64enc }}
+  tls.key: {{ .key | b64enc }}
+{{- end }}
+{{- end }}
diff --git a/bitnami/rabbitmq/values-production.yaml b/bitnami/rabbitmq/values-production.yaml
index 6cab1dfcad..79dd3b36d4 100644
--- a/bitnami/rabbitmq/values-production.yaml
+++ b/bitnami/rabbitmq/values-production.yaml
@@ -14,7 +14,7 @@
 image:
   registry: docker.io
   repository: bitnami/rabbitmq
-  tag: 3.8.5-debian-10-r3
+  tag: 3.8.5-debian-10-r4
 
   ## set to true if you would like to see extra information on logs
   ## it turns BASH and NAMI debugging in minideb
@@ -42,26 +42,13 @@ image:
 ##
 # fullnameOverride:
 
-## Use an alternate scheduler, e.g. "stork".
-## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
-##
-# schedulerName:
-
-## RabbitMQ should be initialized one by one when building cluster for the first time.
-## Therefore, the default value of podManagementPolicy is 'OrderedReady'
-## Once the RabbitMQ participates in the cluster, it waits for a response from another
-## RabbitMQ in the same cluster at reboot, except the last RabbitMQ of the same cluster.
-## If the cluster exits gracefully, you do not need to change the podManagementPolicy
-## because the first RabbitMQ of the statefulset always will be last of the cluster.
-## However if the last RabbitMQ of the cluster is not the first RabbitMQ due to a failure,
-## you must change podManagementPolicy to 'Parallel'.
-## ref : https://www.rabbitmq.com/clustering.html#restarting
+## Kubernetes Cluster Domain
 ##
-podManagementPolicy: OrderedReady
+clusterDomain: cluster.local
 
-## section of specific values for rabbitmq
+## RabbitMQ Authentication parameters
 ##
-rabbitmq:
+auth:
   ## RabbitMQ application username
   ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
   ##
@@ -79,117 +66,187 @@ rabbitmq:
   # erlangCookie:
   # existingErlangSecret: name-of-existing-secret
 
-  ## Node name to cluster with. e.g.: `clusternode@hostname`
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ## Enable encryption to rabbitmq
+  ## ref: https://www.rabbitmq.com/ssl.html
   ##
-  # rabbitmqClusterNodeName:
+  tls:
+    enabled: false
+    failIfNoPeerCert: true
+    sslOptionsVerify: verify_peer
+    caCertificate: |-
+    serverCertificate: |-
+    serverKey: |-
+    # existingSecret: name-of-existing-secret-to-rabbitmq
 
-  ## Value for the RABBITMQ_LOGS environment variable
-  ## ref: https://www.rabbitmq.com/logging.html#log-file-location
-  ##
-  logs: '-'
+## Value for the RABBITMQ_LOGS environment variable
+## ref: https://www.rabbitmq.com/logging.html#log-file-location
+##
+logs: '-'
 
-  ## RabbitMQ Max File Descriptors
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ## ref: https://www.rabbitmq.com/install-debian.html#kernel-resource-limits
-  ##
-  setUlimitNofiles: true
-  ulimitNofiles: '65536'
+## RabbitMQ Max File Descriptors
+## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+## ref: https://www.rabbitmq.com/install-debian.html#kernel-resource-limits
+##
+ulimitNofiles: '65536'
 
-  ## RabbitMQ maximum available scheduler threads and online scheduler threads. By default it will create a thread per CPU detected, with the following parameters you can tune it manually.
-  ## ref: https://hamidreza-s.github.io/erlang/scheduling/real-time/preemptive/migration/2016/02/09/erlang-scheduler-details.html#scheduler-threads
-  ## ref: https://github.com/bitnami/charts/issues/2189
-  ##
-  # maxAvailableSchedulers: 2
-  # onlineSchedulers: 1
+## RabbitMQ maximum available scheduler threads and online scheduler threads. By default it will create a thread per CPU detected, with the following parameters you can tune it manually.
+## ref: https://hamidreza-s.github.io/erlang/scheduling/real-time/preemptive/migration/2016/02/09/erlang-scheduler-details.html#scheduler-threads
+## ref: https://github.com/bitnami/charts/issues/2189
+##
+# maxAvailableSchedulers: 2
+# onlineSchedulers: 1
 
-  ## Plugins to enable
+## The memory threshold under which RabbitMQ will stop reading from client network sockets, in order to avoid being killed by the OS
+## ref: https://www.rabbitmq.com/alarms.html
+## ref: https://www.rabbitmq.com/memory.html#threshold
+##
+memoryHighWatermark:
+  enabled: true
+  ## Memory high watermark type. Either absolute or relative
+  ##
+  type: "relative"
+  ## Memory high watermark value.
+  ## The default value of 0.4 stands for 40% of availalbe RAM
+  ## Note: the memory relative limit is applied to the resource.limits.memory to caculate the memory threshold
+  ## You can also use an absolute value, e.g.: 256MB
   ##
-  plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s rabbitmq_prometheus"
+  value: 0.4
 
-  ## Community plugins to install and enable
+## Plugins to enable
+##
+plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s"
+
+## Extra plugins to enable
+## Use this instead of `plugins` to add new plugins
+##
+extraPlugins: "rabbitmq_auth_backend_ldap"
+
+## Clustering settings
+##
+clustering:
+  addressType: hostname
+  ## Rebalance master for queues in cluster when new replica is created
+  ## ref: https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance
   ##
-  communityPlugins: []
+  rebalance: false
 
-  ## Extra plugins to enable
-  ## Use this instead of `plugins` to add new plugins
+  ## forceBoot: executes 'rabbitmqctl force_boot' to force boot cluster shut down unexpectedly in an
+  ## unknown order.
+  ## ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
   ##
-  extraPlugins: "rabbitmq_auth_backend_ldap"
+  forceBoot: false
 
-  ## Clustering settings
+## Loading a RabbitMQ definitions file to configure RabbitMQ
+##
+loadDefinition:
+  enabled: false
+  ## Can be templated if needed, e.g.
+  ## existingSecret: "{{ .Release.Name }}-load-definition"
   ##
-  clustering:
-    address_type: hostname
-    k8s_domain: cluster.local
-    ## Rebalance master for queues in cluster when new replica is created
-    ## ref: https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance
-    ##
-    rebalance: false
+  # existingSecret:
 
-  loadDefinition:
-    enabled: false
-    ## Can be templated if needed, e.g.
-    # secretName: "{{ .Release.Name }}-load-definition"
-    secretName: load-definition
+## Command and args for running the container (set to default if not set). Use array form
+##
+# command:
+# args:
+
+## Additional environment variables to set
+## E.g:
+## extraEnvVars:
+##   - name: FOO
+##     value: BAR
+##
+extraEnvVars: []
 
-  ## environment variables to configure rabbitmq
-  ## ref: https://www.rabbitmq.com/configure.html#customise-environment
-  ##
-  env: {}
+## ConfigMap with extra environment variables
+##
+# extraEnvVarsCM:
 
-  ## Configuration file content: required cluster configuration
-  ## Do not override unless you know what you are doing. To add more configuration, use `extraConfiguration` of `advancedConfiguration` instead
-  ##
-  configuration: |-
-    ## Clustering
-    ##
-    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
-    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
-    cluster_formation.node_cleanup.interval = 10
-    cluster_formation.node_cleanup.only_log_warning = true
-    cluster_partition_handling = autoheal
-    # queue master locator
-    queue_master_locator=min-masters
-    # enable guest user
-    loopback_users.guest = false
-
-  ## Configuration file content: extra configuration
-  ## Use this instead of `configuration` to add more configuration
-  ##
-  extraConfiguration: |-
-    #disk_free_limit.absolute = 50MB
-    #management.load_definitions = /app/load_definition.json
-
-  ## Configuration file content: advanced configuration
-  ## Use this as additional configuraton in classic config format (Erlang term configuration format)
-  ## If you set LDAP with TLS/SSL enabled and you are using self-signed certificates, uncomment these lines.
-  ## advancedConfiguration: |-
-  ##   [{
-  ##     rabbitmq_auth_backend_ldap,
-  ##     [{
-  ##         ssl_options,
-  ##         [{
-  ##             verify, verify_none
-  ##         }, {
-  ##             fail_if_no_peer_cert,
-  ##             false
-  ##         }]
-  ##     ]}
-  ##   }].
-  ##
-  advancedConfiguration: |-
+## Secret with extra environment variables
+##
+# extraEnvVarsSecret:
 
-  ## Enable encryption to rabbitmq
-  ## ref: https://www.rabbitmq.com/ssl.html
-  ##
-  tls:
-    enabled: false
-    failIfNoPeerCert: true
-    sslOptionsVerify: verify_peer
-    caCertificate: |-
-    serverCertificate: |-
-    serverKey: |-
-    # existingSecret: name-of-existing-secret-to-rabbitmq
+## Extra ports to be included in container spec, primarily informational
+## E.g:
+## extraContainerPorts:
+## - name: new_port_ma,e
+##   port: 1234
+##
+extraContainerPorts: []
+
+## Configuration file content: required cluster configuration
+## Do not override unless you know what you are doing.
+## To add more configuration, use `extraConfiguration` of `advancedConfiguration` instead
+##
+configuration: |-
+  ## Username and password
+  default_user = {{ .Values.auth.username }}
+  default_pass = CHANGEME
+  ## Clustering
+  cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
+  cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
+  cluster_formation.node_cleanup.interval = 10
+  cluster_formation.node_cleanup.only_log_warning = true
+  cluster_partition_handling = autoheal
+  # queue master locator
+  queue_master_locator = min-masters
+  # enable guest user
+  loopback_users.guest = false
+  {{ .Values.extraConfiguration }}
+  {{- if .Values.auth.tls.enabled }}
+  ssl_options.verify = {{ .Values.auth.tls.sslOptionsVerify }}
+  listeners.ssl.default = {{ .Values.service.tlsPort }}
+  ssl_options.fail_if_no_peer_cert = {{ .Values.auth.tls.failIfNoPeerCert }}
+  ssl_options.cacertfile = /opt/bitnami/rabbitmq/certs/ca_certificate.pem
+  ssl_options.certfile = /opt/bitnami/rabbitmq/certs/server_certificate.pem
+  ssl_options.keyfile = /opt/bitnami/rabbitmq/certs/server_key.pem
+  {{- end }}
+  {{- if .Values.ldap.enabled }}
+  auth_backends.1 = rabbit_auth_backend_ldap
+  auth_backends.2 = internal
+  auth_ldap.servers.1  = {{ .Values.ldap.server }}
+  auth_ldap.port = {{ .Values.ldap.port }}
+  auth_ldap.user_dn_pattern = {{ .Values.ldap.user_dn_pattern  }}
+  {{- if .Values.ldap.tls.enabled }}
+  auth_ldap.use_ssl = true
+  {{- end }}
+  {{- end }}
+  {{- if .Values.metrics.enabled }}
+  ## Prometheus metrics
+  prometheus.tcp.port = 9419
+  {{- end }}
+  {{- if .Values.memoryHighWatermark.enabled }}
+  ## Memory Threshold
+  total_memory_available_override_value = {{ include "rabbitmq.toBytes" .Values.resources.limits.memory }}
+  vm_memory_high_watermark.{{ .Values.memoryHighWatermark.type }} = {{ .Values.memoryHighWatermark.value }}
+  {{- end }}
+
+## Configuration file content: extra configuration
+## Use this instead of `configuration` to add more configuration
+##
+extraConfiguration: |-
+  #disk_free_limit.absolute = 50MB
+  #management.load_definitions = /app/load_definition.json
+
+## Configuration file content: advanced configuration
+## Use this as additional configuraton in classic config format (Erlang term configuration format)
+##
+## If you set LDAP with TLS/SSL enabled and you are using self-signed certificates, uncomment these lines.
+## advancedConfiguration: |-
+##   [{
+##     rabbitmq_auth_backend_ldap,
+##     [{
+##         ssl_options,
+##         [{
+##             verify, verify_none
+##         }, {
+##             fail_if_no_peer_cert,
+##             false
+##         }]
+##     ]}
+##   }].
+##
+advancedConfiguration: |-
 
 ## LDAP configuration
 ##
@@ -202,90 +259,189 @@ ldap:
     # If you enabled TLS/SSL you can set advaced options using the advancedConfiguration parameter.
     enabled: false
 
-## does your cluster have rbac enabled? assume yes by default
+## extraVolumes and extraVolumeMounts allows you to mount other volumes
+## Examples:
+## extraVolumeMounts:
+##   - name: extras
+##     mountPath: /usr/share/extras
+##     readOnly: true
+## extraVolumes:
+##   - name: extras
+##     emptyDir: {}
+extraVolumeMounts: []
+extraVolumes: []
+
+## Optionally specify extra secrets to be created by the chart.
+## This can be useful when combined with load_definitions to automatically create the secret containing the definitions to be loaded.
+## Example:
+## extraSecrets:
+##   load-definition:
+##     load_definition.json: |
+##       {
+##         ...
+##       }
 ##
-rbacEnabled: true
+extraSecrets: {}
 
-## Kubernetes service type
+## Number of RabbitMQ replicas to deploy
 ##
-service:
-  type: ClusterIP
-  ## Node port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  # nodePort: 30672
+replicaCount: 3
 
-  ## Set the ExternalIP
-  ##
-  # externalIPs:
+## Use an alternate scheduler, e.g. "stork".
+## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+##
+# schedulerName:
 
-  ## Set the LoadBalancerIP
-  ##
-  # loadBalancerIP:
+## RabbitMQ should be initialized one by one when building cluster for the first time.
+## Therefore, the default value of podManagementPolicy is 'OrderedReady'
+## Once the RabbitMQ participates in the cluster, it waits for a response from another
+## RabbitMQ in the same cluster at reboot, except the last RabbitMQ of the same cluster.
+## If the cluster exits gracefully, you do not need to change the podManagementPolicy
+## because the first RabbitMQ of the statefulset always will be last of the cluster.
+## However if the last RabbitMQ of the cluster is not the first RabbitMQ due to a failure,
+## you must change podManagementPolicy to 'Parallel'.
+## ref : https://www.rabbitmq.com/clustering.html#restarting
+##
+podManagementPolicy: OrderedReady
 
-  ## Node port Tls
-  ##
-  # nodeTlsPort: 30671
+## Pod labels. Evaluated as a template
+## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+##
+podLabels: {}
 
-  ## Amqp port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  port: 5672
+## Pod annotations. Evaluated as a template
+## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
+##
+podAnnotations: {}
 
-  ## Amqp Tls port
-  ##
-  tlsPort: 5671
+## updateStrategy for RabbitMQ statefulset
+## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
+##
+updateStrategyType: RollingUpdate
 
-  ## Dist port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  distPort: 25672
+## Name of the priority class to be used by RabbitMQ pods, priority class needs to be created beforehand
+## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
+##
+priorityClassName: ""
 
-  ## RabbitMQ Manager port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  managerPort: 15672
+## Affinity for pod assignment. Evaluated as a template
+## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
+##
+affinity: {}
 
-  ## Service labels
-  ##
-  labels: {}
+## Node labels for pod assignment. Evaluated as a template
+## ref: https://kubernetes.io/docs/user-guide/node-selection/
+##
+nodeSelector: {}
 
-  ## Service annotations
-  ## Example:
-  ## annotations:
-  ##   service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
-  ##
-  annotations: {}
+## Tolerations for pod assignment. Evaluated as a template
+## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+##
+tolerations: []
 
-  ## Load Balancer sources
-  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
-  ##
-  # loadBalancerSourceRanges:
-  # - 10.10.10.0/24
+## RabbitMQ pods' Security Context
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+##
+podSecurityContext:
+  fsGroup: 1001
+  runAsUser: 1001
 
-  ## Extra ports to expose
-  # extraPorts:
-  # - name: new_svc_name
-  #   port: 1234
-  #   targetPort: 1234
-
-  ## Extra ports to be included in container spec, primarily informational
-  # extraContainerPorts:
-  # - name: new_svc_name
-  #   port: 1234
-  #   targetPort: 1234
-
-# Additional pod labels to apply
-podLabels: {}
+## RabbitMQ containers' Security Context
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
+## Example:
+##   containerSecurityContext:
+##     capabilities:
+##       drop: ["NET_RAW"]
+##     readOnlyRootFilesystem: true
+##
+containerSecurityContext: {}
+
+## RabbitMQ containers' resource requests and limits
+## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+##
+resources:
+  # We usually recommend not to specify default resources and to leave this as a conscious
+  # choice for the user. This also increases chances charts run on environments with little
+  # resources, such as Minikube. If you do want to specify resources, uncomment the following
+  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
+  limits:
+    cpu: 1000m
+    memory: 2Gi
+  requests:
+    cpu: 1000m
+    memory: 2Gi
 
-## Pod Security Context
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
+## RabbitMQ containers' liveness and readiness probes.
+## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
 ##
-securityContext:
+livenessProbe:
   enabled: true
-  fsGroup: 1001
-  runAsUser: 1001
-  extra: {}
+  initialDelaySeconds: 120
+  timeoutSeconds: 20
+  periodSeconds: 30
+  failureThreshold: 3
+  successThreshold: 1
+readinessProbe:
+  enabled: true
+  initialDelaySeconds: 10
+  timeoutSeconds: 20
+  periodSeconds: 30
+  failureThreshold: 3
+  successThreshold: 1
+
+## Custom Liveness probe
+##
+customLivenessProbe: {}
+
+## Custom Rediness probe
+##
+customReadinessProbe: {}
+
+## Add init containers to the pod
+## Example:
+## initContainers:
+##   - name: your-image-name
+##     image: your-image
+##     imagePullPolicy: Always
+##     ports:
+##       - name: portname
+##         containerPort: 1234
+##
+initContainers: {}
+
+## Add sidecars to the pod.
+## Example:
+## sidecars:
+##   - name: your-image-name
+##     image: your-image
+##     imagePullPolicy: Always
+##     ports:
+##       - name: portname
+##         containerPort: 1234
+##
+sidecars: {}
+
+## RabbitMQ pods ServiceAccount
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
+##
+serviceAccount:
+  ## Specifies whether a ServiceAccount should be created
+  ##
+  create: true
+  ## The name of the ServiceAccount to use.
+  ## If not set and create is true, a name is generated using the rabbitmq.fullname template
+  ##
+  # name:
+
+## Role Based Access
+## ref: https://kubernetes.io/docs/admin/authorization/rbac/
+##
+rbac:
+  ## Specifies whether RBAC rules should be created
+  ## binding RabbitMQ ServiceAccount to a role
+  ## that allows RabbitMQ pods querying the K8s API
+  ##
+  create: true
 
 persistence:
   ## this enables PVC templates that will create one per pod
@@ -301,9 +457,10 @@ persistence:
   ##
   # storageClass: "-"
   ## selector can be used to match an existing PersistentVolume
-  # selector:
-  #   matchLabels:
-  #     app: my-app
+  ## selector:
+  ##   matchLabels:
+  ##     app: my-app
+  selector: {}
   accessMode: ReadWriteOnce
 
   ## Existing PersistentVolumeClaims
@@ -311,33 +468,35 @@ persistence:
   ## So, for example, the name can depend on .Release or .Chart
   # existingClaim: ""
 
-  # If you change this value, you might have to adjust `rabbitmq.diskFreeLimit` as well.
+  ## If you change this value, you might have to adjust `rabbitmq.diskFreeLimit` as well.
+  ##
   size: 8Gi
 
-  # persistence directory, maps to the rabbitmq data directory
-  path: /opt/bitnami/rabbitmq/var/lib/rabbitmq
-
-## Configure resource requests and limits
-## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+## Pod Disruption Budget configuration
+## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
 ##
-resources:
-  requests:
-    memory: 256Mi
-    cpu: 100m
+pdb:
+  create: true
+  ## Min number of pods that must still be available after the eviction
+  ##
+  minAvailable: 1
+  ## Max number of pods that can be unavailable after the eviction
+  ##
+  # maxUnavailable: 1
 
+## Network Policy configuration
+## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
+##
 networkPolicy:
-  ## Enable creation of NetworkPolicy resources. Only Ingress traffic is filtered for now.
-  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
+  ## Enable creation of NetworkPolicy resources
   ##
-  enabled: false
-
+  enabled: true
   ## The Policy model to apply. When set to false, only pods with the correct
-  ## client label will have network access to the port RabbitMQ is listening
+  ## client label will have network access to the ports RabbitMQ is listening
   ## on. When true, RabbitMQ will accept connections from any source
   ## (with the correct destination port).
   ##
-  allowExternal: true
-
+  allowExternal: false
   ## Additional NetworkPolicy Ingress "from" rules to set. Note that all rules are OR-ed.
   ##
   # additionalRules:
@@ -349,47 +508,77 @@ networkPolicy:
   #      values:
   #        - frontend
 
-## Replica count, set to 3 to provide a default available cluster
-##
-replicas: 3
+## Kubernetes service type
+service:
+  type: ClusterIP
+  ## Amqp port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  port: 5672
 
-## Pod priority
-## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
-# priorityClassName: ""
+  ## Amqp Tls port
+  ##
+  tlsPort: 5671
 
-## updateStrategy for RabbitMQ statefulset
-## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
-##
-updateStrategy:
-  type: RollingUpdate
+  ## Node port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  # nodePort: 30672
 
-## Affinity for pod assignment
-## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-##
-affinity: {}
-## Node labels for pod assignment. Evaluated as a template.
-## ref: https://kubernetes.io/docs/user-guide/node-selection/
-##
-nodeSelector:
-  beta.kubernetes.io/arch: amd64
-## Tolerations for pod assignment. Evaluated as a template.
-## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
-##
-tolerations: {}
-## Pod Disruption Budget configuration
-## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
-## Example:
-## podDisruptionBudget:
-##    maxUnavailable: 1
-##    minAvailable: 1
-##
-podDisruptionBudget: {}
-## Annotations for Rabbitmq pods
-##
-podAnnotations: {}
+  ## Node port Tls
+  ##
+  # tlsNodePort: 30671
+
+  ## Dist port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  distPort: 25672
+
+  ## RabbitMQ Manager port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  managerPort: 15672
+
+  ## RabbitMQ Prometheues metrics port
+  ##
+  metricsPort: 9419
+
+  ## Extra ports to expose
+  ## E.g.:
+  ## extraPorts:
+  ## - name: new_svc_name
+  ##   port: 1234
+  ##   targetPort: 1234
+  ##
+  extraPorts: {}
+
+  ## Load Balancer sources
+  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
+  ##
+  # loadBalancerSourceRanges:
+  # - 10.10.10.0/24
+
+  ## Set the ExternalIPs
+  ##
+  # externalIPs:
+
+  ## Set the LoadBalancerIP
+  ##
+  # loadBalancerIP:
+
+  ## Service labels. Evaluated as a template
+  ##
+  labels: {}
+
+  ## Service annotations. Evaluated as a template
+  ## Example:
+  ## annotations:
+  ##   service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
+  ##
+  annotations: {}
 
 ## Configure the ingress resource that allows you to access the
-## Wordpress installation. Set up the URL
+## RabbitMQ installation. Set up the URL
 ## ref: http://kubernetes.io/docs/user-guide/ingress/
 ##
 ingress:
@@ -397,104 +586,96 @@ ingress:
   ##
   enabled: false
 
-  ## The list of hostnames to be covered with this ingress record.
-  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
-  ## hostName: foo.bar.com
-  ##
-  path: /
-
-  ## Set this to true in order to enable TLS on the ingress record
-  ## A side effect of this will be that the backend wordpress service will be connected at port 443
+  ## Set this to true in order to add the corresponding annotations for cert-manager
   ##
-  tls: true
+  certManager: false
 
-  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
+  ## When the ingress is enabled, a host pointing to this will be created
   ##
-  tlsSecret: myTlsSecret
+  hostname: rabbitmq.local
 
   ## Ingress annotations done as key:value pairs
-  ## If you're using kube-lego, you will want to add:
-  ## kubernetes.io/tls-acme: true
-  ##
   ## For a full list of possible ingress annotations, please see
   ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
   ##
-  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
+  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
   ##
   annotations: {}
-  #  kubernetes.io/ingress.class: nginx
-  #  kubernetes.io/tls-acme: true
 
-## The following settings are to configure the frequency of the lifeness and readiness probes
-##
-livenessProbe:
-  enabled: true
-  initialDelaySeconds: 120
-  timeoutSeconds: 20
-  periodSeconds: 30
-  failureThreshold: 6
-  successThreshold: 1
-  commandOverride: []
+  ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
+  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
+  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
+  ##
+  tls: false
+
+  ## The list of additional hostnames to be covered with this ingress record.
+  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
+  ## extraHosts:
+  ## - name: rabbitmq.local
+  ##   path: /
+  ##
+
+  ## The tls configuration for additional hostnames to be covered with this ingress record.
+  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
+  ## extraTls:
+  ## - hosts:
+  ##     - rabbitmq.local
+  ##   secretName: rabbitmq.local-tls
+  ##
+
+  ## If you're providing your own certificates, please use this to add the certificates as secrets
+  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
+  ## -----BEGIN RSA PRIVATE KEY-----
+  ##
+  ## name should line up with a tlsSecret set further up
+  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
+  ##
+  ## It is also possible to create and manage the certificates outside of this helm chart
+  ## Please see README.md for more information
+  ##
+  secrets: []
+  ## - name: rabbitmq.local-tls
+  ##   key:
+  ##   certificate:
+  ##
 
-readinessProbe:
-  enabled: true
-  initialDelaySeconds: 10
-  timeoutSeconds: 20
-  periodSeconds: 30
-  failureThreshold: 3
-  successThreshold: 1
-  commandOverride: []
 
 ## Prometheus Metrics
 ##
 metrics:
   enabled: true
-  port: 9419
   plugins: "rabbitmq_prometheus"
   ## Prometheus pod annotations
   ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
   ##
   podAnnotations:
     prometheus.io/scrape: "true"
-    prometheus.io/port: "{{ .Values.metrics.port }}"
-
-  livenessProbe:
-    enabled: true
-    initialDelaySeconds: 15
-    timeoutSeconds: 5
-    periodSeconds: 30
-    failureThreshold: 6
-    successThreshold: 1
-
-  readinessProbe:
-    enabled: true
-    initialDelaySeconds: 5
-    timeoutSeconds: 5
-    periodSeconds: 30
-    failureThreshold: 3
-    successThreshold: 1
+    prometheus.io/port: "{{ .Values.service.metricsPort }}"
 
   ## Prometheus Service Monitor
   ## ref: https://github.com/coreos/prometheus-operator
-  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
   ##
   serviceMonitor:
     ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
     ##
     enabled: false
     ## Specify the namespace in which the serviceMonitor resource will be created
+    ##
     # namespace: ""
     ## Specify the interval at which metrics should be scraped
     ##
     interval: 30s
     ## Specify the timeout after which the scrape is ended
+    ##
     # scrapeTimeout: 30s
     ## Specify Metric Relabellings to add to the scrape endpoint
+    ##
     # relabellings:
     ## Specify honorLabels parameter to add the scrape endpoint
     ##
     honorLabels: false
     ## Specify the release for ServiceMonitor. Sometimes it should be custom for prometheus operator to work
+    ##
     # release: ""
     ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
@@ -523,14 +704,14 @@ metrics:
     #   - alert: ClusterDown
     #     expr: |
     #       sum(rabbitmq_running{service="{{ template "rabbitmq.fullname" . }}"})
-    #       < {{ .Values.replicas }}
+    #       < {{ .Values.replicaCount }}
     #     for: 5m
     #     labels:
     #       severity: error
     #     annotations:
     #       summary: Cluster down (instance {{ "{{ $labels.instance }}" }})
     #       description: |
-    #           Less than {{ .Values.replicas }} nodes running in RabbitMQ cluster
+    #           Less than {{ .Values.replicaCount }} nodes running in RabbitMQ cluster
     #           VALUE = {{ "{{ $value }}" }}
     #   - alert: ClusterPartition
     #     expr: rabbitmq_partitions{service="{{ template "rabbitmq.fullname" . }}"} > 0
@@ -567,65 +748,42 @@ metrics:
     #           VALUE = {{ "{{ $value }}" }}\n  LABELS: {{ "{{ $labels }}" }}
     rules: []
 
-##
-## Init containers parameters:
-## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
+## Init Container paramaters
+## Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each component
+## values from the securityContext section of the component
 ##
 volumePermissions:
-  enabled: true
+  enabled: false
+  ## Bitnami Minideb image
+  ## ref: https://hub.docker.com/r/bitnami/minideb/tags/
+  ##
   image:
     registry: docker.io
     repository: bitnami/minideb
     tag: buster
+    ## Specify a imagePullPolicy
+    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
+    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
+    ##
     pullPolicy: Always
-    ## Optionally specify an array of imagePullSecrets.
-    ## Secrets must be manually created in the namespace.
+    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
     ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+    ## Example:
+    ## pullSecrets:
+    ##   - myRegistryKeySecretName
     ##
-    # pullSecrets:
-    #   - myRegistryKeySecretName
-  resources: {}
-
-## RabbitMQ pods ServiceAccount
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
-##
-serviceAccount:
-  ## Specifies whether a ServiceAccount should be created
-  ##
-  create: true
-  ## The name of the ServiceAccount to use.
-  ## If not set and create is true, a name is generated using the rabbitmq.fullname template
-  ##
-  # name:
-
-## forceBoot: executes 'rabbitmqctl force_boot' to force boot cluster shut down unexpectedly in an
-## unknown order.
-## ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
-##
-forceBoot:
-  enabled: false
-
-## Optionally specify extra secrets to be created by the chart.
-## This can be useful when combined with load_definitions to automatically create the secret containing the definitions to be loaded.
-## Example:
-## extraSecrets:
-##   load-definition:
-##     load_definition.json: |
-##       {
-##         ...
-##       }
-##
-extraSecrets: {}
-
-## extraVolumes and extraVolumeMounts allows you to mount other volumes
-## Examples:
-## extraVolumeMounts:
-##   - name: extras
-##     mountPath: /usr/share/extras
-##     readOnly: true
-## extraVolumes:
-##   - name: extras
-##     emptyDir: {}
-##
-extraVolumeMounts: []
-extraVolumes: []
+    pullSecrets: []
+  ## Init Container resource requests and limits
+  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+  ##
+  resources:
+    # We usually recommend not to specify default resources and to leave this as a conscious
+    # choice for the user. This also increases chances charts run on environments with little
+    # resources, such as Minikube. If you do want to specify resources, uncomment the following
+    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
+    limits: {}
+    #   cpu: 100m
+    #   memory: 128Mi
+    requests: {}
+    #   cpu: 100m
+    #   memory: 128Mi
diff --git a/bitnami/rabbitmq/values.schema.json b/bitnami/rabbitmq/values.schema.json
index 4bf6c11dda..2d0a7995a2 100644
--- a/bitnami/rabbitmq/values.schema.json
+++ b/bitnami/rabbitmq/values.schema.json
@@ -2,7 +2,7 @@
   "$schema": "http://json-schema.org/schema#",
   "type": "object",
   "properties": {
-    "rabbitmq": {
+    "auth": {
       "type": "object",
       "properties": {
         "username": {
@@ -15,17 +15,17 @@
           "title": "RabbitMQ password",
           "form": true,
           "description": "Defaults to a random 10-character alphanumeric string if not set"
-        },
-        "extraConfiguration": {
-          "type": "string",
-          "title": "Extra RabbitMQ Configuration",
-          "form": true,
-          "render": "textArea",
-          "description": "Extra configuration to be appended to RabbitMQ Configuration"
         }
       }
     },
-    "replicas": {
+    "extraConfiguration": {
+      "type": "string",
+      "title": "Extra RabbitMQ Configuration",
+      "form": true,
+      "render": "textArea",
+      "description": "Extra configuration to be appended to RabbitMQ Configuration"
+    },
+    "replicaCount": {
       "type": "integer",
       "form": true,
       "title": "Number of replicas",
diff --git a/bitnami/rabbitmq/values.yaml b/bitnami/rabbitmq/values.yaml
index f2b27b5c10..1868c57367 100644
--- a/bitnami/rabbitmq/values.yaml
+++ b/bitnami/rabbitmq/values.yaml
@@ -14,7 +14,7 @@
 image:
   registry: docker.io
   repository: bitnami/rabbitmq
-  tag: 3.8.5-debian-10-r3
+  tag: 3.8.5-debian-10-r4
 
   ## set to true if you would like to see extra information on logs
   ## it turns BASH and NAMI debugging in minideb
@@ -42,26 +42,13 @@ image:
 ##
 # fullnameOverride:
 
-## Use an alternate scheduler, e.g. "stork".
-## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+## Kubernetes Cluster Domain
 ##
-# schedulerName:
+clusterDomain: cluster.local
 
-## RabbitMQ should be initialized one by one when building cluster for the first time.
-## Therefore, the default value of podManagementPolicy is 'OrderedReady'
-## Once the RabbitMQ participates in the cluster, it waits for a response from another
-## RabbitMQ in the same cluster at reboot, except the last RabbitMQ of the same cluster.
-## If the cluster exits gracefully, you do not need to change the podManagementPolicy
-## because the first RabbitMQ of the statefulset always will be last of the cluster.
-## However if the last RabbitMQ of the cluster is not the first RabbitMQ due to a failure,
-## you must change podManagementPolicy to 'Parallel'.
-## ref : https://www.rabbitmq.com/clustering.html#restarting
+## RabbitMQ Authentication parameters
 ##
-podManagementPolicy: OrderedReady
-
-## section of specific values for rabbitmq
-##
-rabbitmq:
+auth:
   ## RabbitMQ application username
   ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
   ##
@@ -79,134 +66,187 @@ rabbitmq:
   # erlangCookie:
   # existingErlangSecret: name-of-existing-secret
 
-  ## Node name to cluster with. e.g.: `clusternode@hostname`
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ## Enable encryption to rabbitmq
+  ## ref: https://www.rabbitmq.com/ssl.html
   ##
-  # rabbitmqClusterNodeName:
+  tls:
+    enabled: false
+    failIfNoPeerCert: true
+    sslOptionsVerify: verify_peer
+    caCertificate: |-
+    serverCertificate: |-
+    serverKey: |-
+    # existingSecret: name-of-existing-secret-to-rabbitmq
 
-  ## Value for the RABBITMQ_LOGS environment variable
-  ## ref: https://www.rabbitmq.com/logging.html#log-file-location
-  ##
-  logs: '-'
+## Value for the RABBITMQ_LOGS environment variable
+## ref: https://www.rabbitmq.com/logging.html#log-file-location
+##
+logs: '-'
 
-  ## RabbitMQ Max File Descriptors
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ## ref: https://www.rabbitmq.com/install-debian.html#kernel-resource-limits
-  ##
-  setUlimitNofiles: true
-  ulimitNofiles: '65536'
+## RabbitMQ Max File Descriptors
+## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+## ref: https://www.rabbitmq.com/install-debian.html#kernel-resource-limits
+##
+ulimitNofiles: '65536'
 
-  ## RabbitMQ maximum available scheduler threads and online scheduler threads. By default it will create a thread per CPU detected, with the following parameters you can tune it manually.
-  ## ref: https://hamidreza-s.github.io/erlang/scheduling/real-time/preemptive/migration/2016/02/09/erlang-scheduler-details.html#scheduler-threads
-  ## ref: https://github.com/bitnami/charts/issues/2189
-  ##
-  # maxAvailableSchedulers: 2
-  # onlineSchedulers: 1
+## RabbitMQ maximum available scheduler threads and online scheduler threads. By default it will create a thread per CPU detected, with the following parameters you can tune it manually.
+## ref: https://hamidreza-s.github.io/erlang/scheduling/real-time/preemptive/migration/2016/02/09/erlang-scheduler-details.html#scheduler-threads
+## ref: https://github.com/bitnami/charts/issues/2189
+##
+# maxAvailableSchedulers: 2
+# onlineSchedulers: 1
 
-  ## Plugins to enable
+## The memory threshold under which RabbitMQ will stop reading from client network sockets, in order to avoid being killed by the OS
+## ref: https://www.rabbitmq.com/alarms.html
+## ref: https://www.rabbitmq.com/memory.html#threshold
+##
+memoryHighWatermark:
+  enabled: false
+  ## Memory high watermark type. Either absolute or relative
   ##
-  plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s"
+  type: "relative"
+  ## Memory high watermark value.
+  ## The default value of 0.4 stands for 40% of availalbe RAM
+  ## Note: the memory relative limit is applied to the resource.limits.memory to caculate the memory threshold
+  ## You can also use an absolute value, e.g.: 256MB
+  ##
+  value: 0.4
+
+## Plugins to enable
+##
+plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s"
 
-  ## Community plugins to install and enable
+## Extra plugins to enable
+## Use this instead of `plugins` to add new plugins
+##
+extraPlugins: "rabbitmq_auth_backend_ldap"
+
+## Clustering settings
+##
+clustering:
+  addressType: hostname
+  ## Rebalance master for queues in cluster when new replica is created
+  ## ref: https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance
   ##
-  communityPlugins: []
+  rebalance: false
 
-  ## Extra plugins to enable
-  ## Use this instead of `plugins` to add new plugins
+  ## forceBoot: executes 'rabbitmqctl force_boot' to force boot cluster shut down unexpectedly in an
+  ## unknown order.
+  ## ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
   ##
-  extraPlugins: "rabbitmq_auth_backend_ldap"
+  forceBoot: false
 
-  ## Clustering settings
+## Loading a RabbitMQ definitions file to configure RabbitMQ
+##
+loadDefinition:
+  enabled: false
+  ## Can be templated if needed, e.g.
+  ## existingSecret: "{{ .Release.Name }}-load-definition"
   ##
-  clustering:
-    address_type: hostname
-    k8s_domain: cluster.local
-    ## Rebalance master for queues in cluster when new replica is created
-    ## ref: https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance
-    ##
-    rebalance: false
+  # existingSecret:
 
-  loadDefinition:
-    enabled: false
-    ## Can be templated if needed, e.g.
-    # secretName: "{{ .Release.Name }}-load-definition"
-    secretName: load-definition
+## Command and args for running the container (set to default if not set). Use array form
+##
+# command:
+# args:
+
+## Additional environment variables to set
+## E.g:
+## extraEnvVars:
+##   - name: FOO
+##     value: BAR
+##
+extraEnvVars: []
 
-  ## environment variables to configure rabbitmq
-  ## ref: https://www.rabbitmq.com/configure.html#customise-environment
-  ##
-  env: {}
+## ConfigMap with extra environment variables
+##
+# extraEnvVarsCM:
 
-  ## Configuration file content: required cluster configuration
-  ## Do not override unless you know what you are doing. To add more configuration, use `extraConfiguration` of `advancedConfiguration` instead
-  ##
-  configuration: |-
-    ## Clustering
-    ##
-    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
-    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
-    cluster_formation.node_cleanup.interval = 10
-    cluster_formation.node_cleanup.only_log_warning = true
-    cluster_partition_handling = autoheal
-    # queue master locator
-    queue_master_locator=min-masters
-    # enable guest user
-    loopback_users.guest = false
-
-  ## Configuration file content: extra configuration
-  ## Use this instead of `configuration` to add more configuration
-  ##
-  extraConfiguration: |-
-    #disk_free_limit.absolute = 50MB
-    #management.load_definitions = /app/load_definition.json
-
-  ## Configuration file content: advanced configuration
-  ## Use this as additional configuraton in classic config format (Erlang term configuration format)
-  ##
-  ## If you set LDAP with TLS/SSL enabled and you are using self-signed certificates, uncomment these lines.
-  ## advancedConfiguration: |-
-  ##   [{
-  ##     rabbitmq_auth_backend_ldap,
-  ##     [{
-  ##         ssl_options,
-  ##         [{
-  ##             verify, verify_none
-  ##         }, {
-  ##             fail_if_no_peer_cert,
-  ##             false
-  ##         }]
-  ##     ]}
-  ##   }].
-  ##
-  advancedConfiguration: |-
+## Secret with extra environment variables
+##
+# extraEnvVarsSecret:
 
-  ## Enable encryption to rabbitmq
-  ## ref: https://www.rabbitmq.com/ssl.html
-  ##
-  tls:
-    enabled: false
-    failIfNoPeerCert: true
-    sslOptionsVerify: verify_peer
-    caCertificate: |-
-    serverCertificate: |-
-    serverKey: |-
-    # existingSecret: name-of-existing-secret-to-rabbitmq
+## Extra ports to be included in container spec, primarily informational
+## E.g:
+## extraContainerPorts:
+## - name: new_port_ma,e
+##   port: 1234
+##
+extraContainerPorts: []
 
-## RabbitMQ pods ServiceAccount
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
+## Configuration file content: required cluster configuration
+## Do not override unless you know what you are doing.
+## To add more configuration, use `extraConfiguration` of `advancedConfiguration` instead
 ##
-serviceAccount:
-  ## Specifies whether a ServiceAccount should be created
-  ##
-  create: true
-  ## The name of the ServiceAccount to use.
-  ## If not set and create is true, a name is generated using the rabbitmq.fullname template
-  ##
-  # name:
+configuration: |-
+  ## Username and password
+  default_user = {{ .Values.auth.username }}
+  default_pass = CHANGEME
+  ## Clustering
+  cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
+  cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
+  cluster_formation.node_cleanup.interval = 10
+  cluster_formation.node_cleanup.only_log_warning = true
+  cluster_partition_handling = autoheal
+  # queue master locator
+  queue_master_locator = min-masters
+  # enable guest user
+  loopback_users.guest = false
+  {{ .Values.extraConfiguration }}
+  {{- if .Values.auth.tls.enabled }}
+  ssl_options.verify = {{ .Values.auth.tls.sslOptionsVerify }}
+  listeners.ssl.default = {{ .Values.service.tlsPort }}
+  ssl_options.fail_if_no_peer_cert = {{ .Values.auth.tls.failIfNoPeerCert }}
+  ssl_options.cacertfile = /opt/bitnami/rabbitmq/certs/ca_certificate.pem
+  ssl_options.certfile = /opt/bitnami/rabbitmq/certs/server_certificate.pem
+  ssl_options.keyfile = /opt/bitnami/rabbitmq/certs/server_key.pem
+  {{- end }}
+  {{- if .Values.ldap.enabled }}
+  auth_backends.1 = rabbit_auth_backend_ldap
+  auth_backends.2 = internal
+  auth_ldap.servers.1  = {{ .Values.ldap.server }}
+  auth_ldap.port = {{ .Values.ldap.port }}
+  auth_ldap.user_dn_pattern = {{ .Values.ldap.user_dn_pattern  }}
+  {{- if .Values.ldap.tls.enabled }}
+  auth_ldap.use_ssl = true
+  {{- end }}
+  {{- end }}
+  {{- if .Values.metrics.enabled }}
+  ## Prometheus metrics
+  prometheus.tcp.port = 9419
+  {{- end }}
+  {{- if .Values.memoryHighWatermark.enabled }}
+  ## Memory Threshold
+  total_memory_available_override_value = {{ include "rabbitmq.toBytes" .Values.resources.limits.memory }}
+  vm_memory_high_watermark.{{ .Values.memoryHighWatermark.type }} = {{ .Values.memoryHighWatermark.value }}
+  {{- end }}
+
+## Configuration file content: extra configuration
+## Use this instead of `configuration` to add more configuration
+##
+extraConfiguration: |-
+  #disk_free_limit.absolute = 50MB
+  #management.load_definitions = /app/load_definition.json
 
-## does your cluster have rbac enabled? assume yes by default
+## Configuration file content: advanced configuration
+## Use this as additional configuraton in classic config format (Erlang term configuration format)
 ##
-rbacEnabled: true
+## If you set LDAP with TLS/SSL enabled and you are using self-signed certificates, uncomment these lines.
+## advancedConfiguration: |-
+##   [{
+##     rabbitmq_auth_backend_ldap,
+##     [{
+##         ssl_options,
+##         [{
+##             verify, verify_none
+##         }, {
+##             fail_if_no_peer_cert,
+##             false
+##         }]
+##     ]}
+##   }].
+##
+advancedConfiguration: |-
 
 ## LDAP configuration
 ##
@@ -219,86 +259,189 @@ ldap:
     # If you enabled TLS/SSL you can set advaced options using the advancedConfiguration parameter.
     enabled: false
 
-## Kubernetes service type
-##
-service:
-  type: ClusterIP
-  ## Node port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  # nodePort: 30672
+## extraVolumes and extraVolumeMounts allows you to mount other volumes
+## Examples:
+## extraVolumeMounts:
+##   - name: extras
+##     mountPath: /usr/share/extras
+##     readOnly: true
+## extraVolumes:
+##   - name: extras
+##     emptyDir: {}
+extraVolumeMounts: []
+extraVolumes: []
 
-  ## Set the ExternalIP
-  ##
-  # externalIPs:
+## Optionally specify extra secrets to be created by the chart.
+## This can be useful when combined with load_definitions to automatically create the secret containing the definitions to be loaded.
+## Example:
+## extraSecrets:
+##   load-definition:
+##     load_definition.json: |
+##       {
+##         ...
+##       }
+##
+extraSecrets: {}
 
-  ## Set the LoadBalancerIP
-  ##
-  # loadBalancerIP:
+## Number of RabbitMQ replicas to deploy
+##
+replicaCount: 1
 
-  ## Node port Tls
-  ##
-  # nodeTlsPort: 30671
+## Use an alternate scheduler, e.g. "stork".
+## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+##
+# schedulerName:
 
-  ## Amqp port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  port: 5672
+## RabbitMQ should be initialized one by one when building cluster for the first time.
+## Therefore, the default value of podManagementPolicy is 'OrderedReady'
+## Once the RabbitMQ participates in the cluster, it waits for a response from another
+## RabbitMQ in the same cluster at reboot, except the last RabbitMQ of the same cluster.
+## If the cluster exits gracefully, you do not need to change the podManagementPolicy
+## because the first RabbitMQ of the statefulset always will be last of the cluster.
+## However if the last RabbitMQ of the cluster is not the first RabbitMQ due to a failure,
+## you must change podManagementPolicy to 'Parallel'.
+## ref : https://www.rabbitmq.com/clustering.html#restarting
+##
+podManagementPolicy: OrderedReady
 
-  ## Amqp Tls port
-  ##
-  tlsPort: 5671
+## Pod labels. Evaluated as a template
+## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+##
+podLabels: {}
 
-  ## Dist port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  distPort: 25672
+## Pod annotations. Evaluated as a template
+## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
+##
+podAnnotations: {}
 
-  ## RabbitMQ Manager port
-  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
-  ##
-  managerPort: 15672
+## updateStrategy for RabbitMQ statefulset
+## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
+##
+updateStrategyType: RollingUpdate
 
-  ## Service labels
-  ##
-  labels: {}
+## Name of the priority class to be used by RabbitMQ pods, priority class needs to be created beforehand
+## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
+##
+priorityClassName: ""
 
-  ## Service annotations
-  ## Example:
-  ## annotations:
-  ##   service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
-  ##
-  annotations: {}
+## Affinity for pod assignment. Evaluated as a template
+## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
+##
+affinity: {}
 
-  ## Load Balancer sources
-  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
-  ##
-  # loadBalancerSourceRanges:
-  # - 10.10.10.0/24
+## Node labels for pod assignment. Evaluated as a template
+## ref: https://kubernetes.io/docs/user-guide/node-selection/
+##
+nodeSelector: {}
 
-  ## Extra ports to expose
-  # extraPorts:
-  # - name: new_svc_name
-  #   port: 1234
-  #   targetPort: 1234
-
-  ## Extra ports to be included in container spec, primarily informational
-  # extraContainerPorts:
-  # - name: new_svc_name
-  #   port: 1234
-  #   targetPort: 1234
-
-# Additional pod labels to apply
-podLabels: {}
+## Tolerations for pod assignment. Evaluated as a template
+## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+##
+tolerations: []
 
-## Pod Security Context
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
+## RabbitMQ pods' Security Context
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
 ##
-securityContext:
-  enabled: true
+podSecurityContext:
   fsGroup: 1001
   runAsUser: 1001
-  extra: {}
+
+## RabbitMQ containers' Security Context
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
+## Example:
+##   containerSecurityContext:
+##     capabilities:
+##       drop: ["NET_RAW"]
+##     readOnlyRootFilesystem: true
+##
+containerSecurityContext: {}
+
+## RabbitMQ containers' resource requests and limits
+## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+##
+resources:
+  # We usually recommend not to specify default resources and to leave this as a conscious
+  # choice for the user. This also increases chances charts run on environments with little
+  # resources, such as Minikube. If you do want to specify resources, uncomment the following
+  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
+  limits: {}
+  #   cpu: 1000m
+  #   memory: 2Gi
+  requests: {}
+  #   cpu: 1000m
+  #   memory: 2Gi
+
+## RabbitMQ containers' liveness and readiness probes.
+## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
+##
+livenessProbe:
+  enabled: true
+  initialDelaySeconds: 120
+  timeoutSeconds: 20
+  periodSeconds: 30
+  failureThreshold: 6
+  successThreshold: 1
+readinessProbe:
+  enabled: true
+  initialDelaySeconds: 10
+  timeoutSeconds: 20
+  periodSeconds: 30
+  failureThreshold: 3
+  successThreshold: 1
+
+## Custom Liveness probe
+##
+customLivenessProbe: {}
+
+## Custom Rediness probe
+##
+customReadinessProbe: {}
+
+## Add init containers to the pod
+## Example:
+## initContainers:
+##   - name: your-image-name
+##     image: your-image
+##     imagePullPolicy: Always
+##     ports:
+##       - name: portname
+##         containerPort: 1234
+##
+initContainers: {}
+
+## Add sidecars to the pod.
+## Example:
+## sidecars:
+##   - name: your-image-name
+##     image: your-image
+##     imagePullPolicy: Always
+##     ports:
+##       - name: portname
+##         containerPort: 1234
+##
+sidecars: {}
+
+## RabbitMQ pods ServiceAccount
+## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
+##
+serviceAccount:
+  ## Specifies whether a ServiceAccount should be created
+  ##
+  create: true
+  ## The name of the ServiceAccount to use.
+  ## If not set and create is true, a name is generated using the rabbitmq.fullname template
+  ##
+  # name:
+
+## Role Based Access
+## ref: https://kubernetes.io/docs/admin/authorization/rbac/
+##
+rbac:
+  ## Specifies whether RBAC rules should be created
+  ## binding RabbitMQ ServiceAccount to a role
+  ## that allows RabbitMQ pods querying the K8s API
+  ##
+  create: true
 
 persistence:
   ## this enables PVC templates that will create one per pod
@@ -314,9 +457,10 @@ persistence:
   ##
   # storageClass: "-"
   ## selector can be used to match an existing PersistentVolume
-  # selector:
-  #   matchLabels:
-  #     app: my-app
+  ## selector:
+  ##   matchLabels:
+  ##     app: my-app
+  selector: {}
   accessMode: ReadWriteOnce
 
   ## Existing PersistentVolumeClaims
@@ -324,30 +468,35 @@ persistence:
   ## So, for example, the name can depend on .Release or .Chart
   # existingClaim: ""
 
-  # If you change this value, you might have to adjust `rabbitmq.diskFreeLimit` as well.
+  ## If you change this value, you might have to adjust `rabbitmq.diskFreeLimit` as well.
+  ##
   size: 8Gi
 
-  # persistence directory, maps to the rabbitmq data directory
-  path: /opt/bitnami/rabbitmq/var/lib/rabbitmq
-
-## Configure resource requests and limits
-## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+## Pod Disruption Budget configuration
+## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
 ##
-resources: {}
+pdb:
+  create: false
+  ## Min number of pods that must still be available after the eviction
+  ##
+  minAvailable: 1
+  ## Max number of pods that can be unavailable after the eviction
+  ##
+  # maxUnavailable: 1
 
+## Network Policy configuration
+## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
+##
 networkPolicy:
-  ## Enable creation of NetworkPolicy resources. Only Ingress traffic is filtered for now.
-  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
+  ## Enable creation of NetworkPolicy resources
   ##
   enabled: false
-
   ## The Policy model to apply. When set to false, only pods with the correct
   ## client label will have network access to the ports RabbitMQ is listening
   ## on. When true, RabbitMQ will accept connections from any source
   ## (with the correct destination port).
   ##
   allowExternal: true
-
   ## Additional NetworkPolicy Ingress "from" rules to set. Note that all rules are OR-ed.
   ##
   # additionalRules:
@@ -359,46 +508,77 @@ networkPolicy:
   #      values:
   #        - frontend
 
-## Replica count, set to 1 to provide a default available cluster
-##
-replicas: 1
+## Kubernetes service type
+service:
+  type: ClusterIP
+  ## Amqp port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  port: 5672
 
-## Pod priority
-## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
-# priorityClassName: ""
+  ## Amqp Tls port
+  ##
+  tlsPort: 5671
 
-## updateStrategy for RabbitMQ statefulset
-## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
-##
-updateStrategy:
-  type: RollingUpdate
+  ## Node port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  # nodePort: 30672
 
-## Affinity for pod assignment
-## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-##
-affinity: {}
-## Node labels for pod assignment. Evaluated as a template.
-## ref: https://kubernetes.io/docs/user-guide/node-selection/
-##
-nodeSelector: {}
-## Tolerations for pod assignment. Evaluated as a template.
-## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
-##
-tolerations: {}
-## Pod Disruption Budget configuration
-## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
-## Example:
-## podDisruptionBudget:
-##    maxUnavailable: 1
-##    minAvailable: 1
-##
-podDisruptionBudget: {}
-## Annotations for Rabbitmq pods
-##
-podAnnotations: {}
+  ## Node port Tls
+  ##
+  # tlsNodePort: 30671
+
+  ## Dist port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  distPort: 25672
+
+  ## RabbitMQ Manager port
+  ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
+  ##
+  managerPort: 15672
+
+  ## RabbitMQ Prometheues metrics port
+  ##
+  metricsPort: 9419
+
+  ## Extra ports to expose
+  ## E.g.:
+  ## extraPorts:
+  ## - name: new_svc_name
+  ##   port: 1234
+  ##   targetPort: 1234
+  ##
+  extraPorts: {}
+
+  ## Load Balancer sources
+  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
+  ##
+  # loadBalancerSourceRanges:
+  # - 10.10.10.0/24
+
+  ## Set the ExternalIPs
+  ##
+  # externalIPs:
+
+  ## Set the LoadBalancerIP
+  ##
+  # loadBalancerIP:
+
+  ## Service labels. Evaluated as a template
+  ##
+  labels: {}
+
+  ## Service annotations. Evaluated as a template
+  ## Example:
+  ## annotations:
+  ##   service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
+  ##
+  annotations: {}
 
 ## Configure the ingress resource that allows you to access the
-## Wordpress installation. Set up the URL
+## RabbitMQ installation. Set up the URL
 ## ref: http://kubernetes.io/docs/user-guide/ingress/
 ##
 ingress:
@@ -406,88 +586,96 @@ ingress:
   ##
   enabled: false
 
-  ## The list of hostnames to be covered with this ingress record.
-  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
-  ## hostName: foo.bar.com
+  ## Set this to true in order to add the corresponding annotations for cert-manager
   ##
-  path: /
-
-  ## Set this to true in order to enable TLS on the ingress record
-  ## A side effect of this will be that the backend wordpress service will be connected at port 443
-  ##
-  tls: false
+  certManager: false
 
-  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
+  ## When the ingress is enabled, a host pointing to this will be created
   ##
-  tlsSecret: myTlsSecret
+  hostname: rabbitmq.local
 
   ## Ingress annotations done as key:value pairs
-  ## If you're using kube-lego, you will want to add:
-  ## kubernetes.io/tls-acme: true
-  ##
   ## For a full list of possible ingress annotations, please see
   ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
   ##
-  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
+  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
   ##
   annotations: {}
-  #  kubernetes.io/ingress.class: nginx
-  #  kubernetes.io/tls-acme: true
 
-## The following settings are to configure the frequency of the lifeness and readiness probes
-##
-livenessProbe:
-  enabled: true
-  initialDelaySeconds: 120
-  timeoutSeconds: 20
-  periodSeconds: 30
-  failureThreshold: 6
-  successThreshold: 1
-  commandOverride: []
+  ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
+  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
+  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
+  ##
+  tls: false
+
+  ## The list of additional hostnames to be covered with this ingress record.
+  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
+  ## extraHosts:
+  ## - name: rabbitmq.local
+  ##   path: /
+  ##
+
+  ## The tls configuration for additional hostnames to be covered with this ingress record.
+  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
+  ## extraTls:
+  ## - hosts:
+  ##     - rabbitmq.local
+  ##   secretName: rabbitmq.local-tls
+  ##
+
+  ## If you're providing your own certificates, please use this to add the certificates as secrets
+  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
+  ## -----BEGIN RSA PRIVATE KEY-----
+  ##
+  ## name should line up with a tlsSecret set further up
+  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
+  ##
+  ## It is also possible to create and manage the certificates outside of this helm chart
+  ## Please see README.md for more information
+  ##
+  secrets: []
+  ## - name: rabbitmq.local-tls
+  ##   key:
+  ##   certificate:
+  ##
 
-readinessProbe:
-  enabled: true
-  initialDelaySeconds: 10
-  timeoutSeconds: 20
-  periodSeconds: 30
-  failureThreshold: 3
-  successThreshold: 1
-  commandOverride: []
 
 ## Prometheus Metrics
 ##
 metrics:
   enabled: false
-  port: 9419
   plugins: "rabbitmq_prometheus"
   ## Prometheus pod annotations
   ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
   ##
   podAnnotations:
     prometheus.io/scrape: "true"
-    prometheus.io/port: "{{ .Values.metrics.port }}"
+    prometheus.io/port: "{{ .Values.service.metricsPort }}"
 
   ## Prometheus Service Monitor
   ## ref: https://github.com/coreos/prometheus-operator
-  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
   ##
   serviceMonitor:
     ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
     ##
     enabled: false
     ## Specify the namespace in which the serviceMonitor resource will be created
+    ##
     # namespace: ""
     ## Specify the interval at which metrics should be scraped
     ##
     interval: 30s
     ## Specify the timeout after which the scrape is ended
+    ##
     # scrapeTimeout: 30s
     ## Specify Metric Relabellings to add to the scrape endpoint
+    ##
     # relabellings:
     ## Specify honorLabels parameter to add the scrape endpoint
     ##
     honorLabels: false
     ## Specify the release for ServiceMonitor. Sometimes it should be custom for prometheus operator to work
+    ##
     # release: ""
     ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
     ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
@@ -516,14 +704,14 @@ metrics:
     #   - alert: ClusterDown
     #     expr: |
     #       sum(rabbitmq_running{service="{{ template "rabbitmq.fullname" . }}"})
-    #       < {{ .Values.replicas }}
+    #       < {{ .Values.replicaCount }}
     #     for: 5m
     #     labels:
     #       severity: error
     #     annotations:
     #       summary: Cluster down (instance {{ "{{ $labels.instance }}" }})
     #       description: |
-    #           Less than {{ .Values.replicas }} nodes running in RabbitMQ cluster
+    #           Less than {{ .Values.replicaCount }} nodes running in RabbitMQ cluster
     #           VALUE = {{ "{{ $value }}" }}
     #   - alert: ClusterPartition
     #     expr: rabbitmq_partitions{service="{{ template "rabbitmq.fullname" . }}"} > 0
@@ -560,53 +748,42 @@ metrics:
     #           VALUE = {{ "{{ $value }}" }}\n  LABELS: {{ "{{ $labels }}" }}
     rules: []
 
-##
-## Init containers parameters:
-## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
+## Init Container paramaters
+## Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each component
+## values from the securityContext section of the component
 ##
 volumePermissions:
   enabled: false
+  ## Bitnami Minideb image
+  ## ref: https://hub.docker.com/r/bitnami/minideb/tags/
+  ##
   image:
     registry: docker.io
     repository: bitnami/minideb
     tag: buster
+    ## Specify a imagePullPolicy
+    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
+    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
+    ##
     pullPolicy: Always
-    ## Optionally specify an array of imagePullSecrets.
-    ## Secrets must be manually created in the namespace.
+    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
     ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+    ## Example:
+    ## pullSecrets:
+    ##   - myRegistryKeySecretName
     ##
-    # pullSecrets:
-    #   - myRegistryKeySecretName
-  resources: {}
-
-## forceBoot: executes 'rabbitmqctl force_boot' to force boot cluster shut down unexpectedly in an
-## unknown order.
-## ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
-##
-forceBoot:
-  enabled: false
-
-## Optionally specify extra secrets to be created by the chart.
-## This can be useful when combined with load_definitions to automatically create the secret containing the definitions to be loaded.
-## Example:
-## extraSecrets:
-##   load-definition:
-##     load_definition.json: |
-##       {
-##         ...
-##       }
-##
-extraSecrets: {}
-
-## extraVolumes and extraVolumeMounts allows you to mount other volumes
-## Examples:
-## extraVolumeMounts:
-##   - name: extras
-##     mountPath: /usr/share/extras
-##     readOnly: true
-## extraVolumes:
-##   - name: extras
-##     emptyDir: {}
-##
-extraVolumeMounts: []
-extraVolumes: []
+    pullSecrets: []
+  ## Init Container resource requests and limits
+  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
+  ##
+  resources:
+    # We usually recommend not to specify default resources and to leave this as a conscious
+    # choice for the user. This also increases chances charts run on environments with little
+    # resources, such as Minikube. If you do want to specify resources, uncomment the following
+    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
+    limits: {}
+    #   cpu: 100m
+    #   memory: 128Mi
+    requests: {}
+    #   cpu: 100m
+    #   memory: 128Mi
