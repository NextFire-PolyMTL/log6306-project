commit fd0866819cebe152021cb70d82320b133deecbd7
Author: Miguel Ruiz <miruiz@vmware.com>
Date:   Thu Apr 28 21:14:40 2022 +0200

    [bitnami/mxnet] Standardisation + Refactor (#9793)
    
    * [bitnami/mxnet] Standardisation + Refactor
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Service changes
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Fix issues with namespace helper
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Regenerate README
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Update README.md with readme-generator-for-helm
    
    Signed-off-by: Bitnami Containers <containers@bitnami.com>
    
    * Apply suggestions
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Add missing references to namespace and common labels/annotations
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Remove comments from values.yaml
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Fix metadata and regenerate README
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Fix updateStrategy for deployment
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Fix indent
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * Update README.md with readme-generator-for-helm
    
    Signed-off-by: Bitnami Containers <containers@bitnami.com>
    
    * Fix spec.strategy
    
    Signed-off-by: Miguel Ruiz <miruiz@vmware.com>
    
    * [bitnami/mxnet] Update components versions
    
    Signed-off-by: Bitnami Containers <containers@bitnami.com>
    
    Co-authored-by: Bitnami Containers <containers@bitnami.com>

diff --git a/bitnami/mxnet/Chart.yaml b/bitnami/mxnet/Chart.yaml
index 4eb5cf823a..eeae8adf99 100644
--- a/bitnami/mxnet/Chart.yaml
+++ b/bitnami/mxnet/Chart.yaml
@@ -24,4 +24,4 @@ name: mxnet
 sources:
   - https://github.com/bitnami/bitnami-docker-mxnet
   - https://mxnet.apache.org/
-version: 2.4.17
+version: 3.0.0
diff --git a/bitnami/mxnet/README.md b/bitnami/mxnet/README.md
index 7537e3662c..df27f39250 100644
--- a/bitnami/mxnet/README.md
+++ b/bitnami/mxnet/README.md
@@ -64,139 +64,329 @@ The command removes all the Kubernetes components associated with the chart and
 
 ### Common parameters
 
-| Name               | Description                                                                                  | Value |
-| ------------------ | -------------------------------------------------------------------------------------------- | ----- |
-| `nameOverride`     | String to partially override common.names.fullname template (will maintain the release name) | `""`  |
-| `fullnameOverride` | String to fully override common.names.fullname template                                      | `""`  |
-| `extraDeploy`      | Array of extra objects to deploy with the release                                            | `[]`  |
+| Name                     | Description                                                                                  | Value           |
+| ------------------------ | -------------------------------------------------------------------------------------------- | --------------- |
+| `kubeVersion`            | Force target Kubernetes version (using Helm capabilities if not set)                         | `""`            |
+| `nameOverride`           | String to partially override common.names.fullname template (will maintain the release name) | `""`            |
+| `fullnameOverride`       | String to fully override common.names.fullname template                                      | `""`            |
+| `namespaceOverride`      | String to fully override common.names.namespace template                                     | `""`            |
+| `commonAnnotations`      | Annotations to add to all deployed objects                                                   | `{}`            |
+| `commonLabels`           | Labels to add to all deployed objects                                                        | `{}`            |
+| `extraDeploy`            | Array of extra objects to deploy with the release                                            | `[]`            |
+| `clusterDomain`          | Kubernetes cluster domain name                                                               | `cluster.local` |
+| `diagnosticMode.enabled` | Enable diagnostic mode (all probes will be disabled and the command will be overridden)      | `false`         |
+| `diagnosticMode.command` | Command to override all containers in the the deployment(s)/statefulset(s)                   | `["sleep"]`     |
+| `diagnosticMode.args`    | Args to override all containers in the the deployment(s)/statefulset(s)                      | `["infinity"]`  |
 
 
 ### Common Mxnet parameters
 
-| Name                                   | Description                                                                                           | Value                   |
-| -------------------------------------- | ----------------------------------------------------------------------------------------------------- | ----------------------- |
-| `image.registry`                       | Apache MXNet (Incubating) image registry                                                              | `docker.io`             |
-| `image.repository`                     | Apache MXNet (Incubating) image repository                                                            | `bitnami/mxnet`         |
-| `image.tag`                            | Apache MXNet (Incubating) image tag (immutable tags are recommended)                                  | `1.9.0-debian-10-r16`   |
-| `image.pullPolicy`                     | Image pull policy                                                                                     | `IfNotPresent`          |
-| `image.pullSecrets`                    | Specify docker-registry secret names as an array                                                      | `[]`                    |
-| `image.debug`                          | Specify if debug logs should be enabled                                                               | `false`                 |
-| `git.registry`                         | Git image registry                                                                                    | `docker.io`             |
-| `git.repository`                       | Git image repository                                                                                  | `bitnami/git`           |
-| `git.tag`                              | Git image tag (immutable tags are recommended)                                                        | `2.34.1-debian-10-r44`  |
-| `git.pullPolicy`                       | Git image pull policy                                                                                 | `IfNotPresent`          |
-| `git.pullSecrets`                      | Specify docker-registry secret names as an array                                                      | `[]`                    |
-| `volumePermissions.enabled`            | Enable init container that changes volume permissions in the data directory                           | `false`                 |
-| `volumePermissions.image.registry`     | Init container volume-permissions image registry                                                      | `docker.io`             |
-| `volumePermissions.image.repository`   | Init container volume-permissions image repository                                                    | `bitnami/bitnami-shell` |
-| `volumePermissions.image.tag`          | Init container volume-permissions image tag (immutable tags are recommended)                          | `10-debian-10-r305`     |
-| `volumePermissions.image.pullPolicy`   | Init container volume-permissions image pull policy                                                   | `IfNotPresent`          |
-| `volumePermissions.image.pullSecrets`  | Specify docker-registry secret names as an array                                                      | `[]`                    |
-| `volumePermissions.resources.limits`   | The resources limits for the container                                                                | `{}`                    |
-| `volumePermissions.resources.requests` | The requested resources for the container                                                             | `{}`                    |
-| `service.type`                         | Kubernetes service type                                                                               | `ClusterIP`             |
-| `service.port`                         | Scheduler Service port                                                                                | `9092`                  |
-| `service.annotations`                  | Provide any additional annotations which may be required.                                             | `{}`                    |
-| `entrypoint`                           | The main entrypoint of your app, this will be executed as:                                            | `{}`                    |
-| `mode`                                 | Apache MXNet (Incubating) deployment mode. Can be `standalone` or `distributed`                       | `standalone`            |
-| `existingSecret`                       | Name of a secret with sensitive data to mount in the pods                                             | `""`                    |
-| `configMap`                            | Name of an existing config map containing all the files you want to load in Apache MXNet (Incubating) | `""`                    |
-| `hostAliases`                          | Deployment pod host aliases                                                                           | `[]`                    |
-| `cloneFilesFromGit.enabled`            | Enable in order to download files from git repository                                                 | `false`                 |
-| `cloneFilesFromGit.extraVolumeMounts`  | Add extra volume mounts for the GIT container                                                         | `[]`                    |
-| `commonExtraEnvVars`                   | Additional environment variables for all node types                                                   | `[]`                    |
-| `podManagementPolicy`                  | StatefulSet (worker and server nodes) pod management policy                                           | `Parallel`              |
-| `podAffinityPreset`                    | Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`                   | `""`                    |
-| `podAntiAffinityPreset`                | Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`              | `soft`                  |
-| `nodeAffinityPreset.type`              | Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`             | `""`                    |
-| `nodeAffinityPreset.key`               | Node label key to match Ignored if `affinity` is set.                                                 | `""`                    |
-| `nodeAffinityPreset.values`            | Node label values to match. Ignored if `affinity` is set.                                             | `[]`                    |
-| `affinity`                             | Affinity for pod assignment. Evaluated as a template.                                                 | `{}`                    |
-| `nodeSelector`                         | Node labels for pod assignment. Evaluated as a template.                                              | `{}`                    |
-| `tolerations`                          | Tolerations for pod assignment. Evaluated as a template.                                              | `[]`                    |
-| `resources.limits`                     | The resources limits for the Mxnet container                                                          | `{}`                    |
-| `resources.requests`                   | The requested resources for the Mxnet container                                                       | `{}`                    |
-| `securityContext.enabled`              | Enable security context                                                                               | `true`                  |
-| `securityContext.fsGroup`              | Group ID for the container                                                                            | `1001`                  |
-| `securityContext.runAsUser`            | User ID for the container                                                                             | `1001`                  |
-| `livenessProbe.enabled`                | Enable livenessProbe                                                                                  | `true`                  |
-| `livenessProbe.initialDelaySeconds`    | Initial delay seconds for livenessProbe                                                               | `5`                     |
-| `livenessProbe.periodSeconds`          | Period seconds for livenessProbe                                                                      | `5`                     |
-| `livenessProbe.timeoutSeconds`         | Timeout seconds for livenessProbe                                                                     | `15`                    |
-| `livenessProbe.failureThreshold`       | Failure threshold for livenessProbe                                                                   | `5`                     |
-| `livenessProbe.successThreshold`       | Success threshold for livenessProbe                                                                   | `1`                     |
-| `readinessProbe.enabled`               | Enable readinessProbe                                                                                 | `true`                  |
-| `readinessProbe.initialDelaySeconds`   | Initial delay seconds for readinessProbe                                                              | `5`                     |
-| `readinessProbe.periodSeconds`         | Period seconds for readinessProbe                                                                     | `5`                     |
-| `readinessProbe.timeoutSeconds`        | Timeout seconds for readinessProbe                                                                    | `15`                    |
-| `readinessProbe.failureThreshold`      | Failure threshold for readinessProbe                                                                  | `5`                     |
-| `readinessProbe.successThreshold`      | Success threshold for readinessProbe                                                                  | `1`                     |
-| `persistence.enabled`                  | Use a PVC to persist data                                                                             | `false`                 |
-| `persistence.mountPath`                | Path to mount the volume at                                                                           | `/bitnami/mxnet`        |
-| `persistence.accessModes`              | Persistent Volume Access Mode                                                                         | `["ReadWriteOnce"]`     |
-| `persistence.size`                     | Size of data volume                                                                                   | `8Gi`                   |
-| `persistence.annotations`              | Persistent Volume annotations                                                                         | `{}`                    |
-| `sidecars`                             | Attach additional containers to the pods (scheduler, worker and server nodes)                         | `[]`                    |
-| `initContainers`                       | Attach additional init containers to the pods (scheduler, worker and server nodes)                    | `[]`                    |
-| `extraVolumes`                         | Array to add extra volumes (evaluated as a template)                                                  | `[]`                    |
-| `extraVolumeMounts`                    | Array to add extra mounts (normally used with extraVolumes, evaluated as a template)                  | `[]`                    |
+| Name                                  | Description                                                                                           | Value                  |
+| ------------------------------------- | ----------------------------------------------------------------------------------------------------- | ---------------------- |
+| `image.registry`                      | Apache MXNet (Incubating) image registry                                                              | `docker.io`            |
+| `image.repository`                    | Apache MXNet (Incubating) image repository                                                            | `bitnami/mxnet`        |
+| `image.tag`                           | Apache MXNet (Incubating) image tag (immutable tags are recommended)                                  | `1.9.0-debian-10-r117` |
+| `image.pullPolicy`                    | Image pull policy                                                                                     | `IfNotPresent`         |
+| `image.pullSecrets`                   | Specify docker-registry secret names as an array                                                      | `[]`                   |
+| `image.debug`                         | Specify if debug logs should be enabled                                                               | `false`                |
+| `entrypoint`                          | The main entrypoint of your app, this will be executed as:                                            | `{}`                   |
+| `mode`                                | Apache MXNet (Incubating) deployment mode. Can be `standalone` or `distributed`                       | `standalone`           |
+| `existingSecret`                      | Name of a secret with sensitive data to mount in the pods                                             | `""`                   |
+| `configMap`                           | Name of an existing config map containing all the files you want to load in Apache MXNet (Incubating) | `""`                   |
+| `cloneFilesFromGit.enabled`           | Enable in order to download files from git repository                                                 | `false`                |
+| `cloneFilesFromGit.repository`        | Repository to clone                                                                                   | `""`                   |
+| `cloneFilesFromGit.revision`          | Branch name to clone                                                                                  | `master`               |
+| `cloneFilesFromGit.extraVolumeMounts` | Add extra volume mounts for the GIT container                                                         | `[]`                   |
+| `persistence.enabled`                 | Use a PVC to persist data                                                                             | `false`                |
+| `persistence.storageClass`            | discourse & sidekiq data Persistent Volume Storage Class                                              | `""`                   |
+| `persistence.existingClaim`           | Use a existing PVC which must be created manually before bound                                        | `""`                   |
+| `persistence.mountPath`               | Path to mount the volume at                                                                           | `/bitnami/mxnet`       |
+| `persistence.accessModes`             | Persistent Volume Access Mode                                                                         | `["ReadWriteOnce"]`    |
+| `persistence.size`                    | Size of data volume                                                                                   | `8Gi`                  |
+| `persistence.annotations`             | Persistent Volume annotations                                                                         | `{}`                   |
+| `extraEnvVars`                        | Array with extra environment variables to add to all the pods                                         | `[]`                   |
+| `extraEnvVarsCM`                      | Name of existing ConfigMap containing extra env vars for all the pods                                 | `""`                   |
+| `extraEnvVarsSecret`                  | Name of existing Secret containing extra env vars for all the pods                                    | `""`                   |
+| `extraVolumes`                        | Array to add extra volumes (evaluated as a template)                                                  | `[]`                   |
+| `extraVolumeMounts`                   | Array to add extra mounts (normally used with extraVolumes, evaluated as a template)                  | `[]`                   |
+| `sidecars`                            | Attach additional containers to the pods (scheduler, worker and server nodes)                         | `[]`                   |
+| `initContainers`                      | Attach additional init containers to the pods (scheduler, worker and server nodes)                    | `[]`                   |
+
+
+### Mxnet Standalone parameters (only for standalone mode)
+
+| Name                                               | Description                                                                                          | Value           |
+| -------------------------------------------------- | ---------------------------------------------------------------------------------------------------- | --------------- |
+| `standalone.affinity`                              | Affinity for Mxnet standalone pods assignment                                                        | `{}`            |
+| `standalone.nodeAffinityPreset.type`               | Node affinity preset type. Ignored if `standalone.affinity` is set. Allowed values: `soft` or `hard` | `""`            |
+| `standalone.nodeAffinityPreset.key`                | Node label key to match. Ignored if `standalone.affinity` is set                                     | `""`            |
+| `standalone.nodeAffinityPreset.values`             | Node label values to match. Ignored if `standalone.affinity` is set                                  | `[]`            |
+| `standalone.nodeSelector`                          | Node labels for Mxnet standalone pods assignment                                                     | `{}`            |
+| `standalone.podAffinityPreset`                     | Pod affinity preset. Ignored if `standalone.affinity` is set. Allowed values: `soft` or `hard`       | `""`            |
+| `standalone.podAntiAffinityPreset`                 | Pod anti-affinity preset. Ignored if `standalone.affinity` is set. Allowed values: `soft` or `hard`  | `soft`          |
+| `standalone.hostAliases`                           | Mxnet standalone pods host aliases                                                                   | `[]`            |
+| `standalone.tolerations`                           | Tolerations for Mxnet standalone pods assignment                                                     | `[]`            |
+| `standalone.podAnnotations`                        | Annotations for Mxnet standalone pods                                                                | `{}`            |
+| `standalone.podLabels`                             | Extra labels for Mxnet standalone pods                                                               | `{}`            |
+| `standalone.podSecurityContext.enabled`            | Enabled Mxnet standalone pods' Security Context                                                      | `true`          |
+| `standalone.podSecurityContext.fsGroup`            | Set Mxnet standalone pod's Security Context fsGroup                                                  | `1001`          |
+| `standalone.containerSecurityContext.enabled`      | Enabled Mxnet standalone containers' Security Context                                                | `true`          |
+| `standalone.containerSecurityContext.runAsUser`    | Set Mxnet standalone containers' Security Context runAsUser                                          | `1001`          |
+| `standalone.containerSecurityContext.runAsNonRoot` | Set Mxnet standalone container's Security Context runAsNonRoot                                       | `true`          |
+| `standalone.command`                               | Override default container command (useful when using custom images)                                 | `[]`            |
+| `standalone.args`                                  | Override default container args (useful when using custom images)                                    | `[]`            |
+| `standalone.lifecycleHooks`                        | for the Mxnet standalone container(s) to automate configuration before or after startup              | `{}`            |
+| `standalone.extraEnvVars`                          | Array with extra environment variables to add to Mxnet standalone nodes                              | `[]`            |
+| `standalone.extraEnvVarsCM`                        | Name of existing ConfigMap containing extra env vars for Mxnet standalone nodes                      | `""`            |
+| `standalone.extraEnvVarsSecret`                    | Name of existing Secret containing extra env vars for Mxnet standalone nodes                         | `""`            |
+| `standalone.extraVolumes`                          | Optionally specify extra list of additional volumes for the Mxnet standalone pod(s)                  | `[]`            |
+| `standalone.extraVolumeMounts`                     | Optionally specify extra list of additional volumeMounts for the Mxnet standalone container(s)       | `[]`            |
+| `standalone.containerPorts.mxnet`                  | Mxnet container port                                                                                 | `9092`          |
+| `standalone.sidecars`                              | Add additional sidecar containers to the Mxnet standalone pod(s)                                     | `[]`            |
+| `standalone.initContainers`                        | Add additional init containers to the Mxnet standalone pod(s)                                        | `[]`            |
+| `standalone.updateStrategy.type`                   | Mxnet standalone deployment strategy type.                                                           | `RollingUpdate` |
+| `standalone.priorityClassName`                     | Mxnet standalone pods' priorityClassName                                                             | `""`            |
+| `standalone.schedulerName`                         | Name of the k8s scheduler (other than default)                                                       | `""`            |
+| `standalone.terminationGracePeriodSeconds`         | In seconds, time the given to the Mxnet standalone pod needs to terminate gracefully                 | `""`            |
+| `standalone.topologySpreadConstraints`             | Topology Spread Constraints for pod assignment                                                       | `[]`            |
+| `standalone.resources.limits`                      | The resources limits for the Mxnet container                                                         | `{}`            |
+| `standalone.resources.requests`                    | The requested resources for the Mxnet container                                                      | `{}`            |
+| `standalone.startupProbe.enabled`                  | Enable startupProbe                                                                                  | `false`         |
+| `standalone.startupProbe.initialDelaySeconds`      | Initial delay seconds for startupProbe                                                               | `5`             |
+| `standalone.startupProbe.periodSeconds`            | Period seconds for startupProbe                                                                      | `5`             |
+| `standalone.startupProbe.timeoutSeconds`           | Timeout seconds for startupProbe                                                                     | `15`            |
+| `standalone.startupProbe.failureThreshold`         | Failure threshold for startupProbe                                                                   | `5`             |
+| `standalone.startupProbe.successThreshold`         | Success threshold for startupProbe                                                                   | `1`             |
+| `standalone.livenessProbe.enabled`                 | Enable livenessProbe                                                                                 | `true`          |
+| `standalone.livenessProbe.initialDelaySeconds`     | Initial delay seconds for livenessProbe                                                              | `5`             |
+| `standalone.livenessProbe.periodSeconds`           | Period seconds for livenessProbe                                                                     | `5`             |
+| `standalone.livenessProbe.timeoutSeconds`          | Timeout seconds for livenessProbe                                                                    | `15`            |
+| `standalone.livenessProbe.failureThreshold`        | Failure threshold for livenessProbe                                                                  | `5`             |
+| `standalone.livenessProbe.successThreshold`        | Success threshold for livenessProbe                                                                  | `1`             |
+| `standalone.readinessProbe.enabled`                | Enable readinessProbe                                                                                | `true`          |
+| `standalone.readinessProbe.initialDelaySeconds`    | Initial delay seconds for readinessProbe                                                             | `5`             |
+| `standalone.readinessProbe.periodSeconds`          | Period seconds for readinessProbe                                                                    | `5`             |
+| `standalone.readinessProbe.timeoutSeconds`         | Timeout seconds for readinessProbe                                                                   | `15`            |
+| `standalone.readinessProbe.failureThreshold`       | Failure threshold for readinessProbe                                                                 | `5`             |
+| `standalone.readinessProbe.successThreshold`       | Success threshold for readinessProbe                                                                 | `1`             |
+| `standalone.customStartupProbe`                    | Custom liveness probe for the Web component                                                          | `{}`            |
+| `standalone.customLivenessProbe`                   | Custom liveness probe for the Web component                                                          | `{}`            |
+| `standalone.customReadinessProbe`                  | Custom readiness probe for the Web component                                                         | `{}`            |
 
 
 ### Mxnet Server parameters (only for distributed mode)
 
-| Name                               | Description                                                                                            | Value  |
-| ---------------------------------- | ------------------------------------------------------------------------------------------------------ | ------ |
-| `server.replicaCount`              | Number of Server nodes that will execute your code                                                     | `1`    |
-| `server.extraEnvVars`              | Extra environment variables to add to the Server nodes                                                 | `[]`   |
-| `server.hostAliases`               | Deployment pod host aliases                                                                            | `[]`   |
-| `server.resources.limits`          | The resources limits for the Mxnet Server container                                                    | `{}`   |
-| `server.resources.requests`        | The requested resources for the Mxnet Server container                                                 | `{}`   |
-| `server.podAffinityPreset`         | Mxnet Server pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`       | `""`   |
-| `server.podAntiAffinityPreset`     | Mxnet Server pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`  | `soft` |
-| `server.nodeAffinityPreset.type`   | Mxnet Server node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard` | `""`   |
-| `server.nodeAffinityPreset.key`    | Mxnet Server node label key to match Ignored if `affinity` is set.                                     | `""`   |
-| `server.nodeAffinityPreset.values` | Mxnet Server node label values to match. Ignored if `affinity` is set.                                 | `[]`   |
-| `server.affinity`                  | Mxnet Server affinity for pod assignment                                                               | `{}`   |
-| `server.nodeSelector`              | Mxnet Server node labels for pod assignment                                                            | `{}`   |
-| `server.tolerations`               | Mxnet Server tolerations for pod assignment                                                            | `[]`   |
+| Name                                           | Description                                                                                      | Value           |
+| ---------------------------------------------- | ------------------------------------------------------------------------------------------------ | --------------- |
+| `server.replicaCount`                          | Number of Server nodes that will execute your code                                               | `1`             |
+| `server.affinity`                              | Affinity for Mxnet server pods assignment                                                        | `{}`            |
+| `server.nodeAffinityPreset.type`               | Node affinity preset type. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard` | `""`            |
+| `server.nodeAffinityPreset.key`                | Node label key to match. Ignored if `server.affinity` is set                                     | `""`            |
+| `server.nodeAffinityPreset.values`             | Node label values to match. Ignored if `server.affinity` is set                                  | `[]`            |
+| `server.nodeSelector`                          | Node labels for Mxnet server pods assignment                                                     | `{}`            |
+| `server.podAffinityPreset`                     | Pod affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`       | `""`            |
+| `server.podAntiAffinityPreset`                 | Pod anti-affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`  | `soft`          |
+| `server.hostAliases`                           | Mxnet server pods host aliases                                                                   | `[]`            |
+| `server.tolerations`                           | Tolerations for Mxnet server pods assignment                                                     | `[]`            |
+| `server.podAnnotations`                        | Annotations for Mxnet server pods                                                                | `{}`            |
+| `server.podLabels`                             | Extra labels for Mxnet server pods                                                               | `{}`            |
+| `server.podSecurityContext.enabled`            | Enabled Mxnet server pods' Security Context                                                      | `true`          |
+| `server.podSecurityContext.fsGroup`            | Set Mxnet server pod's Security Context fsGroup                                                  | `1001`          |
+| `server.containerSecurityContext.enabled`      | Enabled Mxnet server containers' Security Context                                                | `true`          |
+| `server.containerSecurityContext.runAsUser`    | Set Mxnet server containers' Security Context runAsUser                                          | `1001`          |
+| `server.containerSecurityContext.runAsNonRoot` | Set Mxnet server container's Security Context runAsNonRoot                                       | `true`          |
+| `server.command`                               | Override default container command (useful when using custom images)                             | `[]`            |
+| `server.args`                                  | Override default container args (useful when using custom images)                                | `[]`            |
+| `server.lifecycleHooks`                        | for the Mxnet server container(s) to automate configuration before or after startup              | `{}`            |
+| `server.extraEnvVars`                          | Array with extra environment variables to add to Mxnet server nodes                              | `[]`            |
+| `server.extraEnvVarsCM`                        | Name of existing ConfigMap containing extra env vars for Mxnet server nodes                      | `""`            |
+| `server.extraEnvVarsSecret`                    | Name of existing Secret containing extra env vars for Mxnet server nodes                         | `""`            |
+| `server.extraVolumes`                          | Optionally specify extra list of additional volumes for the Mxnet server pod(s)                  | `[]`            |
+| `server.extraVolumeMounts`                     | Optionally specify extra list of additional volumeMounts for the Mxnet server container(s)       | `[]`            |
+| `server.sidecars`                              | Add additional sidecar containers to the Mxnet server pod(s)                                     | `[]`            |
+| `server.initContainers`                        | Add additional init containers to the Mxnet server pod(s)                                        | `[]`            |
+| `server.updateStrategy.type`                   | Mxnet server deployment strategy type.                                                           | `RollingUpdate` |
+| `server.priorityClassName`                     | Mxnet server pods' priorityClassName                                                             | `""`            |
+| `server.schedulerName`                         | Name of the k8s scheduler (other than default)                                                   | `""`            |
+| `server.terminationGracePeriodSeconds`         | In seconds, time the given to the Mxnet server pod needs to terminate gracefully                 | `""`            |
+| `server.topologySpreadConstraints`             | Topology Spread Constraints for pod assignment                                                   | `[]`            |
+| `server.podManagementPolicy`                   | podManagementPolicy to manage scaling operation of Mxnet server pods                             | `""`            |
+| `server.resources.limits`                      | The resources limits for the Mxnet container                                                     | `{}`            |
+| `server.resources.requests`                    | The requested resources for the Mxnet container                                                  | `{}`            |
+| `server.startupProbe.enabled`                  | Enable startupProbe                                                                              | `false`         |
+| `server.startupProbe.initialDelaySeconds`      | Initial delay seconds for startupProbe                                                           | `5`             |
+| `server.startupProbe.periodSeconds`            | Period seconds for startupProbe                                                                  | `5`             |
+| `server.startupProbe.timeoutSeconds`           | Timeout seconds for startupProbe                                                                 | `15`            |
+| `server.startupProbe.failureThreshold`         | Failure threshold for startupProbe                                                               | `5`             |
+| `server.startupProbe.successThreshold`         | Success threshold for startupProbe                                                               | `1`             |
+| `server.livenessProbe.enabled`                 | Enable livenessProbe                                                                             | `true`          |
+| `server.livenessProbe.initialDelaySeconds`     | Initial delay seconds for livenessProbe                                                          | `5`             |
+| `server.livenessProbe.periodSeconds`           | Period seconds for livenessProbe                                                                 | `5`             |
+| `server.livenessProbe.timeoutSeconds`          | Timeout seconds for livenessProbe                                                                | `15`            |
+| `server.livenessProbe.failureThreshold`        | Failure threshold for livenessProbe                                                              | `5`             |
+| `server.livenessProbe.successThreshold`        | Success threshold for livenessProbe                                                              | `1`             |
+| `server.readinessProbe.enabled`                | Enable readinessProbe                                                                            | `true`          |
+| `server.readinessProbe.initialDelaySeconds`    | Initial delay seconds for readinessProbe                                                         | `5`             |
+| `server.readinessProbe.periodSeconds`          | Period seconds for readinessProbe                                                                | `5`             |
+| `server.readinessProbe.timeoutSeconds`         | Timeout seconds for readinessProbe                                                               | `15`            |
+| `server.readinessProbe.failureThreshold`       | Failure threshold for readinessProbe                                                             | `5`             |
+| `server.readinessProbe.successThreshold`       | Success threshold for readinessProbe                                                             | `1`             |
+| `server.customStartupProbe`                    | Custom liveness probe for the Web component                                                      | `{}`            |
+| `server.customLivenessProbe`                   | Custom liveness probe for the Web component                                                      | `{}`            |
+| `server.customReadinessProbe`                  | Custom readiness probe for the Web component                                                     | `{}`            |
 
 
 ### Mxnet Worker parameters (only for distributed mode)
 
-| Name                               | Description                                                                                            | Value  |
-| ---------------------------------- | ------------------------------------------------------------------------------------------------------ | ------ |
-| `worker.replicaCount`              | Number of Worker nodes that will execute your code                                                     | `1`    |
-| `worker.hostAliases`               | Add deployment host aliases                                                                            | `[]`   |
-| `worker.extraEnvVars`              | Extra environment variables to add to the Server nodes                                                 | `[]`   |
-| `worker.resources.limits`          | The resources limits for the Mxnet Worker container                                                    | `{}`   |
-| `worker.resources.requests`        | The requested resources for the Mxnet Worker container                                                 | `{}`   |
-| `worker.podAffinityPreset`         | Mxnet Worker pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`       | `""`   |
-| `worker.podAntiAffinityPreset`     | Mxnet Worker pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`  | `soft` |
-| `worker.nodeAffinityPreset.type`   | Mxnet Worker node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard` | `""`   |
-| `worker.nodeAffinityPreset.key`    | Mxnet Worker node label key to match Ignored if `affinity` is set.                                     | `""`   |
-| `worker.nodeAffinityPreset.values` | Mxnet Worker node label values to match. Ignored if `affinity` is set.                                 | `[]`   |
-| `worker.affinity`                  | Mxnet Worker affinity for pod assignment                                                               | `{}`   |
-| `worker.nodeSelector`              | Mxnet Worker node labels for pod assignment                                                            | `{}`   |
-| `worker.tolerations`               | Mxnet Worker tolerations for pod assignment                                                            | `[]`   |
+| Name                                           | Description                                                                                      | Value           |
+| ---------------------------------------------- | ------------------------------------------------------------------------------------------------ | --------------- |
+| `worker.replicaCount`                          | Number of Worker nodes that will execute your code                                               | `1`             |
+| `worker.affinity`                              | Affinity for Mxnet worker pods assignment                                                        | `{}`            |
+| `worker.nodeAffinityPreset.type`               | Node affinity preset type. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard` | `""`            |
+| `worker.nodeAffinityPreset.key`                | Node label key to match. Ignored if `worker.affinity` is set                                     | `""`            |
+| `worker.nodeAffinityPreset.values`             | Node label values to match. Ignored if `worker.affinity` is set                                  | `[]`            |
+| `worker.nodeSelector`                          | Node labels for Mxnet worker pods assignment                                                     | `{}`            |
+| `worker.podAffinityPreset`                     | Pod affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`       | `""`            |
+| `worker.podAntiAffinityPreset`                 | Pod anti-affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`  | `soft`          |
+| `worker.hostAliases`                           | Mxnet worker pods host aliases                                                                   | `[]`            |
+| `worker.tolerations`                           | Tolerations for Mxnet worker pods assignment                                                     | `[]`            |
+| `worker.podAnnotations`                        | Annotations for Mxnet worker pods                                                                | `{}`            |
+| `worker.podLabels`                             | Extra labels for Mxnet worker pods                                                               | `{}`            |
+| `worker.podSecurityContext.enabled`            | Enabled Mxnet worker pods' Security Context                                                      | `true`          |
+| `worker.podSecurityContext.fsGroup`            | Set Mxnet worker pod's Security Context fsGroup                                                  | `1001`          |
+| `worker.containerSecurityContext.enabled`      | Enabled Mxnet worker containers' Security Context                                                | `true`          |
+| `worker.containerSecurityContext.runAsUser`    | Set Mxnet worker containers' Security Context runAsUser                                          | `1001`          |
+| `worker.containerSecurityContext.runAsNonRoot` | Set Mxnet worker container's Security Context runAsNonRoot                                       | `true`          |
+| `worker.command`                               | Override default container command (useful when using custom images)                             | `[]`            |
+| `worker.args`                                  | Override default container args (useful when using custom images)                                | `[]`            |
+| `worker.lifecycleHooks`                        | for the Mxnet worker container(s) to automate configuration before or after startup              | `{}`            |
+| `worker.extraEnvVars`                          | Array with extra environment variables to add to Mxnet worker nodes                              | `[]`            |
+| `worker.extraEnvVarsCM`                        | Name of existing ConfigMap containing extra env vars for Mxnet worker nodes                      | `""`            |
+| `worker.extraEnvVarsSecret`                    | Name of existing Secret containing extra env vars for Mxnet worker nodes                         | `""`            |
+| `worker.extraVolumes`                          | Optionally specify extra list of additional volumes for the Mxnet worker pod(s)                  | `[]`            |
+| `worker.extraVolumeMounts`                     | Optionally specify extra list of additional volumeMounts for the Mxnet worker container(s)       | `[]`            |
+| `worker.sidecars`                              | Add additional sidecar containers to the Mxnet worker pod(s)                                     | `[]`            |
+| `worker.initContainers`                        | Add additional init containers to the Mxnet worker pod(s)                                        | `[]`            |
+| `worker.updateStrategy.type`                   | Mxnet worker deployment strategy type.                                                           | `RollingUpdate` |
+| `worker.priorityClassName`                     | Mxnet worker pods' priorityClassName                                                             | `""`            |
+| `worker.schedulerName`                         | Name of the k8s scheduler (other than default)                                                   | `""`            |
+| `worker.terminationGracePeriodSeconds`         | In seconds, time the given to the Mxnet worker pod needs to terminate gracefully                 | `""`            |
+| `worker.topologySpreadConstraints`             | Topology Spread Constraints for pod assignment                                                   | `[]`            |
+| `worker.podManagementPolicy`                   | podManagementPolicy to manage scaling operation of Mxnet worker pods                             | `""`            |
+| `worker.resources.limits`                      | The resources limits for the Mxnet container                                                     | `{}`            |
+| `worker.resources.requests`                    | The requested resources for the Mxnet container                                                  | `{}`            |
+| `worker.startupProbe.enabled`                  | Enable startupProbe                                                                              | `false`         |
+| `worker.startupProbe.initialDelaySeconds`      | Initial delay seconds for startupProbe                                                           | `5`             |
+| `worker.startupProbe.periodSeconds`            | Period seconds for startupProbe                                                                  | `5`             |
+| `worker.startupProbe.timeoutSeconds`           | Timeout seconds for startupProbe                                                                 | `15`            |
+| `worker.startupProbe.failureThreshold`         | Failure threshold for startupProbe                                                               | `5`             |
+| `worker.startupProbe.successThreshold`         | Success threshold for startupProbe                                                               | `1`             |
+| `worker.livenessProbe.enabled`                 | Enable livenessProbe                                                                             | `true`          |
+| `worker.livenessProbe.initialDelaySeconds`     | Initial delay seconds for livenessProbe                                                          | `5`             |
+| `worker.livenessProbe.periodSeconds`           | Period seconds for livenessProbe                                                                 | `5`             |
+| `worker.livenessProbe.timeoutSeconds`          | Timeout seconds for livenessProbe                                                                | `15`            |
+| `worker.livenessProbe.failureThreshold`        | Failure threshold for livenessProbe                                                              | `5`             |
+| `worker.livenessProbe.successThreshold`        | Success threshold for livenessProbe                                                              | `1`             |
+| `worker.readinessProbe.enabled`                | Enable readinessProbe                                                                            | `true`          |
+| `worker.readinessProbe.initialDelaySeconds`    | Initial delay seconds for readinessProbe                                                         | `5`             |
+| `worker.readinessProbe.periodSeconds`          | Period seconds for readinessProbe                                                                | `5`             |
+| `worker.readinessProbe.timeoutSeconds`         | Timeout seconds for readinessProbe                                                               | `15`            |
+| `worker.readinessProbe.failureThreshold`       | Failure threshold for readinessProbe                                                             | `5`             |
+| `worker.readinessProbe.successThreshold`       | Success threshold for readinessProbe                                                             | `1`             |
+| `worker.customStartupProbe`                    | Custom liveness probe for the Web component                                                      | `{}`            |
+| `worker.customLivenessProbe`                   | Custom liveness probe for the Web component                                                      | `{}`            |
+| `worker.customReadinessProbe`                  | Custom readiness probe for the Web component                                                     | `{}`            |
 
 
 ### Mxnet Scheduler parameters (only for distributed mode)
 
-| Name                                  | Description                                                                                               | Value  |
-| ------------------------------------- | --------------------------------------------------------------------------------------------------------- | ------ |
-| `scheduler.port`                      | The port used to communicate with the scheduler                                                           | `9092` |
-| `scheduler.hostAliases`               | Deployment pod host aliases                                                                               | `[]`   |
-| `scheduler.extraEnvVars`              | An array to add extra env vars                                                                            | `[]`   |
-| `scheduler.resources.limits`          | The resources limits for the Mxnet Scheduler container                                                    | `{}`   |
-| `scheduler.resources.requests`        | The requested resources for the Mxnet Scheduler container                                                 | `{}`   |
-| `scheduler.podAffinityPreset`         | Mxnet Scheduler pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`       | `""`   |
-| `scheduler.podAntiAffinityPreset`     | Mxnet Scheduler pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`  | `soft` |
-| `scheduler.nodeAffinityPreset.type`   | Mxnet Scheduler node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard` | `""`   |
-| `scheduler.nodeAffinityPreset.key`    | Mxnet Scheduler node label key to match Ignored if `affinity` is set.                                     | `""`   |
-| `scheduler.nodeAffinityPreset.values` | Mxnet Scheduler node label values to match. Ignored if `affinity` is set.                                 | `[]`   |
-| `scheduler.affinity`                  | Mxnet Scheduler affinity for pod assignment                                                               | `{}`   |
-| `scheduler.nodeSelector`              | Mxnet Scheduler node labels for pod assignment                                                            | `{}`   |
-| `scheduler.tolerations`               | Mxnet Scheduler tolerations for pod assignment                                                            | `[]`   |
+| Name                                              | Description                                                                                         | Value           |
+| ------------------------------------------------- | --------------------------------------------------------------------------------------------------- | --------------- |
+| `scheduler.containerPorts.mxnet`                  | The port used to communicate with the scheduler                                                     | `9092`          |
+| `scheduler.affinity`                              | Affinity for Mxnet scheduler pods assignment                                                        | `{}`            |
+| `scheduler.nodeAffinityPreset.type`               | Node affinity preset type. Ignored if `scheduler.affinity` is set. Allowed values: `soft` or `hard` | `""`            |
+| `scheduler.nodeAffinityPreset.key`                | Node label key to match. Ignored if `scheduler.affinity` is set                                     | `""`            |
+| `scheduler.nodeAffinityPreset.values`             | Node label values to match. Ignored if `scheduler.affinity` is set                                  | `[]`            |
+| `scheduler.nodeSelector`                          | Node labels for Mxnet scheduler pods assignment                                                     | `{}`            |
+| `scheduler.podAffinityPreset`                     | Pod affinity preset. Ignored if `scheduler.affinity` is set. Allowed values: `soft` or `hard`       | `""`            |
+| `scheduler.podAntiAffinityPreset`                 | Pod anti-affinity preset. Ignored if `scheduler.affinity` is set. Allowed values: `soft` or `hard`  | `soft`          |
+| `scheduler.hostAliases`                           | Mxnet scheduler pods host aliases                                                                   | `[]`            |
+| `scheduler.tolerations`                           | Tolerations for Mxnet scheduler pods assignment                                                     | `[]`            |
+| `scheduler.podAnnotations`                        | Annotations for Mxnet scheduler pods                                                                | `{}`            |
+| `scheduler.podLabels`                             | Extra labels for Mxnet scheduler pods                                                               | `{}`            |
+| `scheduler.podSecurityContext.enabled`            | Enabled Mxnet scheduler pods' Security Context                                                      | `true`          |
+| `scheduler.podSecurityContext.fsGroup`            | Set Mxnet scheduler pod's Security Context fsGroup                                                  | `1001`          |
+| `scheduler.containerSecurityContext.enabled`      | Enabled Mxnet scheduler containers' Security Context                                                | `true`          |
+| `scheduler.containerSecurityContext.runAsUser`    | Set Mxnet scheduler containers' Security Context runAsUser                                          | `1001`          |
+| `scheduler.containerSecurityContext.runAsNonRoot` | Set Mxnet scheduler container's Security Context runAsNonRoot                                       | `true`          |
+| `scheduler.command`                               | Override default container command (useful when using custom images)                                | `[]`            |
+| `scheduler.args`                                  | Override default container args (useful when using custom images)                                   | `[]`            |
+| `scheduler.lifecycleHooks`                        | for the Mxnet scheduler container(s) to automate configuration before or after startup              | `{}`            |
+| `scheduler.extraEnvVars`                          | Array with extra environment variables to add to Mxnet scheduler nodes                              | `[]`            |
+| `scheduler.extraEnvVarsCM`                        | Name of existing ConfigMap containing extra env vars for Mxnet scheduler nodes                      | `""`            |
+| `scheduler.extraEnvVarsSecret`                    | Name of existing Secret containing extra env vars for Mxnet scheduler nodes                         | `""`            |
+| `scheduler.extraVolumes`                          | Optionally specify extra list of additional volumes for the Mxnet scheduler pod(s)                  | `[]`            |
+| `scheduler.extraVolumeMounts`                     | Optionally specify extra list of additional volumeMounts for the Mxnet scheduler container(s)       | `[]`            |
+| `scheduler.sidecars`                              | Add additional sidecar containers to the Mxnet scheduler pod(s)                                     | `[]`            |
+| `scheduler.initContainers`                        | Add additional init containers to the Mxnet scheduler pod(s)                                        | `[]`            |
+| `scheduler.updateStrategy.type`                   | Mxnet scheduler deployment strategy type.                                                           | `RollingUpdate` |
+| `scheduler.priorityClassName`                     | Mxnet scheduler pods' priorityClassName                                                             | `""`            |
+| `scheduler.schedulerName`                         | Name of the k8s scheduler (other than default)                                                      | `""`            |
+| `scheduler.terminationGracePeriodSeconds`         | In seconds, time the given to the Mxnet scheduler pod needs to terminate gracefully                 | `""`            |
+| `scheduler.topologySpreadConstraints`             | Topology Spread Constraints for pod assignment                                                      | `[]`            |
+| `scheduler.resources.limits`                      | The resources limits for the Mxnet container                                                        | `{}`            |
+| `scheduler.resources.requests`                    | The requested resources for the Mxnet container                                                     | `{}`            |
+| `scheduler.startupProbe.enabled`                  | Enable startupProbe                                                                                 | `false`         |
+| `scheduler.startupProbe.initialDelaySeconds`      | Initial delay seconds for startupProbe                                                              | `5`             |
+| `scheduler.startupProbe.periodSeconds`            | Period seconds for startupProbe                                                                     | `5`             |
+| `scheduler.startupProbe.timeoutSeconds`           | Timeout seconds for startupProbe                                                                    | `15`            |
+| `scheduler.startupProbe.failureThreshold`         | Failure threshold for startupProbe                                                                  | `5`             |
+| `scheduler.startupProbe.successThreshold`         | Success threshold for startupProbe                                                                  | `1`             |
+| `scheduler.livenessProbe.enabled`                 | Enable livenessProbe                                                                                | `true`          |
+| `scheduler.livenessProbe.initialDelaySeconds`     | Initial delay seconds for livenessProbe                                                             | `5`             |
+| `scheduler.livenessProbe.periodSeconds`           | Period seconds for livenessProbe                                                                    | `5`             |
+| `scheduler.livenessProbe.timeoutSeconds`          | Timeout seconds for livenessProbe                                                                   | `15`            |
+| `scheduler.livenessProbe.failureThreshold`        | Failure threshold for livenessProbe                                                                 | `5`             |
+| `scheduler.livenessProbe.successThreshold`        | Success threshold for livenessProbe                                                                 | `1`             |
+| `scheduler.readinessProbe.enabled`                | Enable readinessProbe                                                                               | `true`          |
+| `scheduler.readinessProbe.initialDelaySeconds`    | Initial delay seconds for readinessProbe                                                            | `5`             |
+| `scheduler.readinessProbe.periodSeconds`          | Period seconds for readinessProbe                                                                   | `5`             |
+| `scheduler.readinessProbe.timeoutSeconds`         | Timeout seconds for readinessProbe                                                                  | `15`            |
+| `scheduler.readinessProbe.failureThreshold`       | Failure threshold for readinessProbe                                                                | `5`             |
+| `scheduler.readinessProbe.successThreshold`       | Success threshold for readinessProbe                                                                | `1`             |
+| `scheduler.customStartupProbe`                    | Custom liveness probe for the Web component                                                         | `{}`            |
+| `scheduler.customLivenessProbe`                   | Custom liveness probe for the Web component                                                         | `{}`            |
+| `scheduler.customReadinessProbe`                  | Custom readiness probe for the Web component                                                        | `{}`            |
+| `scheduler.service.type`                          | Kubernetes service type                                                                             | `ClusterIP`     |
+| `scheduler.service.ports.mxnet`                   | Scheduler Service port                                                                              | `9092`          |
+| `scheduler.service.nodePorts.mxnet`               | Node port for Mxnet scheduler                                                                       | `""`            |
+| `scheduler.service.clusterIP`                     | Scheduler service Cluster IP                                                                        | `""`            |
+| `scheduler.service.loadBalancerIP`                | Scheduler service Load Balancer IP                                                                  | `""`            |
+| `scheduler.service.loadBalancerSourceRanges`      | Scheduler service Load Balancer sources                                                             | `[]`            |
+| `scheduler.service.externalTrafficPolicy`         | Scheduler service external traffic policy                                                           | `Cluster`       |
+| `scheduler.service.extraPorts`                    | Extra ports to expose (normally used with the `sidecar` value)                                      | `[]`            |
+| `scheduler.service.annotations`                   | Additional custom annotations for Scheduler service                                                 | `{}`            |
+| `scheduler.service.sessionAffinity`               | Session Affinity for Kubernetes service, can be "None" or "ClientIP"                                | `None`          |
+| `scheduler.service.sessionAffinityConfig`         | Additional settings for the sessionAffinity                                                         | `{}`            |
+
+
+### Init containers parameters
+
+| Name                                   | Description                                                                  | Value                   |
+| -------------------------------------- | ---------------------------------------------------------------------------- | ----------------------- |
+| `git.registry`                         | Git image registry                                                           | `docker.io`             |
+| `git.repository`                       | Git image repository                                                         | `bitnami/git`           |
+| `git.tag`                              | Git image tag (immutable tags are recommended)                               | `2.35.1-debian-10-r63`  |
+| `git.pullPolicy`                       | Git image pull policy                                                        | `IfNotPresent`          |
+| `git.pullSecrets`                      | Specify docker-registry secret names as an array                             | `[]`                    |
+| `volumePermissions.enabled`            | Enable init container that changes volume permissions in the data directory  | `false`                 |
+| `volumePermissions.image.registry`     | Init container volume-permissions image registry                             | `docker.io`             |
+| `volumePermissions.image.repository`   | Init container volume-permissions image repository                           | `bitnami/bitnami-shell` |
+| `volumePermissions.image.tag`          | Init container volume-permissions image tag (immutable tags are recommended) | `10-debian-10-r383`     |
+| `volumePermissions.image.pullPolicy`   | Init container volume-permissions image pull policy                          | `IfNotPresent`          |
+| `volumePermissions.image.pullSecrets`  | Specify docker-registry secret names as an array                             | `[]`                    |
+| `volumePermissions.resources.limits`   | The resources limits for the container                                       | `{}`                    |
+| `volumePermissions.resources.requests` | The requested resources for the container                                    | `{}`                    |
 
 
 Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
@@ -359,6 +549,31 @@ Find more information about how to deal with common errors related to Bitnami's
 
 ## Upgrading
 
+### To 3.0.0
+
+This major release renames several values in this chart and adds missing features, in order to be aligned with the rest of the assets in the Bitnami charts repository.
+
+In addition, the chart structure has been refactored for a clearer distribution and configuration.
+
+The following values have been affected:
+
+- `service.*` has been renamed as `scheduler.service.*`. In addition, values `service.port` and `service.nodePort` have been renamed as `scheduler.service.ports.mxnet` and `scheduler.service.nodePorts.mxnet` respectively.
+- `hostAliases` has been renamed as `{standalone/server/worker/scheduler}.hostAliases`.
+- `commonExtraEnvVars` has been renamed as `extraEnvVars`.
+- `podManagementPolicy` has been renamed as `worker.podManagementPolicy`.
+- The following have been moved under `standalone`,`server`,`worker`, and `scheduler` sections:
+  - `podAffinityPreset`.
+  - `podAntiAffinityPreset`.
+  - `nodeAffinityPreset`.
+  - `affinity`.
+  - `nodeSelector`.
+  - `tolerations`.
+  - `resources`.
+  - `livenessProbe`.
+  - `readinessProbe`.
+  - `securityContext` (now renamed as `podSecurityContext` and `containerSecurityContext`).
+- `scheduler.port`, previously used for both containerPort and service port configuration, is now configured using `scheduler.containerPorts.mxnet` and `scheduler.service.ports.mxnet` values.
+
 ### To 2.1.0
 
 Some parameters disappeared in favor of new ones:
diff --git a/bitnami/mxnet/ci/values-standalone.yaml b/bitnami/mxnet/ci/values-standalone.yaml
new file mode 100644
index 0000000000..d5b9c91795
--- /dev/null
+++ b/bitnami/mxnet/ci/values-standalone.yaml
@@ -0,0 +1,10 @@
+# Test values file for generating all of the yaml and check that
+# the rendering is correct
+
+volumePermissions:
+  enabled: true
+
+mode: standalone
+
+persistence:
+  enabled: true
diff --git a/bitnami/mxnet/templates/NOTES.txt b/bitnami/mxnet/templates/NOTES.txt
index eeef716ef0..4001eb1627 100644
--- a/bitnami/mxnet/templates/NOTES.txt
+++ b/bitnami/mxnet/templates/NOTES.txt
@@ -12,7 +12,7 @@ The provided file {{ .Values.entrypoint.file }} is being executed. You can see t
 
 and the list of pods with:
 
-    kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "mxnet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
+    kubectl get pods --namespace {{ include "common.names.namespace" . }} -l "app.kubernetes.io/name={{ include "mxnet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
 
 {{- else }}
 You didn't specify any entrypoint to your code.
@@ -20,7 +20,7 @@ To run it, you can either re-deploy the chart using the `mxnet.entrypoint.file`
 
 1. Get the running pods:
 
-    kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "mxnet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
+    kubectl get pods --namespace {{ include "common.names.namespace" . }} -l "app.kubernetes.io/name={{ include "mxnet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
 
 2. Get into a pod:
 
@@ -33,7 +33,7 @@ WARNING: You haven't loaded any file. You can access the Python REPL by jumping
 
 1. Get the running pods:
 
-    kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "mxnet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
+    kubectl get pods --namespace {{ include "common.names.namespace" . }} -l "app.kubernetes.io/name={{ include "mxnet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
 
 2. Run the Python REPL:
 
diff --git a/bitnami/mxnet/templates/_helpers.tpl b/bitnami/mxnet/templates/_helpers.tpl
index d72003a3a0..ece5b9dfbc 100644
--- a/bitnami/mxnet/templates/_helpers.tpl
+++ b/bitnami/mxnet/templates/_helpers.tpl
@@ -48,21 +48,43 @@ sleep infinity
   {{- end }}
 {{- end -}}
 
-{{- define "mxnet.parseEnvVars" -}}
-{{- range $env := . }}
-{{- if $env.value }}
-- name: {{ $env.name }}
-  value: {{ $env.value | quote }}
-{{- else if $env.valueFrom }}
-- name: {{ $env.name }}
-  valueFrom:
-{{ toYaml $env.valueFrom | indent 4 }}
-{{- else }} {{/* Leave this for future compatibility */}}
--
-{{ toYaml $env | indent 2 }}
+{{- define "mxnet.volumes" -}}
+{{- if .Values.existingSecret }}
+- name: secret-data
+  secret:
+    secretName: {{ .Values.existingSecret }}
 {{- end }}
+{{- if .Values.configMap }}
+- name: ext-files
+  configMap:
+    name: {{ .Values.configMap }}
+{{- else if .Files.Glob "files/*" }}
+- name: local-files
+  configMap:
+    name: {{ printf "%s-files" (include "common.names.fullname" .) }}
+{{- else if .Values.cloneFilesFromGit.enabled }}
+- name: git-cloned-files
+  emptyDir: {}
 {{- end }}
+{{- end -}}
+
+{{- define "mxnet.volumeMounts" -}}
+{{- if .Values.configMap }}
+- name: ext-files
+  mountPath: /app
+{{- else if .Files.Glob "files/*" }}
+- name: local-files
+  mountPath: /app
+{{- else if .Values.cloneFilesFromGit.enabled }}
+- name: git-cloned-files
+  mountPath: /app
+{{- end }}
+{{- if .Values.existingSecret }}
+- name: secret-data
+  mountPath: /secrets
 {{- end }}
+{{- end -}}
+
 
 {{/*
 Compile all warnings into a single message, and call fail.
diff --git a/bitnami/mxnet/templates/configmap.yaml b/bitnami/mxnet/templates/configmap.yaml
index 2a8b3de68a..9c801629d1 100644
--- a/bitnami/mxnet/templates/configmap.yaml
+++ b/bitnami/mxnet/templates/configmap.yaml
@@ -2,8 +2,15 @@
 apiVersion: v1
 kind: ConfigMap
 metadata:
-  name: {{ include "common.names.fullname" . }}-files
+  name: {{ printf "%s-files" (include "common.names.fullname" .) }}
+  namespace: {{ include "common.names.namespace" . | quote }}
   labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
 data:
-{{ (.Files.Glob "files/*").AsConfig | indent 2 }}
+  {{ (.Files.Glob "files/*").AsConfig | indent 2 }}
 {{- end }}
diff --git a/bitnami/mxnet/templates/deployment-pvc.yaml b/bitnami/mxnet/templates/deployment-pvc.yaml
deleted file mode 100644
index 6dab83b25c..0000000000
--- a/bitnami/mxnet/templates/deployment-pvc.yaml
+++ /dev/null
@@ -1,16 +0,0 @@
-{{- if .Values.persistence.enabled }}
-kind: PersistentVolumeClaim
-apiVersion: v1
-metadata:
-  name: {{ include "common.names.fullname" . }}{{ if eq .Values.mode "distributed" }}-scheduler{{ end }}
-  labels: {{- include "common.labels.standard" . | nindent 4 }}
-spec:
-  accessModes:
-  {{- range .Values.persistence.accessModes }}
-    - {{ . | quote }}
-  {{- end }}
-  resources:
-    requests:
-      storage: {{ .Values.persistence.size | quote }}
-  {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 2 }}
-{{- end }}
diff --git a/bitnami/mxnet/templates/distributed/headless-svc.yaml b/bitnami/mxnet/templates/distributed/headless-svc.yaml
new file mode 100644
index 0000000000..7b7cb34ed6
--- /dev/null
+++ b/bitnami/mxnet/templates/distributed/headless-svc.yaml
@@ -0,0 +1,18 @@
+{{- if eq .Values.mode "distributed" }}
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ printf "%s-headless" (include "common.names.fullname" .) }}
+  namespace: {{ include "common.names.namespace" . | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
+spec:
+  type: ClusterIP
+  clusterIP: None
+  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
+{{- end }}
diff --git a/bitnami/mxnet/templates/distributed/scheduler/deployment.yaml b/bitnami/mxnet/templates/distributed/scheduler/deployment.yaml
new file mode 100644
index 0000000000..0d8a61fc49
--- /dev/null
+++ b/bitnami/mxnet/templates/distributed/scheduler/deployment.yaml
@@ -0,0 +1,215 @@
+{{- if eq .Values.mode "distributed" }}
+apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
+kind: Deployment
+metadata:
+  name: {{ printf "%s-scheduler" (include "common.names.fullname" .) }}
+  namespace: {{ include "common.names.namespace" . | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: scheduler
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
+spec:
+  replicas: 1
+  {{- if .Values.scheduler.updateStrategy }}
+  strategy: {{- toYaml .Values.scheduler.updateStrategy | nindent 4 }}
+  {{- end }}
+  selector:
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
+  template:
+    metadata:
+      {{- if .Values.scheduler.podAnnotations }}
+      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.podAnnotations "context" $) | nindent 8 }}
+      {{- end }}
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
+        app.kubernetes.io/component: scheduler
+        {{- if .Values.scheduler.podLabels }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.podLabels "context" $) | nindent 8 }}
+        {{- end }}
+    spec:
+      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
+      {{- if .Values.scheduler.hostAliases }}
+      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.hostAliases "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.scheduler.affinity }}
+      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.affinity "context" $) | nindent 8 }}
+      {{- else }}
+      affinity:
+        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.scheduler.podAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
+        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.scheduler.podAntiAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
+        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.scheduler.nodeAffinityPreset.type "key" .Values.scheduler.nodeAffinityPreset.key "values" .Values.scheduler.nodeAffinityPreset.values) | nindent 10 }}
+      {{- end }}
+      {{- if .Values.scheduler.nodeSelector }}
+      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.nodeSelector "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.scheduler.tolerations }}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.tolerations "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.scheduler.priorityClassName }}
+      priorityClassName: {{ .Values.scheduler.priorityClassName | quote }}
+      {{- end }}
+      {{- if .Values.scheduler.schedulerName }}
+      schedulerName: {{ .Values.scheduler.schedulerName | quote }}
+      {{- end }}
+      {{- if .Values.scheduler.topologySpreadConstraints }}
+      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.topologySpreadConstraints "context" .) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.scheduler.podSecurityContext.enabled }}
+      securityContext: {{- omit .Values.scheduler.podSecurityContext "enabled" | toYaml | nindent 8 }}
+      {{- end }}
+      {{- if .Values.scheduler.terminationGracePeriodSeconds }}
+      terminationGracePeriodSeconds: {{ .Values.scheduler.terminationGracePeriodSeconds }}
+      {{- end }}
+      {{- if or .Values.cloneFilesFromGit.enabled .Values.initContainers }}
+      initContainers:
+        {{- if .Values.cloneFilesFromGit.enabled }}
+        - name: git-clone-repository
+          image: {{ include "git.image" . }}
+          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
+          command:
+            - /bin/sh
+            - -c
+            - |
+              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
+              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
+          volumeMounts:
+            - name: git-cloned-files
+              mountPath: /app
+            {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- end }}
+        {{- if .Values.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.scheduler.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+      {{- end }}
+      containers:
+        - name: mxnet
+          workingDir: {{ .Values.entrypoint.workDir }}
+          image: {{ include "mxnet.image" . }}
+          imagePullPolicy: {{ .Values.image.pullPolicy }}
+          {{- if .Values.scheduler.containerSecurityContext.enabled }}
+          securityContext: {{- omit .Values.scheduler.containerSecurityContext "enabled" | toYaml | nindent 12 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
+          {{- else if .Values.scheduler.command }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.command "context" $) | nindent 12 }}
+          {{- else }}
+          command:
+            - bash
+            - -c
+            - |
+            {{- include "mxnet.entrypoint" . | nindent 14 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
+          {{- else if .Values.scheduler.args }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.args "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.scheduler.lifecycleHooks }}
+          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.lifecycleHooks "context" $) | nindent 12 }}
+          {{- end }}
+          env:
+            - name: DMLC_ROLE
+              value: "scheduler"
+            - name: DMLC_NUM_WORKER
+              value: {{ .Values.worker.replicaCount | quote }}
+            - name: DMLC_NUM_SERVER
+              value: {{ .Values.server.replicaCount | quote }}
+            - name: DMLC_PS_ROOT_URI
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: DMLC_PS_ROOT_PORT
+              value: {{ .Values.scheduler.containerPorts.mxnet | quote }}
+            {{- if .Values.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.scheduler.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+          envFrom:
+            {{- if .Values.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+            {{- if .Values.scheduler.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.scheduler.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.scheduler.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.scheduler.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+          ports:
+            - name: mxnet
+              containerPort: {{ .Values.scheduler.containerPorts.mxnet }}
+          {{- if not .Values.diagnosticMode.enabled }}
+          {{- if .Values.scheduler.livenessProbe.enabled }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.scheduler.livenessProbe "enabled") "context" $) | nindent 12 }}
+            tcpSocket:
+              port: mxnet
+          {{- else if .Values.scheduler.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.customLivenessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.scheduler.readinessProbe.enabled }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.scheduler.readinessProbe "enabled") "context" $) | nindent 12 }}
+            tcpSocket:
+              port: mxnet
+          {{- else if .Values.scheduler.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.customReadinessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.scheduler.startupProbe.enabled }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.scheduler.startupProbe "enabled") "context" $) | nindent 12 }}
+            tcpSocket:
+              port: mxnet
+          {{- else if .Values.scheduler.customStartupProbe }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.customStartupProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- end }}
+          {{- if .Values.scheduler.resources }}
+          resources: {{- toYaml .Values.scheduler.resources | nindent 12 }}
+          {{- end }}
+          volumeMounts:
+            {{ include "mxnet.volumeMounts" . | nindent 12 }}
+            - name: data
+              mountPath: {{ .Values.persistence.mountPath }}
+            {{- if .Values.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.scheduler.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- if .Values.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.scheduler.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+      volumes:
+        {{ include "mxnet.volumes" . | nindent 8 }}
+        - name: data
+        {{- if .Values.persistence.enabled }}
+          persistentVolumeClaim:
+            claimName: {{ default (printf "%s-scheduler" (include "common.names.fullname" .)) .Values.persistence.existingClaim }}
+        {{- else }}
+          emptyDir: {}
+        {{- end }}
+        {{- if .Values.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.scheduler.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+{{- end }}
diff --git a/bitnami/mxnet/templates/distributed/scheduler/service.yaml b/bitnami/mxnet/templates/distributed/scheduler/service.yaml
new file mode 100644
index 0000000000..2a5cf340f6
--- /dev/null
+++ b/bitnami/mxnet/templates/distributed/scheduler/service.yaml
@@ -0,0 +1,53 @@
+{{- if eq .Values.mode "distributed" }}
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ printf "%s-scheduler" (include "common.names.fullname" .) }}
+  namespace: {{ include "common.names.namespace" . | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: scheduler
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  annotations:
+    {{- if .Values.commonAnnotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+    {{- end }}
+    {{- if .Values.scheduler.service.annotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.service.annotations "context" $) | nindent 4 }}
+    {{- end }}
+spec:
+  type: {{ .Values.scheduler.service.type }}
+  {{- if and .Values.scheduler.service.clusterIP (eq .Values.scheduler.service.type "ClusterIP") }}
+  clusterIP: {{ .Values.scheduler.service.clusterIP }}
+  {{- end }}
+  {{- if .Values.scheduler.service.sessionAffinity }}
+  sessionAffinity: {{ .Values.scheduler.service.sessionAffinity }}
+  {{- end }}
+  {{- if .Values.scheduler.service.sessionAffinityConfig }}
+  sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.service.sessionAffinityConfig "context" $) | nindent 4 }}
+  {{- end }}
+  {{- if or (eq .Values.scheduler.service.type "LoadBalancer") (eq .Values.scheduler.service.type "NodePort") }}
+  externalTrafficPolicy: {{ .Values.scheduler.service.externalTrafficPolicy | quote }}
+  {{- end }}
+  {{- if and (eq .Values.scheduler.service.type "LoadBalancer") (not (empty .Values.scheduler.service.loadBalancerSourceRanges)) }}
+  loadBalancerSourceRanges: {{ .Values.scheduler.service.loadBalancerSourceRanges }}
+  {{- end }}
+  {{- if and (eq .Values.scheduler.service.type "LoadBalancer") (not (empty .Values.scheduler.service.loadBalancerIP)) }}
+  loadBalancerIP: {{ .Values.scheduler.service.loadBalancerIP }}
+  {{- end }}
+  ports:
+    - port: {{ .Values.scheduler.service.ports.mxnet}}
+      targetPort: mxnet
+      name: mxnet
+      {{- if and (or (eq .Values.scheduler.service.type "NodePort") (eq .Values.scheduler.service.type "LoadBalancer")) (not (empty .Values.scheduler.service.nodePorts.mxnet)) }}
+      nodePort: {{ .Values.scheduler.service.nodePorts.mxnet }}
+      {{- else if eq .Values.scheduler.service.type "ClusterIP" }}
+      nodePort: null
+      {{- end }}
+    {{- if .Values.scheduler.service.extraPorts }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.service.extraPorts "context" $) | nindent 4 }}
+    {{- end }}
+  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
+    app.kubernetes.io/component: scheduler
+{{- end }}
diff --git a/bitnami/mxnet/templates/distributed/server/statefulset.yaml b/bitnami/mxnet/templates/distributed/server/statefulset.yaml
new file mode 100644
index 0000000000..1aeb7cf00b
--- /dev/null
+++ b/bitnami/mxnet/templates/distributed/server/statefulset.yaml
@@ -0,0 +1,269 @@
+{{- if eq .Values.mode "distributed" }}
+apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
+kind: StatefulSet
+metadata:
+  name: {{ printf "%s-server" (include "common.names.fullname" .) }}
+  namespace: {{ include "common.names.namespace" . | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: server
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
+spec:
+  replicas: {{ .Values.server.replicaCount }}
+  {{- if .Values.server.updateStrategy }}
+  updateStrategy: {{- toYaml .Values.server.updateStrategy | nindent 4 }}
+  {{- end }}
+  podManagementPolicy: {{ .Values.server.podManagementPolicy }}
+  selector:
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
+      app.kubernetes.io/component: server
+  serviceName: {{ printf "%s-headless" (include "common.names.fullname" .) }}
+  template:
+    metadata:
+      {{- if .Values.server.podAnnotations }}
+      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.server.podAnnotations "context" $) | nindent 8 }}
+      {{- end }}
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
+        app.kubernetes.io/component: server
+        {{- if .Values.server.podLabels }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.server.podLabels "context" $) | nindent 8 }}
+        {{- end }}
+    spec:
+      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
+      {{- if .Values.server.affinity }}
+      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.server.affinity "context" $) | nindent 8 }}
+      {{- else }}
+      affinity:
+        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.server.podAffinityPreset "component" "server" "context" $) | nindent 10 }}
+        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.server.podAntiAffinityPreset "component" "server" "context" $) | nindent 10 }}
+        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.server.nodeAffinityPreset.type "key" .Values.server.nodeAffinityPreset.key "values" .Values.server.nodeAffinityPreset.values) | nindent 10 }}
+      {{- end }}
+      {{- if .Values.server.hostAliases }}
+      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.server.hostAliases "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.server.nodeSelector }}
+      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.server.nodeSelector "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.server.tolerations }}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.server.tolerations "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.server.priorityClassName }}
+      priorityClassName: {{ .Values.server.priorityClassName | quote }}
+      {{- end }}
+      {{- if .Values.server.schedulerName }}
+      schedulerName: {{ .Values.server.schedulerName | quote }}
+      {{- end }}
+      {{- if .Values.server.topologySpreadConstraints }}
+      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.server.topologySpreadConstraints "context" .) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.server.podSecurityContext.enabled }}
+      securityContext: {{- omit .Values.server.podSecurityContext "enabled" | toYaml | nindent 8 }}
+      {{- end }}
+      {{- if .Values.server.terminationGracePeriodSeconds }}
+      terminationGracePeriodSeconds: {{ .Values.server.terminationGracePeriodSeconds }}
+      {{- end }}
+      initContainers:
+        {{- if .Values.cloneFilesFromGit.enabled }}
+        - name: git-clone-repository
+          image: {{ include "git.image" . }}
+          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
+          command:
+            - /bin/sh
+          args:
+            - -c
+            - |
+              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
+              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
+          volumeMounts:
+            - name: git-cloned-files
+              mountPath: /app
+            {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- end }}
+        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
+        - name: volume-permissions
+          image: "{{ template "mxnet.volumePermissions.image" . }}"
+          imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
+          command:
+            - /bin/bash
+          args:
+            - -ec
+            - |
+              mkdir -p {{ .Values.persistence.mountPath }}
+              chown {{ .Values.server.containerSecurityContext.runAsUser }}:{{ .Values.server.podSecurityContext.fsGroup }} {{ .Values.persistence.mountPath }}
+              find {{ .Values.persistence.mountPath }} -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs chown -R {{ .Values.server.containerSecurityContext.runAsUser }}:{{ .Values.server.podSecurityContext.fsGroup }}
+          securityContext:
+            runAsUser: 0
+          {{- if .Values.volumePermissions.resources }}
+          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
+          {{- end }}
+          volumeMounts:
+            - name: data
+              mountPath: {{ .Values.persistence.mountPath }}
+        {{- end }}
+        {{- if .Values.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.server.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.server.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+      containers:
+        - name: mxnet
+          workingDir: {{ .Values.entrypoint.workDir }}
+          image: {{ include "mxnet.image" . }}
+          imagePullPolicy: {{ .Values.image.pullPolicy }}
+          {{- if .Values.server.containerSecurityContext.enabled }}
+          securityContext: {{- omit .Values.server.containerSecurityContext "enabled" | toYaml | nindent 12 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
+          {{- else if .Values.server.command }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.server.command "context" $) | nindent 12 }}
+          {{- else }}
+          command:
+            - bash
+            - -c
+            - |
+              SERVER_RANK=${POD_NAME##*-}
+              ((SERVER_RANK++))
+              export SERVER_RANK
+              {{- include "mxnet.entrypoint" . | nindent 14 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
+          {{- else if .Values.server.args }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.server.args "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.server.lifecycleHooks }}
+          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.server.lifecycleHooks "context" $) | nindent 12 }}
+          {{- end }}
+          env:
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: DMLC_ROLE
+              value: "server"
+            - name: DMLC_NUM_WORKER
+              value: {{ .Values.worker.replicaCount | quote }}
+            - name: DMLC_NUM_SERVER
+              value: {{ .Values.server.replicaCount | quote }}
+            - name: DMLC_PS_ROOT_URI
+              value: {{ printf "%s-scheduler" (include "common.names.fullname" .) }}
+            - name: DMLC_PS_ROOT_PORT
+              value: {{ .Values.scheduler.containerPorts.mxnet | quote }}
+            {{- if .Values.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.server.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.server.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+          envFrom:
+            {{- if .Values.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+            {{- if .Values.server.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.server.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.server.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.server.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+          {{- if .Values.server.resources }}
+          resources: {{- toYaml .Values.server.resources | nindent 12 }}
+          {{- end }}
+          {{- if not .Values.diagnosticMode.enabled }}
+          {{- if .Values.server.livenessProbe.enabled }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.server.livenessProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import os; os.environ["DMLC_PS_ROOT_URI"] = "127.0.0.1"; os.environ["DMLC_ROLE"] = "worker"; import mxnet; print(mxnet.__version__)
+          {{- else if .Values.server.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.server.customLivenessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.server.readinessProbe.enabled }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.server.readinessProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import os; os.environ["DMLC_PS_ROOT_URI"] = "127.0.0.1"; os.environ["DMLC_ROLE"] = "worker"; import mxnet; print(mxnet.__version__)
+          {{- else if .Values.server.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.server.customReadinessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.server.startupProbe.enabled }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.server.startupProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import os; os.environ["DMLC_PS_ROOT_URI"] = "127.0.0.1"; os.environ["DMLC_ROLE"] = "worker"; import mxnet; print(mxnet.__version__)
+          {{- else if .Values.server.customStartupProbe }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.server.customStartupProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- end }}
+          volumeMounts:
+            {{ include "mxnet.volumeMounts" . | nindent 12 }}
+            - name: data
+              mountPath: {{ .Values.persistence.mountPath }}
+            {{- if .Values.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.server.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.server.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- if .Values.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.server.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.server.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+      volumes:
+        {{ include "mxnet.volumes" . | nindent 8 }}
+        {{- if .Values.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.server.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.server.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+{{- if not .Values.persistence.enabled }}
+        - name: data
+          emptyDir: {}
+{{- else }}
+  volumeClaimTemplates:
+    - metadata:
+        name: data
+        annotations:
+          {{- if .Values.persistence.annotations }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
+          {{- end }}
+          {{- if .Values.commonAnnotations }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 10 }}
+          {{- end }}
+        {{- if .Values.commonLabels }}
+        labels: {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 10 }}
+        {{- end }}
+      spec:
+        accessModes:
+          {{- range .Values.persistence.accessModes }}
+          - {{ . | quote }}
+          {{- end }}
+        resources:
+          requests:
+            storage: {{ .Values.persistence.size | quote }}
+        {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
+{{- end }}
+{{- end }}
diff --git a/bitnami/mxnet/templates/distributed/worker/statefulset.yaml b/bitnami/mxnet/templates/distributed/worker/statefulset.yaml
new file mode 100644
index 0000000000..aa3d0a7171
--- /dev/null
+++ b/bitnami/mxnet/templates/distributed/worker/statefulset.yaml
@@ -0,0 +1,267 @@
+{{- if eq .Values.mode "distributed" }}
+apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
+kind: StatefulSet
+metadata:
+  name: {{ printf "%s-worker" (include "common.names.fullname" .) }}
+  namespace: {{ include "common.names.namespace" . | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: worker
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
+spec:
+  replicas: {{ .Values.worker.replicaCount }}
+  podManagementPolicy: {{ .Values.worker.podManagementPolicy }}
+  {{- if .Values.worker.updateStrategy }}
+  updateStrategy: {{- toYaml .Values.worker.updateStrategy | nindent 4 }}
+  {{- end }}
+  serviceName: {{ printf "%s-headless" (include "common.names.fullname" .) }}
+  selector:
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
+      app.kubernetes.io/component: worker
+  template:
+    metadata:
+      {{- if .Values.worker.podAnnotations }}
+      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.worker.podAnnotations "context" $) | nindent 8 }}
+      {{- end }}
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
+        app.kubernetes.io/component: worker
+        {{- if .Values.worker.podLabels }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.worker.podLabels "context" $) | nindent 8 }}
+        {{- end }}
+    spec:
+      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
+      {{- if .Values.worker.affinity }}
+      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.worker.affinity "context" $) | nindent 8 }}
+      {{- else }}
+      affinity:
+        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.worker.podAffinityPreset "component" "worker" "context" $) | nindent 10 }}
+        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.worker.podAntiAffinityPreset "component" "worker" "context" $) | nindent 10 }}
+        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.worker.nodeAffinityPreset.type "key" .Values.worker.nodeAffinityPreset.key "values" .Values.worker.nodeAffinityPreset.values) | nindent 10 }}
+      {{- end }}
+      {{- if .Values.worker.hostAliases }}
+      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.worker.hostAliases "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.worker.nodeSelector }}
+      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.worker.nodeSelector "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.worker.tolerations }}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.worker.tolerations "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.worker.priorityClassName }}
+      priorityClassName: {{ .Values.worker.priorityClassName | quote }}
+      {{- end }}
+      {{- if .Values.worker.schedulerName }}
+      schedulerName: {{ .Values.worker.schedulerName | quote }}
+      {{- end }}
+      {{- if .Values.worker.topologySpreadConstraints }}
+      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.worker.topologySpreadConstraints "context" .) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.worker.podSecurityContext.enabled }}
+      securityContext: {{- omit .Values.worker.podSecurityContext "enabled" | toYaml | nindent 8 }}
+      {{- end }}
+      {{- if .Values.worker.terminationGracePeriodSeconds }}
+      terminationGracePeriodSeconds: {{ .Values.worker.terminationGracePeriodSeconds }}
+      {{- end }}
+      initContainers:
+        {{- if .Values.cloneFilesFromGit.enabled }}
+        - name: git-clone-repository
+          image: {{ include "git.image" . }}
+          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
+          command:
+            - /bin/sh
+            - -c
+            - |
+              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
+              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
+          volumeMounts:
+            - name: git-cloned-files
+              mountPath: /app
+            {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- end }}
+        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
+        - name: volume-permissions
+          image: {{ template "mxnet.volumePermissions.image" . }}
+          imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
+          command:
+            - /bin/bash
+            - -ec
+            - |
+              mkdir -p {{ .Values.persistence.mountPath }}
+              chown {{ .Values.worker.containerSecurityContext.runAsUser }}:{{ .Values.worker.podSecurityContext.fsGroup }} {{ .Values.persistence.mountPath }}
+              find {{ .Values.persistence.mountPath }} -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs chown -R {{ .Values.worker.containerSecurityContext.runAsUser }}:{{ .Values.worker.podSecurityContext.fsGroup }}
+          securityContext:
+            runAsUser: 0
+          {{- if .Values.volumePermissions.resources }}
+          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
+          {{- end }}
+          volumeMounts:
+            - name: data
+              mountPath: {{ .Values.persistence.mountPath }}
+        {{- end }}
+        {{- if .Values.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.worker.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.worker.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+      containers:
+        - name: mxnet
+          workingDir: {{ .Values.entrypoint.workDir }}
+          image: {{ include "mxnet.image" . }}
+          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
+          {{- if .Values.worker.containerSecurityContext.enabled }}
+          securityContext: {{- omit .Values.worker.containerSecurityContext "enabled" | toYaml | nindent 12 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
+          {{- else if .Values.worker.command }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.worker.command "context" $) | nindent 12 }}
+          {{- else }}
+          command:
+            - bash
+            - -c
+            - |
+              WORKER_RANK=${POD_NAME##*-}
+              ((WORKER_RANK++))
+              export WORKER_RANK
+              {{- include "mxnet.entrypoint" . | nindent 14 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
+          {{- else if .Values.worker.args }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.worker.args "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.worker.lifecycleHooks }}
+          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.worker.lifecycleHooks "context" $) | nindent 12 }}
+          {{- end }}
+          env:
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: DMLC_ROLE
+              value: "worker"
+            - name: DMLC_NUM_WORKER
+              value: {{ .Values.worker.replicaCount | quote }}
+            - name: DMLC_NUM_SERVER
+              value: {{ .Values.server.replicaCount | quote }}
+            - name: DMLC_PS_ROOT_URI
+              value: {{ printf "%s-scheduler" (include "common.names.fullname" .) }}
+            - name: DMLC_PS_ROOT_PORT
+              value: {{ .Values.scheduler.containerPorts.mxnet | quote }}
+            {{- if .Values.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.worker.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.worker.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+          envFrom:
+            {{- if .Values.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+            {{- if .Values.worker.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.worker.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.worker.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.worker.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+          {{- if .Values.worker.resources }}
+          resources: {{- toYaml .Values.worker.resources | nindent 12 }}
+          {{- end }}
+          {{- if not .Values.diagnosticMode.enabled }}
+          {{- if .Values.worker.livenessProbe.enabled }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.worker.livenessProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import mxnet; print(mxnet.__version__)
+          {{- else if .Values.worker.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.worker.customLivenessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.worker.readinessProbe.enabled }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.worker.readinessProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import mxnet; print(mxnet.__version__)
+          {{- else if .Values.worker.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.worker.customReadinessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.worker.startupProbe.enabled }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.worker.startupProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import mxnet; print(mxnet.__version__)
+          {{- else if .Values.worker.customStartupProbe }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.worker.customStartupProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- end }}
+          volumeMounts:
+            {{ include "mxnet.volumeMounts" . | nindent 12 }}
+            - name: data
+              mountPath: {{ .Values.persistence.mountPath }}
+            {{- if .Values.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.worker.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.worker.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- if .Values.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.worker.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.worker.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+      volumes:
+        {{ include "mxnet.volumes" . | nindent 8 }}
+        {{- if .Values.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.worker.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.worker.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+{{- if not .Values.persistence.enabled }}
+        - name: data
+          emptyDir: {}
+{{- else }}
+  volumeClaimTemplates:
+    - metadata:
+        name: data
+        annotations:
+          {{- if .Values.persistence.annotations }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
+          {{- end }}
+          {{- if .Values.commonAnnotations }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 10 }}
+          {{- end }}
+        {{- if .Values.commonLabels }}
+        labels: {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 10 }}
+        {{- end }}
+      spec:
+        accessModes:
+          {{- range .Values.persistence.accessModes }}
+          - {{ . | quote }}
+          {{- end }}
+        resources:
+          requests:
+            storage: {{ .Values.persistence.size | quote }}
+        {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
+{{- end }}
+{{- end }}
diff --git a/bitnami/mxnet/templates/headless-svc.yaml b/bitnami/mxnet/templates/headless-svc.yaml
deleted file mode 100644
index 98ef29e460..0000000000
--- a/bitnami/mxnet/templates/headless-svc.yaml
+++ /dev/null
@@ -1,11 +0,0 @@
-{{- if eq .Values.mode "distributed" }}
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ include "common.names.fullname" . }}-headless
-  labels: {{- include "common.labels.standard" . | nindent 4 }}
-spec:
-  type: ClusterIP
-  clusterIP: None
-  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
-{{- end }}
diff --git a/bitnami/mxnet/templates/pvc.yaml b/bitnami/mxnet/templates/pvc.yaml
new file mode 100644
index 0000000000..bac9e6e09d
--- /dev/null
+++ b/bitnami/mxnet/templates/pvc.yaml
@@ -0,0 +1,32 @@
+{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
+kind: PersistentVolumeClaim
+apiVersion: v1
+metadata:
+  {{- if eq .Values.mode "distributed" }}
+  name: {{ include "common.names.fullname" . }}
+  {{- else }}
+  name: {{ printf "%s-scheduler" (include "common.names.fullname" .) }}
+  {{- end }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if or .Values.persistence.annotations .Values.commonAnnotations }}
+  annotations:
+    {{- if .Values.persistence.annotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.persistence.annotations "context" $ ) | nindent 4 }}
+    {{- end }}
+    {{- if .Values.commonAnnotations }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- end }}
+spec:
+  accessModes:
+    {{- range .Values.persistence.accessModes }}
+    - {{ . | quote }}
+    {{- end }}
+  resources:
+    requests:
+      storage: {{ .Values.persistence.size | quote }}
+  {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 2 }}
+{{- end }}
diff --git a/bitnami/mxnet/templates/scheduler-deployment.yaml b/bitnami/mxnet/templates/scheduler-deployment.yaml
deleted file mode 100644
index b7ad93b7eb..0000000000
--- a/bitnami/mxnet/templates/scheduler-deployment.yaml
+++ /dev/null
@@ -1,169 +0,0 @@
-{{- if eq .Values.mode "distributed" }}
-apiVersion: apps/v1
-kind: Deployment
-metadata:
-  name: {{ include "common.names.fullname" . }}-scheduler
-  labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: scheduler
-spec:
-  replicas: 1
-  selector:
-    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
-  template:
-    metadata:
-      labels: {{- include "common.labels.standard" . | nindent 8 }}
-        app.kubernetes.io/component: scheduler
-    spec:
-      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
-      {{- if .Values.scheduler.hostAliases }}
-      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.hostAliases "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.scheduler.affinity }}
-      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.affinity "context" $) | nindent 8 }}
-      {{- else }}
-      affinity:
-        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.scheduler.podAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
-        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.scheduler.podAntiAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
-        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.scheduler.nodeAffinityPreset.type "key" .Values.scheduler.nodeAffinityPreset.key "values" .Values.scheduler.nodeAffinityPreset.values) | nindent 10 }}
-      {{- end }}
-      {{- if .Values.scheduler.nodeSelector }}
-      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.nodeSelector "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.scheduler.tolerations }}
-      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.tolerations "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.securityContext.enabled }}
-      securityContext:
-        fsGroup: {{ .Values.securityContext.fsGroup }}
-        runAsUser: {{ .Values.securityContext.runAsUser }}
-      {{- end }}
-      {{- if or .Values.cloneFilesFromGit.enabled .Values.initContainers }}
-      initContainers:
-        {{- if .Values.cloneFilesFromGit.enabled }}
-        - name: git-clone-repository
-          image: {{ include "git.image" . }}
-          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
-          command:
-            - /bin/sh
-            - -c
-            - |
-              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
-              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
-          volumeMounts:
-            - name: git-cloned-files
-              mountPath: /app
-          {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
-          {{- end }}
-        {{- end }}
-        {{- if .Values.initContainers }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
-        {{- end }}
-      {{- end }}
-      containers:
-        - name: mxnet
-          workingDir: {{ .Values.entrypoint.workDir }}
-          image: {{ include "mxnet.image" . }}
-          imagePullPolicy: {{ .Values.image.pullPolicy }}
-          command:
-            - bash
-            - -c
-            - |
-            {{- include "mxnet.entrypoint" . | nindent 14 }}
-          env:
-            - name: DMLC_ROLE
-              value: "scheduler"
-            - name: DMLC_NUM_WORKER
-              value: {{ .Values.worker.replicaCount | quote }}
-            - name: DMLC_NUM_SERVER
-              value: {{ .Values.server.replicaCount | quote }}
-            - name: DMLC_PS_ROOT_URI
-              valueFrom:
-                fieldRef:
-                  fieldPath: status.podIP
-            - name: DMLC_PS_ROOT_PORT
-              value: {{ .Values.scheduler.port | quote }}
-            {{- if .Values.commonExtraEnvVars }}
-            {{- include "mxnet.parseEnvVars" .Values.commonExtraEnvVars | nindent 12 }}
-            {{- end }}
-            {{- if .Values.scheduler.extraEnvVars }}
-            {{- include "mxnet.parseEnvVars" .Values.scheduler.extraEnvVars | nindent 12 }}
-            {{- end }}
-          ports:
-            - name: mxnet
-              containerPort: {{ .Values.scheduler.port }}
-          {{- if .Values.livenessProbe.enabled }}
-          livenessProbe:
-            tcpSocket:
-              port: {{ .Values.scheduler.port }}
-            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.livenessProbe.successThreshold }}
-            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.readinessProbe.enabled }}
-          readinessProbe:
-            tcpSocket:
-              port: {{ .Values.scheduler.port }}
-            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.readinessProbe.successThreshold }}
-            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.scheduler.resources }}
-          resources: {{- toYaml .Values.scheduler.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-            {{- if .Values.configMap }}
-            - name: ext-files
-              mountPath: /app
-            {{- else if .Files.Glob "files/*" }}
-            - name: local-files
-              mountPath: /app
-            {{- else if .Values.cloneFilesFromGit.enabled }}
-            - name: git-cloned-files
-              mountPath: /app
-            {{- end }}
-            {{- if .Values.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
-            {{- end }}
-            - name: data
-              mountPath: {{ .Values.persistence.mountPath }}
-            {{- if .Values.existingSecret }}
-            - name: secret-data
-              mountPath: /secrets
-            {{- end }}
-          {{- if .Values.sidecars }}
-          {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
-          {{- end }}
-      volumes:
-        {{- if .Values.existingSecret }}
-        - name: secret-data
-          secret:
-            secretName: {{ .Values.existingSecret }}
-        {{- end }}
-        {{- if .Values.configMap }}
-        - name: ext-files
-          configMap:
-            name: {{ .Values.configMap }}
-        {{- else if .Files.Glob "files/*" }}
-        - name: local-files
-          configMap:
-            name: {{ include "common.names.fullname" . }}-files
-        {{- else if .Values.cloneFilesFromGit.enabled }}
-        - name: git-cloned-files
-          emptyDir: {}
-        {{- end }}
-        - name: data
-        {{- if .Values.persistence.enabled }}
-          persistentVolumeClaim:
-            claimName: {{ include "common.names.fullname" . }}-scheduler
-        {{- else }}
-          emptyDir: {}
-        {{- end }}
-        {{- if .Values.extraVolumes }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
-        {{- end }}
-{{- end }}
diff --git a/bitnami/mxnet/templates/scheduler-service.yaml b/bitnami/mxnet/templates/scheduler-service.yaml
deleted file mode 100644
index 791fa5f343..0000000000
--- a/bitnami/mxnet/templates/scheduler-service.yaml
+++ /dev/null
@@ -1,24 +0,0 @@
-{{- if eq .Values.mode "distributed" }}
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ include "common.names.fullname" . }}-scheduler
-  labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: scheduler
-  {{- if .Values.service.annotations }}
-  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.service.annotations "context" $) | nindent 4 }}
-  {{- end }}
-spec:
-  type: {{ .Values.service.type }}
-  ports:
-    - port: {{ .Values.service.port }}
-      targetPort: mxnet
-      name: mxnet
-      {{- if and (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) (not (empty .Values.service.nodePort)) }}
-      nodePort: {{ .Values.service.nodePort }}
-      {{- else if eq .Values.service.type "ClusterIP" }}
-      nodePort: null
-      {{- end }}
-  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
-    app.kubernetes.io/component: scheduler
-{{- end }}
diff --git a/bitnami/mxnet/templates/server-statefulset.yaml b/bitnami/mxnet/templates/server-statefulset.yaml
deleted file mode 100644
index 837e323ebd..0000000000
--- a/bitnami/mxnet/templates/server-statefulset.yaml
+++ /dev/null
@@ -1,209 +0,0 @@
-{{- if eq .Values.mode "distributed" }}
-apiVersion: apps/v1
-kind: StatefulSet
-metadata:
-  name: {{ include "common.names.fullname" . }}-server
-  labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: server
-spec:
-  podManagementPolicy: {{ .Values.podManagementPolicy }}
-  selector:
-    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: server
-  replicas: {{ .Values.server.replicaCount }}
-  serviceName: {{ template "common.names.fullname" . }}-headless
-  template:
-    metadata:
-      labels: {{- include "common.labels.standard" . | nindent 8 }}
-        app.kubernetes.io/component: server
-    spec:
-      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
-      {{- if .Values.server.affinity }}
-      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.server.affinity "context" $) | nindent 8 }}
-      {{- else }}
-      affinity:
-        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.server.podAffinityPreset "component" "server" "context" $) | nindent 10 }}
-        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.server.podAntiAffinityPreset "component" "server" "context" $) | nindent 10 }}
-        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.server.nodeAffinityPreset.type "key" .Values.server.nodeAffinityPreset.key "values" .Values.server.nodeAffinityPreset.values) | nindent 10 }}
-      {{- end }}
-      {{- if .Values.server.hostAliases }}
-      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.server.hostAliases "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.server.nodeSelector }}
-      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.server.nodeSelector "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.server.tolerations }}
-      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.server.tolerations "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.securityContext.enabled }}
-      securityContext:
-        fsGroup: {{ .Values.securityContext.fsGroup }}
-        runAsUser: {{ .Values.securityContext.runAsUser }}
-      {{- end }}
-      {{- if or .Values.cloneFilesFromGit.enabled (and .Values.volumePermissions.enabled .Values.persistence.enabled) .Values.initContainers }}
-      initContainers:
-        {{- if .Values.cloneFilesFromGit.enabled }}
-        - name: git-clone-repository
-          image: {{ include "git.image" . }}
-          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
-          command:
-            - /bin/sh
-            - -c
-            - |
-              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
-              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
-          volumeMounts:
-            - name: git-cloned-files
-              mountPath: /app
-          {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
-          {{- end }}
-        {{- end }}
-        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
-        - name: volume-permissions
-          image: "{{ template "mxnet.volumePermissions.image" . }}"
-          imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
-          command:
-            - /bin/bash
-            - -ec
-            - |
-              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} {{ .Values.persistence.mountPath }}
-          securityContext:
-            runAsUser: 0
-          {{- if .Values.volumePermissions.resources }}
-          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-            - name: data
-              mountPath: {{ .Values.persistence.mountPath }}
-        {{- end }}
-        {{- if .Values.initContainers }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
-        {{- end }}
-      {{- end }}
-      containers:
-        - name: mxnet
-          workingDir: {{ .Values.entrypoint.workDir }}
-          image: {{ include "mxnet.image" . }}
-          imagePullPolicy: {{ .Values.image.pullPolicy }}
-          command:
-            - bash
-            - -c
-            - |
-              SERVER_RANK=${POD_NAME##*-}
-              ((SERVER_RANK++))
-              export SERVER_RANK
-              {{- include "mxnet.entrypoint" . | nindent 14 }}
-          env:
-            - name: POD_NAME
-              valueFrom:
-                fieldRef:
-                  fieldPath: metadata.name
-            - name: DMLC_ROLE
-              value: "server"
-            - name: DMLC_NUM_WORKER
-              value: {{ .Values.worker.replicaCount | quote }}
-            - name: DMLC_NUM_SERVER
-              value: {{ .Values.server.replicaCount | quote }}
-            - name: DMLC_PS_ROOT_URI
-              value: {{ include "common.names.fullname" . }}-scheduler
-            - name: DMLC_PS_ROOT_PORT
-              value: {{ .Values.scheduler.port | quote }}
-            {{- if .Values.commonExtraEnvVars }}
-            {{- include "mxnet.parseEnvVars" .Values.commonExtraEnvVars | nindent 12 }}
-            {{- end }}
-            {{- if .Values.server.extraEnvVars }}
-            {{- include "mxnet.parseEnvVars" .Values.server.extraEnvVars | nindent 12 }}
-            {{- end }}
-          {{- if .Values.livenessProbe.enabled }}
-          livenessProbe:
-            exec:
-              command:
-                - python3
-                - -c
-                - import os; os.environ["DMLC_PS_ROOT_URI"] = "127.0.0.1"; os.environ["DMLC_ROLE"] = "worker"; import mxnet; print(mxnet.__version__)
-            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.livenessProbe.successThreshold }}
-            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.readinessProbe.enabled }}
-          readinessProbe:
-            exec:
-              command:
-                - python3
-                - -c
-                - import os; os.environ["DMLC_PS_ROOT_URI"] = "127.0.0.1"; os.environ["DMLC_ROLE"] = "worker"; import mxnet; print(mxnet.__version__)
-            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.readinessProbe.successThreshold }}
-            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.server.resources }}
-          resources: {{- toYaml .Values.server.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-            {{- if .Values.configMap }}
-            - name: ext-files
-              mountPath: /app
-            {{- else if .Files.Glob "files/*" }}
-            - name: local-files
-              mountPath: /app
-            {{- else if .Values.cloneFilesFromGit.enabled }}
-            - name: git-cloned-files
-              mountPath: /app
-            {{- end }}
-            {{- if .Values.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
-            {{- end }}
-            - name: data
-              mountPath: {{ .Values.persistence.mountPath }}
-            {{- if .Values.existingSecret }}
-            - name: secret-data
-              mountPath: /secrets
-            {{- end }}
-          {{- if .Values.sidecars }}
-          {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
-          {{- end }}
-      volumes:
-        {{- if .Values.existingSecret }}
-        - name: secret-data
-          secret:
-            secretName: {{ .Values.existingSecret }}
-        {{- end }}
-        {{- if .Values.configMap }}
-        - name: ext-files
-          configMap:
-            name: {{ .Values.configMap }}
-        {{- else if .Files.Glob "files/*" }}
-        - name: local-files
-          configMap:
-            name: {{ include "common.names.fullname" . }}-files
-        {{- else if .Values.cloneFilesFromGit.enabled }}
-        - name: git-cloned-files
-          emptyDir: {}
-        {{- end }}
-        {{- if .Values.extraVolumes }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
-        {{- end }}
-{{- if not .Values.persistence.enabled }}
-        - name: data
-          emptyDir: {}
-{{- else }}
-  volumeClaimTemplates:
-    - metadata:
-        name: data
-        labels: {{- include "common.labels.matchLabels" . | nindent 10 }}
-        {{- if .Values.persistence.annotations }}
-        annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
-        {{- end }}
-      spec:
-        accessModes: {{- toYaml .Values.persistence.accessModes | nindent 10 }}
-        {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
-        resources:
-          requests:
-            storage: {{ .Values.persistence.size | quote }}
-{{- end }}
-{{- end }}
diff --git a/bitnami/mxnet/templates/standalone-deployment.yaml b/bitnami/mxnet/templates/standalone-deployment.yaml
deleted file mode 100644
index b1c7cc31bc..0000000000
--- a/bitnami/mxnet/templates/standalone-deployment.yaml
+++ /dev/null
@@ -1,179 +0,0 @@
-{{- if eq .Values.mode "standalone" }}
-apiVersion: apps/v1
-kind: Deployment
-metadata:
-  name: {{ include "common.names.fullname" . }}
-  labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: standalone
-spec:
-  replicas: 1
-  selector:
-    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: standalone
-  template:
-    metadata:
-      labels: {{- include "common.labels.standard" . | nindent 8 }}
-        app.kubernetes.io/component: standalone
-    spec:
-      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
-      {{- if .Values.hostAliases }}
-      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.affinity }}
-      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.affinity "context" $) | nindent 8 }}
-      {{- else }}
-      affinity:
-        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
-        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
-        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
-      {{- end }}
-      {{- if .Values.nodeSelector }}
-      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.tolerations }}
-      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.securityContext.enabled }}
-      securityContext:
-        fsGroup: {{ .Values.securityContext.fsGroup }}
-        runAsUser: {{ .Values.securityContext.runAsUser }}
-      {{- end }}
-      {{- if or .Values.cloneFilesFromGit.enabled (and .Values.volumePermissions.enabled .Values.persistence.enabled) .Values.initContainers }}
-      initContainers:
-        {{- if .Values.cloneFilesFromGit.enabled }}
-        - name: git-clone-repository
-          image: {{ include "git.image" . }}
-          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
-          command:
-            - /bin/sh
-            - -c
-            - |
-              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
-              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
-          volumeMounts:
-            - name: git-cloned-files
-              mountPath: /app
-          {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
-          {{- end }}
-        {{- end }}
-        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
-        - name: volume-permissions
-          image: "{{ template "mxnet.volumePermissions.image" . }}"
-          imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
-          command:
-            - /bin/bash
-            - -ec
-            - |
-              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} {{ .Values.persistence.mountPath }}
-          securityContext:
-            runAsUser: 0
-          {{- if .Values.volumePermissions.resources }}
-          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-            - name: data
-              mountPath: {{ .Values.persistence.mountPath }}
-        {{- end }}
-        {{- if .Values.initContainers }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
-        {{- end }}
-      {{- end }}
-      containers:
-        - name: mxnet
-          workingDir: {{ .Values.entrypoint.workDir }}
-          image: {{ include "mxnet.image" . }}
-          imagePullPolicy: {{ .Values.image.pullPolicy }}
-          command:
-            - bash
-            - -c
-            - |
-              {{- include "mxnet.entrypoint" . | nindent 14 }}
-          env:
-            {{- if .Values.commonExtraEnvVars }}
-            {{- include "mxnet.parseEnvVars" .Values.commonExtraEnvVars | nindent 12 }}
-            {{- end }}
-          ports:
-            - name: mxnet
-              containerPort: {{ .Values.scheduler.port }}
-          {{- if .Values.livenessProbe.enabled }}
-          livenessProbe:
-            exec:
-              command:
-                - python3
-                - -c
-                - import mxnet; print(mxnet.__version__)
-            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.livenessProbe.successThreshold }}
-            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.readinessProbe.enabled }}
-          readinessProbe:
-            exec:
-              command:
-                - python3
-                - -c
-                - import mxnet; print(mxnet.__version__)
-            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.readinessProbe.successThreshold }}
-            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.resources }}
-          resources: {{- toYaml .Values.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-            {{- if .Values.configMap }}
-            - name: ext-files
-              mountPath: /app
-            {{- else if .Files.Glob "files/*" }}
-            - name: local-files
-              mountPath: /app
-            {{- else if .Values.cloneFilesFromGit.enabled }}
-            - name: git-cloned-files
-              mountPath: /app
-            {{- end }}
-            {{- if .Values.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
-            {{- end }}
-            - name: data
-              mountPath: {{ .Values.persistence.mountPath }}
-            {{- if .Values.existingSecret }}
-            - name: secret-data
-              mountPath: /secrets
-            {{- end }}
-        {{- if .Values.sidecars }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
-        {{- end }}
-      volumes:
-        {{- if .Values.existingSecret }}
-        - name: secret-data
-          secret:
-            secretName: {{ .Values.existingSecret }}
-        {{- end }}
-        {{- if .Values.configMap }}
-        - name: ext-files
-          configMap:
-            name: {{ .Values.configMap }}
-        {{- else if .Files.Glob "files/*" }}
-        - name: local-files
-          configMap:
-            name: {{ include "common.names.fullname" . }}-files
-        {{- else if .Values.cloneFilesFromGit.enabled }}
-        - name: git-cloned-files
-          emptyDir: {}
-        {{- end }}
-        {{- if .Values.extraVolumes }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
-        {{- end }}
-        - name: data
-          {{- if .Values.persistence.enabled }}
-          persistentVolumeClaim:
-            claimName: {{ include "common.names.fullname" . }}
-          {{- else }}
-          emptyDir: {}
-          {{- end }}
-{{- end }}
diff --git a/bitnami/mxnet/templates/standalone/deployment.yaml b/bitnami/mxnet/templates/standalone/deployment.yaml
new file mode 100644
index 0000000000..6452354b7f
--- /dev/null
+++ b/bitnami/mxnet/templates/standalone/deployment.yaml
@@ -0,0 +1,233 @@
+{{- if eq .Values.mode "standalone" }}
+apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
+kind: Deployment
+metadata:
+  name: {{ include "common.names.fullname" . }}
+  namespace: {{ include "common.names.namespace" . | quote }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: standalone
+    {{- if .Values.commonLabels }}
+    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
+    {{- end }}
+  {{- if .Values.commonAnnotations }}
+  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
+  {{- end }}
+spec:
+  replicas: 1
+  {{- if .Values.standalone.updateStrategy }}
+  strategy: {{- toYaml .Values.standalone.updateStrategy | nindent 6 }}
+  {{- end }}
+  selector:
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
+      app.kubernetes.io/component: standalone
+  template:
+    metadata:
+      {{- if .Values.standalone.podAnnotations }}
+      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.podAnnotations "context" $) | nindent 8 }}
+      {{- end }}
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
+        app.kubernetes.io/component: standalone
+        {{- if .Values.standalone.podLabels }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.standalone.podLabels "context" $) | nindent 8 }}
+        {{- end }}
+    spec:
+      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
+      {{- if .Values.standalone.hostAliases }}
+      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.hostAliases "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.standalone.affinity }}
+      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.standalone.affinity "context" $) | nindent 8 }}
+      {{- else }}
+      affinity:
+        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.standalone.podAffinityPreset "context" $) | nindent 10 }}
+        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.standalone.podAntiAffinityPreset "context" $) | nindent 10 }}
+        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.standalone.nodeAffinityPreset.type "key" .Values.standalone.nodeAffinityPreset.key "values" .Values.standalone.nodeAffinityPreset.values) | nindent 10 }}
+      {{- end }}
+      {{- if .Values.standalone.nodeSelector }}
+      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.standalone.nodeSelector "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.standalone.tolerations }}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.tolerations "context" .) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.standalone.priorityClassName }}
+      priorityClassName: {{ .Values.standalone.priorityClassName | quote }}
+      {{- end }}
+      {{- if .Values.standalone.schedulerName }}
+      schedulerName: {{ .Values.standalone.schedulerName | quote }}
+      {{- end }}
+      {{- if .Values.standalone.topologySpreadConstraints }}
+      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.topologySpreadConstraints "context" .) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.standalone.podSecurityContext.enabled }}
+      securityContext: {{- omit .Values.standalone.podSecurityContext "enabled" | toYaml | nindent 8 }}
+      {{- end }}
+      {{- if .Values.standalone.terminationGracePeriodSeconds }}
+      terminationGracePeriodSeconds: {{ .Values.standalone.terminationGracePeriodSeconds }}
+      {{- end }}
+      initContainers:
+        {{- if .Values.cloneFilesFromGit.enabled }}
+        - name: git-clone-repository
+          image: {{ include "git.image" . }}
+          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
+          command:
+            - /bin/sh
+          args:
+            - -c
+            - |
+              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
+              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
+          volumeMounts:
+            - name: git-cloned-files
+              mountPath: /app
+            {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- end }}
+        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
+        - name: volume-permissions
+          image: "{{ template "mxnet.volumePermissions.image" . }}"
+          imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
+          command:
+            - /bin/bash
+          args:
+            - -ec
+            - |
+              mkdir -p {{ .Values.persistence.mountPath }}
+              chown {{ .Values.standalone.containerSecurityContext.runAsUser }}:{{ .Values.standalone.podSecurityContext.fsGroup }} {{ .Values.persistence.mountPath }}
+              find {{ .Values.persistence.mountPath }} -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs chown -R {{ .Values.standalone.containerSecurityContext.runAsUser }}:{{ .Values.standalone.podSecurityContext.fsGroup }}
+          securityContext:
+            runAsUser: 0
+          {{- if .Values.volumePermissions.resources }}
+          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
+          {{- end }}
+          volumeMounts:
+            - name: data
+              mountPath: {{ .Values.persistence.mountPath }}
+        {{- end }}
+        {{- if .Values.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.standalone.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.standalone.initContainers "context" $) | nindent 8 }}
+        {{- end }}
+      containers:
+        - name: mxnet
+          workingDir: {{ .Values.entrypoint.workDir }}
+          image: {{ include "mxnet.image" . }}
+          imagePullPolicy: {{ .Values.image.pullPolicy }}
+          {{- if .Values.standalone.containerSecurityContext.enabled }}
+          securityContext: {{- omit .Values.standalone.containerSecurityContext "enabled" | toYaml | nindent 12 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
+          {{- else if .Values.standalone.command }}
+          command: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.command "context" $) | nindent 12 }}
+          {{- else }}
+          command:
+            - bash
+            - -c
+            - |
+              {{- include "mxnet.entrypoint" . | nindent 14 }}
+          {{- end }}
+          {{- if .Values.diagnosticMode.enabled }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
+          {{- else if .Values.standalone.args }}
+          args: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.args "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.standalone.lifecycleHooks }}
+          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.lifecycleHooks "context" $) | nindent 12 }}
+          {{- end }}
+          env:
+            {{- if .Values.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.standalone.extraEnvVars }}
+            {{- include "common.tplvalues.render" (dict "value" .Values.standalone.extraEnvVars "context" $) | nindent 12 }}
+            {{- end }}
+          envFrom:
+            {{- if .Values.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+            {{- if .Values.standalone.extraEnvVarsCM }}
+            - configMapRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.standalone.extraEnvVarsCM "context" $) }}
+            {{- end }}
+            {{- if .Values.standalone.extraEnvVarsSecret }}
+            - secretRef:
+                name: {{ include "common.tplvalues.render" (dict "value" .Values.standalone.extraEnvVarsSecret "context" $) }}
+            {{- end }}
+          ports:
+            - name: mxnet
+              containerPort: {{ .Values.standalone.containerPorts.mxnet }}
+          {{- if not .Values.diagnosticMode.enabled }}
+          {{- if .Values.standalone.livenessProbe.enabled }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.standalone.livenessProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import mxnet; print(mxnet.__version__)
+          {{- else if .Values.standalone.customLivenessProbe }}
+          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.customLivenessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.standalone.readinessProbe.enabled }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.standalone.readinessProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import mxnet; print(mxnet.__version__)
+          {{- else if .Values.standalone.customReadinessProbe }}
+          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.customReadinessProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- if .Values.standalone.startupProbe.enabled }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.standalone.startupProbe "enabled") "context" $) | nindent 12 }}
+            exec:
+              command:
+                - python3
+                - -c
+                - import mxnet; print(mxnet.__version__)
+          {{- else if .Values.standalone.customStartupProbe }}
+          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.standalone.customStartupProbe "context" $) | nindent 12 }}
+          {{- end }}
+          {{- end }}
+          {{- if .Values.standalone.resources }}
+          resources: {{- toYaml .Values.standalone.resources | nindent 12 }}
+          {{- end }}
+          volumeMounts:
+            {{ include "mxnet.volumeMounts" . | nindent 12 }}
+            - name: data
+              mountPath: {{ .Values.persistence.mountPath }}
+            {{- if .Values.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+            {{- if .Values.standalone.extraVolumeMounts }}
+            {{- include "common.tplvalues.render" ( dict "value" .Values.standalone.extraVolumeMounts "context" $) | nindent 12 }}
+            {{- end }}
+        {{- if .Values.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.standalone.sidecars }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.standalone.sidecars "context" $) | nindent 8 }}
+        {{- end }}
+      volumes:
+        {{ include "mxnet.volumes" . | nindent 8 }}
+        {{- if .Values.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if .Values.standalone.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.standalone.extraVolumes "context" $) | nindent 8 }}
+        {{- end }}
+        - name: data
+          {{- if .Values.persistence.enabled }}
+          persistentVolumeClaim:
+            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
+          {{- else }}
+          emptyDir: {}
+          {{- end }}
+{{- end }}
diff --git a/bitnami/mxnet/templates/worker-statefulset.yaml b/bitnami/mxnet/templates/worker-statefulset.yaml
deleted file mode 100644
index 6f16002b0e..0000000000
--- a/bitnami/mxnet/templates/worker-statefulset.yaml
+++ /dev/null
@@ -1,209 +0,0 @@
-{{- if eq .Values.mode "distributed" }}
-apiVersion: apps/v1
-kind: StatefulSet
-metadata:
-  name: {{ include "common.names.fullname" . }}-worker
-  labels: {{- include "common.labels.standard" . | nindent 4 }}
-    app.kubernetes.io/component: worker
-spec:
-  podManagementPolicy: {{ .Values.podManagementPolicy }}
-  serviceName: {{ template "common.names.fullname" . }}-headless
-  selector:
-    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: worker
-  replicas: {{ .Values.worker.replicaCount }}
-  template:
-    metadata:
-      labels: {{- include "common.labels.standard" . | nindent 8 }}
-        app.kubernetes.io/component: worker
-    spec:
-      {{- include "mxnet.imagePullSecrets" . | nindent 6 }}
-      {{- if .Values.worker.affinity }}
-      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.worker.affinity "context" $) | nindent 8 }}
-      {{- else }}
-      affinity:
-        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.worker.podAffinityPreset "component" "worker" "context" $) | nindent 10 }}
-        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.worker.podAntiAffinityPreset "component" "worker" "context" $) | nindent 10 }}
-        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.worker.nodeAffinityPreset.type "key" .Values.worker.nodeAffinityPreset.key "values" .Values.worker.nodeAffinityPreset.values) | nindent 10 }}
-      {{- end }}
-      {{- if .Values.worker.hostAliases }}
-      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.worker.hostAliases "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.worker.nodeSelector }}
-      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.worker.nodeSelector "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.worker.tolerations }}
-      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.worker.tolerations "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.securityContext.enabled }}
-      securityContext:
-        fsGroup: {{ .Values.securityContext.fsGroup }}
-        runAsUser: {{ .Values.securityContext.runAsUser }}
-      {{- end }}
-      {{- if or .Values.cloneFilesFromGit.enabled (and .Values.volumePermissions.enabled .Values.persistence.enabled) .Values.initContainers }}
-      initContainers:
-        {{- if .Values.cloneFilesFromGit.enabled }}
-        - name: git-clone-repository
-          image: {{ include "git.image" . }}
-          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
-          command:
-            - /bin/sh
-            - -c
-            - |
-              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
-              git clone {{ .Values.cloneFilesFromGit.repository }} --branch {{ .Values.cloneFilesFromGit.revision }} /app
-          volumeMounts:
-            - name: git-cloned-files
-              mountPath: /app
-          {{- if .Values.cloneFilesFromGit.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" (dict "value" .Values.cloneFilesFromGit.extraVolumeMounts "context" $) | nindent 12 }}
-          {{- end }}
-        {{- end }}
-        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
-        - name: volume-permissions
-          image: {{ template "mxnet.volumePermissions.image" . }}
-          imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
-          command:
-            - /bin/bash
-            - -ec
-            - |
-              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} {{ .Values.persistence.mountPath }}
-          securityContext:
-            runAsUser: 0
-          {{- if .Values.volumePermissions.resources }}
-          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-            - name: data
-              mountPath: {{ .Values.persistence.mountPath }}
-        {{- end }}
-        {{- if .Values.initContainers }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
-        {{- end }}
-      {{- end }}
-      containers:
-        - name: mxnet
-          workingDir: {{ .Values.entrypoint.workDir }}
-          image: {{ include "mxnet.image" . }}
-          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
-          command:
-            - bash
-            - -c
-            - |
-              WORKER_RANK=${POD_NAME##*-}
-              ((WORKER_RANK++))
-              export WORKER_RANK
-              {{- include "mxnet.entrypoint" . | nindent 14 }}
-          env:
-            - name: POD_NAME
-              valueFrom:
-                fieldRef:
-                  fieldPath: metadata.name
-            - name: DMLC_ROLE
-              value: "worker"
-            - name: DMLC_NUM_WORKER
-              value: {{ .Values.worker.replicaCount | quote }}
-            - name: DMLC_NUM_SERVER
-              value: {{ .Values.server.replicaCount | quote }}
-            - name: DMLC_PS_ROOT_URI
-              value: {{ include "common.names.fullname" . }}-scheduler
-            - name: DMLC_PS_ROOT_PORT
-              value: {{ .Values.scheduler.port | quote }}
-            {{- if .Values.commonExtraEnvVars }}
-            {{- include "mxnet.parseEnvVars" .Values.commonExtraEnvVars | nindent 12 }}
-            {{- end }}
-            {{- if .Values.worker.extraEnvVars }}
-            {{- include "mxnet.parseEnvVars" .Values.worker.extraEnvVars | nindent 12 }}
-            {{- end }}
-          {{- if .Values.livenessProbe.enabled }}
-          livenessProbe:
-            exec:
-              command:
-                - python3
-                - -c
-                - import mxnet; print(mxnet.__version__)
-            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.livenessProbe.successThreshold }}
-            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.readinessProbe.enabled }}
-          readinessProbe:
-            exec:
-              command:
-                - python3
-                - -c
-                - import mxnet; print(mxnet.__version__)
-            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
-            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
-            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
-            successThreshold: {{ .Values.readinessProbe.successThreshold }}
-            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
-          {{- end }}
-          {{- if .Values.worker.resources }}
-          resources: {{- toYaml .Values.worker.resources | nindent 12 }}
-          {{- end }}
-          volumeMounts:
-            {{- if .Values.configMap }}
-            - name: ext-files
-              mountPath: /app
-            {{- else if .Files.Glob "files/*" }}
-            - name: local-files
-              mountPath: /app
-            {{- else if .Values.cloneFilesFromGit.enabled }}
-            - name: git-cloned-files
-              mountPath: /app
-            {{- end }}
-            {{- if .Values.extraVolumeMounts }}
-            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
-            {{- end }}
-            - name: data
-              mountPath: {{ .Values.persistence.mountPath }}
-            {{- if .Values.existingSecret }}
-            - name: secret-data
-              mountPath: /secrets
-            {{- end }}
-        {{- if .Values.sidecars }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
-        {{- end }}
-      volumes:
-        {{- if .Values.existingSecret }}
-        - name: secret-data
-          secret:
-            secretName: {{ .Values.existingSecret }}
-        {{- end }}
-        {{- if .Values.configMap }}
-        - name: ext-files
-          configMap:
-            name: {{ .Values.configMap }}
-        {{- else if .Files.Glob "files/*" }}
-        - name: local-files
-          configMap:
-            name: {{ include "common.names.fullname" . }}-files
-        {{- else if .Values.cloneFilesFromGit.enabled }}
-        - name: git-cloned-files
-          emptyDir: {}
-        {{- end }}
-        {{- if .Values.extraVolumes }}
-        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
-        {{- end }}
-{{- if not .Values.persistence.enabled }}
-        - name: data
-          emptyDir: {}
-{{- else }}
-  volumeClaimTemplates:
-    - metadata:
-        name: data
-        labels: {{- include "common.labels.matchLabels" . | nindent 10 }}
-        {{- if .Values.persistence.annotations }}
-        annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
-        {{- end }}
-      spec:
-        accessModes: {{- toYaml .Values.persistence.accessModes | nindent 10 }}
-        {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
-        resources:
-          requests:
-            storage: {{ .Values.persistence.size | quote }}
-{{- end }}
-{{- end }}
diff --git a/bitnami/mxnet/values.yaml b/bitnami/mxnet/values.yaml
index f4d0827b77..0221af0e5f 100644
--- a/bitnami/mxnet/values.yaml
+++ b/bitnami/mxnet/values.yaml
@@ -18,15 +18,45 @@ global:
 
 ## @section Common parameters
 
+## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
+##
+kubeVersion: ""
 ## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
 ##
 nameOverride: ""
 ## @param fullnameOverride String to fully override common.names.fullname template
 ##
 fullnameOverride: ""
+## @param namespaceOverride String to fully override common.names.namespace template
+##
+namespaceOverride: ""
+## @param commonAnnotations Annotations to add to all deployed objects
+##
+commonAnnotations: {}
+## @param commonLabels Labels to add to all deployed objects
+##
+commonLabels: {}
 ## @param extraDeploy Array of extra objects to deploy with the release
 ##
 extraDeploy: []
+## @param clusterDomain Kubernetes cluster domain name
+##
+clusterDomain: cluster.local
+
+## Enable diagnostic mode in the deployment(s)/statefulset(s)
+##
+diagnosticMode:
+  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
+  ##
+  enabled: false
+  ## @param diagnosticMode.command Command to override all containers in the the deployment(s)/statefulset(s)
+  ##
+  command:
+    - sleep
+  ## @param diagnosticMode.args Args to override all containers in the the deployment(s)/statefulset(s)
+  ##
+  args:
+    - infinity
 
 ## @section Common Mxnet parameters
 
@@ -42,7 +72,7 @@ extraDeploy: []
 image:
   registry: docker.io
   repository: bitnami/mxnet
-  tag: 1.9.0-debian-10-r117
+  tag: 1.9.0-debian-10-r119
   ## Specify a imagePullPolicy
   ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
   ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
@@ -60,98 +90,14 @@ image:
   ## It turns BASH and/or NAMI debugging in the image
   ##
   debug: false
-## Bitnami git image version
-## ref: https://hub.docker.com/r/bitnami/git/tags/
-## @param git.registry Git image registry
-## @param git.repository Git image repository
-## @param git.tag Git image tag (immutable tags are recommended)
-## @param git.pullPolicy Git image pull policy
-## @param git.pullSecrets Specify docker-registry secret names as an array
-##
-git:
-  registry: docker.io
-  repository: bitnami/git
-  tag: 2.36.0-debian-10-r8
-  pullPolicy: IfNotPresent
-  ## Optionally specify an array of imagePullSecrets.
-  ## Secrets must be manually created in the namespace.
-  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
-  ## e.g:
-  ## pullSecrets:
-  ##   - myRegistryKeySecretName
-  ##
-  pullSecrets: []
-## Init containers parameters:
-## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
-##
-volumePermissions:
-  ## @param volumePermissions.enabled Enable init container that changes volume permissions in the data directory
-  ##
-  enabled: false
-  ## @param volumePermissions.image.registry Init container volume-permissions image registry
-  ## @param volumePermissions.image.repository Init container volume-permissions image repository
-  ## @param volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)
-  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
-  ## @param volumePermissions.image.pullSecrets Specify docker-registry secret names as an array
-  ##
-  image:
-    registry: docker.io
-    repository: bitnami/bitnami-shell
-    tag: 10-debian-10-r408
-    pullPolicy: IfNotPresent
-    ## Optionally specify an array of imagePullSecrets.
-    ## Secrets must be manually created in the namespace.
-    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
-    ## e.g:
-    ## pullSecrets:
-    ##   - myRegistryKeySecretName
-    ##
-    pullSecrets: []
-  ## Init container' resource requests and limits
-  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
-  ## We usually recommend not to specify default resources and to leave this as a conscious
-  ## choice for the user. This also increases chances charts run on environments with little
-  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
-  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
-  ## @param volumePermissions.resources.limits The resources limits for the container
-  ## @param volumePermissions.resources.requests The requested resources for the container
-  ##
-  resources:
-    ## Example:
-    ## limits:
-    ##    cpu: 100m
-    ##    memory: 128Mi
-    limits: {}
-    ## Examples:
-    ## requests:
-    ##    cpu: 100m
-    ##    memory: 128Mi
-    requests: {}
-## Service for the scheduler node
-##
-service:
-  ## @param service.type Kubernetes service type
-  ##
-  type: ClusterIP
-  ## @param service.port Scheduler Service port
-  ##
-  port: 9092
-  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
-  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
-  ##
-  # nodePort:
-  ## @param service.annotations Provide any additional annotations which may be required.
-  ## This can be used to set the LoadBalancer service type to internal only.
-  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
-  ##
-  annotations: {}
+
 ## @param entrypoint [object] The main entrypoint of your app, this will be executed as:
 ##   python [file] [args]
 ##
 entrypoint:
   file: ""
   workDir: /app
-  # args:
+  args: ""
 ## @param mode Apache MXNet (Incubating) deployment mode. Can be `standalone` or `distributed`
 ##
 mode: standalone
@@ -161,16 +107,17 @@ existingSecret: ""
 ## @param configMap Name of an existing config map containing all the files you want to load in Apache MXNet (Incubating)
 ##
 configMap: ""
-## @param hostAliases Deployment pod host aliases
-## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
-##
-hostAliases: []
+
 cloneFilesFromGit:
   ## @param cloneFilesFromGit.enabled Enable in order to download files from git repository
   ##
   enabled: false
-  # repository:
-  # revision: master
+  ## @param cloneFilesFromGit.repository Repository to clone
+  ##
+  repository: ""
+  ## @param cloneFilesFromGit.revision Branch name to clone
+  ##
+  revision: master
   ## @param cloneFilesFromGit.extraVolumeMounts Add extra volume mounts for the GIT container
   ## Useful to mount keys to connect through ssh. (normally used with extraVolumes)
   ## E.g:
@@ -179,118 +126,6 @@ cloneFilesFromGit:
   ##     mountPath: /.ssh/
   ##
   extraVolumeMounts: []
-## @param commonExtraEnvVars Additional environment variables for all node types
-## Example:
-## commonExtraEnvVars:
-##   - name: PS_VERBOSE
-##     value: "1"
-##
-commonExtraEnvVars: []
-## @param podManagementPolicy StatefulSet (worker and server nodes) pod management policy
-##
-podManagementPolicy: Parallel
-## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
-##
-podAffinityPreset: ""
-## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
-##
-podAntiAffinityPreset: soft
-## Node affinity preset
-## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
-##
-nodeAffinityPreset:
-  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-  ##
-  type: ""
-  ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
-  ## E.g.
-  ## key: "kubernetes.io/e2e-az-name"
-  ##
-  key: ""
-  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
-  ## E.g.
-  ## values:
-  ##   - e2e-az1
-  ##   - e2e-az2
-  ##
-  values: []
-## @param affinity Affinity for pod assignment. Evaluated as a template.
-## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
-##
-affinity: {}
-## @param nodeSelector Node labels for pod assignment. Evaluated as a template.
-## ref: https://kubernetes.io/docs/user-guide/node-selection/
-##
-nodeSelector: {}
-## @param tolerations Tolerations for pod assignment. Evaluated as a template.
-## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
-##
-tolerations: []
-## Container resource requests and limits
-## ref: https://kubernetes.io/docs/user-guide/compute-resources/
-## We usually recommend not to specify default resources and to leave this as a conscious
-## choice for the user. This also increases chances charts run on environments with little
-## resources, such as Minikube. If you do want to specify resources, uncomment the following
-## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
-## @param resources.limits The resources limits for the Mxnet container
-## @param resources.requests The requested resources for the Mxnet container
-##
-resources:
-  ## Example:
-  ## limits:
-  ##    cpu: 250m
-  ##    memory: 256Mi
-  limits: {}
-  ## Examples:
-  ## requests:
-  ##    cpu: 250m
-  ##    memory: 256Mi
-  requests: {}
-## Pod Security Context
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
-## @param securityContext.enabled Enable security context
-## @param securityContext.fsGroup Group ID for the container
-## @param securityContext.runAsUser User ID for the container
-##
-securityContext:
-  enabled: true
-  fsGroup: 1001
-  runAsUser: 1001
-## Configure extra options for liveness probe
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
-## @param livenessProbe.enabled Enable livenessProbe
-## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
-## @param livenessProbe.periodSeconds Period seconds for livenessProbe
-## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
-## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
-## @param livenessProbe.successThreshold Success threshold for livenessProbe
-##
-livenessProbe:
-  enabled: true
-  initialDelaySeconds: 5
-  periodSeconds: 5
-  timeoutSeconds: 15
-  successThreshold: 1
-  failureThreshold: 5
-## Configure extra options for readiness probe
-## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
-## @param readinessProbe.enabled Enable readinessProbe
-## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
-## @param readinessProbe.periodSeconds Period seconds for readinessProbe
-## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
-## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
-## @param readinessProbe.successThreshold Success threshold for readinessProbe
-##
-readinessProbe:
-  enabled: true
-  initialDelaySeconds: 5
-  periodSeconds: 5
-  timeoutSeconds: 15
-  successThreshold: 1
-  failureThreshold: 5
 ## Enable persistence using Persistent Volume Claims
 ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
 ##
@@ -298,6 +133,17 @@ persistence:
   ## @param persistence.enabled Use a PVC to persist data
   ##
   enabled: false
+  ## @param persistence.storageClass discourse & sidekiq data Persistent Volume Storage Class
+  ## If defined, storageClassName: <storageClass>
+  ## If set to "-", storageClassName: "", which disables dynamic provisioning
+  ## If undefined (the default) or set to null, no storageClassName spec is
+  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
+  ##   GKE, AWS & OpenStack)
+  ##
+  storageClass: ""
+  ## @param persistence.existingClaim Use a existing PVC which must be created manually before bound
+  ##
+  existingClaim: ""
   ## @param persistence.mountPath Path to mount the volume at
   ##
   mountPath: /bitnami/mxnet
@@ -308,17 +154,28 @@ persistence:
   ## @param persistence.size Size of data volume
   ##
   size: 8Gi
-  ## Persistent Volume Storage Class
-  ## If defined, storageClassName: <storageClass>
-  ## If set to "-", storageClassName: "", which disables dynamic provisioning
-  ## If undefined (the default) or set to null, no storageClassName spec is
-  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
-  ##   GKE, AWS & OpenStack)
-  ##
-  # storageClass: "-"
   ## @param persistence.annotations Persistent Volume annotations
   ##
   annotations: {}
+## @param extraEnvVars Array with extra environment variables to add to all the pods
+## e.g:
+## extraEnvVars:
+##   - name: FOO
+##     value: "bar"
+##
+extraEnvVars: []
+## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars for all the pods
+##
+extraEnvVarsCM: ""
+## @param extraEnvVarsSecret Name of existing Secret containing extra env vars for all the pods
+##
+extraEnvVarsSecret: ""
+## @param extraVolumes Array to add extra volumes (evaluated as a template)
+##
+extraVolumes: []
+## @param extraVolumeMounts Array to add extra mounts (normally used with extraVolumes, evaluated as a template)
+##
+extraVolumeMounts: []
 ## @param sidecars Attach additional containers to the pods (scheduler, worker and server nodes)
 ## e.g.
 ## sidecars:
@@ -341,118 +198,394 @@ sidecars: []
 ##       containerPort: 1234
 ##
 initContainers: []
-## @param extraVolumes Array to add extra volumes (evaluated as a template)
-##
-extraVolumes: []
-## @param extraVolumeMounts Array to add extra mounts (normally used with extraVolumes, evaluated as a template)
-##
-extraVolumeMounts: []
-
-
-## @section Mxnet Server parameters (only for distributed mode)
 
-server:
-  ## @param server.replicaCount Number of Server nodes that will execute your code
+## @section Mxnet Standalone parameters (only for standalone mode)
+standalone:
+  ## @param standalone.affinity Affinity for Mxnet standalone pods assignment
+  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
+  ## NOTE: `standalone.podAffinityPreset`, `standalone.podAntiAffinityPreset`, and `standalone.nodeAffinityPreset` will be ignored when it's set
   ##
-  replicaCount: 1
-  ## @param server.extraEnvVars Extra environment variables to add to the Server nodes
-  ## Example:
+  affinity: {}
+  ## Node standalone.affinity preset
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
+  ##
+  nodeAffinityPreset:
+    ## @param standalone.nodeAffinityPreset.type Node affinity preset type. Ignored if `standalone.affinity` is set. Allowed values: `soft` or `hard`
+    ##
+    type: ""
+    ## @param standalone.nodeAffinityPreset.key Node label key to match. Ignored if `standalone.affinity` is set
+    ##
+    key: ""
+    ## @param standalone.nodeAffinityPreset.values Node label values to match. Ignored if `standalone.affinity` is set
+    ## E.g.
+    ## values:
+    ##   - e2e-az1
+    ##   - e2e-az2
+    ##
+    values: []
+  ## @param standalone.nodeSelector Node labels for Mxnet standalone pods assignment
+  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
+  ##
+  nodeSelector: {}
+  ## @param standalone.podAffinityPreset Pod affinity preset. Ignored if `standalone.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  ##
+  podAffinityPreset: ""
+  ## @param standalone.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `standalone.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  ##
+  podAntiAffinityPreset: soft
+  ## @param standalone.hostAliases Mxnet standalone pods host aliases
+  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
+  ##
+  hostAliases: []
+  ## @param standalone.tolerations Tolerations for Mxnet standalone pods assignment
+  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+  ##
+  tolerations: []
+  ## @param standalone.podAnnotations Annotations for Mxnet standalone pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
+  ##
+  podAnnotations: {}
+  ## @param standalone.podLabels Extra labels for Mxnet standalone pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+  ##
+  podLabels: {}
+  ## Configure Pods Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param standalone.podSecurityContext.enabled Enabled Mxnet standalone pods' Security Context
+  ## @param standalone.podSecurityContext.fsGroup Set Mxnet standalone pod's Security Context fsGroup
+  ##
+  podSecurityContext:
+    enabled: true
+    fsGroup: 1001
+  ## Configure Container Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param standalone.containerSecurityContext.enabled Enabled Mxnet standalone containers' Security Context
+  ## @param standalone.containerSecurityContext.runAsUser Set Mxnet standalone containers' Security Context runAsUser
+  ## @param standalone.containerSecurityContext.runAsNonRoot Set Mxnet standalone container's Security Context runAsNonRoot
+  ##
+  containerSecurityContext:
+    enabled: true
+    runAsUser: 1001
+    runAsNonRoot: true
+  ## @param standalone.command Override default container command (useful when using custom images)
+  ##
+  command: []
+  ## @param standalone.args Override default container args (useful when using custom images)
+  ##
+  args: []
+  ## @param standalone.lifecycleHooks for the Mxnet standalone container(s) to automate configuration before or after startup
+  ##
+  lifecycleHooks: {}
+  ## @param standalone.extraEnvVars Array with extra environment variables to add to Mxnet standalone nodes
+  ## e.g:
   ## extraEnvVars:
   ##   - name: FOO
   ##     value: "bar"
   ##
   extraEnvVars: []
-  ## @param server.hostAliases Deployment pod host aliases
-  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
+  ## @param standalone.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Mxnet standalone nodes
   ##
-  hostAliases: []
+  extraEnvVarsCM: ""
+  ## @param standalone.extraEnvVarsSecret Name of existing Secret containing extra env vars for Mxnet standalone nodes
+  ##
+  extraEnvVarsSecret: ""
+  ## @param standalone.extraVolumes Optionally specify extra list of additional volumes for the Mxnet standalone pod(s)
+  ##
+  extraVolumes: []
+  ## @param standalone.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Mxnet standalone container(s)
+  ##
+  extraVolumeMounts: []
+  ## @param standalone.containerPorts.mxnet Mxnet container port
+  ##
+  containerPorts:
+    mxnet: 9092
+  ## @param standalone.sidecars Add additional sidecar containers to the Mxnet standalone pod(s)
+  ## e.g:
+  ## sidecars:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##     ports:
+  ##       - name: portname
+  ##         containerPort: 1234
+  ##
+  sidecars: []
+  ## @param standalone.initContainers Add additional init containers to the Mxnet standalone pod(s)
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
+  ## e.g:
+  ## initContainers:
+  ##  - name: your-image-name
+  ##    image: your-image
+  ##    imagePullPolicy: Always
+  ##    command: ['sh', '-c', 'echo "hello world"']
+  ##
+  initContainers: []
+  ## @param standalone.updateStrategy.type Mxnet standalone deployment strategy type.
+  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
+  ## e.g:
+  ## updateStrategy:
+  ##  type: RollingUpdate
+  ##  rollingUpdate:
+  ##    maxSurge: 25%
+  ##    maxUnavailable: 25%
+  ##
+  updateStrategy:
+    type: RollingUpdate
+  ## @param standalone.priorityClassName Mxnet standalone pods' priorityClassName
+  ##
+  priorityClassName: ""
+  ## @param standalone.schedulerName Name of the k8s scheduler (other than default)
+  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+  ##
+  schedulerName: ""
+  ## @param standalone.terminationGracePeriodSeconds In seconds, time the given to the Mxnet standalone pod needs to terminate gracefully
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
+  ##
+  terminationGracePeriodSeconds: ""
+  ## @param standalone.topologySpreadConstraints Topology Spread Constraints for pod assignment
+  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
+  ## The value is evaluated as a template
+  ##
+  topologySpreadConstraints: []
   ## Container resource requests and limits
   ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
   ## We usually recommend not to specify default resources and to leave this as a conscious
   ## choice for the user. This also increases chances charts run on environments with little
   ## resources, such as Minikube. If you do want to specify resources, uncomment the following
   ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
-  ## @param server.resources.limits The resources limits for the Mxnet Server container
-  ## @param server.resources.requests The requested resources for the Mxnet Server container
+  ## @param standalone.resources.limits The resources limits for the Mxnet container
+  ## @param standalone.resources.requests The requested resources for the Mxnet container
   ##
   resources:
     ## Example:
     ## limits:
-    ##    cpu: 100m
-    ##    memory: 128Mi
+    ##    cpu: 250m
+    ##    memory: 256Mi
     limits: {}
     ## Examples:
     ## requests:
-    ##    cpu: 100m
-    ##    memory: 128Mi
+    ##    cpu: 250m
+    ##    memory: 256Mi
     requests: {}
-  ## @param server.podAffinityPreset Mxnet Server pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  ## Configure extra options for Mxnet standalone containers' liveness, readiness and startup probes
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
+  ## @param standalone.startupProbe.enabled Enable startupProbe
+  ## @param standalone.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
+  ## @param standalone.startupProbe.periodSeconds Period seconds for startupProbe
+  ## @param standalone.startupProbe.timeoutSeconds Timeout seconds for startupProbe
+  ## @param standalone.startupProbe.failureThreshold Failure threshold for startupProbe
+  ## @param standalone.startupProbe.successThreshold Success threshold for startupProbe
   ##
-  podAffinityPreset: ""
-  ## @param server.podAntiAffinityPreset Mxnet Server pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  startupProbe:
+    enabled: false
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param standalone.livenessProbe.enabled Enable livenessProbe
+  ## @param standalone.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
+  ## @param standalone.livenessProbe.periodSeconds Period seconds for livenessProbe
+  ## @param standalone.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
+  ## @param standalone.livenessProbe.failureThreshold Failure threshold for livenessProbe
+  ## @param standalone.livenessProbe.successThreshold Success threshold for livenessProbe
   ##
-  podAntiAffinityPreset: soft
-  ## Node affinity preset
+  livenessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param standalone.readinessProbe.enabled Enable readinessProbe
+  ## @param standalone.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
+  ## @param standalone.readinessProbe.periodSeconds Period seconds for readinessProbe
+  ## @param standalone.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
+  ## @param standalone.readinessProbe.failureThreshold Failure threshold for readinessProbe
+  ## @param standalone.readinessProbe.successThreshold Success threshold for readinessProbe
+  ##
+  readinessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param standalone.customStartupProbe Custom liveness probe for the Web component
+  ##
+  customStartupProbe: {}
+  ## @param standalone.customLivenessProbe Custom liveness probe for the Web component
+  ##
+  customLivenessProbe: {}
+  ## @param standalone.customReadinessProbe Custom readiness probe for the Web component
+  ##
+  customReadinessProbe: {}
+
+
+## @section Mxnet Server parameters (only for distributed mode)
+
+server:
+  ## @param server.replicaCount Number of Server nodes that will execute your code
+  ##
+  replicaCount: 1
+  ## @param server.affinity Affinity for Mxnet server pods assignment
+  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
+  ## NOTE: `server.podAffinityPreset`, `server.podAntiAffinityPreset`, and `server.nodeAffinityPreset` will be ignored when it's set
+  ##
+  affinity: {}
+  ## Node server.affinity preset
   ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
-  ## Allowed values: soft, hard
   ##
   nodeAffinityPreset:
-    ## @param server.nodeAffinityPreset.type Mxnet Server node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
+    ## @param server.nodeAffinityPreset.type Node affinity preset type. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`
     ##
     type: ""
-    ## @param server.nodeAffinityPreset.key Mxnet Server node label key to match Ignored if `affinity` is set.
-    ## E.g.
-    ## key: "kubernetes.io/e2e-az-name"
+    ## @param server.nodeAffinityPreset.key Node label key to match. Ignored if `server.affinity` is set
     ##
     key: ""
-    ## @param server.nodeAffinityPreset.values Mxnet Server node label values to match. Ignored if `affinity` is set.
+    ## @param server.nodeAffinityPreset.values Node label values to match. Ignored if `server.affinity` is set
     ## E.g.
     ## values:
     ##   - e2e-az1
     ##   - e2e-az2
     ##
     values: []
-  ## @param server.affinity Mxnet Server affinity for pod assignment
-  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-  ## Note: configsvr.podAffinityPreset, configsvr.podAntiAffinityPreset, and configsvr.nodeAffinityPreset will be ignored when it's set
-  ##
-  affinity: {}
-  ## @param server.nodeSelector Mxnet Server node labels for pod assignment
+  ## @param server.nodeSelector Node labels for Mxnet server pods assignment
   ## ref: https://kubernetes.io/docs/user-guide/node-selection/
   ##
   nodeSelector: {}
-  ## @param server.tolerations Mxnet Server tolerations for pod assignment
-  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+  ## @param server.podAffinityPreset Pod affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
   ##
-  tolerations: []
-
-## @section Mxnet Worker parameters (only for distributed mode)
-
-worker:
-  ## @param worker.replicaCount Number of Worker nodes that will execute your code
+  podAffinityPreset: ""
+  ## @param server.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
   ##
-  replicaCount: 1
-  ## @param worker.hostAliases Add deployment host aliases
+  podAntiAffinityPreset: soft
+  ## @param server.hostAliases Mxnet server pods host aliases
   ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
   ##
   hostAliases: []
-  ## @param worker.extraEnvVars Extra environment variables to add to the Server nodes
-  ## Example:
+  ## @param server.tolerations Tolerations for Mxnet server pods assignment
+  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+  ##
+  tolerations: []
+  ## @param server.podAnnotations Annotations for Mxnet server pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
+  ##
+  podAnnotations: {}
+  ## @param server.podLabels Extra labels for Mxnet server pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+  ##
+  podLabels: {}
+  ## Configure Pods Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param server.podSecurityContext.enabled Enabled Mxnet server pods' Security Context
+  ## @param server.podSecurityContext.fsGroup Set Mxnet server pod's Security Context fsGroup
+  ##
+  podSecurityContext:
+    enabled: true
+    fsGroup: 1001
+  ## Configure Container Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param server.containerSecurityContext.enabled Enabled Mxnet server containers' Security Context
+  ## @param server.containerSecurityContext.runAsUser Set Mxnet server containers' Security Context runAsUser
+  ## @param server.containerSecurityContext.runAsNonRoot Set Mxnet server container's Security Context runAsNonRoot
+  ##
+  containerSecurityContext:
+    enabled: true
+    runAsUser: 1001
+    runAsNonRoot: true
+  ## @param server.command Override default container command (useful when using custom images)
+  ##
+  command: []
+  ## @param server.args Override default container args (useful when using custom images)
+  ##
+  args: []
+  ## @param server.lifecycleHooks for the Mxnet server container(s) to automate configuration before or after startup
+  ##
+  lifecycleHooks: {}
+  ## @param server.extraEnvVars Array with extra environment variables to add to Mxnet server nodes
+  ## e.g:
   ## extraEnvVars:
   ##   - name: FOO
   ##     value: "bar"
   ##
   extraEnvVars: []
+  ## @param server.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Mxnet server nodes
+  ##
+  extraEnvVarsCM: ""
+  ## @param server.extraEnvVarsSecret Name of existing Secret containing extra env vars for Mxnet server nodes
+  ##
+  extraEnvVarsSecret: ""
+  ## @param server.extraVolumes Optionally specify extra list of additional volumes for the Mxnet server pod(s)
+  ##
+  extraVolumes: []
+  ## @param server.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Mxnet server container(s)
+  ##
+  extraVolumeMounts: []
+  ## @param server.sidecars Add additional sidecar containers to the Mxnet server pod(s)
+  ## e.g:
+  ## sidecars:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##     ports:
+  ##       - name: portname
+  ##         containerPort: 1234
+  ##
+  sidecars: []
+  ## @param server.initContainers Add additional init containers to the Mxnet server pod(s)
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
+  ## e.g:
+  ## initContainers:
+  ##  - name: your-image-name
+  ##    image: your-image
+  ##    imagePullPolicy: Always
+  ##    command: ['sh', '-c', 'echo "hello world"']
+  ##
+  initContainers: []
+  ## @param server.updateStrategy.type Mxnet server deployment strategy type.
+  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
+  ## e.g:
+  ## updateStrategy:
+  ##  type: RollingUpdate
+  ##  rollingUpdate:
+  ##    maxSurge: 25%
+  ##    maxUnavailable: 25%
+  ##
+  updateStrategy:
+    type: RollingUpdate
+  ## @param server.priorityClassName Mxnet server pods' priorityClassName
+  ##
+  priorityClassName: ""
+  ## @param server.schedulerName Name of the k8s scheduler (other than default)
+  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+  ##
+  schedulerName: ""
+  ## @param server.terminationGracePeriodSeconds In seconds, time the given to the Mxnet server pod needs to terminate gracefully
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
+  ##
+  terminationGracePeriodSeconds: ""
+  ## @param server.topologySpreadConstraints Topology Spread Constraints for pod assignment
+  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
+  ## The value is evaluated as a template
+  ##
+  topologySpreadConstraints: []
+  ## @param server.podManagementPolicy podManagementPolicy to manage scaling operation of Mxnet server pods
+  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
+  ##
+  podManagementPolicy: ""
   ## Container resource requests and limits
   ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
   ## We usually recommend not to specify default resources and to leave this as a conscious
   ## choice for the user. This also increases chances charts run on environments with little
   ## resources, such as Minikube. If you do want to specify resources, uncomment the following
   ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
-  ## @param worker.resources.limits The resources limits for the Mxnet Worker container
-  ## @param worker.resources.requests The requested resources for the Mxnet Worker container
+  ## @param server.resources.limits The resources limits for the Mxnet container
+  ## @param server.resources.requests The requested resources for the Mxnet container
   ##
   resources:
     ## Example:
@@ -465,74 +598,222 @@ worker:
     ##    cpu: 250m
     ##    memory: 256Mi
     requests: {}
-  ## @param worker.podAffinityPreset Mxnet Worker pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  ## Configure extra options for Mxnet server containers' liveness, readiness and startup probes
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
+  ## @param server.startupProbe.enabled Enable startupProbe
+  ## @param server.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
+  ## @param server.startupProbe.periodSeconds Period seconds for startupProbe
+  ## @param server.startupProbe.timeoutSeconds Timeout seconds for startupProbe
+  ## @param server.startupProbe.failureThreshold Failure threshold for startupProbe
+  ## @param server.startupProbe.successThreshold Success threshold for startupProbe
   ##
-  podAffinityPreset: ""
-  ## @param worker.podAntiAffinityPreset Mxnet Worker pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  startupProbe:
+    enabled: false
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param server.livenessProbe.enabled Enable livenessProbe
+  ## @param server.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
+  ## @param server.livenessProbe.periodSeconds Period seconds for livenessProbe
+  ## @param server.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
+  ## @param server.livenessProbe.failureThreshold Failure threshold for livenessProbe
+  ## @param server.livenessProbe.successThreshold Success threshold for livenessProbe
   ##
-  podAntiAffinityPreset: soft
-  ## Node affinity preset
+  livenessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param server.readinessProbe.enabled Enable readinessProbe
+  ## @param server.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
+  ## @param server.readinessProbe.periodSeconds Period seconds for readinessProbe
+  ## @param server.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
+  ## @param server.readinessProbe.failureThreshold Failure threshold for readinessProbe
+  ## @param server.readinessProbe.successThreshold Success threshold for readinessProbe
+  ##
+  readinessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param server.customStartupProbe Custom liveness probe for the Web component
+  ##
+  customStartupProbe: {}
+  ## @param server.customLivenessProbe Custom liveness probe for the Web component
+  ##
+  customLivenessProbe: {}
+  ## @param server.customReadinessProbe Custom readiness probe for the Web component
+  ##
+  customReadinessProbe: {}
+
+## @section Mxnet Worker parameters (only for distributed mode)
+
+worker:
+  ## @param worker.replicaCount Number of Worker nodes that will execute your code
+  ##
+  replicaCount: 1
+    ## @param worker.affinity Affinity for Mxnet worker pods assignment
+  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
+  ## NOTE: `worker.podAffinityPreset`, `worker.podAntiAffinityPreset`, and `worker.nodeAffinityPreset` will be ignored when it's set
+  ##
+  affinity: {}
+  ## Node worker.affinity preset
   ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
-  ## Allowed values: soft, hard
   ##
   nodeAffinityPreset:
-    ## @param worker.nodeAffinityPreset.type Mxnet Worker node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
+    ## @param worker.nodeAffinityPreset.type Node affinity preset type. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`
     ##
     type: ""
-    ## @param worker.nodeAffinityPreset.key Mxnet Worker node label key to match Ignored if `affinity` is set.
-    ## E.g.
-    ## key: "kubernetes.io/e2e-az-name"
+    ## @param worker.nodeAffinityPreset.key Node label key to match. Ignored if `worker.affinity` is set
     ##
     key: ""
-    ## @param worker.nodeAffinityPreset.values Mxnet Worker node label values to match. Ignored if `affinity` is set.
+    ## @param worker.nodeAffinityPreset.values Node label values to match. Ignored if `worker.affinity` is set
     ## E.g.
     ## values:
     ##   - e2e-az1
     ##   - e2e-az2
     ##
     values: []
-  ## @param worker.affinity Mxnet Worker affinity for pod assignment
-  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-  ## Note: configsvr.podAffinityPreset, configsvr.podAntiAffinityPreset, and configsvr.nodeAffinityPreset will be ignored when it's set
-  ##
-  affinity: {}
-  ## @param worker.nodeSelector Mxnet Worker node labels for pod assignment
+  ## @param worker.nodeSelector Node labels for Mxnet worker pods assignment
   ## ref: https://kubernetes.io/docs/user-guide/node-selection/
   ##
   nodeSelector: {}
-  ## @param worker.tolerations Mxnet Worker tolerations for pod assignment
-  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+  ## @param worker.podAffinityPreset Pod affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
   ##
-  tolerations: []
-
-## @section Mxnet Scheduler parameters (only for distributed mode)
-
-scheduler:
-  ## @param scheduler.port The port used to communicate with the scheduler
-  ## MASTER_PORT will be set to this value
+  podAffinityPreset: ""
+  ## @param worker.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
   ##
-  port: 9092
-  ## @param scheduler.hostAliases Deployment pod host aliases
+  podAntiAffinityPreset: soft
+  ## @param worker.hostAliases Mxnet worker pods host aliases
   ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
   ##
   hostAliases: []
-  ## @param scheduler.extraEnvVars An array to add extra env vars
-  ## Example:
+  ## @param worker.tolerations Tolerations for Mxnet worker pods assignment
+  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
+  ##
+  tolerations: []
+  ## @param worker.podAnnotations Annotations for Mxnet worker pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
+  ##
+  podAnnotations: {}
+  ## @param worker.podLabels Extra labels for Mxnet worker pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+  ##
+  podLabels: {}
+  ## Configure Pods Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param worker.podSecurityContext.enabled Enabled Mxnet worker pods' Security Context
+  ## @param worker.podSecurityContext.fsGroup Set Mxnet worker pod's Security Context fsGroup
+  ##
+  podSecurityContext:
+    enabled: true
+    fsGroup: 1001
+  ## Configure Container Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param worker.containerSecurityContext.enabled Enabled Mxnet worker containers' Security Context
+  ## @param worker.containerSecurityContext.runAsUser Set Mxnet worker containers' Security Context runAsUser
+  ## @param worker.containerSecurityContext.runAsNonRoot Set Mxnet worker container's Security Context runAsNonRoot
+  ##
+  containerSecurityContext:
+    enabled: true
+    runAsUser: 1001
+    runAsNonRoot: true
+  ## @param worker.command Override default container command (useful when using custom images)
+  ##
+  command: []
+  ## @param worker.args Override default container args (useful when using custom images)
+  ##
+  args: []
+  ## @param worker.lifecycleHooks for the Mxnet worker container(s) to automate configuration before or after startup
+  ##
+  lifecycleHooks: {}
+  ## @param worker.extraEnvVars Array with extra environment variables to add to Mxnet worker nodes
+  ## e.g:
   ## extraEnvVars:
   ##   - name: FOO
   ##     value: "bar"
   ##
   extraEnvVars: []
+  ## @param worker.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Mxnet worker nodes
+  ##
+  extraEnvVarsCM: ""
+  ## @param worker.extraEnvVarsSecret Name of existing Secret containing extra env vars for Mxnet worker nodes
+  ##
+  extraEnvVarsSecret: ""
+  ## @param worker.extraVolumes Optionally specify extra list of additional volumes for the Mxnet worker pod(s)
+  ##
+  extraVolumes: []
+  ## @param worker.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Mxnet worker container(s)
+  ##
+  extraVolumeMounts: []
+  ## @param worker.sidecars Add additional sidecar containers to the Mxnet worker pod(s)
+  ## e.g:
+  ## sidecars:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##     ports:
+  ##       - name: portname
+  ##         containerPort: 1234
+  ##
+  sidecars: []
+  ## @param worker.initContainers Add additional init containers to the Mxnet worker pod(s)
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
+  ## e.g:
+  ## initContainers:
+  ##  - name: your-image-name
+  ##    image: your-image
+  ##    imagePullPolicy: Always
+  ##    command: ['sh', '-c', 'echo "hello world"']
+  ##
+  initContainers: []
+  ## @param worker.updateStrategy.type Mxnet worker deployment strategy type.
+  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
+  ## e.g:
+  ## updateStrategy:
+  ##  type: RollingUpdate
+  ##  rollingUpdate:
+  ##    maxSurge: 25%
+  ##    maxUnavailable: 25%
+  ##
+  updateStrategy:
+    type: RollingUpdate
+  ## @param worker.priorityClassName Mxnet worker pods' priorityClassName
+  ##
+  priorityClassName: ""
+  ## @param worker.schedulerName Name of the k8s scheduler (other than default)
+  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+  ##
+  schedulerName: ""
+  ## @param worker.terminationGracePeriodSeconds In seconds, time the given to the Mxnet worker pod needs to terminate gracefully
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
+  ##
+  terminationGracePeriodSeconds: ""
+  ## @param worker.topologySpreadConstraints Topology Spread Constraints for pod assignment
+  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
+  ## The value is evaluated as a template
+  ##
+  topologySpreadConstraints: []
+  ## @param worker.podManagementPolicy podManagementPolicy to manage scaling operation of Mxnet worker pods
+  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
+  ##
+  podManagementPolicy: ""
   ## Container resource requests and limits
   ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
   ## We usually recommend not to specify default resources and to leave this as a conscious
   ## choice for the user. This also increases chances charts run on environments with little
   ## resources, such as Minikube. If you do want to specify resources, uncomment the following
   ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
-  ## @param scheduler.resources.limits The resources limits for the Mxnet Scheduler container
-  ## @param scheduler.resources.requests The requested resources for the Mxnet Scheduler container
+  ## @param worker.resources.limits The resources limits for the Mxnet container
+  ## @param worker.resources.requests The requested resources for the Mxnet container
   ##
   resources:
     ## Example:
@@ -545,44 +826,404 @@ scheduler:
     ##    cpu: 250m
     ##    memory: 256Mi
     requests: {}
-  ## @param scheduler.podAffinityPreset Mxnet Scheduler pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  ## Configure extra options for Mxnet worker containers' liveness, readiness and startup probes
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
+  ## @param worker.startupProbe.enabled Enable startupProbe
+  ## @param worker.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
+  ## @param worker.startupProbe.periodSeconds Period seconds for startupProbe
+  ## @param worker.startupProbe.timeoutSeconds Timeout seconds for startupProbe
+  ## @param worker.startupProbe.failureThreshold Failure threshold for startupProbe
+  ## @param worker.startupProbe.successThreshold Success threshold for startupProbe
   ##
-  podAffinityPreset: ""
-  ## @param scheduler.podAntiAffinityPreset Mxnet Scheduler pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
-  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  startupProbe:
+    enabled: false
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param worker.livenessProbe.enabled Enable livenessProbe
+  ## @param worker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
+  ## @param worker.livenessProbe.periodSeconds Period seconds for livenessProbe
+  ## @param worker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
+  ## @param worker.livenessProbe.failureThreshold Failure threshold for livenessProbe
+  ## @param worker.livenessProbe.successThreshold Success threshold for livenessProbe
   ##
-  podAntiAffinityPreset: soft
-  ## Node affinity preset
+  livenessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param worker.readinessProbe.enabled Enable readinessProbe
+  ## @param worker.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
+  ## @param worker.readinessProbe.periodSeconds Period seconds for readinessProbe
+  ## @param worker.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
+  ## @param worker.readinessProbe.failureThreshold Failure threshold for readinessProbe
+  ## @param worker.readinessProbe.successThreshold Success threshold for readinessProbe
+  ##
+  readinessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param worker.customStartupProbe Custom liveness probe for the Web component
+  ##
+  customStartupProbe: {}
+  ## @param worker.customLivenessProbe Custom liveness probe for the Web component
+  ##
+  customLivenessProbe: {}
+  ## @param worker.customReadinessProbe Custom readiness probe for the Web component
+  ##
+  customReadinessProbe: {}
+
+## @section Mxnet Scheduler parameters (only for distributed mode)
+
+scheduler:
+  ## @param scheduler.containerPorts.mxnet The port used to communicate with the scheduler
+  ## MASTER_PORT will be set to this value
+  ##
+  containerPorts:
+    mxnet: 9092
+  ## @param scheduler.affinity Affinity for Mxnet scheduler pods assignment
+  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
+  ## NOTE: `scheduler.podAffinityPreset`, `scheduler.podAntiAffinityPreset`, and `scheduler.nodeAffinityPreset` will be ignored when it's set
+  ##
+  affinity: {}
+  ## Node scheduler.affinity preset
   ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
-  ## Allowed values: soft, hard
   ##
   nodeAffinityPreset:
-    ## @param scheduler.nodeAffinityPreset.type Mxnet Scheduler node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
+    ## @param scheduler.nodeAffinityPreset.type Node affinity preset type. Ignored if `scheduler.affinity` is set. Allowed values: `soft` or `hard`
     ##
     type: ""
-    ## @param scheduler.nodeAffinityPreset.key Mxnet Scheduler node label key to match Ignored if `affinity` is set.
-    ## E.g.
-    ## key: "kubernetes.io/e2e-az-name"
+    ## @param scheduler.nodeAffinityPreset.key Node label key to match. Ignored if `scheduler.affinity` is set
     ##
     key: ""
-    ## @param scheduler.nodeAffinityPreset.values Mxnet Scheduler node label values to match. Ignored if `affinity` is set.
+    ## @param scheduler.nodeAffinityPreset.values Node label values to match. Ignored if `scheduler.affinity` is set
     ## E.g.
     ## values:
     ##   - e2e-az1
     ##   - e2e-az2
     ##
     values: []
-  ## @param scheduler.affinity Mxnet Scheduler affinity for pod assignment
-  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-  ## Note: configsvr.podAffinityPreset, configsvr.podAntiAffinityPreset, and configsvr.nodeAffinityPreset will be ignored when it's set
-  ##
-  affinity: {}
-  ## @param scheduler.nodeSelector Mxnet Scheduler node labels for pod assignment
+  ## @param scheduler.nodeSelector Node labels for Mxnet scheduler pods assignment
   ## ref: https://kubernetes.io/docs/user-guide/node-selection/
   ##
   nodeSelector: {}
-  ## @param scheduler.tolerations Mxnet Scheduler tolerations for pod assignment
+  ## @param scheduler.podAffinityPreset Pod affinity preset. Ignored if `scheduler.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  ##
+  podAffinityPreset: ""
+  ## @param scheduler.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `scheduler.affinity` is set. Allowed values: `soft` or `hard`
+  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
+  ##
+  podAntiAffinityPreset: soft
+  ## @param scheduler.hostAliases Mxnet scheduler pods host aliases
+  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
+  ##
+  hostAliases: []
+  ## @param scheduler.tolerations Tolerations for Mxnet scheduler pods assignment
   ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
   ##
   tolerations: []
+  ## @param scheduler.podAnnotations Annotations for Mxnet scheduler pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
+  ##
+  podAnnotations: {}
+  ## @param scheduler.podLabels Extra labels for Mxnet scheduler pods
+  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
+  ##
+  podLabels: {}
+  ## Configure Pods Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param scheduler.podSecurityContext.enabled Enabled Mxnet scheduler pods' Security Context
+  ## @param scheduler.podSecurityContext.fsGroup Set Mxnet scheduler pod's Security Context fsGroup
+  ##
+  podSecurityContext:
+    enabled: true
+    fsGroup: 1001
+  ## Configure Container Security Context
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
+  ## @param scheduler.containerSecurityContext.enabled Enabled Mxnet scheduler containers' Security Context
+  ## @param scheduler.containerSecurityContext.runAsUser Set Mxnet scheduler containers' Security Context runAsUser
+  ## @param scheduler.containerSecurityContext.runAsNonRoot Set Mxnet scheduler container's Security Context runAsNonRoot
+  ##
+  containerSecurityContext:
+    enabled: true
+    runAsUser: 1001
+    runAsNonRoot: true
+  ## @param scheduler.command Override default container command (useful when using custom images)
+  ##
+  command: []
+  ## @param scheduler.args Override default container args (useful when using custom images)
+  ##
+  args: []
+  ## @param scheduler.lifecycleHooks for the Mxnet scheduler container(s) to automate configuration before or after startup
+  ##
+  lifecycleHooks: {}
+  ## @param scheduler.extraEnvVars Array with extra environment variables to add to Mxnet scheduler nodes
+  ## e.g:
+  ## extraEnvVars:
+  ##   - name: FOO
+  ##     value: "bar"
+  ##
+  extraEnvVars: []
+  ## @param scheduler.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Mxnet scheduler nodes
+  ##
+  extraEnvVarsCM: ""
+  ## @param scheduler.extraEnvVarsSecret Name of existing Secret containing extra env vars for Mxnet scheduler nodes
+  ##
+  extraEnvVarsSecret: ""
+  ## @param scheduler.extraVolumes Optionally specify extra list of additional volumes for the Mxnet scheduler pod(s)
+  ##
+  extraVolumes: []
+  ## @param scheduler.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Mxnet scheduler container(s)
+  ##
+  extraVolumeMounts: []
+  ## @param scheduler.sidecars Add additional sidecar containers to the Mxnet scheduler pod(s)
+  ## e.g:
+  ## sidecars:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##     ports:
+  ##       - name: portname
+  ##         containerPort: 1234
+  ##
+  sidecars: []
+  ## @param scheduler.initContainers Add additional init containers to the Mxnet scheduler pod(s)
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
+  ## e.g:
+  ## initContainers:
+  ##  - name: your-image-name
+  ##    image: your-image
+  ##    imagePullPolicy: Always
+  ##    command: ['sh', '-c', 'echo "hello world"']
+  ##
+  initContainers: []
+  ## @param scheduler.updateStrategy.type Mxnet scheduler deployment strategy type.
+  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
+  ## e.g:
+  ## updateStrategy:
+  ##  type: RollingUpdate
+  ##  rollingUpdate:
+  ##    maxSurge: 25%
+  ##    maxUnavailable: 25%
+  ##
+  updateStrategy:
+    type: RollingUpdate
+  ## @param scheduler.priorityClassName Mxnet scheduler pods' priorityClassName
+  ##
+  priorityClassName: ""
+  ## @param scheduler.schedulerName Name of the k8s scheduler (other than default)
+  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
+  ##
+  schedulerName: ""
+  ## @param scheduler.terminationGracePeriodSeconds In seconds, time the given to the Mxnet scheduler pod needs to terminate gracefully
+  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
+  ##
+  terminationGracePeriodSeconds: ""
+  ## @param scheduler.topologySpreadConstraints Topology Spread Constraints for pod assignment
+  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
+  ## The value is evaluated as a template
+  ##
+  topologySpreadConstraints: []
+  ## Container resource requests and limits
+  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
+  ## We usually recommend not to specify default resources and to leave this as a conscious
+  ## choice for the user. This also increases chances charts run on environments with little
+  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
+  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
+  ## @param scheduler.resources.limits The resources limits for the Mxnet container
+  ## @param scheduler.resources.requests The requested resources for the Mxnet container
+  ##
+  resources:
+    ## Example:
+    ## limits:
+    ##    cpu: 250m
+    ##    memory: 256Mi
+    limits: {}
+    ## Examples:
+    ## requests:
+    ##    cpu: 250m
+    ##    memory: 256Mi
+    requests: {}
+  ## Configure extra options for Mxnet scheduler containers' liveness, readiness and startup probes
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
+  ## @param scheduler.startupProbe.enabled Enable startupProbe
+  ## @param scheduler.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
+  ## @param scheduler.startupProbe.periodSeconds Period seconds for startupProbe
+  ## @param scheduler.startupProbe.timeoutSeconds Timeout seconds for startupProbe
+  ## @param scheduler.startupProbe.failureThreshold Failure threshold for startupProbe
+  ## @param scheduler.startupProbe.successThreshold Success threshold for startupProbe
+  ##
+  startupProbe:
+    enabled: false
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param scheduler.livenessProbe.enabled Enable livenessProbe
+  ## @param scheduler.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
+  ## @param scheduler.livenessProbe.periodSeconds Period seconds for livenessProbe
+  ## @param scheduler.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
+  ## @param scheduler.livenessProbe.failureThreshold Failure threshold for livenessProbe
+  ## @param scheduler.livenessProbe.successThreshold Success threshold for livenessProbe
+  ##
+  livenessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param scheduler.readinessProbe.enabled Enable readinessProbe
+  ## @param scheduler.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
+  ## @param scheduler.readinessProbe.periodSeconds Period seconds for readinessProbe
+  ## @param scheduler.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
+  ## @param scheduler.readinessProbe.failureThreshold Failure threshold for readinessProbe
+  ## @param scheduler.readinessProbe.successThreshold Success threshold for readinessProbe
+  ##
+  readinessProbe:
+    enabled: true
+    initialDelaySeconds: 5
+    periodSeconds: 5
+    timeoutSeconds: 15
+    successThreshold: 1
+    failureThreshold: 5
+  ## @param scheduler.customStartupProbe Custom liveness probe for the Web component
+  ##
+  customStartupProbe: {}
+  ## @param scheduler.customLivenessProbe Custom liveness probe for the Web component
+  ##
+  customLivenessProbe: {}
+  ## @param scheduler.customReadinessProbe Custom readiness probe for the Web component
+  ##
+  customReadinessProbe: {}
+  ## Service for the scheduler node
+  ##
+  service:
+    ## @param scheduler.service.type Kubernetes service type
+    ##
+    type: ClusterIP
+    ## @param scheduler.service.ports.mxnet Scheduler Service port
+    ##
+    ports:
+      mxnet: 9092
+    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
+    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
+    ## @param scheduler.service.nodePorts.mxnet Node port for Mxnet scheduler
+    ##
+    nodePorts:
+      mxnet: ""
+    ## @param scheduler.service.clusterIP Scheduler service Cluster IP
+    ## e.g.:
+    ## clusterIP: None
+    ##
+    clusterIP: ""
+    ## @param scheduler.service.loadBalancerIP Scheduler service Load Balancer IP
+    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
+    ##
+    loadBalancerIP: ""
+    ## @param scheduler.service.loadBalancerSourceRanges Scheduler service Load Balancer sources
+    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
+    ## e.g:
+    ## loadBalancerSourceRanges:
+    ##   - 10.10.10.0/24
+    ##
+    loadBalancerSourceRanges: []
+    ## @param scheduler.service.externalTrafficPolicy Scheduler service external traffic policy
+    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
+    ##
+    externalTrafficPolicy: Cluster
+    ## @param scheduler.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
+    ##
+    extraPorts: []
+    ## @param scheduler.service.annotations Additional custom annotations for Scheduler service
+    ##
+    annotations: {}
+    ## @param scheduler.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
+    ## If "ClientIP", consecutive client requests will be directed to the same Pod
+    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
+    ##
+    sessionAffinity: None
+    ## @param scheduler.service.sessionAffinityConfig Additional settings for the sessionAffinity
+    ## sessionAffinityConfig:
+    ##   clientIP:
+    ##     timeoutSeconds: 300
+    ##
+    sessionAffinityConfig: {}
+
+## @section Init containers parameters
+## Bitnami git image version
+## ref: https://hub.docker.com/r/bitnami/git/tags/
+## @param git.registry Git image registry
+## @param git.repository Git image repository
+## @param git.tag Git image tag (immutable tags are recommended)
+## @param git.pullPolicy Git image pull policy
+## @param git.pullSecrets Specify docker-registry secret names as an array
+##
+git:
+  registry: docker.io
+  repository: bitnami/git
+  tag: 2.36.0-debian-10-r9
+  pullPolicy: IfNotPresent
+  ## Optionally specify an array of imagePullSecrets.
+  ## Secrets must be manually created in the namespace.
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+  ## e.g:
+  ## pullSecrets:
+  ##   - myRegistryKeySecretName
+  ##
+  pullSecrets: []
+
+## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
+##
+volumePermissions:
+  ## @param volumePermissions.enabled Enable init container that changes volume permissions in the data directory
+  ##
+  enabled: false
+  ## @param volumePermissions.image.registry Init container volume-permissions image registry
+  ## @param volumePermissions.image.repository Init container volume-permissions image repository
+  ## @param volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)
+  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
+  ## @param volumePermissions.image.pullSecrets Specify docker-registry secret names as an array
+  ##
+  image:
+    registry: docker.io
+    repository: bitnami/bitnami-shell
+    tag: 10-debian-10-r409
+    pullPolicy: IfNotPresent
+    ## Optionally specify an array of imagePullSecrets.
+    ## Secrets must be manually created in the namespace.
+    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+    ## e.g:
+    ## pullSecrets:
+    ##   - myRegistryKeySecretName
+    ##
+    pullSecrets: []
+  ## Init container' resource requests and limits
+  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
+  ## We usually recommend not to specify default resources and to leave this as a conscious
+  ## choice for the user. This also increases chances charts run on environments with little
+  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
+  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
+  ## @param volumePermissions.resources.limits The resources limits for the container
+  ## @param volumePermissions.resources.requests The requested resources for the container
+  ##
+  resources:
+    ## Example:
+    ## limits:
+    ##    cpu: 100m
+    ##    memory: 128Mi
+    limits: {}
+    ## Examples:
+    ## requests:
+    ##    cpu: 100m
+    ##    memory: 128Mi
+    requests: {}
