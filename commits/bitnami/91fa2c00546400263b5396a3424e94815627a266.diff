commit 91fa2c00546400263b5396a3424e94815627a266
Author: Marco Kilchhofer <mkilchhofer@users.noreply.github.com>
Date:   Wed Sep 9 15:29:10 2020 +0200

    [bitnami/contour] Sync upstream changes and chart standardization (#3381)
    
    * Sync back most significant upstream projectcontour changes
    
    The most important change is the refactoring of the shutdown sidecar:
    https://github.com/projectcontour/contour/commit/7cd9f4a6857ba3ca728f27f2b2605629961e9a54
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Delete removed CRD ingressroutes.contour.heptio.com
    
    > As a reminder, support for IngressRoute was officially dropped in v1.6.
    > If you havenâ€™t already migrated to HTTPProxy, see the IngressRoute to
    > HTTPProxy migration guide for instructions on how to do so. Once you have
    > migrated, delete the IngressRoute and related CRDs.
    Ref: https://projectcontour.io/resources/upgrading/
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Sync HTTPProxy CRD
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Sync TLSCertificateDelegation CRD
    
    * Drop old TLSCertificateDelegation CRD on API group contour.heptio.com
    
    API group contour.heptio.com is no longer supported since 1.6.x
    
    * Bump minor chart version as the change is no longer a patch
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Attempt to fix contour tests by upgrading to latest github actions
    
    * Override envoy service type to ClusterIP to make tests happy
    
    I found a hint in PR #2721 that it should be possible to override values
    used in GH actions.
    
    * Revert "Attempt to fix contour tests by upgrading to latest github actions"
    
    This was requested during the review process by dani8art.
    This reverts commit 253a8ecd60048a921b424083919a0bf36d5fabf4.
    
    * Add bitnami/common as a dependency
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Also use bitnami/common subchart for image
    
    * Implement extraVolumes and extraVolumeMounts on contour and envoy
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Implement extraEnvVars on contour and envoy
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Implement extraEnvVarsConfigMap and extraEnvVarsSecret
    
    * Implement initContainers for contour and envoy
    
    * Implement service.extraPorts on contour and envoy
    
    * Implement rolling tags helpers
    
    * Sync rbac with upstream
    
    As George Goh (@georgegoh) mentioned in issue projectcontour/contour#2050
    the leaderelection role is not needed anymore:
    > 1. I remove the `contour-leaderelection` role as it's no longer needed
    > in `templates/rbac.yaml`.
    > 2. General matching of the rbac.yaml to the rbacs defined in this project.
    
    Signed-off-by: Marco Kilchhofer <marco@kilchhofer.info>
    
    * Update README.md
    
    * Fix default values for image repositories
    * Add quotes (`)
    * Fix whitespaces in table
    
    * Also use bitnami/common subchart for pullSecrets
    
    The subchart bitnami/common now supports this (version 0.6.2 and newer).
    See PR #3566
    
    * Use same tpl functions for job
    
    Inside the Deployment we can use templating with 'tpl'. Since we use the
    same structure (affinity, nodeSelector and tolerations) for the
    Deployment and the Job, we should also use the same template functions.
    
    * Fix: affinity defined twice
    
    * Use more specific keyword antiAffinity -> antiAffinityPolicy
    
    * Bump chart major: 2.0.0
    
    * Variant2: Implement certgen by using hooks (#2)
    
    * Implement certgen via hooks
    * Delete resources with helm hooks only if needed
    * Revert "Delete resources with helm hooks only if needed"
    
    This reverts commit 76449252d06b7bda0f16c490316478c3fb1004f1.
    
    As documented inside the helm docs, we should remove unneeded resources:
    ~~~
    The resources that a hook creates are currently not tracked or managed as part
    of the release. Once Helm verifies that the hook has reached its ready state,
    it will leave the hook resource alone. Garbage collection of hook resources
    when the corresponding release is deleted may be added to Helm 3 in the future,
    so any hook resources that must never be deleted should be annotated with
    `helm.sh/resource-policy: keep`.
    
    Practically speaking, this means that if you create resources in a hook, you
    cannot rely upon helm uninstall to remove the resources. To destroy such
    resources, you need to either add a custom `helm.sh/hook-delete-policy`
    annotation to the hook template file, or set the time to live (TTL) field of
    a Job resource.
    ~~~
    
    * Replace colons with dashes (standardize even more)
    
    This was requested during review by @dani8art
    
    * Clearify README regarding CRDs and helm v3
    
    * Add small upgrading notes to README
    
    * Fix helm2 incompatibility due to PR #2961
    
    Helm2 uses Sprig v2 and therefore the funtion "get" is not available
    there. Since we need to guarantee helm v2 support, we need to workaround
    this.
    
    * Use consistent component labels on certgen resources
    
    * Use bitnami/common for apiVersion of kind Deployment
    
    * Rename parameter `contour.createCustomResource` to `contour.installCRDs`
    
    * Do not allocate an IP address on metrics services
    
    Services for ServiceMonitor do not need to allocate an IP address. We therefore do not
    waste IPs from the services CIDR pool for this.
    
    * Split into subfolders

diff --git a/bitnami/contour/Chart.yaml b/bitnami/contour/Chart.yaml
index 8a98205355..a564245b6b 100644
--- a/bitnami/contour/Chart.yaml
+++ b/bitnami/contour/Chart.yaml
@@ -1,7 +1,7 @@
 apiVersion: v1
 name: contour
 description: Contour Ingress controller for Kubernetes
-version: 1.2.2
+version: 2.0.0
 appVersion: 1.8.1
 keywords:
   - ingress
diff --git a/bitnami/contour/README.md b/bitnami/contour/README.md
index 17f4c0ad20..404fc344b7 100644
--- a/bitnami/contour/README.md
+++ b/bitnami/contour/README.md
@@ -42,7 +42,13 @@ To uninstall/delete the `my-release` helm release:
 $ helm uninstall my-release
 ```
 
-The command removes all the Kubernetes components associated with the chart and deletes the release.
+The command removes all the Kubernetes components associated with the chart and deletes the release, except the `CustomResourceDefinition`s (CRD for short).  
+:warning: To also remove the CRDs, please **remember that all instances of the CRDs are removed too**.  
+If you are okay with that, you can remove the CRDs like this:
+
+```console
+$ kubectl delete crd httpproxies.projectcontour.io tlscertificatedelegations.projectcontour.io
+```
 
 ## Parameters
 
@@ -55,20 +61,21 @@ The following tables lists the configurable parameters of the contour chart and
 | `rbac.create`                                      | create the RBAC roles for API accessibility                                                            | `true`                                                  |
 | `contour.enabled`                                  | Contour Deployment creation.                                                                           | `true`                                                  |
 | `contour.image.registry`                           | Contour image registry                                                                                 | `docker.io`                                             |
-| `contour.image.repository`                         | Contour image name                                                                                     | `projectcontour/contour`                                |
+| `contour.image.repository`                         | Contour image name                                                                                     | `bitnami/contour`                                       |
 | `contour.image.tag`                                | Contour image tag                                                                                      | `{TAG_NAME}`                                            |
 | `contour.pullPolicy`                               | Contour image pull policy                                                                              | `IfNotPresent`                                          |
 | `contour.image.pullSecrets`                        | Specify docker-registry secret names as an array                                                       | `[]` (does not add image pull secrets to deployed pods) |
 | `contour.resources.limits`                         | Specify resource limits which the container is not allowed to succeed.                                 | `{}` (does not add resource limits to deployed pods)    |
 | `contour.resources.requests`                       | Specify resource requests which the container needs to spawn.                                          | `{}` (does not add resource limits to deployed pods)    |
-| `contour.createCustomResource`                     | Creation of customResources via helm hooks (only helm v2)                                              | `true`                                                  |
-| `contour.customResourceDeletePolicy`               | Deletion hook of customResources viah helm hooks (only helm v2)                                        | `nil`                                                   |
+| `contour.installCRDs`                              | Install CustomResourceDefinitions via helm hooks (only helm v2, use `--skip-crds` on Helm 3)           | `true`                                                  |
+| `contour.customResourceDeletePolicy`               | Deletion hook of CustomResourceDefinitions via helm hooks (only helm v2)                               | `nil`                                                   |
 | `contour.nodeSelector`                             | Node labels for contour pod assignment                                                                 | `{}`                                                    |
 | `contour.tolerations`                              | Tolerations for contour pod assignment                                                                 | `[]`                                                    |
+| `contour.antiAffinityPolicy`                       | Contour anti-affinity policy (`soft`, `hard` or `""`)                                                  | `soft`                                                  |
 | `contour.affinity`                                 | Affinity for contour pod assignment                                                                    | `{}`                                                    |
 | `contour.podAnnotations`                           | Contour Pod annotations                                                                                | `{}`                                                    |
 | `contour.serviceAccount.create`                    | create a serviceAccount for the contour pod                                                            | `true`                                                  |
-| `contour.serviceAccount.name`                      | use the serviceAccount with the specified name                                                         | ""                                                      |
+| `contour.serviceAccount.name`                      | use the serviceAccount with the specified name                                                         | `""`                                                    |
 | `contour.livenessProbe.enabled`                    | Enable/disable the Liveness probe                                                                      | `true`                                                  |
 | `contour.livenessProbe.initialDelaySeconds`        | Delay before liveness probe is initiated                                                               | `120`                                                   |
 | `contour.livenessProbe.periodSeconds`              | How often to perform the probe                                                                         | `20`                                                    |
@@ -87,9 +94,16 @@ The following tables lists the configurable parameters of the contour chart and
 | `contour.securityContext.runAsNonRoot`             | If the pod should run as a non root container.                                                         | `true`                                                  |
 | `contour.securityContext.runAsUser`                | define the uid with which the pod will run                                                             | `65534`                                                 |
 | `contour.securityContext.runAsGroup`               | define the gid with which the pod will run                                                             | `65534`                                                 |
+| `contour.service.extraPorts`                       | Service extra ports, normally used with the `sidecar` value. Evaluated as a template                   | `[]`                                                    |
+| `contour.initContainers`                           | Attach additional init containers to contour pods (evaluated as a template)                            | `[]`                                                    |
+| `contour.extraVolumes`                             | Array to add extra volumes                                                                             | `[]`                                                    |
+| `contour.extraVolumeMounts`                        | Array to add extra mounts (normally used with extraVolumes)                                            | `[]`                                                    |
+| `contour.extraEnvVars`                             | Array containing extra env vars to be added to all contour containers (evaluated as a template)        | `[]`                                                    |
+| `contour.extraEnvVarsConfigMap`                    | ConfigMap containing extra env vars to be added to all contour containers (evaluated as a template)    | `""`                                                    |
+| `contour.extraEnvVarsSecret`                       | Secret containing extra env vars to be added to all contour containers (evaluated as a template)       | `""`                                                    |
 | `envoy.enabled`                                    | Envoy Proxy Daemonset creation.                                                                        | `true`                                                  |
 | `envoy.image.registry`                             | Envoy Proxy image registry                                                                             | `docker.io`                                             |
-| `envoy.image.repository`                           | Envoy Proxy image name                                                                                 | `envoyproxy/envoy`                                      |
+| `envoy.image.repository`                           | Envoy Proxy image name                                                                                 | `bitnami/envoy`                                         |
 | `envoy.image.tag`                                  | Envoy Proxy image tag                                                                                  | `{TAG_NAME}`                                            |
 | `envoy.pullPolicy`                                 | Envoy Proxy image pull policy                                                                          | `IfNotPresent`                                          |
 | `envoy.image.pullSecrets`                          | Specify docker-registry secret names as an array                                                       | `[]` (does not add image pull secrets to deployed pods) |
@@ -99,10 +113,10 @@ The following tables lists the configurable parameters of the contour chart and
 | `envoy.tolerations`                                | Tolerations for envoy pod assignment                                                                   | `[]`                                                    |
 | `envoy.affinity`                                   | Affinity for envoy pod assignment                                                                      | `{}`                                                    |
 | `envoy.podAnnotations`                             | Envoy Pod annotations                                                                                  | `{}`                                                    |
-| `envoy.podSecurityContext`                         | Envoy Pod securityContext                                                                                  | `{}`                                                    |
-| `envoy.containerSecurityContext`                   | Envoy Container securityContext                                                                                  | `{}`                                                    |
-| `envoy.dnsPolicy`                                  | Envoy Pod Dns Policy                                                                                   | `ClusterFirst`                                                    |
-| `envoy.hostNetwork`                                | Envoy Pod host network access                                                                                   | `false`                                                    |
+| `envoy.podSecurityContext`                         | Envoy Pod securityContext                                                                              | `{}`                                                    |
+| `envoy.containerSecurityContext`                   | Envoy Container securityContext                                                                        | `{}`                                                    |
+| `envoy.dnsPolicy`                                  | Envoy Pod Dns Policy                                                                                   | `ClusterFirst`                                          |
+| `envoy.hostNetwork`                                | Envoy Pod host network access                                                                          | `false`                                                 |
 | `envoy.readynessProbe.enabled`                     | Enable/disable the Readyness probe                                                                     | `true`                                                  |
 | `envoy.readynessProbe.initialDelaySeconds`         | Delay before readyness probe is initiated                                                              | `10`                                                    |
 | `envoy.readynessProbe.periodSeconds`               | How often to perform the probe                                                                         | `3`                                                     |
@@ -113,6 +127,7 @@ The following tables lists the configurable parameters of the contour chart and
 | `envoy.service.externalTrafficPolicy`              | If `envoy.service.type` is NodePort or LoadBalancer, set this to Local to enable [source IP preservation](https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typenodeport) | `Local` |
 | `envoy.service.clusterIP`                          | Internal envoy cluster service IP                                                                      | `""`                                                    |
 | `envoy.service.externalIPs`                        | Envoy service external IP addresses.                                                                   | `[]`                                                    |
+| `envoy.service.extraPorts`                         | Service extra ports, normally used with the `sidecar` value. Evaluated as a template                   | `[]`                                                    |
 | `envoy.service.loadBalancerIP`                     | IP address to assign to load balancer (if supported)                                                   | `""`                                                    |
 | `envoy.service.loadBalancerSourceRanges`           | List of IP CIDRs allowed access to load balancer (if supported)                                        | `[]`                                                    |
 | `envoy.service.annotations`                        | Annotations for envoy service                                                                          | `{}`                                                    |
@@ -120,6 +135,12 @@ The following tables lists the configurable parameters of the contour chart and
 | `envoy.service.ports.https`                        | Sets service https port                                                                                | `443`                                                   |
 | `envoy.service.nodePorts.http`                     | If `envoy.service.type` is NodePort and this is non-empty, it sets the nodePort that maps to envoys http port  | `""`                                            |
 | `envoy.service.nodePorts.https`                    | If `envoy.service.type` is NodePort and this is non-empty, it sets the nodePort that maps to envoys https port | `""`                                            |
+| `envoy.initContainers`                             | Attach additional init containers to envoy pods (evaluated as a template)                              | `[]`                                                    |
+| `envoy.extraVolumes`                               | Array to add extra volumes                                                                             | `[]`                                                    |
+| `envoy.extraVolumeMounts`                          | Array to add extra mounts (normally used with extraVolumes)                                            | `[]`                                                    |
+| `envoy.extraEnvVars`                               | Array containing extra env vars to be added to all envoy containers (evaluated as a template)          | `[]`                                                    |
+| `envoy.extraEnvVarsConfigMap`                      | ConfigMap containing extra env vars to be added to all envoy containers (evaluated as a template)      | `""`                                                    |
+| `envoy.extraEnvVarsSecret`                         | Secret containing extra env vars to be added to all envoy containers (evaluated as a template)         | `""`                                                    |
 | `existingConfigMap`                                | Specify an existing configMapName to use. (this mutually exclusive with existingConfigMap)             | `nil`                                                   |
 | `configInline`                                     | Specify the config for contour as a new configMap inline.                                              | `{Quickstart Config}` (evaluated as a template)         |
 | `ingressClass`                                     | Name of the ingress class to route through this controller (defaults to `contour` if `nil`)            | `nil`                                                   |
@@ -173,6 +194,12 @@ configInline:
   tls:
   #   minimum TLS version that Contour will negotiate
   #   minimum-protocol-version: "1.1"
+  # Defines the Kubernetes name/namespace matching a secret to use
+  # as the fallback certificate when requests which don't match the
+  # SNI defined for a vhost.
+    fallback-certificate:
+  #   name: fallback-secret-name
+  #   namespace: projectcontour
   # The following config shows the defaults for the leader election.
   # leaderelection:
   #   configmap-name: leader-elect
@@ -208,6 +235,18 @@ configInline:
   #   - "upstream_service_time"
   #   - "user_agent"
   #   - "x_forwarded_for"
+  #
+  # default-http-versions:
+  # - "HTTP/2"
+  # - "HTTP/1.1"
+  #
+  # The following shows the default proxy timeout settings.
+  # timeouts:
+  #   request-timeout: infinity
+  #   connection-idle-timeout: 60s
+  #   stream-idle-timeout: 5m
+  #   max-connection-duration: infinity
+  #   connection-shutdown-grace-period: 5s
 ```
 
 ### Deploying Contour with an AWS NLB
@@ -222,3 +261,21 @@ envoy:
     annotations:
       service.beta.kubernetes.io/aws-load-balancer-type: nlb
 ```
+
+## Upgrading
+
+Please carefully read through the guide "Upgrading Contour" at https://projectcontour.io/resources/upgrading/.
+
+### To 2.0.0
+
+Most important changes are:
+
+- Using helm hooks to generate new TLS certificates for gRPC calls between Contour and Envoy. This enables us to use the same container image for the contour controller and the certgen job without upgrade issues due to JobSpec immutablility.
+- Rename parameter `contour.createCustomResource` to `contour.installCRDs`
+- Sync CRDs with [upstream project examples](https://github.com/projectcontour/contour/tree/main/examples/contour). Please remember that helm does not touch existing CRDs. As of today, the most reliable way to update the CRDs is, to do it outside helm (Use `--skip-crds` when using helm v3 and `--set contour.installCRDs=false` when using helm v2). Read [Upgrading Contour](https://projectcontour.io/resources/upgrading/) and execute the following `kubectl` command before helm upgrade:
+
+```console
+$ kubectl apply -f https://raw.githubusercontent.com/projectcontour/contour/release-{{version}}/examples/contour/01-crds.yaml
+```
+
+This version also introduces `bitnami/common`, a [library chart](https://helm.sh/docs/topics/library_charts/#helm) as a dependency. More documentation about this new utility could be found [here](https://github.com/bitnami/charts/tree/master/bitnami/common#bitnami-common-library-chart). Please, make sure that you have updated the chart dependencies before executing any upgrade.
diff --git a/bitnami/contour/ci/ct-values.yaml b/bitnami/contour/ci/ct-values.yaml
new file mode 100644
index 0000000000..95250539a2
--- /dev/null
+++ b/bitnami/contour/ci/ct-values.yaml
@@ -0,0 +1,4 @@
+envoy:
+  service:
+    type: ClusterIP
+    externalTrafficPolicy: null
diff --git a/bitnami/contour/crds/httpproxies.yaml b/bitnami/contour/crds/httpproxies.yaml
index 7758319f7d..3d2f8b7b3b 100644
--- a/bitnami/contour/crds/httpproxies.yaml
+++ b/bitnami/contour/crds/httpproxies.yaml
@@ -36,7 +36,7 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: HTTPProxy is an Ingress CRD specification
+      description: HTTPProxy is an Ingress CRD specification.
       properties:
         apiVersion:
           description: 'APIVersion defines the versioned schema of this representation
@@ -55,17 +55,21 @@ spec:
           properties:
             includes:
               description: Includes allow for specific routing configuration to be
-                appended to another HTTPProxy in another namespace.
+                included from another HTTPProxy, possibly in another namespace.
               items:
                 description: Include describes a set of policies that can be applied
                   to an HTTPProxy in a namespace.
                 properties:
                   conditions:
-                    description: Conditions are a set of routing properties that is
-                      applied to an HTTPProxy in a namespace.
+                    description: 'Conditions are a set of rules that are applied to
+                      included HTTPProxies. In effect, they are added onto the Conditions
+                      of included HTTPProxy Route structs. When applied, they are
+                      merged using AND, with one exception: There can be only one
+                      Prefix MatchCondition per Conditions slice. More than one Prefix,
+                      or contradictory Conditions, will make the include invalid.'
                     items:
-                      description: Condition are policies that are applied on top
-                        of HTTPProxies. One of Prefix or Header must be provided.
+                      description: MatchCondition are a general holder for matching
+                        rules for HTTPProxies. One of Prefix or Header must be provided.
                       properties:
                         header:
                           description: Header specifies the header condition to match.
@@ -123,11 +127,14 @@ spec:
                 description: Route contains the set of routes for a virtual host.
                 properties:
                   conditions:
-                    description: Conditions are a set of routing properties that is
-                      applied to an HTTPProxy in a namespace.
+                    description: 'Conditions are a set of rules that are applied to
+                      a Route. When applied, they are merged using AND, with one exception:
+                      There can be only one Prefix MatchCondition per Conditions slice.
+                      More than one Prefix, or contradictory Conditions, will make
+                      the route invalid.'
                     items:
-                      description: Condition are policies that are applied on top
-                        of HTTPProxies. One of Prefix or Header must be provided.
+                      description: MatchCondition are a general holder for matching
+                        rules for HTTPProxies. One of Prefix or Header must be provided.
                       properties:
                         header:
                           description: Header specifies the header condition to match.
@@ -231,8 +238,8 @@ spec:
                             prefix:
                               description: "Prefix specifies the URL path prefix to
                                 be replaced. \n If Prefix is specified, it must exactly
-                                match the Condition prefix that is rendered by the
-                                chain of including HTTPProxies and only that path
+                                match the MatchCondition prefix that is rendered by
+                                the chain of including HTTPProxies and only that path
                                 prefix will be replaced by Replacement. This allows
                                 HTTPProxies that are included through multiple roots
                                 to only replace specific path prefixes, leaving others
@@ -335,6 +342,42 @@ spec:
                         description: PerTryTimeout specifies the timeout per retry
                           attempt. Ignored if NumRetries is not supplied.
                         type: string
+                      retriableStatusCodes:
+                        description: "RetriableStatusCodes specifies the HTTP status
+                          codes that should be retried. \n This field is only respected
+                          when you include `retriable-status-codes` in the `RetryOn`
+                          field."
+                        items:
+                          format: int32
+                          type: integer
+                        type: array
+                      retryOn:
+                        description: "RetryOn specifies the conditions on which to
+                          retry a request. \n Supported [HTTP conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on):
+                          \n - `5xx` - `gateway-error` - `reset` - `connect-failure`
+                          - `retriable-4xx` - `refused-stream` - `retriable-status-codes`
+                          - `retriable-headers` \n Supported [gRPC conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on):
+                          \n - `cancelled` - `deadline-exceeded` - `internal` - `resource-exhausted`
+                          - `unavailable`"
+                        items:
+                          description: RetryOn is a string type alias with validation
+                            to ensure that the value is valid.
+                          enum:
+                          - 5xx
+                          - gateway-error
+                          - reset
+                          - connect-failure
+                          - retriable-4xx
+                          - refused-stream
+                          - retriable-status-codes
+                          - retriable-headers
+                          - cancelled
+                          - deadline-exceeded
+                          - internal
+                          - resource-exhausted
+                          - unavailable
+                          type: string
+                        type: array
                     type: object
                   services:
                     description: Services are the services to proxy traffic.
@@ -354,6 +397,9 @@ spec:
                         port:
                           description: Port (defined as Integer) to proxy traffic
                             to since a service can have multiple defined.
+                          exclusiveMaximum: true
+                          maximum: 65536
+                          minimum: 1
                           type: integer
                         protocol:
                           description: Protocol may be used to specify (or override)
@@ -468,12 +514,14 @@ spec:
                         description: Timeout after which, if there are no active requests
                           for this route, the connection between Envoy and the backend
                           or Envoy and the external client will be closed. If not
-                          specified, there is no per-route idle timeout.
+                          specified, there is no per-route idle timeout, though a
+                          connection manager-wide stream_idle_timeout default of 5m
+                          still applies.
                         type: string
                       response:
                         description: Timeout for receiving a response from the server
                           after processing a request from client. If not supplied,
-                          the timeout duration is undefined.
+                          Envoy's default value of 15s applies.
                         type: string
                     type: object
                 required:
@@ -564,6 +612,9 @@ spec:
                       port:
                         description: Port (defined as Integer) to proxy traffic to
                           since a service can have multiple defined.
+                        exclusiveMaximum: true
+                        maximum: 65536
+                        minimum: 1
                         type: integer
                       protocol:
                         description: Protocol may be used to specify (or override)
@@ -669,24 +720,22 @@ spec:
                     - name
                     - port
                     type: object
-                  minItems: 1
                   type: array
-              required:
-              - services
               type: object
             virtualhost:
               description: Virtualhost appears at most once. If it is present, the
-                object is considered to be a "root".
+                object is considered to be a "root" HTTPProxy.
               properties:
                 fqdn:
                   description: The fully qualified domain name of the root of the
                     ingress tree all leaves of the DAG rooted at this object relate
-                    to the fqdn
+                    to the fqdn.
                   type: string
                 tls:
                   description: If present describes tls properties. The SNI names
                     that will be matched on are described in fqdn, the tls.secretName
-                    secret must contain a matching certificate
+                    secret must contain a certificate that itself contains a name
+                    that matches the FQDN.
                   properties:
                     clientValidation:
                       description: "ClientValidation defines how to verify the client
@@ -714,12 +763,15 @@ spec:
                       description: Minimum TLS version this vhost should negotiate
                       type: string
                     passthrough:
-                      description: If Passthrough is set to true, the SecretName will
-                        be ignored and the encrypted handshake will be passed through
-                        to the backing cluster.
+                      description: Passthrough defines whether the encrypted TLS handshake
+                        will be passed through to the backing cluster. Either Passthrough
+                        or SecretName must be specified, but not both.
                       type: boolean
                     secretName:
-                      description: required, the name of a secret in the current namespace
+                      description: SecretName is the name of a TLS secret in the current
+                        namespace. Either SecretName or Passthrough must be specified,
+                        but not both. If specified, the named secret must contain
+                        a matching certificate for the virtual host's FQDN.
                       type: string
                   type: object
               required:
@@ -727,8 +779,205 @@ spec:
               type: object
           type: object
         status:
-          description: Status reports the current state of the HTTPProxy.
+          description: Status is a container for computed information about the HTTPProxy.
           properties:
+            conditions:
+              description: "Conditions contains information about the current status
+                of the HTTPProxy, in an upstream-friendly container. \n Contour will
+                update a single condition, `Valid`, that is in normal-true polarity.
+                That is, when `currentStatus` is `valid`, the `Valid` condition will
+                be `status: true`, and vice versa. \n Contour will leave untouched
+                any other Conditions set in this block, in case some other controller
+                wants to add a Condition. \n If you are another controller owner and
+                wish to add a condition, you *should* namespace your condition with
+                a label, like `controller.domain.com/ConditionName`."
+              items:
+                description: "DetailedCondition is an extension of the normal Kubernetes
+                  conditions, with two extra fields to hold sub-conditions, which
+                  provide more detailed reasons for the state (True or False) of the
+                  condition. \n `errors` holds information about sub-conditions which
+                  are fatal to that condition and render its state False. \n `warnings`
+                  holds information about sub-conditions which are not fatal to that
+                  condition and do not force the state to be False. \n Remember that
+                  Conditions have a type, a status, and a reason. \n The type is the
+                  type of the condition, the most important one in this CRD set is
+                  `Valid`. \n In the case of `Valid`, `status: true` means that the
+                  object is has been ingested into Contour with no errors. `warnings`
+                  may still be present, and will be indicated in the Reason field.
+                  \n `Valid`, `status: false` means that the object has had one or
+                  more fatal errors during processing into Contour.  The details of
+                  the errors will be present under the `errors` field. \n There should
+                  never be subconditions under `errors` when `status` is `true`."
+                properties:
+                  errors:
+                    description: "Errors contains a slice of relevant error subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a error), and disappear when not relevant.
+                      An empty slice here indicates no errors."
+                    items:
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
+                    type: array
+                  lastTransitionTime:
+                    description: "lastTransitionTime is the last time the condition
+                      transitioned from one status to another. \n This should be when
+                      the underlying condition changed.  If that is not known, then
+                      using the time when the API field changed is acceptable."
+                    format: date-time
+                    type: string
+                  message:
+                    description: "message is a human readable message indicating details
+                      about the transition. \n This may be an empty string."
+                    maxLength: 32768
+                    type: string
+                  observedGeneration:
+                    description: "observedGeneration represents the .metadata.generation
+                      that the condition was set based upon. \n For instance, if .metadata.generation
+                      is currently 12, but the .status.conditions[x].observedGeneration
+                      is 9, the condition is out of date with respect to the current
+                      state of the instance."
+                    format: int64
+                    minimum: 0
+                    type: integer
+                  reason:
+                    description: "Reason contains a programmatic identifier indicating
+                      the reason for the condition's last transition. \n Producers
+                      of specific condition types may define expected values and meanings
+                      for this field, and whether the values are considered a guaranteed
+                      API. \n The value should be a CamelCase string. \n This field
+                      may not be empty."
+                    maxLength: 1024
+                    minLength: 1
+                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                    type: string
+                  status:
+                    description: status of the condition, one of True, False, Unknown.
+                    enum:
+                    - "True"
+                    - "False"
+                    - Unknown
+                    type: string
+                  type:
+                    description: "Type of condition in CamelCase or in foo.example.com/CamelCase.
+                      \n Many .condition.type values are consistent across resources
+                      like Available, but because arbitrary conditions can be useful
+                      (see .node.status.conditions), the ability to deconflict is
+                      important. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                    maxLength: 316
+                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                    type: string
+                  warnings:
+                    description: "Warnings contains a slice of relevant warning subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a warning), and disappear when not relevant.
+                      An empty slice here indicates no warnings."
+                    items:
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
+                    type: array
+                required:
+                - lastTransitionTime
+                - message
+                - reason
+                - status
+                - type
+                type: object
+              type: array
+              x-kubernetes-list-map-keys:
+              - type
+              x-kubernetes-list-type: map
             currentStatus:
               type: string
             description:
@@ -771,4 +1020,4 @@ status:
     kind: ""
     plural: ""
   conditions: []
-  storedVersions: []
\ No newline at end of file
+  storedVersions: []
diff --git a/bitnami/contour/crds/ingressroutes.yaml b/bitnami/contour/crds/ingressroutes.yaml
deleted file mode 100644
index e227b3a9ce..0000000000
--- a/bitnami/contour/crds/ingressroutes.yaml
+++ /dev/null
@@ -1,373 +0,0 @@
-apiVersion: apiextensions.k8s.io/v1beta1
-kind: CustomResourceDefinition
-metadata:
-  annotations:
-    controller-gen.kubebuilder.io/version: v0.2.9
-  name: ingressroutes.contour.heptio.com
-spec:
-  additionalPrinterColumns:
-  - JSONPath: .spec.virtualhost.fqdn
-    description: Fully qualified domain name
-    name: FQDN
-    type: string
-  - JSONPath: .spec.virtualhost.tls.secretName
-    description: Secret with TLS credentials
-    name: TLS Secret
-    type: string
-  - JSONPath: .spec.routes[0].match
-    description: First routes defined
-    name: First route
-    type: string
-  - JSONPath: .status.currentStatus
-    description: The current status of the HTTPProxy
-    name: Status
-    type: string
-  - JSONPath: .status.description
-    description: Description of the current status
-    name: Status Description
-    type: string
-  group: contour.heptio.com
-  names:
-    kind: IngressRoute
-    listKind: IngressRouteList
-    plural: ingressroutes
-    singular: ingressroute
-  scope: Namespaced
-  subresources: {}
-  validation:
-    openAPIV3Schema:
-      description: IngressRoute is an Ingress CRD specificiation
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: IngressRouteSpec defines the spec of the CRD
-          properties:
-            routes:
-              description: Routes are the ingress routes. If TCPProxy is present,
-                Routes is ignored.
-              items:
-                description: Route contains the set of routes for a virtual host
-                properties:
-                  delegate:
-                    description: Delegate specifies that this route should be delegated
-                      to another IngressRoute
-                    properties:
-                      name:
-                        description: Name of the IngressRoute
-                        type: string
-                      namespace:
-                        description: Namespace of the IngressRoute. Defaults to the
-                          current namespace if not supplied.
-                        type: string
-                    required:
-                    - name
-                    type: object
-                  enableWebsockets:
-                    description: Enables websocket support for the route
-                    type: boolean
-                  match:
-                    description: Match defines the prefix match
-                    type: string
-                  permitInsecure:
-                    description: Allow this path to respond to insecure requests over
-                      HTTP which are normally not permitted when a `virtualhost.tls`
-                      block is present.
-                    type: boolean
-                  prefixRewrite:
-                    description: Indicates that during forwarding, the matched prefix
-                      (or path) should be swapped with this value
-                    type: string
-                  retryPolicy:
-                    description: The retry policy for this route
-                    properties:
-                      count:
-                        description: NumRetries is maximum allowed number of retries.
-                          If not supplied, the number of retries is one.
-                        format: int64
-                        minimum: 0
-                        type: integer
-                      perTryTimeout:
-                        description: PerTryTimeout specifies the timeout per retry
-                          attempt. Ignored if NumRetries is not supplied.
-                        type: string
-                    type: object
-                  services:
-                    description: Services are the services to proxy traffic
-                    items:
-                      description: Service defines an upstream to proxy traffic to
-                      properties:
-                        healthCheck:
-                          description: HealthCheck defines optional healthchecks on
-                            the upstream service
-                          properties:
-                            healthyThresholdCount:
-                              description: The number of healthy health checks required
-                                before a host is marked healthy
-                              format: int64
-                              minimum: 0
-                              type: integer
-                            host:
-                              description: The value of the host header in the HTTP
-                                health check request. If left empty (default value),
-                                the name "contour-envoy-healthcheck" will be used.
-                              type: string
-                            intervalSeconds:
-                              description: The interval (seconds) between health checks
-                              format: int64
-                              type: integer
-                            path:
-                              description: HTTP endpoint used to perform health checks
-                                on upstream service
-                              type: string
-                            timeoutSeconds:
-                              description: The time to wait (seconds) for a health
-                                check response
-                              format: int64
-                              type: integer
-                            unhealthyThresholdCount:
-                              description: The number of unhealthy health checks required
-                                before a host is marked unhealthy
-                              format: int64
-                              minimum: 0
-                              type: integer
-                          required:
-                          - path
-                          type: object
-                        name:
-                          description: Name is the name of Kubernetes service to proxy
-                            traffic. Names defined here will be used to look up corresponding
-                            endpoints which contain the ips to route.
-                          type: string
-                        port:
-                          description: Port (defined as Integer) to proxy traffic
-                            to since a service can have multiple defined
-                          type: integer
-                        strategy:
-                          description: LB Algorithm to apply (see https://github.com/projectcontour/contour/blob/master/design/ingressroute-design.md#load-balancing)
-                          type: string
-                        validation:
-                          description: UpstreamValidation defines how to verify the
-                            backend service's certificate
-                          properties:
-                            caSecret:
-                              description: Name of the Kubernetes secret be used to
-                                validate the certificate presented by the backend
-                              type: string
-                            subjectName:
-                              description: Key which is expected to be present in
-                                the 'subjectAltName' of the presented certificate
-                              type: string
-                          required:
-                          - caSecret
-                          - subjectName
-                          type: object
-                        weight:
-                          description: Weight defines percentage of traffic to balance
-                            traffic
-                          format: int64
-                          minimum: 0
-                          type: integer
-                      required:
-                      - name
-                      - port
-                      type: object
-                    type: array
-                  timeoutPolicy:
-                    description: The timeout policy for this route
-                    properties:
-                      request:
-                        description: Timeout for receiving a response from the server
-                          after processing a request from client. If not supplied
-                          the timeout duration is undefined.
-                        type: string
-                    type: object
-                required:
-                - match
-                type: object
-              type: array
-            tcpproxy:
-              description: TCPProxy holds TCP proxy information.
-              properties:
-                delegate:
-                  description: Delegate specifies that this tcpproxy should be delegated
-                    to another IngressRoute
-                  properties:
-                    name:
-                      description: Name of the IngressRoute
-                      type: string
-                    namespace:
-                      description: Namespace of the IngressRoute. Defaults to the
-                        current namespace if not supplied.
-                      type: string
-                  required:
-                  - name
-                  type: object
-                services:
-                  description: Services are the services to proxy traffic
-                  items:
-                    description: Service defines an upstream to proxy traffic to
-                    properties:
-                      healthCheck:
-                        description: HealthCheck defines optional healthchecks on
-                          the upstream service
-                        properties:
-                          healthyThresholdCount:
-                            description: The number of healthy health checks required
-                              before a host is marked healthy
-                            format: int64
-                            minimum: 0
-                            type: integer
-                          host:
-                            description: The value of the host header in the HTTP
-                              health check request. If left empty (default value),
-                              the name "contour-envoy-healthcheck" will be used.
-                            type: string
-                          intervalSeconds:
-                            description: The interval (seconds) between health checks
-                            format: int64
-                            type: integer
-                          path:
-                            description: HTTP endpoint used to perform health checks
-                              on upstream service
-                            type: string
-                          timeoutSeconds:
-                            description: The time to wait (seconds) for a health check
-                              response
-                            format: int64
-                            type: integer
-                          unhealthyThresholdCount:
-                            description: The number of unhealthy health checks required
-                              before a host is marked unhealthy
-                            format: int64
-                            minimum: 0
-                            type: integer
-                        required:
-                        - path
-                        type: object
-                      name:
-                        description: Name is the name of Kubernetes service to proxy
-                          traffic. Names defined here will be used to look up corresponding
-                          endpoints which contain the ips to route.
-                        type: string
-                      port:
-                        description: Port (defined as Integer) to proxy traffic to
-                          since a service can have multiple defined
-                        type: integer
-                      strategy:
-                        description: LB Algorithm to apply (see https://github.com/projectcontour/contour/blob/master/design/ingressroute-design.md#load-balancing)
-                        type: string
-                      validation:
-                        description: UpstreamValidation defines how to verify the
-                          backend service's certificate
-                        properties:
-                          caSecret:
-                            description: Name of the Kubernetes secret be used to
-                              validate the certificate presented by the backend
-                            type: string
-                          subjectName:
-                            description: Key which is expected to be present in the
-                              'subjectAltName' of the presented certificate
-                            type: string
-                        required:
-                        - caSecret
-                        - subjectName
-                        type: object
-                      weight:
-                        description: Weight defines percentage of traffic to balance
-                          traffic
-                        format: int64
-                        minimum: 0
-                        type: integer
-                    required:
-                    - name
-                    - port
-                    type: object
-                  type: array
-              type: object
-            virtualhost:
-              description: Virtualhost appears at most once. If it is present, the
-                object is considered to be a "root".
-              properties:
-                fqdn:
-                  description: The fully qualified domain name of the root of the
-                    ingress tree all leaves of the DAG rooted at this object relate
-                    to the fqdn
-                  type: string
-                tls:
-                  description: If present describes tls properties. The SNI names
-                    that will be matched on are described in fqdn, the tls.secretName
-                    secret must contain a matching certificate
-                  properties:
-                    minimumProtocolVersion:
-                      description: Minimum TLS version this vhost should negotiate
-                      type: string
-                    passthrough:
-                      description: If Passthrough is set to true, the SecretName will
-                        be ignored and the encrypted handshake will be passed through
-                        to the backing cluster.
-                      type: boolean
-                    secretName:
-                      description: required, the name of a secret in the current namespace
-                      type: string
-                  type: object
-              required:
-              - fqdn
-              type: object
-          type: object
-        status:
-          description: Status reports the current state of the HTTPProxy.
-          properties:
-            currentStatus:
-              type: string
-            description:
-              type: string
-            loadBalancer:
-              description: LoadBalancer contains the current status of the load balancer.
-              properties:
-                ingress:
-                  description: Ingress is a list containing ingress points for the
-                    load-balancer. Traffic intended for the service should be sent
-                    to these ingress points.
-                  items:
-                    description: 'LoadBalancerIngress represents the status of a load-balancer
-                      ingress point: traffic intended for the service should be sent
-                      to an ingress point.'
-                    properties:
-                      hostname:
-                        description: Hostname is set for load-balancer ingress points
-                          that are DNS based (typically AWS load-balancers)
-                        type: string
-                      ip:
-                        description: IP is set for load-balancer ingress points that
-                          are IP based (typically GCE or OpenStack load-balancers)
-                        type: string
-                    type: object
-                  type: array
-              type: object
-          type: object
-      required:
-      - metadata
-      - spec
-      type: object
-  version: v1beta1
-  versions:
-  - name: v1beta1
-    served: true
-    storage: true
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
diff --git a/bitnami/contour/crds/tlscertificatedeligations.yaml b/bitnami/contour/crds/tlscertificatedeligations.yaml
index 91508e72bf..baa523642b 100644
--- a/bitnami/contour/crds/tlscertificatedeligations.yaml
+++ b/bitnami/contour/crds/tlscertificatedeligations.yaml
@@ -1,18 +1,21 @@
----
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
     controller-gen.kubebuilder.io/version: v0.2.9
-  name: tlscertificatedelegations.contour.heptio.com
+  name: tlscertificatedelegations.projectcontour.io
 spec:
-  group: contour.heptio.com
+  group: projectcontour.io
   names:
     kind: TLSCertificateDelegation
     listKind: TLSCertificateDelegationList
     plural: tlscertificatedelegations
+    shortNames:
+    - tlscerts
     singular: tlscertificatedelegation
   scope: Namespaced
+  subresources:
+    status: {}
   validation:
     openAPIV3Schema:
       description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
@@ -58,82 +61,207 @@ spec:
           required:
           - delegations
           type: object
-      required:
-      - metadata
-      - spec
-      type: object
-  version: v1beta1
-  versions:
-  - name: v1beta1
-    served: true
-    storage: true
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
----
-apiVersion: apiextensions.k8s.io/v1beta1
-kind: CustomResourceDefinition
-metadata:
-  annotations:
-    controller-gen.kubebuilder.io/version: v0.2.9
-  name: tlscertificatedelegations.projectcontour.io
-spec:
-  group: projectcontour.io
-  names:
-    kind: TLSCertificateDelegation
-    listKind: TLSCertificateDelegationList
-    plural: tlscertificatedelegations
-    shortNames:
-    - tlscerts
-    singular: tlscertificatedelegation
-  scope: Namespaced
-  validation:
-    openAPIV3Schema:
-      description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
-        See design/tls-certificate-delegation.md for details.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: TLSCertificateDelegationSpec defines the spec of the CRD
+        status:
+          description: TLSCertificateDelegationStatus allows for the status of the
+            delegation to be presented to the user.
           properties:
-            delegations:
+            conditions:
+              description: "Conditions contains information about the current status
+                of the HTTPProxy, in an upstream-friendly container. \n Contour will
+                update a single condition, `Valid`, that is in normal-true polarity.
+                That is, when `currentStatus` is `valid`, the `Valid` condition will
+                be `status: true`, and vice versa. \n Contour will leave untouched
+                any other Conditions set in this block, in case some other controller
+                wants to add a Condition. \n If you are another controller owner and
+                wish to add a condition, you *should* namespace your condition with
+                a label, like `controller.domain.com\\ConditionName`."
               items:
-                description: CertificateDelegation maps the authority to reference
-                  a secret in the current namespace to a set of namespaces.
+                description: "DetailedCondition is an extension of the normal Kubernetes
+                  conditions, with two extra fields to hold sub-conditions, which
+                  provide more detailed reasons for the state (True or False) of the
+                  condition. \n `errors` holds information about sub-conditions which
+                  are fatal to that condition and render its state False. \n `warnings`
+                  holds information about sub-conditions which are not fatal to that
+                  condition and do not force the state to be False. \n Remember that
+                  Conditions have a type, a status, and a reason. \n The type is the
+                  type of the condition, the most important one in this CRD set is
+                  `Valid`. \n In the case of `Valid`, `status: true` means that the
+                  object is has been ingested into Contour with no errors. `warnings`
+                  may still be present, and will be indicated in the Reason field.
+                  \n `Valid`, `status: false` means that the object has had one or
+                  more fatal errors during processing into Contour.  The details of
+                  the errors will be present under the `errors` field. \n There should
+                  never be subconditions under `errors` when `status` is `true`."
                 properties:
-                  secretName:
-                    description: required, the name of a secret in the current namespace.
+                  errors:
+                    description: "Errors contains a slice of relevant error subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a error), and disappear when not relevant.
+                      An empty slice here indicates no errors."
+                    items:
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
+                    type: array
+                  lastTransitionTime:
+                    description: "lastTransitionTime is the last time the condition
+                      transitioned from one status to another. \n This should be when
+                      the underlying condition changed.  If that is not known, then
+                      using the time when the API field changed is acceptable."
+                    format: date-time
                     type: string
-                  targetNamespaces:
-                    description: required, the namespaces the authority to reference
-                      the the secret will be delegated to. If TargetNamespaces is
-                      nil or empty, the CertificateDelegation' is ignored. If the
-                      TargetNamespace list contains the character, "*" the secret
-                      will be delegated to all namespaces.
+                  message:
+                    description: "message is a human readable message indicating details
+                      about the transition. \n This may be an empty string."
+                    maxLength: 32768
+                    type: string
+                  observedGeneration:
+                    description: "observedGeneration represents the .metadata.generation
+                      that the condition was set based upon. \n For instance, if .metadata.generation
+                      is currently 12, but the .status.conditions[x].observedGeneration
+                      is 9, the condition is out of date with respect to the current
+                      state of the instance."
+                    format: int64
+                    minimum: 0
+                    type: integer
+                  reason:
+                    description: "Reason contains a programmatic identifier indicating
+                      the reason for the condition's last transition. \n Producers
+                      of specific condition types may define expected values and meanings
+                      for this field, and whether the values are considered a guaranteed
+                      API. \n The value should be a CamelCase string. \n This field
+                      may not be empty."
+                    maxLength: 1024
+                    minLength: 1
+                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                    type: string
+                  status:
+                    description: status of the condition, one of True, False, Unknown.
+                    enum:
+                    - "True"
+                    - "False"
+                    - Unknown
+                    type: string
+                  type:
+                    description: "Type of condition in CamelCase or in foo.example.com/CamelCase.
+                      \n Many .condition.type values are consistent across resources
+                      like Available, but because arbitrary conditions can be useful
+                      (see .node.status.conditions), the ability to deconflict is
+                      important. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                    maxLength: 316
+                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                    type: string
+                  warnings:
+                    description: "Warnings contains a slice of relevant warning subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a warning), and disappear when not relevant.
+                      An empty slice here indicates no warnings."
                     items:
-                      type: string
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
                     type: array
                 required:
-                - secretName
-                - targetNamespaces
+                - lastTransitionTime
+                - message
+                - reason
+                - status
+                - type
                 type: object
               type: array
-          required:
-          - delegations
+              x-kubernetes-list-map-keys:
+              - type
+              x-kubernetes-list-type: map
           type: object
       required:
       - metadata
diff --git a/bitnami/contour/requirements.yaml b/bitnami/contour/requirements.yaml
new file mode 100644
index 0000000000..0c2495d0f4
--- /dev/null
+++ b/bitnami/contour/requirements.yaml
@@ -0,0 +1,6 @@
+dependencies:
+  - name: common
+    version: 0.x.x
+    repository: https://charts.bitnami.com/bitnami
+    tags:
+      - bitnami-common
diff --git a/bitnami/contour/templates/NOTES.txt b/bitnami/contour/templates/NOTES.txt
index 5769a3b40d..2572eb9b0c 100644
--- a/bitnami/contour/templates/NOTES.txt
+++ b/bitnami/contour/templates/NOTES.txt
@@ -5,11 +5,11 @@
 
      You can watch the status by running:
 
-         $ kubectl get svc {{ include "contour.fullname" . }} --namespace {{ .Release.Namespace }} -w
+         $ kubectl get svc {{ include "common.names.fullname" . }} --namespace {{ .Release.Namespace }} -w
 
      Once 'EXTERNAL-IP' is no longer '<pending>':
 
-         $ kubectl describe svc {{ include "contour.fullname" . }} --namespace {{ .Release.Namespace }} | grep Ingress | awk '{print $3}'
+         $ kubectl describe svc {{ include "common.names.fullname" . }} --namespace {{ .Release.Namespace }} | grep Ingress | awk '{print $3}'
 
 2. Configure DNS records corresponding to Kubernetes ingress resources to point to the load balancer IP/hostname found in step 1
 {{- end }}
@@ -22,9 +22,12 @@
 {{- else }}
 1. Contour has been started. You can find out the port numbers being used by Contour by running:
 
-          $ kubectl describe svc {{ include "contour.fullname" . }} --namespace {{ .Release.Namespace }}
+          $ kubectl describe svc {{ include "common.names.fullname" . }} --namespace {{ .Release.Namespace }}
 
 {{- end }}
 
 2. Configure DNS records corresponding to Kubernetes ingress resources to point to the NODE_IP/NODE_HOST
-{{- end }}
\ No newline at end of file
+{{- end }}
+
+{{ include "common.warnings.rollingTag" .Values.contour.image }}
+{{ include "common.warnings.rollingTag" .Values.envoy.image }}
diff --git a/bitnami/contour/templates/_helpers.tpl b/bitnami/contour/templates/_helpers.tpl
index f5deb066bf..42eed72294 100644
--- a/bitnami/contour/templates/_helpers.tpl
+++ b/bitnami/contour/templates/_helpers.tpl
@@ -1,166 +1,11 @@
 {{/* vim: set filetype=mustache: */}}
-{{/*
-Expand the name of the chart.
-*/}}
-{{- define "contour.name" -}}
-{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
-{{- end -}}
-
-{{/*
-Return the proper contour image name
-*/}}
-{{- define "contour.image" -}}
-{{- $registryName := .Values.contour.image.registry -}}
-{{- $repositoryName := .Values.contour.image.repository -}}
-{{- $tag := .Values.contour.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-{{- end -}}
-{{- end -}}
-
-{{/*
-Return the proper envoy image name
-*/}}
-{{- define "envoy.image" -}}
-{{- $registryName := .Values.envoy.image.registry -}}
-{{- $repositoryName := .Values.envoy.image.repository -}}
-{{- $tag := .Values.envoy.image.tag | toString -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 doesn't support it, so we need to implement this if-else logic.
-Also, we can't use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-    {{- if .Values.global.imageRegistry }}
-        {{- printf "%s/%s:%s" .Values.global.imageRegistry $repositoryName $tag -}}
-    {{- else -}}
-        {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-    {{- end -}}
-{{- else -}}
-    {{- printf "%s/%s:%s" $registryName $repositoryName $tag -}}
-{{- end -}}
-{{- end -}}
-
-{{/*
-Common labels
-*/}}
-{{- define "contour.labels" -}}
-app.kubernetes.io/name: {{ include "contour.name" . }}
-helm.sh/chart: {{ include "contour.chart" . }}
-app.kubernetes.io/instance: {{ .Release.Name }}
-app.kubernetes.io/managed-by: {{ .Release.Service }}
-{{- end -}}
-
-{{/*
-Labels to use on deploy.spec.selector.matchLabels and svc.spec.selector
-*/}}
-{{- define "contour.matchLabels" -}}
-app.kubernetes.io/name: {{ include "contour.name" . }}
-app.kubernetes.io/instance: {{ .Release.Name }}
-{{- end -}}
-
-
-{{/*
-Create a default fully qualified app name.
-We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
-If release name contains chart name it will be used as a full name.
-*/}}
-{{- define "contour.fullname" -}}
-{{- if .Values.fullnameOverride -}}
-{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
-{{- else -}}
-{{- $name := default .Chart.Name .Values.nameOverride -}}
-{{- if contains $name .Release.Name -}}
-{{- .Release.Name | trunc 63 | trimSuffix "-" -}}
-{{- else -}}
-{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
-{{- end -}}
-{{- end -}}
-{{- end -}}
-
-{{/*
-Create chart name and version as used by the chart label.
-*/}}
-{{- define "contour.chart" -}}
-{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
-{{- end -}}
-
-{{/*
-Return the proper Docker Image Registry Secret Names
-*/}}
-{{- define "contour.imagePullSecrets" -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
-Also, we can not use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-{{- if .Values.global.imagePullSecrets }}
-imagePullSecrets:
-{{- range .Values.global.imagePullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- else if .Values.contour.image.pullSecrets }}
-imagePullSecrets:
-{{- range .Values.contour.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- end -}}
-{{- else if .Values.contour.image.pullSecrets }}
-imagePullSecrets:
-{{- range .Values.contour.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- end -}}
-{{- end -}}
-
-{{/*
-Return the proper Docker Image Registry Secret Names
-*/}}
-{{- define "envoy.imagePullSecrets" -}}
-{{/*
-Helm 2.11 supports the assignment of a value to a variable defined in a different scope,
-but Helm 2.9 and 2.10 does not support it, so we need to implement this if-else logic.
-Also, we can not use a single if because lazy evaluation is not an option
-*/}}
-{{- if .Values.global }}
-{{- if .Values.global.imagePullSecrets }}
-imagePullSecrets:
-{{- range .Values.global.imagePullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- else if .Values.envoy.image.pullSecrets }}
-imagePullSecrets:
-{{- range .Values.envoy.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- end -}}
-{{- else if .Values.envoy.image.pullSecrets }}
-imagePullSecrets:
-{{- range .Values.envoy.image.pullSecrets }}
-  - name: {{ . }}
-{{- end }}
-{{- end -}}
-{{- end -}}
-
 
 {{/*
 Create the name of the envoy service account to use
 */}}
 {{- define "envoy.envoyServiceAccountName" -}}
 {{- if .Values.contour.serviceAccount.create -}}
-    {{ default (printf "%s-envoy" (include "contour.fullname" .)) .Values.envoy.serviceAccount.name }}
+    {{ default (printf "%s-envoy" (include "common.names.fullname" .)) .Values.envoy.serviceAccount.name }}
 {{- else -}}
     {{ default "default" .Values.envoy.serviceAccount.name }}
 {{- end -}}
@@ -171,7 +16,7 @@ Create the name of the contour service account to use
 */}}
 {{- define "contour.contourServiceAccountName" -}}
 {{- if .Values.contour.serviceAccount.create -}}
-    {{ default (printf "%s-contour" (include "contour.fullname" .)) .Values.contour.serviceAccount.name }}
+    {{ default (printf "%s-contour" (include "common.names.fullname" .)) .Values.contour.serviceAccount.name }}
 {{- else -}}
     {{ default "default" .Values.contour.serviceAccount.name }}
 {{- end -}}
@@ -182,7 +27,7 @@ Create the name of the contour-certgen service account to use
 */}}
 {{- define "contour.contourCertGenServiceAccountName" -}}
 {{- if .Values.contour.certgen.serviceAccount.create -}}
-    {{ default (printf "%s-contour-certgen" (include "contour.fullname" .)) .Values.contour.certgen.serviceAccount.name }}
+    {{ default (printf "%s-contour-certgen" (include "common.names.fullname" .)) .Values.contour.certgen.serviceAccount.name }}
 {{- else -}}
     {{ default "default" .Values.contour.certgen.serviceAccount.name }}
 {{- end -}}
@@ -193,21 +38,8 @@ Create the name of the settings ConfigMap to use.
 */}}
 {{- define "contour.configMapName" -}}
 {{- if .Values.configInline -}}
-    {{ include "contour.fullname" . }}
+    {{ include "common.names.fullname" . }}
 {{- else -}}
     {{ .Values.existingConfigMap }}
 {{- end -}}
 {{- end -}}
-
-{{/*
-Renders a value that contains template.
-Usage:
-{{ include "contour.tplValue" ( dict "value" .Values.path.to.the.Value "context" $) }}
-*/}}
-{{- define "contour.tplValue" -}}
-    {{- if typeIs "string" .value }}
-        {{- tpl .value .context }}
-    {{- else }}
-        {{- tpl (.value | toYaml) .context }}
-    {{- end }}
-{{- end -}}
diff --git a/bitnami/contour/templates/certgen/job.yaml b/bitnami/contour/templates/certgen/job.yaml
new file mode 100644
index 0000000000..d9f09f075f
--- /dev/null
+++ b/bitnami/contour/templates/certgen/job.yaml
@@ -0,0 +1,76 @@
+{{- if .Values.contour.enabled }}
+---
+apiVersion: batch/v1
+kind: Job
+metadata:
+  name: {{ include "common.names.fullname" . }}-contour-certgen
+  annotations:
+    "helm.sh/hook": "pre-install,pre-upgrade"
+    "helm.sh/hook-weight": "1"
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour-certgen
+spec:
+  ttlSecondsAfterFinished: 0
+  template:
+    metadata:
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
+        app.kubernetes.io/component: contour-certgen
+    spec:
+      {{- include "common.images.pullSecrets" ( dict "images" (list .Values.contour.image) "global" .Values.global) | nindent 6 }}
+      {{- if .Values.contour.nodeSelector }}
+      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.contour.nodeSelector "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.contour.affinity }}
+      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.contour.affinity "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.contour.tolerations}}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.contour.tolerations "context" $) | nindent 8 }}
+      {{- end }}
+      containers:
+      - name: contour
+        image: {{ include "common.images.image" ( dict "imageRoot" .Values.contour.image "global" .Values.global) }}
+        imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
+        command:
+        - contour
+        args:
+        - certgen
+        - --kube
+        - --incluster
+        - --overwrite
+        - --secrets-format=compact
+        - --namespace=$(CONTOUR_NAMESPACE)
+        env:
+        - name: CONTOUR_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        {{- if .Values.contour.extraEnvVars }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.contour.extraEnvVars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if or .Values.contour.extraEnvVarsConfigMap .Values.contour.extraEnvVarsSecret }}
+        envFrom:
+          {{- if .Values.contour.extraEnvVarsConfigMap }}
+          - configMapRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsConfigMap "context" $ ) }}
+          {{- end }}
+          {{- if .Values.contour.extraEnvVarsSecret }}
+          - secretRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsSecret "context" $ ) }}
+          {{- end }}
+        {{- end }}
+        resources:
+{{ toYaml .Values.contour.resources | indent 10 }}
+      restartPolicy: Never
+      serviceAccountName: {{ include "contour.contourCertGenServiceAccountName" . }}
+      {{- if .Values.contour.securityContext.enabled }}
+      securityContext:
+        runAsUser: {{ .Values.contour.securityContext.runAsUser }}
+        runAsGroup: {{ .Values.contour.securityContext.runAsGroup }}
+        fsGroup: {{ .Values.contour.securityContext.fsGroup }}
+        runAsNonRoot: {{ .Values.contour.securityContext.runAsNonRoot }}
+      {{- end }}
+  parallelism: 1
+  completions: 1
+  backoffLimit: 1
+{{- end }}
diff --git a/bitnami/contour/templates/certgen/rbac.yaml b/bitnami/contour/templates/certgen/rbac.yaml
new file mode 100644
index 0000000000..a825118bec
--- /dev/null
+++ b/bitnami/contour/templates/certgen/rbac.yaml
@@ -0,0 +1,37 @@
+{{- if and .Values.rbac.create .Values.contour.enabled }}
+---
+apiVersion: rbac.authorization.k8s.io/v1beta1
+kind: Role
+metadata:
+  name: {{ include "common.names.fullname" .}}-contour-certgen
+  annotations:
+    "helm.sh/hook": "pre-install,pre-upgrade"
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour-certgen
+rules:
+- apiGroups:
+  - ""
+  resources:
+  - secrets
+  verbs:
+  - create
+  - update
+---
+apiVersion: rbac.authorization.k8s.io/v1beta1
+kind: RoleBinding
+metadata:
+  name: {{ include "common.names.fullname" .}}-contour-certgen
+  annotations:
+    "helm.sh/hook": "pre-install,pre-upgrade"
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour-certgen
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: {{ include "common.names.fullname" .}}-contour-certgen
+subjects:
+  - kind: ServiceAccount
+    name: {{ include "contour.contourCertGenServiceAccountName" . }}
+{{- end }}
diff --git a/bitnami/contour/templates/certgen/serviceaccount.yaml b/bitnami/contour/templates/certgen/serviceaccount.yaml
new file mode 100644
index 0000000000..6b3dee4287
--- /dev/null
+++ b/bitnami/contour/templates/certgen/serviceaccount.yaml
@@ -0,0 +1,12 @@
+{{- if .Values.contour.certgen.serviceAccount.create }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ include "contour.contourCertGenServiceAccountName" . }}
+  annotations:
+    "helm.sh/hook": "pre-install,pre-upgrade"
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour-certgen
+{{- end }}
diff --git a/bitnami/contour/templates/configmap.yaml b/bitnami/contour/templates/configmap.yaml
deleted file mode 100644
index 4ab465e97b..0000000000
--- a/bitnami/contour/templates/configmap.yaml
+++ /dev/null
@@ -1,12 +0,0 @@
-{{- if .Values.configInline }}
----
-apiVersion: v1
-kind: ConfigMap
-metadata:
-  name: {{ include "contour.fullname" . }}
-  labels: {{- include "contour.labels" . | nindent 4}}
-    app.kubernetes.io/component: contour
-data:
-  contour.yaml: |
-{{ include "contour.tplValue" ( dict "value" .Values.configInline "context" $) | indent 4 }}
-{{- end }}
diff --git a/bitnami/contour/templates/contour/configmap.yaml b/bitnami/contour/templates/contour/configmap.yaml
new file mode 100644
index 0000000000..6d2e28761a
--- /dev/null
+++ b/bitnami/contour/templates/contour/configmap.yaml
@@ -0,0 +1,12 @@
+{{- if .Values.configInline }}
+---
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  name: {{ include "common.names.fullname" . }}
+  labels: {{- include "common.labels.standard" . | nindent 4}}
+    app.kubernetes.io/component: contour
+data:
+  contour.yaml: |
+{{ include "common.tplvalues.render" ( dict "value" .Values.configInline "context" $) | indent 4 }}
+{{- end }}
diff --git a/bitnami/contour/templates/deployment.yaml b/bitnami/contour/templates/contour/deployment.yaml
similarity index 58%
rename from bitnami/contour/templates/deployment.yaml
rename to bitnami/contour/templates/contour/deployment.yaml
index 7611417e25..f98b525f4e 100644
--- a/bitnami/contour/templates/deployment.yaml
+++ b/bitnami/contour/templates/contour/deployment.yaml
@@ -1,10 +1,10 @@
 {{- if .Values.contour.enabled }}
 ---
-apiVersion: apps/v1
+apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
 kind: Deployment
 metadata:
-  name: {{ include "contour.fullname" . }}-contour
-  labels: {{- include "contour.labels" . | nindent 4 }}
+  name: {{ include "common.names.fullname" . }}-contour
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: contour
 spec:
   replicas: {{ .Values.replicaCount }}
@@ -15,37 +15,48 @@ spec:
       # the new ReplicaSet will be created first.
       maxSurge: 50%
   selector:
-    matchLabels: {{- include "contour.matchLabels" . | nindent 6 }}
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: contour
   template:
     metadata:
       {{- if .Values.configInline }}
       annotations:
-        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
+        checksum/config: {{ include (print $.Template.BasePath "/contour/configmap.yaml") . | sha256sum }}
       {{- end }}
-      labels: {{- include "contour.labels" . | nindent 8 }}
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
         app.kubernetes.io/component: contour
-    spec: {{- include "contour.imagePullSecrets" . | nindent 6 }}
+    spec:
+      {{- include "common.images.pullSecrets" ( dict "images" (list .Values.contour.image) "global" .Values.global) | nindent 6 }}
       affinity:
+        {{- if eq .Values.contour.antiAffinityPolicy "hard" }}
+        podAntiAffinity:
+          requiredDuringSchedulingIgnoredDuringExecution:
+            - labelSelector:
+                matchLabels: {{- include "common.labels.matchLabels" . | nindent 18 }}
+                  app.kubernetes.io/component: contour
+              topologyKey: kubernetes.io/hostname
+        {{- else if eq .Values.contour.antiAffinityPolicy "soft" }}
         podAntiAffinity:
           preferredDuringSchedulingIgnoredDuringExecution:
           - podAffinityTerm:
               labelSelector:
-                matchLabels: {{- include "contour.matchLabels" . | nindent 18 }}
+                matchLabels: {{- include "common.labels.matchLabels" . | nindent 18 }}
                   app.kubernetes.io/component: contour
               topologyKey: kubernetes.io/hostname
             weight: 100
+        {{- end }}
       {{- if .Values.contour.affinity }}
-{{- include "contour.tplValue" (dict "value" .Values.contour.nodeSelector "context" $) | indent 8 }}
+        {{- include "common.tplvalues.render" (dict "value" .Values.contour.affinity "context" $) | nindent 8 }}
       {{- end }}
       {{- if .Values.contour.nodeSelector }}
-      nodeSelector: {{- include "contour.tplValue" (dict "value" .Values.contour.nodeSelector "context" $) | nindent 8 }}
-      {{- end }}
-      {{- if .Values.contour.affinity }}
-      affinity: {{- include "contour.tplValue" (dict "value" .Values.contour.affinity "context" $) | nindent 8 }}
+      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.contour.nodeSelector "context" $) | nindent 8 }}
       {{- end }}
       {{- if .Values.contour.tolerations}}
-      tolerations: {{- include "contour.tplValue" (dict "value" .Values.contour.tolerations "context" $) | nindent 8 }}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.contour.tolerations "context" $) | nindent 8 }}
+      {{- end }}
+      {{- if .Values.contour.initContainers }}
+      initContainers:
+        {{- include "common.tplvalues.render" ( dict "value" .Values.contour.initContainers "context" $ ) | nindent 6 }}
       {{- end }}
       containers:
       - command:
@@ -64,7 +75,7 @@ spec:
         {{- if .Values.ingressClass }}
         - --ingress-class-name={{ .Values.ingressClass }}
         {{- end }}
-        image: {{ include "contour.image" . }}
+        image: {{ include "common.images.image" ( dict "imageRoot" .Values.contour.image "global" .Values.global) }}
         imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
         name: contour
         ports:
@@ -104,12 +115,34 @@ spec:
         - name: contour-config
           mountPath: /config
           readOnly: true
+        {{- if .Values.contour.extraVolumeMounts }}
+          {{- include "common.tplvalues.render" ( dict "value" .Values.contour.extraVolumeMounts "context" $ ) | nindent 8 }}
+        {{- end }}
         env:
+        - name: CONTOUR_NAMESPACE
+          valueFrom:
+            fieldRef:
+              apiVersion: v1
+              fieldPath: metadata.namespace
         - name: POD_NAME
           valueFrom:
             fieldRef:
               apiVersion: v1
               fieldPath: metadata.name
+        {{- if .Values.contour.extraEnvVars }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.contour.extraEnvVars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if or .Values.contour.extraEnvVarsConfigMap .Values.contour.extraEnvVarsSecret }}
+        envFrom:
+          {{- if .Values.contour.extraEnvVarsConfigMap }}
+          - configMapRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsConfigMap "context" $ ) }}
+          {{- end }}
+          {{- if .Values.contour.extraEnvVarsSecret }}
+          - secretRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsSecret "context" $ ) }}
+          {{- end }}
+        {{- end }}
       dnsPolicy: ClusterFirst
       serviceAccountName: {{ include "contour.contourServiceAccountName" . }}
       {{- if .Values.contour.securityContext.enabled }}
@@ -130,4 +163,7 @@ spec:
           items:
           - key: contour.yaml
             path: contour.yaml
+      {{- if .Values.contour.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.contour.extraVolumes "context" $ ) | nindent 6 }}
+      {{- end }}
 {{- end }}
diff --git a/bitnami/contour/templates/contour/rbac.yaml b/bitnami/contour/templates/contour/rbac.yaml
new file mode 100644
index 0000000000..16cccbb28a
--- /dev/null
+++ b/bitnami/contour/templates/contour/rbac.yaml
@@ -0,0 +1,99 @@
+{{- if and .Values.rbac.create .Values.contour.enabled }}
+---
+apiVersion: rbac.authorization.k8s.io/v1beta1
+kind: ClusterRole
+metadata:
+  name: {{ include "common.names.fullname" .}}-contour
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+rules:
+- apiGroups:
+  - ""
+  resources:
+  - configmaps
+  verbs:
+  - create
+  - get
+  - update
+- apiGroups:
+  - ""
+  resources:
+  - endpoints
+  verbs:
+  - get
+  - list
+  - watch
+- apiGroups:
+  - ""
+  resources:
+  - secrets
+  verbs:
+  - get
+  - list
+  - watch
+- apiGroups:
+  - ""
+  resources:
+  - services
+  verbs:
+  - get
+  - list
+  - watch
+- apiGroups:
+  - networking.k8s.io
+  resources:
+  - gatewayclasses
+  - gateways
+  - httproutes
+  - tcproutes
+  verbs:
+  - get
+  - list
+  - watch
+- apiGroups:
+  - networking.k8s.io
+  resources:
+  - ingresses
+  verbs:
+  - get
+  - list
+  - watch
+- apiGroups:
+  - networking.k8s.io
+  resources:
+  - ingresses/status
+  verbs:
+  - create
+  - get
+  - update
+- apiGroups:
+  - projectcontour.io
+  resources:
+  - httpproxies
+  - tlscertificatedelegations
+  verbs:
+  - get
+  - list
+  - watch
+- apiGroups:
+  - projectcontour.io
+  resources:
+  - httpproxies/status
+  verbs:
+  - create
+  - get
+  - update
+---
+apiVersion: rbac.authorization.k8s.io/v1beta1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ include "common.names.fullname" .}}-contour
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ include "common.names.fullname" .}}-contour
+subjects:
+  - kind: ServiceAccount
+    name: {{ include "contour.contourServiceAccountName" . }}
+    namespace: {{ .Release.Namespace }}
+{{- end }}
diff --git a/bitnami/contour/templates/contour/service.yaml b/bitnami/contour/templates/contour/service.yaml
new file mode 100644
index 0000000000..86b2d5ce97
--- /dev/null
+++ b/bitnami/contour/templates/contour/service.yaml
@@ -0,0 +1,40 @@
+{{- if .Values.contour.enabled }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ include "common.names.fullname" . }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour
+spec:
+  ports:
+    - port: 8001
+      name: xds
+      protocol: TCP
+      targetPort: 8001
+    {{- if .Values.contour.service.extraPorts }}
+      {{- include "common.tplvalues.render" (dict "value" .Values.contour.service.extraPorts "context" $) | nindent 4 }}
+    {{- end }}
+  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
+    app.kubernetes.io/component: contour
+  type: ClusterIP
+{{- if .Values.prometheus.serviceMonitor.enabled }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ include "common.names.fullname" . }}-contour-metrics
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour
+spec:
+  type: ClusterIP
+  clusterIP: None
+  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
+    app.kubernetes.io/component: contour
+  ports:
+  - name: metrics
+    port: 8000
+    protocol: TCP
+    targetPort: 8000
+{{- end }}
+{{- end }}
diff --git a/bitnami/contour/templates/contour/serviceaccount.yaml b/bitnami/contour/templates/contour/serviceaccount.yaml
new file mode 100644
index 0000000000..bb1d47d855
--- /dev/null
+++ b/bitnami/contour/templates/contour/serviceaccount.yaml
@@ -0,0 +1,9 @@
+{{- if and .Values.contour.serviceAccount.create .Values.contour.enabled }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ include "contour.contourServiceAccountName" . }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour
+{{- end }}
diff --git a/bitnami/contour/templates/contour/servicemonitor.yaml b/bitnami/contour/templates/contour/servicemonitor.yaml
new file mode 100644
index 0000000000..67b8bbb504
--- /dev/null
+++ b/bitnami/contour/templates/contour/servicemonitor.yaml
@@ -0,0 +1,28 @@
+{{- if and .Values.prometheus.serviceMonitor.enabled .Values.contour.enabled }}
+---
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ include "common.names.fullname" . }}-contour
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: contour
+spec:
+  jobLabel: {{ .Values.prometheus.serviceMonitor.jobLabel | quote }}
+  selector:
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
+      app.kubernetes.io/component: contour
+  namespaceSelector:
+    matchNames:
+    - {{ .Release.Namespace }}
+  endpoints:
+  - port: metrics
+    {{- if .Values.prometheus.serviceMonitor.interval }}
+    interval: {{ .Values.prometheus.serviceMonitor.interval }}
+    {{- end }}
+    {{- if .Values.prometheus.serviceMonitor.metricRelabelings }}
+    metricRelabelings: {{ toYaml .Values.prometheus.serviceMonitor.metricRelabelings | nindent 4 }}
+    {{- end }}
+    {{- if .Values.prometheus.serviceMonitor.relabelings }}
+    relabelings: {{ toYaml .Values.prometheus.serviceMonitor.relabelings | nindent 4 }}
+    {{- end }}
+{{- end }}
diff --git a/bitnami/contour/templates/crd-httpproxies.yaml b/bitnami/contour/templates/crd-httpproxies.yaml
index 9a81720f17..b9f4b51b0a 100644
--- a/bitnami/contour/templates/crd-httpproxies.yaml
+++ b/bitnami/contour/templates/crd-httpproxies.yaml
@@ -1,4 +1,4 @@
-{{- if and .Values.contour.enabled .Values.contour.createCustomResource }}
+{{- if and .Values.contour.enabled .Values.contour.installCRDs }}
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
@@ -9,7 +9,7 @@ metadata:
     {{- if .Values.contour.customResourceDeletePolicy }}
     "helm.sh/hook-delete-policy": {{ .Values.contour.customResourceDeletePolicy }}
     {{- end }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
   name: httpproxies.projectcontour.io
 spec:
   additionalPrinterColumns:
@@ -43,7 +43,7 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: HTTPProxy is an Ingress CRD specification
+      description: HTTPProxy is an Ingress CRD specification.
       properties:
         apiVersion:
           description: 'APIVersion defines the versioned schema of this representation
@@ -62,17 +62,21 @@ spec:
           properties:
             includes:
               description: Includes allow for specific routing configuration to be
-                appended to another HTTPProxy in another namespace.
+                included from another HTTPProxy, possibly in another namespace.
               items:
                 description: Include describes a set of policies that can be applied
                   to an HTTPProxy in a namespace.
                 properties:
                   conditions:
-                    description: Conditions are a set of routing properties that is
-                      applied to an HTTPProxy in a namespace.
+                    description: 'Conditions are a set of rules that are applied to
+                      included HTTPProxies. In effect, they are added onto the Conditions
+                      of included HTTPProxy Route structs. When applied, they are
+                      merged using AND, with one exception: There can be only one
+                      Prefix MatchCondition per Conditions slice. More than one Prefix,
+                      or contradictory Conditions, will make the include invalid.'
                     items:
-                      description: Condition are policies that are applied on top
-                        of HTTPProxies. One of Prefix or Header must be provided.
+                      description: MatchCondition are a general holder for matching
+                        rules for HTTPProxies. One of Prefix or Header must be provided.
                       properties:
                         header:
                           description: Header specifies the header condition to match.
@@ -130,11 +134,14 @@ spec:
                 description: Route contains the set of routes for a virtual host.
                 properties:
                   conditions:
-                    description: Conditions are a set of routing properties that is
-                      applied to an HTTPProxy in a namespace.
+                    description: 'Conditions are a set of rules that are applied to
+                      a Route. When applied, they are merged using AND, with one exception:
+                      There can be only one Prefix MatchCondition per Conditions slice.
+                      More than one Prefix, or contradictory Conditions, will make
+                      the route invalid.'
                     items:
-                      description: Condition are policies that are applied on top
-                        of HTTPProxies. One of Prefix or Header must be provided.
+                      description: MatchCondition are a general holder for matching
+                        rules for HTTPProxies. One of Prefix or Header must be provided.
                       properties:
                         header:
                           description: Header specifies the header condition to match.
@@ -238,8 +245,8 @@ spec:
                             prefix:
                               description: "Prefix specifies the URL path prefix to
                                 be replaced. \n If Prefix is specified, it must exactly
-                                match the Condition prefix that is rendered by the
-                                chain of including HTTPProxies and only that path
+                                match the MatchCondition prefix that is rendered by
+                                the chain of including HTTPProxies and only that path
                                 prefix will be replaced by Replacement. This allows
                                 HTTPProxies that are included through multiple roots
                                 to only replace specific path prefixes, leaving others
@@ -342,6 +349,42 @@ spec:
                         description: PerTryTimeout specifies the timeout per retry
                           attempt. Ignored if NumRetries is not supplied.
                         type: string
+                      retriableStatusCodes:
+                        description: "RetriableStatusCodes specifies the HTTP status
+                          codes that should be retried. \n This field is only respected
+                          when you include `retriable-status-codes` in the `RetryOn`
+                          field."
+                        items:
+                          format: int32
+                          type: integer
+                        type: array
+                      retryOn:
+                        description: "RetryOn specifies the conditions on which to
+                          retry a request. \n Supported [HTTP conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on):
+                          \n - `5xx` - `gateway-error` - `reset` - `connect-failure`
+                          - `retriable-4xx` - `refused-stream` - `retriable-status-codes`
+                          - `retriable-headers` \n Supported [gRPC conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on):
+                          \n - `cancelled` - `deadline-exceeded` - `internal` - `resource-exhausted`
+                          - `unavailable`"
+                        items:
+                          description: RetryOn is a string type alias with validation
+                            to ensure that the value is valid.
+                          enum:
+                          - 5xx
+                          - gateway-error
+                          - reset
+                          - connect-failure
+                          - retriable-4xx
+                          - refused-stream
+                          - retriable-status-codes
+                          - retriable-headers
+                          - cancelled
+                          - deadline-exceeded
+                          - internal
+                          - resource-exhausted
+                          - unavailable
+                          type: string
+                        type: array
                     type: object
                   services:
                     description: Services are the services to proxy traffic.
@@ -361,6 +404,9 @@ spec:
                         port:
                           description: Port (defined as Integer) to proxy traffic
                             to since a service can have multiple defined.
+                          exclusiveMaximum: true
+                          maximum: 65536
+                          minimum: 1
                           type: integer
                         protocol:
                           description: Protocol may be used to specify (or override)
@@ -475,12 +521,14 @@ spec:
                         description: Timeout after which, if there are no active requests
                           for this route, the connection between Envoy and the backend
                           or Envoy and the external client will be closed. If not
-                          specified, there is no per-route idle timeout.
+                          specified, there is no per-route idle timeout, though a
+                          connection manager-wide stream_idle_timeout default of 5m
+                          still applies.
                         type: string
                       response:
                         description: Timeout for receiving a response from the server
                           after processing a request from client. If not supplied,
-                          the timeout duration is undefined.
+                          Envoy's default value of 15s applies.
                         type: string
                     type: object
                 required:
@@ -571,6 +619,9 @@ spec:
                       port:
                         description: Port (defined as Integer) to proxy traffic to
                           since a service can have multiple defined.
+                        exclusiveMaximum: true
+                        maximum: 65536
+                        minimum: 1
                         type: integer
                       protocol:
                         description: Protocol may be used to specify (or override)
@@ -676,24 +727,22 @@ spec:
                     - name
                     - port
                     type: object
-                  minItems: 1
                   type: array
-              required:
-              - services
               type: object
             virtualhost:
               description: Virtualhost appears at most once. If it is present, the
-                object is considered to be a "root".
+                object is considered to be a "root" HTTPProxy.
               properties:
                 fqdn:
                   description: The fully qualified domain name of the root of the
                     ingress tree all leaves of the DAG rooted at this object relate
-                    to the fqdn
+                    to the fqdn.
                   type: string
                 tls:
                   description: If present describes tls properties. The SNI names
                     that will be matched on are described in fqdn, the tls.secretName
-                    secret must contain a matching certificate
+                    secret must contain a certificate that itself contains a name
+                    that matches the FQDN.
                   properties:
                     clientValidation:
                       description: "ClientValidation defines how to verify the client
@@ -721,12 +770,15 @@ spec:
                       description: Minimum TLS version this vhost should negotiate
                       type: string
                     passthrough:
-                      description: If Passthrough is set to true, the SecretName will
-                        be ignored and the encrypted handshake will be passed through
-                        to the backing cluster.
+                      description: Passthrough defines whether the encrypted TLS handshake
+                        will be passed through to the backing cluster. Either Passthrough
+                        or SecretName must be specified, but not both.
                       type: boolean
                     secretName:
-                      description: required, the name of a secret in the current namespace
+                      description: SecretName is the name of a TLS secret in the current
+                        namespace. Either SecretName or Passthrough must be specified,
+                        but not both. If specified, the named secret must contain
+                        a matching certificate for the virtual host's FQDN.
                       type: string
                   type: object
               required:
@@ -734,8 +786,205 @@ spec:
               type: object
           type: object
         status:
-          description: Status reports the current state of the HTTPProxy.
+          description: Status is a container for computed information about the HTTPProxy.
           properties:
+            conditions:
+              description: "Conditions contains information about the current status
+                of the HTTPProxy, in an upstream-friendly container. \n Contour will
+                update a single condition, `Valid`, that is in normal-true polarity.
+                That is, when `currentStatus` is `valid`, the `Valid` condition will
+                be `status: true`, and vice versa. \n Contour will leave untouched
+                any other Conditions set in this block, in case some other controller
+                wants to add a Condition. \n If you are another controller owner and
+                wish to add a condition, you *should* namespace your condition with
+                a label, like `controller.domain.com/ConditionName`."
+              items:
+                description: "DetailedCondition is an extension of the normal Kubernetes
+                  conditions, with two extra fields to hold sub-conditions, which
+                  provide more detailed reasons for the state (True or False) of the
+                  condition. \n `errors` holds information about sub-conditions which
+                  are fatal to that condition and render its state False. \n `warnings`
+                  holds information about sub-conditions which are not fatal to that
+                  condition and do not force the state to be False. \n Remember that
+                  Conditions have a type, a status, and a reason. \n The type is the
+                  type of the condition, the most important one in this CRD set is
+                  `Valid`. \n In the case of `Valid`, `status: true` means that the
+                  object is has been ingested into Contour with no errors. `warnings`
+                  may still be present, and will be indicated in the Reason field.
+                  \n `Valid`, `status: false` means that the object has had one or
+                  more fatal errors during processing into Contour.  The details of
+                  the errors will be present under the `errors` field. \n There should
+                  never be subconditions under `errors` when `status` is `true`."
+                properties:
+                  errors:
+                    description: "Errors contains a slice of relevant error subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a error), and disappear when not relevant.
+                      An empty slice here indicates no errors."
+                    items:
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
+                    type: array
+                  lastTransitionTime:
+                    description: "lastTransitionTime is the last time the condition
+                      transitioned from one status to another. \n This should be when
+                      the underlying condition changed.  If that is not known, then
+                      using the time when the API field changed is acceptable."
+                    format: date-time
+                    type: string
+                  message:
+                    description: "message is a human readable message indicating details
+                      about the transition. \n This may be an empty string."
+                    maxLength: 32768
+                    type: string
+                  observedGeneration:
+                    description: "observedGeneration represents the .metadata.generation
+                      that the condition was set based upon. \n For instance, if .metadata.generation
+                      is currently 12, but the .status.conditions[x].observedGeneration
+                      is 9, the condition is out of date with respect to the current
+                      state of the instance."
+                    format: int64
+                    minimum: 0
+                    type: integer
+                  reason:
+                    description: "Reason contains a programmatic identifier indicating
+                      the reason for the condition's last transition. \n Producers
+                      of specific condition types may define expected values and meanings
+                      for this field, and whether the values are considered a guaranteed
+                      API. \n The value should be a CamelCase string. \n This field
+                      may not be empty."
+                    maxLength: 1024
+                    minLength: 1
+                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                    type: string
+                  status:
+                    description: status of the condition, one of True, False, Unknown.
+                    enum:
+                    - "True"
+                    - "False"
+                    - Unknown
+                    type: string
+                  type:
+                    description: "Type of condition in CamelCase or in foo.example.com/CamelCase.
+                      \n Many .condition.type values are consistent across resources
+                      like Available, but because arbitrary conditions can be useful
+                      (see .node.status.conditions), the ability to deconflict is
+                      important. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                    maxLength: 316
+                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                    type: string
+                  warnings:
+                    description: "Warnings contains a slice of relevant warning subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a warning), and disappear when not relevant.
+                      An empty slice here indicates no warnings."
+                    items:
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
+                    type: array
+                required:
+                - lastTransitionTime
+                - message
+                - reason
+                - status
+                - type
+                type: object
+              type: array
+              x-kubernetes-list-map-keys:
+              - type
+              x-kubernetes-list-type: map
             currentStatus:
               type: string
             description:
diff --git a/bitnami/contour/templates/crd-ingressroutes.yaml b/bitnami/contour/templates/crd-ingressroutes.yaml
deleted file mode 100644
index f727cb70a3..0000000000
--- a/bitnami/contour/templates/crd-ingressroutes.yaml
+++ /dev/null
@@ -1,381 +0,0 @@
-{{- if and .Values.contour.enabled .Values.contour.createCustomResource }}
----
-apiVersion: apiextensions.k8s.io/v1beta1
-kind: CustomResourceDefinition
-metadata:
-  annotations:
-    controller-gen.kubebuilder.io/version: v0.2.9
-    "helm.sh/hook": crd-install
-    {{- if .Values.contour.customResourceDeletePolicy }}
-    "helm.sh/hook-delete-policy": {{ .Values.contour.customResourceDeletePolicy }}
-    {{- end }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
-  name: ingressroutes.contour.heptio.com
-spec:
-  additionalPrinterColumns:
-  - JSONPath: .spec.virtualhost.fqdn
-    description: Fully qualified domain name
-    name: FQDN
-    type: string
-  - JSONPath: .spec.virtualhost.tls.secretName
-    description: Secret with TLS credentials
-    name: TLS Secret
-    type: string
-  - JSONPath: .spec.routes[0].match
-    description: First routes defined
-    name: First route
-    type: string
-  - JSONPath: .status.currentStatus
-    description: The current status of the HTTPProxy
-    name: Status
-    type: string
-  - JSONPath: .status.description
-    description: Description of the current status
-    name: Status Description
-    type: string
-  group: contour.heptio.com
-  names:
-    kind: IngressRoute
-    listKind: IngressRouteList
-    plural: ingressroutes
-    singular: ingressroute
-  scope: Namespaced
-  subresources: {}
-  validation:
-    openAPIV3Schema:
-      description: IngressRoute is an Ingress CRD specificiation
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: IngressRouteSpec defines the spec of the CRD
-          properties:
-            routes:
-              description: Routes are the ingress routes. If TCPProxy is present,
-                Routes is ignored.
-              items:
-                description: Route contains the set of routes for a virtual host
-                properties:
-                  delegate:
-                    description: Delegate specifies that this route should be delegated
-                      to another IngressRoute
-                    properties:
-                      name:
-                        description: Name of the IngressRoute
-                        type: string
-                      namespace:
-                        description: Namespace of the IngressRoute. Defaults to the
-                          current namespace if not supplied.
-                        type: string
-                    required:
-                    - name
-                    type: object
-                  enableWebsockets:
-                    description: Enables websocket support for the route
-                    type: boolean
-                  match:
-                    description: Match defines the prefix match
-                    type: string
-                  permitInsecure:
-                    description: Allow this path to respond to insecure requests over
-                      HTTP which are normally not permitted when a `virtualhost.tls`
-                      block is present.
-                    type: boolean
-                  prefixRewrite:
-                    description: Indicates that during forwarding, the matched prefix
-                      (or path) should be swapped with this value
-                    type: string
-                  retryPolicy:
-                    description: The retry policy for this route
-                    properties:
-                      count:
-                        description: NumRetries is maximum allowed number of retries.
-                          If not supplied, the number of retries is one.
-                        format: int64
-                        minimum: 0
-                        type: integer
-                      perTryTimeout:
-                        description: PerTryTimeout specifies the timeout per retry
-                          attempt. Ignored if NumRetries is not supplied.
-                        type: string
-                    type: object
-                  services:
-                    description: Services are the services to proxy traffic
-                    items:
-                      description: Service defines an upstream to proxy traffic to
-                      properties:
-                        healthCheck:
-                          description: HealthCheck defines optional healthchecks on
-                            the upstream service
-                          properties:
-                            healthyThresholdCount:
-                              description: The number of healthy health checks required
-                                before a host is marked healthy
-                              format: int64
-                              minimum: 0
-                              type: integer
-                            host:
-                              description: The value of the host header in the HTTP
-                                health check request. If left empty (default value),
-                                the name "contour-envoy-healthcheck" will be used.
-                              type: string
-                            intervalSeconds:
-                              description: The interval (seconds) between health checks
-                              format: int64
-                              type: integer
-                            path:
-                              description: HTTP endpoint used to perform health checks
-                                on upstream service
-                              type: string
-                            timeoutSeconds:
-                              description: The time to wait (seconds) for a health
-                                check response
-                              format: int64
-                              type: integer
-                            unhealthyThresholdCount:
-                              description: The number of unhealthy health checks required
-                                before a host is marked unhealthy
-                              format: int64
-                              minimum: 0
-                              type: integer
-                          required:
-                          - path
-                          type: object
-                        name:
-                          description: Name is the name of Kubernetes service to proxy
-                            traffic. Names defined here will be used to look up corresponding
-                            endpoints which contain the ips to route.
-                          type: string
-                        port:
-                          description: Port (defined as Integer) to proxy traffic
-                            to since a service can have multiple defined
-                          type: integer
-                        strategy:
-                          description: LB Algorithm to apply (see https://github.com/projectcontour/contour/blob/master/design/ingressroute-design.md#load-balancing)
-                          type: string
-                        validation:
-                          description: UpstreamValidation defines how to verify the
-                            backend service's certificate
-                          properties:
-                            caSecret:
-                              description: Name of the Kubernetes secret be used to
-                                validate the certificate presented by the backend
-                              type: string
-                            subjectName:
-                              description: Key which is expected to be present in
-                                the 'subjectAltName' of the presented certificate
-                              type: string
-                          required:
-                          - caSecret
-                          - subjectName
-                          type: object
-                        weight:
-                          description: Weight defines percentage of traffic to balance
-                            traffic
-                          format: int64
-                          minimum: 0
-                          type: integer
-                      required:
-                      - name
-                      - port
-                      type: object
-                    type: array
-                  timeoutPolicy:
-                    description: The timeout policy for this route
-                    properties:
-                      request:
-                        description: Timeout for receiving a response from the server
-                          after processing a request from client. If not supplied
-                          the timeout duration is undefined.
-                        type: string
-                    type: object
-                required:
-                - match
-                type: object
-              type: array
-            tcpproxy:
-              description: TCPProxy holds TCP proxy information.
-              properties:
-                delegate:
-                  description: Delegate specifies that this tcpproxy should be delegated
-                    to another IngressRoute
-                  properties:
-                    name:
-                      description: Name of the IngressRoute
-                      type: string
-                    namespace:
-                      description: Namespace of the IngressRoute. Defaults to the
-                        current namespace if not supplied.
-                      type: string
-                  required:
-                  - name
-                  type: object
-                services:
-                  description: Services are the services to proxy traffic
-                  items:
-                    description: Service defines an upstream to proxy traffic to
-                    properties:
-                      healthCheck:
-                        description: HealthCheck defines optional healthchecks on
-                          the upstream service
-                        properties:
-                          healthyThresholdCount:
-                            description: The number of healthy health checks required
-                              before a host is marked healthy
-                            format: int64
-                            minimum: 0
-                            type: integer
-                          host:
-                            description: The value of the host header in the HTTP
-                              health check request. If left empty (default value),
-                              the name "contour-envoy-healthcheck" will be used.
-                            type: string
-                          intervalSeconds:
-                            description: The interval (seconds) between health checks
-                            format: int64
-                            type: integer
-                          path:
-                            description: HTTP endpoint used to perform health checks
-                              on upstream service
-                            type: string
-                          timeoutSeconds:
-                            description: The time to wait (seconds) for a health check
-                              response
-                            format: int64
-                            type: integer
-                          unhealthyThresholdCount:
-                            description: The number of unhealthy health checks required
-                              before a host is marked unhealthy
-                            format: int64
-                            minimum: 0
-                            type: integer
-                        required:
-                        - path
-                        type: object
-                      name:
-                        description: Name is the name of Kubernetes service to proxy
-                          traffic. Names defined here will be used to look up corresponding
-                          endpoints which contain the ips to route.
-                        type: string
-                      port:
-                        description: Port (defined as Integer) to proxy traffic to
-                          since a service can have multiple defined
-                        type: integer
-                      strategy:
-                        description: LB Algorithm to apply (see https://github.com/projectcontour/contour/blob/master/design/ingressroute-design.md#load-balancing)
-                        type: string
-                      validation:
-                        description: UpstreamValidation defines how to verify the
-                          backend service's certificate
-                        properties:
-                          caSecret:
-                            description: Name of the Kubernetes secret be used to
-                              validate the certificate presented by the backend
-                            type: string
-                          subjectName:
-                            description: Key which is expected to be present in the
-                              'subjectAltName' of the presented certificate
-                            type: string
-                        required:
-                        - caSecret
-                        - subjectName
-                        type: object
-                      weight:
-                        description: Weight defines percentage of traffic to balance
-                          traffic
-                        format: int64
-                        minimum: 0
-                        type: integer
-                    required:
-                    - name
-                    - port
-                    type: object
-                  type: array
-              type: object
-            virtualhost:
-              description: Virtualhost appears at most once. If it is present, the
-                object is considered to be a "root".
-              properties:
-                fqdn:
-                  description: The fully qualified domain name of the root of the
-                    ingress tree all leaves of the DAG rooted at this object relate
-                    to the fqdn
-                  type: string
-                tls:
-                  description: If present describes tls properties. The SNI names
-                    that will be matched on are described in fqdn, the tls.secretName
-                    secret must contain a matching certificate
-                  properties:
-                    minimumProtocolVersion:
-                      description: Minimum TLS version this vhost should negotiate
-                      type: string
-                    passthrough:
-                      description: If Passthrough is set to true, the SecretName will
-                        be ignored and the encrypted handshake will be passed through
-                        to the backing cluster.
-                      type: boolean
-                    secretName:
-                      description: required, the name of a secret in the current namespace
-                      type: string
-                  type: object
-              required:
-              - fqdn
-              type: object
-          type: object
-        status:
-          description: Status reports the current state of the HTTPProxy.
-          properties:
-            currentStatus:
-              type: string
-            description:
-              type: string
-            loadBalancer:
-              description: LoadBalancer contains the current status of the load balancer.
-              properties:
-                ingress:
-                  description: Ingress is a list containing ingress points for the
-                    load-balancer. Traffic intended for the service should be sent
-                    to these ingress points.
-                  items:
-                    description: 'LoadBalancerIngress represents the status of a load-balancer
-                      ingress point: traffic intended for the service should be sent
-                      to an ingress point.'
-                    properties:
-                      hostname:
-                        description: Hostname is set for load-balancer ingress points
-                          that are DNS based (typically AWS load-balancers)
-                        type: string
-                      ip:
-                        description: IP is set for load-balancer ingress points that
-                          are IP based (typically GCE or OpenStack load-balancers)
-                        type: string
-                    type: object
-                  type: array
-              type: object
-          type: object
-      required:
-      - metadata
-      - spec
-      type: object
-  version: v1beta1
-  versions:
-  - name: v1beta1
-    served: true
-    storage: true
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
-{{- end }}
diff --git a/bitnami/contour/templates/crd-tlscertificatedeligations.yaml b/bitnami/contour/templates/crd-tlscertificatedeligations.yaml
index cd17a92f5f..530a296861 100644
--- a/bitnami/contour/templates/crd-tlscertificatedeligations.yaml
+++ b/bitnami/contour/templates/crd-tlscertificatedeligations.yaml
@@ -1,4 +1,4 @@
-{{- if and .Values.contour.enabled .Values.contour.createCustomResource }}
+{{- if and .Values.contour.enabled .Values.contour.installCRDs }}
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
@@ -9,16 +9,20 @@ metadata:
     {{- if .Values.contour.customResourceDeletePolicy }}
     "helm.sh/hook-delete-policy": {{ .Values.contour.customResourceDeletePolicy }}
     {{- end }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
-  name: tlscertificatedelegations.contour.heptio.com
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+  name: tlscertificatedelegations.projectcontour.io
 spec:
-  group: contour.heptio.com
+  group: projectcontour.io
   names:
     kind: TLSCertificateDelegation
     listKind: TLSCertificateDelegationList
     plural: tlscertificatedelegations
+    shortNames:
+    - tlscerts
     singular: tlscertificatedelegation
   scope: Namespaced
+  subresources:
+    status: {}
   validation:
     openAPIV3Schema:
       description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
@@ -64,87 +68,207 @@ spec:
           required:
           - delegations
           type: object
-      required:
-      - metadata
-      - spec
-      type: object
-  version: v1beta1
-  versions:
-  - name: v1beta1
-    served: true
-    storage: true
-status:
-  acceptedNames:
-    kind: ""
-    plural: ""
-  conditions: []
-  storedVersions: []
----
-apiVersion: apiextensions.k8s.io/v1beta1
-kind: CustomResourceDefinition
-metadata:
-  annotations:
-    controller-gen.kubebuilder.io/version: v0.2.9
-    "helm.sh/hook": crd-install
-    {{- if .Values.contour.customResourceDeletePolicy }}
-    "helm.sh/hook-delete-policy": {{ .Values.contour.customResourceDeletePolicy }}
-    {{- end }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
-  name: tlscertificatedelegations.projectcontour.io
-spec:
-  group: projectcontour.io
-  names:
-    kind: TLSCertificateDelegation
-    listKind: TLSCertificateDelegationList
-    plural: tlscertificatedelegations
-    shortNames:
-    - tlscerts
-    singular: tlscertificatedelegation
-  scope: Namespaced
-  validation:
-    openAPIV3Schema:
-      description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
-        See design/tls-certificate-delegation.md for details.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: TLSCertificateDelegationSpec defines the spec of the CRD
+        status:
+          description: TLSCertificateDelegationStatus allows for the status of the
+            delegation to be presented to the user.
           properties:
-            delegations:
+            conditions:
+              description: "Conditions contains information about the current status
+                of the HTTPProxy, in an upstream-friendly container. \n Contour will
+                update a single condition, `Valid`, that is in normal-true polarity.
+                That is, when `currentStatus` is `valid`, the `Valid` condition will
+                be `status: true`, and vice versa. \n Contour will leave untouched
+                any other Conditions set in this block, in case some other controller
+                wants to add a Condition. \n If you are another controller owner and
+                wish to add a condition, you *should* namespace your condition with
+                a label, like `controller.domain.com\\ConditionName`."
               items:
-                description: CertificateDelegation maps the authority to reference
-                  a secret in the current namespace to a set of namespaces.
+                description: "DetailedCondition is an extension of the normal Kubernetes
+                  conditions, with two extra fields to hold sub-conditions, which
+                  provide more detailed reasons for the state (True or False) of the
+                  condition. \n `errors` holds information about sub-conditions which
+                  are fatal to that condition and render its state False. \n `warnings`
+                  holds information about sub-conditions which are not fatal to that
+                  condition and do not force the state to be False. \n Remember that
+                  Conditions have a type, a status, and a reason. \n The type is the
+                  type of the condition, the most important one in this CRD set is
+                  `Valid`. \n In the case of `Valid`, `status: true` means that the
+                  object is has been ingested into Contour with no errors. `warnings`
+                  may still be present, and will be indicated in the Reason field.
+                  \n `Valid`, `status: false` means that the object has had one or
+                  more fatal errors during processing into Contour.  The details of
+                  the errors will be present under the `errors` field. \n There should
+                  never be subconditions under `errors` when `status` is `true`."
                 properties:
-                  secretName:
-                    description: required, the name of a secret in the current namespace.
+                  errors:
+                    description: "Errors contains a slice of relevant error subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a error), and disappear when not relevant.
+                      An empty slice here indicates no errors."
+                    items:
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
+                    type: array
+                  lastTransitionTime:
+                    description: "lastTransitionTime is the last time the condition
+                      transitioned from one status to another. \n This should be when
+                      the underlying condition changed.  If that is not known, then
+                      using the time when the API field changed is acceptable."
+                    format: date-time
                     type: string
-                  targetNamespaces:
-                    description: required, the namespaces the authority to reference
-                      the the secret will be delegated to. If TargetNamespaces is
-                      nil or empty, the CertificateDelegation' is ignored. If the
-                      TargetNamespace list contains the character, "*" the secret
-                      will be delegated to all namespaces.
+                  message:
+                    description: "message is a human readable message indicating details
+                      about the transition. \n This may be an empty string."
+                    maxLength: 32768
+                    type: string
+                  observedGeneration:
+                    description: "observedGeneration represents the .metadata.generation
+                      that the condition was set based upon. \n For instance, if .metadata.generation
+                      is currently 12, but the .status.conditions[x].observedGeneration
+                      is 9, the condition is out of date with respect to the current
+                      state of the instance."
+                    format: int64
+                    minimum: 0
+                    type: integer
+                  reason:
+                    description: "Reason contains a programmatic identifier indicating
+                      the reason for the condition's last transition. \n Producers
+                      of specific condition types may define expected values and meanings
+                      for this field, and whether the values are considered a guaranteed
+                      API. \n The value should be a CamelCase string. \n This field
+                      may not be empty."
+                    maxLength: 1024
+                    minLength: 1
+                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                    type: string
+                  status:
+                    description: status of the condition, one of True, False, Unknown.
+                    enum:
+                    - "True"
+                    - "False"
+                    - Unknown
+                    type: string
+                  type:
+                    description: "Type of condition in CamelCase or in foo.example.com/CamelCase.
+                      \n Many .condition.type values are consistent across resources
+                      like Available, but because arbitrary conditions can be useful
+                      (see .node.status.conditions), the ability to deconflict is
+                      important. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                    maxLength: 316
+                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                    type: string
+                  warnings:
+                    description: "Warnings contains a slice of relevant warning subconditions
+                      for this object. \n Subconditions are expected to appear when
+                      relevant (when there is a warning), and disappear when not relevant.
+                      An empty slice here indicates no warnings."
                     items:
-                      type: string
+                      description: "SubCondition is a Condition-like type intended
+                        for use as a subcondition inside a DetailedCondition. \n It
+                        contains a subset of the Condition fields. \n It is intended
+                        for warnings and errors, so `type` names should use abnormal-true
+                        polarity, that is, they should be of the form \"ErrorPresent:
+                        true\". \n The expected lifecycle for these errors is that
+                        they should only be present when the error or warning is,
+                        and should be removed when they are not relevant."
+                      properties:
+                        message:
+                          description: "Message is a human readable message indicating
+                            details about the transition. \n This may be an empty
+                            string."
+                          maxLength: 32768
+                          type: string
+                        reason:
+                          description: "Reason contains a programmatic identifier
+                            indicating the reason for the condition's last transition.
+                            Producers of specific condition types may define expected
+                            values and meanings for this field, and whether the values
+                            are considered a guaranteed API. \n The value should be
+                            a CamelCase string. \n This field may not be empty."
+                          maxLength: 1024
+                          minLength: 1
+                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
+                          type: string
+                        status:
+                          description: Status of the condition, one of True, False,
+                            Unknown.
+                          enum:
+                          - "True"
+                          - "False"
+                          - Unknown
+                          type: string
+                        type:
+                          description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
+                            \n This must be in abnormal-true polarity, that is, `ErrorFound`
+                            or `controller.io/ErrorFound`. \n The regex it matches
+                            is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
+                          maxLength: 316
+                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
+                          type: string
+                      required:
+                      - message
+                      - reason
+                      - status
+                      - type
+                      type: object
                     type: array
                 required:
-                - secretName
-                - targetNamespaces
+                - lastTransitionTime
+                - message
+                - reason
+                - status
+                - type
                 type: object
               type: array
-          required:
-          - delegations
+              x-kubernetes-list-map-keys:
+              - type
+              x-kubernetes-list-type: map
           type: object
       required:
       - metadata
diff --git a/bitnami/contour/templates/daemonset.yaml b/bitnami/contour/templates/envoy/daemonset.yaml
similarity index 53%
rename from bitnami/contour/templates/daemonset.yaml
rename to bitnami/contour/templates/envoy/daemonset.yaml
index 791314a786..4e05a21b5c 100644
--- a/bitnami/contour/templates/daemonset.yaml
+++ b/bitnami/contour/templates/envoy/daemonset.yaml
@@ -3,8 +3,8 @@
 apiVersion: apps/v1
 kind: DaemonSet
 metadata:
-  name: {{ include "contour.fullname" . }}-envoy
-  labels: {{- include "contour.labels" . | nindent 4 }}
+  name: {{ include "common.names.fullname" . }}-envoy
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: envoy
 spec:
   updateStrategy:
@@ -12,24 +12,22 @@ spec:
     rollingUpdate:
       maxUnavailable: 10%
   selector:
-    matchLabels: {{- include "contour.matchLabels" . | nindent 6 }}
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
       app.kubernetes.io/component: envoy
   template:
     metadata:
-      labels: {{- include "contour.labels" . | nindent 8 }}
+      labels: {{- include "common.labels.standard" . | nindent 8 }}
         app.kubernetes.io/component: envoy
-    spec: {{- include "envoy.imagePullSecrets" . | nindent 6 }}
-      {{- if .Values.envoy.affinity }}
-      affinity: {{- include "contour.tplValue" (dict "value" .Values.envoy.nodeSelector "context" $) | nindent 8 }}
-      {{- end }}
+    spec:
+      {{- include "common.images.pullSecrets" ( dict "images" (list .Values.contour.image .Values.envoy.image) "global" .Values.global) | nindent 6 }}
       {{- if .Values.envoy.nodeSelector }}
-      nodeSelector: {{- include "contour.tplValue" (dict "value" .Values.envoy.nodeSelector "context" $) | nindent 8 }}
+      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.envoy.nodeSelector "context" $) | nindent 8 }}
       {{- end }}
       {{- if .Values.envoy.affinity }}
-      affinity: {{- include "contour.tplValue" (dict "value" .Values.envoy.affinity "context" $) | nindent 8 }}
+      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.envoy.affinity "context" $) | nindent 8 }}
       {{- end }}
       {{- if .Values.envoy.tolerations}}
-      tolerations: {{- include "contour.tplValue" (dict "value" .Values.envoy.tolerations "context" $) | nindent 8 }}
+      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.envoy.tolerations "context" $) | nindent 8 }}
       {{- end }}
       terminationGracePeriodSeconds: {{ .Values.envoy.terminationGracePeriodSeconds }}
       hostNetwork: {{ .Values.envoy.hostNetwork }}
@@ -48,14 +46,30 @@ spec:
         args:
           - envoy
           - shutdown-manager
-        image: {{ include "contour.image" . }}
+        image: {{ include "common.images.image" ( dict "imageRoot" .Values.contour.image "global" .Values.global) }}
         imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
+        {{- if .Values.contour.extraEnvVars }}
+        env:
+          {{- include "common.tplvalues.render" (dict "value" .Values.contour.extraEnvVars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if or .Values.contour.extraEnvVarsConfigMap .Values.contour.extraEnvVarsSecret }}
+        envFrom:
+          {{- if .Values.contour.extraEnvVarsConfigMap }}
+          - configMapRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsConfigMap "context" $ ) }}
+          {{- end }}
+          {{- if .Values.contour.extraEnvVarsSecret }}
+          - secretRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsSecret "context" $ ) }}
+          {{- end }}
+        {{- end }}
         lifecycle:
           preStop:
-            httpGet:
-              path: /shutdown
-              port: 8090
-              scheme: HTTP
+            exec:
+              command:
+                - contour
+                - envoy
+                - shutdown
         {{- if .Values.contour.livenessProbe.enabled }}
         livenessProbe:
           httpGet:
@@ -68,6 +82,10 @@ spec:
           failureThreshold: {{ .Values.contour.livenessProbe.failureThreshold }}
         {{- end }}
         name: shutdown-manager
+        {{- if .Values.envoy.extraVolumeMounts }}
+        volumeMounts:
+          {{- include "common.tplvalues.render" ( dict "value" .Values.envoy.extraVolumeMounts "context" $ ) | nindent 8 }}
+        {{- end }}
       - command:
         - envoy
         args:
@@ -76,7 +94,7 @@ spec:
         - --service-cluster $(CONTOUR_NAMESPACE)
         - --service-node $(ENVOY_POD_NAME)
         - --log-level {{ .Values.envoy.logLevel }}
-        image: {{ include "envoy.image" . }}
+        image: {{ include "common.images.image" ( dict "imageRoot" .Values.envoy.image "global" .Values.global ) }}
         imagePullPolicy: {{ .Values.envoy.image.pullPolicy }}
         name: envoy
         {{- if .Values.envoy.containerSecurityContext.enabled }}
@@ -94,6 +112,20 @@ spec:
             fieldRef:
               apiVersion: v1
               fieldPath: metadata.name
+        {{- if .Values.envoy.extraEnvVars }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.envoy.extraEnvVars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if or .Values.envoy.extraEnvVarsConfigMap .Values.envoy.extraEnvVarsSecret }}
+        envFrom:
+          {{- if .Values.envoy.extraEnvVarsConfigMap }}
+          - configMapRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.envoy.extraEnvVarsConfigMap "context" $ ) }}
+          {{- end }}
+          {{- if .Values.envoy.extraEnvVarsSecret }}
+          - secretRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.envoy.extraEnvVarsSecret "context" $ ) }}
+          {{- end }}
+        {{- end }}
         ports:
         - containerPort: 80
           hostPort: 80
@@ -136,6 +168,9 @@ spec:
           mountPath: /config
         - name: envoycert
           mountPath: /certs
+        {{- if .Values.envoy.extraVolumeMounts }}
+          {{- include "common.tplvalues.render" ( dict "value" .Values.envoy.extraVolumeMounts "context" $ ) | nindent 8 }}
+        {{- end }}
         lifecycle:
           preStop:
             httpGet:
@@ -148,12 +183,13 @@ spec:
         args:
         - bootstrap
         - /config/envoy.json
-        - --xds-address={{ template "contour.fullname" . }}
+        - --xds-address={{ template "common.names.fullname" . }}
         - --xds-port=8001
+        - --resources-dir=/config/resources
         - --envoy-cafile=/certs/ca.crt
         - --envoy-cert-file=/certs/tls.crt
         - --envoy-key-file=/certs/tls.key
-        image: {{ include "contour.image" . }}
+        image: {{ include "common.images.image" ( dict "imageRoot" .Values.contour.image "global" .Values.global) }}
         imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
         name: envoy-initconfig
         resources:
@@ -164,11 +200,32 @@ spec:
         - name: envoycert
           mountPath: /certs
           readOnly: true
+        {{- if .Values.envoy.extraVolumeMounts }}
+          {{- include "common.tplvalues.render" ( dict "value" .Values.envoy.extraVolumeMounts "context" $ ) | nindent 8 }}
+        {{- end }}
         env:
         - name: CONTOUR_NAMESPACE
           valueFrom:
             fieldRef:
               fieldPath: metadata.namespace
+        {{- if .Values.contour.extraEnvVars }}
+          {{- include "common.tplvalues.render" (dict "value" .Values.contour.extraEnvVars "context" $) | nindent 8 }}
+        {{- end }}
+        {{- if or .Values.contour.extraEnvVarsConfigMap .Values.contour.extraEnvVarsSecret }}
+        envFrom:
+          {{- if .Values.contour.extraEnvVarsConfigMap }}
+          - configMapRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsConfigMap "context" $ ) }}
+          {{- end }}
+          {{- if .Values.contour.extraEnvVarsSecret }}
+          - secretRef:
+              name: {{ include "common.tplvalues.render" ( dict "value" .Values.contour.extraEnvVarsSecret "context" $ ) }}
+          {{- end }}
+        {{- end }}
+      {{- if .Values.envoy.initContainers }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.envoy.initContainers "context" $ ) | nindent 6 }}
+      {{- end }}
+      automountServiceAccountToken: false
       serviceAccountName: {{ include "envoy.envoyServiceAccountName" . }}
       volumes:
       - name: envoy-config
@@ -176,5 +233,8 @@ spec:
       - name: envoycert
         secret:
           secretName: envoycert
+      {{- if .Values.envoy.extraVolumes }}
+        {{- include "common.tplvalues.render" ( dict "value" .Values.envoy.extraVolumes "context" $ ) | nindent 6 }}
+      {{- end }}
       restartPolicy: Always
 {{- end }}
diff --git a/bitnami/contour/templates/service.yaml b/bitnami/contour/templates/envoy/service.yaml
similarity index 69%
rename from bitnami/contour/templates/service.yaml
rename to bitnami/contour/templates/envoy/service.yaml
index 4ff53fca94..0b89a5d249 100644
--- a/bitnami/contour/templates/service.yaml
+++ b/bitnami/contour/templates/envoy/service.yaml
@@ -1,34 +1,16 @@
-{{- if .Values.contour.enabled }}
----
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ include "contour.fullname" . }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: contour
-spec:
-  ports:
-    - port: 8001
-      name: xds
-      protocol: TCP
-      targetPort: 8001
-  selector: {{- include "contour.matchLabels" . | nindent 4 }}
-    app.kubernetes.io/component: contour
-  type: ClusterIP
-{{- end }}
 {{- if .Values.envoy.enabled }}
 ---
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "contour.fullname" . }}-envoy
-  labels: {{- include "contour.labels" . | nindent 4 }}
+  name: {{ include "common.names.fullname" . }}-envoy
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
     app.kubernetes.io/component: envoy
     {{- if .Values.envoy.service.labels }}
-    {{- include "contour.tplValue" (dict "value" .Values.envoy.service.labels "context" $) | nindent 4 }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.envoy.service.labels "context" $) | nindent 4 }}
     {{- end }}
   annotations:
-    {{- if (ne (get .Values.envoy.service.annotations "service.beta.kubernetes.io/aws-load-balancer-type") "nlb") }}
+    {{- if (ne (index .Values.envoy.service.annotations "service.beta.kubernetes.io/aws-load-balancer-type" | toString ) "nlb") }}
     # This annotation puts the AWS ELB into "TCP" mode so that it does not
     # do HTTP negotiation for HTTPS connections at the ELB edge.
     # The downside of this is the remote IP address of all connections will
@@ -39,7 +21,7 @@ metadata:
     service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
     {{- end }}
     {{- if .Values.envoy.service.annotations }}
-    {{- include "contour.tplValue" (dict "value" .Values.envoy.service.annotations "context" $) | nindent 4 }}
+    {{- include "common.tplvalues.render" (dict "value" .Values.envoy.service.annotations "context" $) | nindent 4 }}
     {{- end }}
 spec:
   {{- if .Values.envoy.service.externalTrafficPolicy }}
@@ -76,7 +58,29 @@ spec:
       {{- else if eq .Values.envoy.service.type "ClusterIP" }}
       nodePort: null
       {{- end }}
-  selector: {{- include "contour.matchLabels" . | nindent 4 }}
+    {{- if .Values.envoy.service.extraPorts }}
+      {{- include "common.tplvalues.render" (dict "value" .Values.envoy.service.extraPorts "context" $) | nindent 4 }}
+    {{- end }}
+  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
     app.kubernetes.io/component: envoy
   type: {{ .Values.envoy.service.type }}
+{{- if .Values.prometheus.serviceMonitor.enabled }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ include "common.names.fullname" . }}-envoy-metrics
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: envoy
+spec:
+  type: ClusterIP
+  clusterIP: None
+  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
+    app.kubernetes.io/component: envoy
+  ports:
+  - name: metrics
+    port: 8002
+    protocol: TCP
+    targetPort: 8002
+{{- end }}
 {{- end }}
diff --git a/bitnami/contour/templates/envoy/serviceaccount.yaml b/bitnami/contour/templates/envoy/serviceaccount.yaml
new file mode 100644
index 0000000000..b63010cdfb
--- /dev/null
+++ b/bitnami/contour/templates/envoy/serviceaccount.yaml
@@ -0,0 +1,9 @@
+{{- if and .Values.envoy.serviceAccount.create .Values.envoy.enabled }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ include "envoy.envoyServiceAccountName" . }}
+  labels: {{- include "common.labels.standard" . | nindent 4 }}
+    app.kubernetes.io/component: envoy
+{{- end }}
diff --git a/bitnami/contour/templates/envoy/servicemonitor.yaml b/bitnami/contour/templates/envoy/servicemonitor.yaml
new file mode 100644
index 0000000000..a7aa091dfb
--- /dev/null
+++ b/bitnami/contour/templates/envoy/servicemonitor.yaml
@@ -0,0 +1,29 @@
+{{- if and .Values.prometheus.serviceMonitor.enabled .Values.envoy.enabled }}
+---
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ include "common.names.fullname" . }}-envoy
+  labels: {{- include "common.labels.standard" . | nindent 4}}
+    app.kubernetes.io/component: envoy
+spec:
+  jobLabel: {{ .Values.prometheus.serviceMonitor.jobLabel | quote }}
+  selector:
+    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
+      app.kubernetes.io/component: envoy
+  namespaceSelector:
+    matchNames:
+    - {{ .Release.Namespace }}
+  endpoints:
+  - port: metrics
+    path: /stats/prometheus
+    {{- if .Values.prometheus.serviceMonitor.interval }}
+    interval: {{ .Values.prometheus.serviceMonitor.interval }}
+    {{- end }}
+    {{- if .Values.prometheus.serviceMonitor.metricRelabelings }}
+    metricRelabelings: {{ toYaml .Values.prometheus.serviceMonitor.metricRelabelings | nindent 4 }}
+    {{- end }}
+    {{- if .Values.prometheus.serviceMonitor.relabelings }}
+    relabelings: {{ toYaml .Values.prometheus.serviceMonitor.relabelings | nindent 4 }}
+    {{- end }}
+{{- end }}
diff --git a/bitnami/contour/templates/job.yaml b/bitnami/contour/templates/job.yaml
deleted file mode 100644
index 8a1553ae72..0000000000
--- a/bitnami/contour/templates/job.yaml
+++ /dev/null
@@ -1,61 +0,0 @@
-{{- if .Values.contour.enabled }}
----
-apiVersion: batch/v1
-kind: Job
-metadata:
-  name: {{ include "contour.fullname" . }}-contour-certgen
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: contour-certgen
-spec:
-  ttlSecondsAfterFinished: 0
-  template:
-    metadata:
-      labels: {{- include "contour.labels" . | nindent 8 }}
-        app.kubernetes.io/component: contour-certgen
-    spec:
-{{- include "contour.imagePullSecrets" . | nindent 6 }}
-    {{- with .Values.contour.affinity }}
-      affinity:
-{{ toYaml . | indent 8 }}
-    {{- end }}
-    {{- with .Values.contour.nodeSelector }}
-      nodeSelector:
-{{ toYaml . | indent 8 }}
-    {{- end }}
-    {{- with .Values.contour.tolerations }}
-      tolerations:
-{{ toYaml . | indent 8 }}
-    {{- end }}
-      containers:
-      - name: contour
-        image: {{ include "contour.image" . }}
-        imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
-        command:
-        - contour
-        args:
-        - certgen
-        - --kube
-        - --incluster
-        - --overwrite
-        - --secrets-format=compact
-        - --namespace=$(CONTOUR_NAMESPACE)
-        env:
-        - name: CONTOUR_NAMESPACE
-          valueFrom:
-            fieldRef:
-              fieldPath: metadata.namespace
-        resources:
-{{ toYaml .Values.contour.resources | indent 10 }}
-      restartPolicy: Never
-      serviceAccountName: {{ include "contour.contourCertGenServiceAccountName" . }}
-      {{- if .Values.contour.securityContext.enabled }}
-      securityContext:
-        runAsUser: {{ .Values.contour.securityContext.runAsUser }}
-        runAsGroup: {{ .Values.contour.securityContext.runAsGroup }}
-        fsGroup: {{ .Values.contour.securityContext.fsGroup }}
-        runAsNonRoot: {{ .Values.contour.securityContext.runAsNonRoot }}
-      {{- end }}
-  parallelism: 1
-  completions: 1
-  backoffLimit: 1
-{{- end }}
diff --git a/bitnami/contour/templates/rbac.yaml b/bitnami/contour/templates/rbac.yaml
deleted file mode 100644
index 03f88b81e4..0000000000
--- a/bitnami/contour/templates/rbac.yaml
+++ /dev/null
@@ -1,165 +0,0 @@
-{{- if and .Values.rbac.create .Values.contour.enabled }}
----
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: ClusterRole
-metadata:
-  name: {{ include "contour.fullname" .}}:contour
-  labels: {{- include "contour.labels" . | nindent 4 }}
-rules:
-- apiGroups:
-  - ""
-  resources:
-  - configmaps
-  - endpoints
-  - nodes
-  - pods
-  - secrets
-  verbs:
-  - list
-  - watch
-- apiGroups:
-  - ""
-  resources:
-  - nodes
-  verbs:
-  - get
-- apiGroups:
-  - ""
-  resources:
-  - services
-  verbs:
-  - get
-  - list
-  - watch
-- apiGroups:
-  - "networking.k8s.io"
-  resources:
-  - ingresses
-  verbs:
-  - get
-  - list
-  - watch
-- apiGroups:
-  - "networking.k8s.io"
-  resources:
-  - "ingresses/status"
-  verbs:
-  - get
-  - list
-  - watch
-  - patch
-  - post
-  - update
-- apiGroups: ["contour.heptio.com"]
-  resources: ["ingressroutes", "tlscertificatedelegations"]
-  verbs:
-  - get
-  - list
-  - watch
-  - put
-  - post
-  - patch
-- apiGroups: ["projectcontour.io"]
-  resources: ["httpproxies", "tlscertificatedelegations"]
-  verbs:
-  - get
-  - list
-  - watch
-  - put
-  - post
-  - patch
-- apiGroups:
-  - "projectcontour.io"
-  resources:
-  - "httpproxies/status"
-  verbs:
-  - update
-- apiGroups: ["networking.x.k8s.io"]
-  resources: ["gatewayclasses", "gateways", "httproutes", "tcproutes"]
-  verbs:
-  - get
-  - list
-  - watch
-  - put
-  - post
-  - patch
----
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: Role
-metadata:
-  name: {{ include "contour.fullname" .}}:contour-leaderelection
-  labels: {{- include "contour.labels" . | nindent 4 }}
-rules:
-- apiGroups:
-  - ""
-  resources:
-  - configmaps
-  verbs:
-  - create
-  - get
-  - list
-  - watch
-  - update
-- apiGroups:
-  - ""
-  resources:
-  - events
-  verbs:
-  - create
-  - update
-  - patch
----
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: Role
-metadata:
-  name: {{ include "contour.fullname" .}}:contour-certgen
-  labels: {{- include "contour.labels" . | nindent 4 }}
-rules:
-- apiGroups:
-  - ""
-  resources:
-  - secrets
-  verbs:
-  - create
-  - update
----
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: ClusterRoleBinding
-metadata:
-  name: {{ include "contour.fullname" .}}:contour
-  labels: {{- include "contour.labels" . | nindent 4 }}
-roleRef:
-  apiGroup: rbac.authorization.k8s.io
-  kind: ClusterRole
-  name: {{ include "contour.fullname" .}}:contour
-subjects:
-  - kind: ServiceAccount
-    name: {{ include "contour.contourServiceAccountName" . }}
-    namespace: {{ .Release.Namespace }}
----
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: RoleBinding
-metadata:
-  name: {{ include "contour.fullname" .}}:contour-leaderelection
-  labels: {{- include "contour.labels" . | nindent 4 }}
-roleRef:
-  apiGroup: rbac.authorization.k8s.io
-  kind: Role
-  name: {{ include "contour.fullname" . }}:contour-leaderelection
-subjects:
-  - kind: ServiceAccount
-    name: {{ include "contour.contourServiceAccountName" . }}
----
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: RoleBinding
-metadata:
-  name: {{ include "contour.fullname" .}}:contour-certgen
-  labels: {{- include "contour.labels" . | nindent 4 }}
-roleRef:
-  apiGroup: rbac.authorization.k8s.io
-  kind: Role
-  name: {{ include "contour.fullname" .}}:contour-certgen
-subjects:
-  - kind: ServiceAccount
-    name: {{ include "contour.contourCertGenServiceAccountName" . }}
-{{- end }}
diff --git a/bitnami/contour/templates/service-accounts.yaml b/bitnami/contour/templates/service-accounts.yaml
deleted file mode 100644
index dc06bee0a2..0000000000
--- a/bitnami/contour/templates/service-accounts.yaml
+++ /dev/null
@@ -1,27 +0,0 @@
-{{- if and .Values.contour.serviceAccount.create .Values.contour.enabled }}
----
-apiVersion: v1
-kind: ServiceAccount
-metadata:
-  name: {{ include "contour.contourServiceAccountName" . }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: contour
-{{- end }}
-{{- if .Values.contour.certgen.serviceAccount.create }}
----
-apiVersion: v1
-kind: ServiceAccount
-metadata:
-  name: {{ include "contour.contourCertGenServiceAccountName" . }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: contour
-{{- end }}
-{{- if and .Values.envoy.serviceAccount.create .Values.envoy.enabled }}
----
-apiVersion: v1
-kind: ServiceAccount
-metadata:
-  name: {{ include "envoy.envoyServiceAccountName" . }}
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: envoy
-{{- end }}
\ No newline at end of file
diff --git a/bitnami/contour/templates/servicemonitor.yaml b/bitnami/contour/templates/servicemonitor.yaml
deleted file mode 100644
index 491a53920c..0000000000
--- a/bitnami/contour/templates/servicemonitor.yaml
+++ /dev/null
@@ -1,91 +0,0 @@
-{{- if .Values.prometheus.serviceMonitor.enabled }}
-{{- if .Values.contour.enabled }}
----
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ include "contour.fullname" . }}-contour-metrics
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: contour
-spec:
-  type: ClusterIP
-  selector: {{- include "contour.matchLabels" . | nindent 4 }}
-    app.kubernetes.io/component: contour
-  ports:
-  - name: metrics
-    port: 8000
-    protocol: TCP
-    targetPort: 8000
----
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ include "contour.fullname" . }}-contour
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: contour
-spec:
-  jobLabel: {{ .Values.prometheus.serviceMonitor.jobLabel | quote }}
-  selector:
-    matchLabels: {{- include "contour.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: contour
-  namespaceSelector:
-    matchNames:
-    - {{ .Release.Namespace }}
-  endpoints:
-  - port: metrics
-    {{- if .Values.prometheus.serviceMonitor.interval }}
-    interval: {{ .Values.prometheus.serviceMonitor.interval }}
-    {{- end }}
-    {{- if .Values.prometheus.serviceMonitor.metricRelabelings }}
-    metricRelabelings: {{ toYaml .Values.prometheus.serviceMonitor.metricRelabelings | nindent 4 }}
-    {{- end }}
-    {{- if .Values.prometheus.serviceMonitor.relabelings }}
-    relabelings: {{ toYaml .Values.prometheus.serviceMonitor.relabelings | nindent 4 }}
-    {{- end }}
-{{- end }}
-{{- if .Values.envoy.enabled }}
----
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ include "contour.fullname" . }}-envoy-metrics
-  labels: {{- include "contour.labels" . | nindent 4 }}
-    app.kubernetes.io/component: envoy
-spec:
-  type: ClusterIP
-  selector: {{- include "contour.matchLabels" . | nindent 4 }}
-    app.kubernetes.io/component: envoy
-  ports:
-  - name: metrics
-    port: 8002
-    protocol: TCP
-    targetPort: 8002
----
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ include "contour.fullname" . }}-envoy
-  labels: {{- include "contour.labels" . | nindent 4}}
-    app.kubernetes.io/component: envoy
-spec:
-  jobLabel: {{ .Values.prometheus.serviceMonitor.jobLabel | quote }}
-  selector:
-    matchLabels: {{- include "contour.matchLabels" . | nindent 6 }}
-      app.kubernetes.io/component: envoy
-  namespaceSelector:
-    matchNames:
-    - {{ .Release.Namespace }}
-  endpoints:
-  - port: metrics
-    path: /stats/prometheus
-    {{- if .Values.prometheus.serviceMonitor.interval }}
-    interval: {{ .Values.prometheus.serviceMonitor.interval }}
-    {{- end }}
-    {{- if .Values.prometheus.serviceMonitor.metricRelabelings }}
-    metricRelabelings: {{ toYaml .Values.prometheus.serviceMonitor.metricRelabelings | nindent 4 }}
-    {{- end }}
-    {{- if .Values.prometheus.serviceMonitor.relabelings }}
-    relabelings: {{ toYaml .Values.prometheus.serviceMonitor.relabelings | nindent 4 }}
-    {{- end }}
-{{- end }}
-{{- end }}
diff --git a/bitnami/contour/values-production.yaml b/bitnami/contour/values-production.yaml
index 3f04cefcae..7937d7a11b 100644
--- a/bitnami/contour/values-production.yaml
+++ b/bitnami/contour/values-production.yaml
@@ -47,6 +47,12 @@ configInline:
   tls:
   #   minimum TLS version that Contour will negotiate
   #   minimum-protocol-version: "1.1"
+  # Defines the Kubernetes name/namespace matching a secret to use
+  # as the fallback certificate when requests which don't match the
+  # SNI defined for a vhost.
+    fallback-certificate:
+  #   name: fallback-secret-name
+  #   namespace: '{{ .Release.Namespace }}'
   # The following config shows the defaults for the leader election.
   ## This needs to be edited by when you deploy to a namespace other than projectcontour
   ##
@@ -84,6 +90,18 @@ configInline:
   #   - "upstream_service_time"
   #   - "user_agent"
   #   - "x_forwarded_for"
+  #
+  # default-http-versions:
+  # - "HTTP/2"
+  # - "HTTP/1.1"
+  #
+  # The following shows the default proxy timeout settings.
+  # timeouts:
+  #   request-timeout: infinity
+  #   connection-idle-timeout: 60s
+  #   stream-idle-timeout: 5m
+  #   max-connection-duration: infinity
+  #   connection-shutdown-grace-period: 5s
 
 ## Name of the ingress class to route through this controller
 ##
@@ -142,7 +160,7 @@ contour:
 
   ## Create Contour CRDs
   ##
-  createCustomResource: true
+  installCRDs: true
 
   ## Contour CRD deletion policy
   ## ref: https://v3.helm.sh/docs/topics/charts_hooks/
@@ -162,6 +180,7 @@ contour:
   ## Affinity for pod assignment
   ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
   ##
+  antiAffinityPolicy: soft
   affinity: {}
 
   ## Pod annotations
@@ -206,6 +225,48 @@ contour:
       # true, a name is generated using the fullname template
       name: ""
 
+  ## Contour Service properties
+  ##
+  service:
+
+    ## Extra ports to expose (normally used with the `sidecar` value)
+    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
+    ##
+    extraPorts: []
+
+  ## Add init containers to the pod
+  ## For example:
+  ## initContainers:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##
+  initContainers: []
+
+  ## Array to add extra volumes
+  ##
+  extraVolumes: []
+
+  ## Array to add extra mounts (normally used with extraVolumes)
+  ##
+  extraVolumeMounts: []
+
+  ## An array to add extra env vars
+  ## For example:
+  ## extraEnvVars:
+  ##  - name: MY_ENV_VAR
+  ##    value: env_var_value
+  ##
+  extraEnvVars: []
+
+  ## Name of a ConfigMap containing extra env vars
+  ##
+  extraEnvVarsConfigMap: ""
+
+  ## Name of a Secret containing extra env vars
+  ##
+  extraEnvVarsSecret: ""
+
 envoy:
   enabled: true
   image:
@@ -342,6 +403,44 @@ envoy:
       http: ""
       https: ""
 
+    ## Extra ports to expose (normally used with the `sidecar` value)
+    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
+    ##
+    extraPorts: []
+
+  ## Add init containers to the pod
+  ## For example:
+  ## initContainers:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##
+  initContainers: []
+
+  ## Array to add extra volumes
+  ##
+  extraVolumes: []
+
+  ## Array to add extra mounts (normally used with extraVolumes)
+  ##
+  extraVolumeMounts: []
+
+  ## An array to add extra env vars
+  ## For example:
+  ## extraEnvVars:
+  ##  - name: MY_ENV_VAR
+  ##    value: env_var_value
+  ##
+  extraEnvVars: []
+
+  ## Name of a ConfigMap containing extra env vars
+  ##
+  extraEnvVarsConfigMap: ""
+
+  ## Name of a Secret containing extra env vars
+  ##
+  extraEnvVarsSecret: ""
+
 prometheus:
   # Prometheus Operator service monitors
   serviceMonitor:
diff --git a/bitnami/contour/values.yaml b/bitnami/contour/values.yaml
index a1fab23a65..074b1b530a 100644
--- a/bitnami/contour/values.yaml
+++ b/bitnami/contour/values.yaml
@@ -46,6 +46,12 @@ configInline:
   tls:
   #   minimum TLS version that Contour will negotiate
   #   minimum-protocol-version: "1.1"
+  # Defines the Kubernetes name/namespace matching a secret to use
+  # as the fallback certificate when requests which don't match the
+  # SNI defined for a vhost.
+    fallback-certificate:
+  #   name: fallback-secret-name
+  #   namespace: '{{ .Release.Namespace }}'
   # The following config shows the defaults for the leader election.
   ## This needs to be edited by when you deploy to a namespace other than projectcontour
   leaderelection:
@@ -82,6 +88,18 @@ configInline:
   #   - "upstream_service_time"
   #   - "user_agent"
   #   - "x_forwarded_for"
+  #
+  # default-http-versions:
+  # - "HTTP/2"
+  # - "HTTP/1.1"
+  #
+  # The following shows the default proxy timeout settings.
+  # timeouts:
+  #   request-timeout: infinity
+  #   connection-idle-timeout: 60s
+  #   stream-idle-timeout: 5m
+  #   max-connection-duration: infinity
+  #   connection-shutdown-grace-period: 5s
 
 ## Name of the ingress class to route through this controller
 ##
@@ -138,7 +156,7 @@ contour:
       # memory: 25Mi
 
   ## Create Contour CRDs
-  createCustomResource: true
+  installCRDs: true
 
   ## Contour CRD deletion policy
   ## ref: https://v3.helm.sh/docs/topics/charts_hooks/
@@ -158,6 +176,7 @@ contour:
   ## Affinity for pod assignment
   ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
   ##
+  antiAffinityPolicy: soft
   affinity: {}
 
   ## Pod annotations
@@ -202,6 +221,48 @@ contour:
       # true, a name is generated using the fullname template
       name: ""
 
+  ## Contour Service properties
+  ##
+  service:
+
+    ## Extra ports to expose (normally used with the `sidecar` value)
+    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
+    ##
+    extraPorts: []
+
+  ## Add init containers to the pod
+  ## For example:
+  ## initContainers:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##
+  initContainers: []
+
+  ## Array to add extra volumes
+  ##
+  extraVolumes: []
+
+  ## Array to add extra mounts (normally used with extraVolumes)
+  ##
+  extraVolumeMounts: []
+
+  ## An array to add extra env vars
+  ## For example:
+  ## extraEnvVars:
+  ##  - name: MY_ENV_VAR
+  ##    value: env_var_value
+  ##
+  extraEnvVars: []
+
+  ## Name of a ConfigMap containing extra env vars
+  ##
+  extraEnvVarsConfigMap: ""
+
+  ## Name of a Secret containing extra env vars
+  ##
+  extraEnvVarsSecret: ""
+
 envoy:
   enabled: true
   image:
@@ -337,6 +398,44 @@ envoy:
       http: ""
       https: ""
 
+    ## Extra ports to expose (normally used with the `sidecar` value)
+    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
+    ##
+    extraPorts: []
+
+  ## Add init containers to the pod
+  ## For example:
+  ## initContainers:
+  ##   - name: your-image-name
+  ##     image: your-image
+  ##     imagePullPolicy: Always
+  ##
+  initContainers: []
+
+  ## Array to add extra volumes
+  ##
+  extraVolumes: []
+
+  ## Array to add extra mounts (normally used with extraVolumes)
+  ##
+  extraVolumeMounts: []
+
+  ## An array to add extra env vars
+  ## For example:
+  ## extraEnvVars:
+  ##  - name: MY_ENV_VAR
+  ##    value: env_var_value
+  ##
+  extraEnvVars: []
+
+  ## Name of a ConfigMap containing extra env vars
+  ##
+  extraEnvVarsConfigMap: ""
+
+  ## Name of a Secret containing extra env vars
+  ##
+  extraEnvVarsSecret: ""
+
 prometheus:
   # Prometheus Operator service monitors
   serviceMonitor:
