commit b84124f636c3adb77bea0b20e1e1ddd71244616f
Author: Will Tran <will@autonomic.ai>
Date:   Fri Feb 23 19:22:45 2018 -0500

    [stable/concourse] Refactor values and make secrets optional (#3254)
    
    * Make secrets optional, eliminate configmap.
    
    Provide a way to opt out of managing secrets in helm values.
    
    The configmap introduced needless repetition, mapping values directly to
    environment variables is a simpler approach.
    
    * Don't store postgresql user as a secret
    
    * Add missing documentation for values introduced in this and previous PRs
    
    Also fix encryption key values key in secrets, and rename credentialManager.vault.caCert to credentialManager.vault.useCaCert for clarity
    
    * [stable/concourse] bump postgresql dependency to v0.8.11
    
    * Remove redundant default template function calls
    
    * Flatten secret values
    
    Use a helper to produce more informative errors when secret values are required
    
    * Add support for using k8s secrets as a credential manager.
    
    Add rbac support for secret access from web pods to to team specific
    namespaces.
    
    Upgrade to Concourse 3.9.0
    
    * Write the liveness probe log to /tmp instead of /concourse-work-dir
    
    If the worker runs out of disk space, logs will stop tee-ing to
    /concourse-work-dir/.liveness_probe because it's on the same persistent
    volume, and the condition won't be detected.
    
    * Add OWNERS file
    
    Contributors, reviewers and approvers of PRs to this chart who are also
    kubernetes github org members.
    
    * fix typos
    
    * see if btrfs works in e2e test
    
    * Stick with naive FS driver since its the most compatible
    
    * Fix #3407, make docs reflect actual value
    
    * Remove core maintainers from local OWNERS
    
    The maintainers have OWNER on the top level of the repo already

diff --git a/stable/concourse/Chart.yaml b/stable/concourse/Chart.yaml
index 121970f00..4d6c3e1ff 100644
--- a/stable/concourse/Chart.yaml
+++ b/stable/concourse/Chart.yaml
@@ -1,6 +1,6 @@
 name: concourse
-version: 0.11.5
-appVersion: 3.8.0
+version: 1.0.0
+appVersion: 3.9.0
 description: Concourse is a simple and scalable CI system.
 icon: https://avatars1.githubusercontent.com/u/7809479
 keywords:
diff --git a/stable/concourse/OWNERS b/stable/concourse/OWNERS
new file mode 100644
index 000000000..c30ce71f1
--- /dev/null
+++ b/stable/concourse/OWNERS
@@ -0,0 +1,6 @@
+approvers:
+- frodenas
+- william-tran
+reviewers:
+- frodenas
+- william-tran
diff --git a/stable/concourse/README.md b/stable/concourse/README.md
index 204493f5c..632cf1740 100644
--- a/stable/concourse/README.md
+++ b/stable/concourse/README.md
@@ -55,7 +55,7 @@ $ kubectl scale statefulset my-release-worker --replicas=3
 
 ### Restarting workers
 
-If a worker isn't taking on work, you can restart the worker with `kubectl delete pod`. This will initiate a graceful shutdown by "retiring" the worker, to ensure Concourse doesn't try looking for old volumes on the new worker. The value`worker.terminationGracePeriodSeconds` can be used to provide an upper limit on graceful shutdown time before forcefully terminating the container.
+If a worker isn't taking on work, you can restart the worker with `kubectl delete pod`. This will initiate a graceful shutdown by "retiring" the worker, to ensure Concourse doesn't try looking for old volumes on the new worker. The value`worker.terminationGracePeriodSeconds` can be used to provide an upper limit on graceful shutdown time before forcefully terminating the container. Check the output of `fly workers`, and if a worker is `stalled`, you'll also need to run `fly prune-worker` to allow the new incarnation of the worker to start.
 
 ### Worker Liveness Probe
 
@@ -69,88 +69,110 @@ The following tables lists the configurable parameters of the Concourse chart an
 | ----------------------- | ----------------------------------    | ---------------------------------------------------------- |
 | `image` | Concourse image | `concourse/concourse` |
 | `imageTag` | Concourse image version | `3.8.0` |
-| `imagePullPolicy` |Concourse image pull policy |  `Always` if `imageTag` is `latest`, else `IfNotPresent` |
-| `concourse.username` | Concourse Basic Authentication Username | `concourse` |
-| `concourse.password` | Concourse Basic Authentication Password | `concourse` |
-| `concourse.hostKey` | Concourse Host Private Key | *See [#ssh-keys](#ssh-keys)* |
-| `concourse.hostKeyPub` | Concourse Host Public Key | *See [#ssh-keys](#ssh-keys)* |
-| `concourse.sessionSigningKey` | Concourse Session Signing Private Key | *See [#ssh-keys](#ssh-keys)* |
-| `concourse.workerKey` | Concourse Worker Private Key | *See [#ssh-keys](#ssh-keys)* |
-| `concourse.workerKeyPub` | Concourse Worker Public Key | *See [#ssh-keys](#ssh-keys)* |
+| `imagePullPolicy` | Concourse image pull policy | `IfNotPresent` |
+| `concourse.externalURL` | URL used to reach any ATC from the outside world | `nil` |
 | `concourse.atcPort` | Concourse ATC listen port | `8080` |
 | `concourse.tsaPort` | Concourse TSA listen port | `2222` |
-| `concourse.allowSelfSignedCertificates` | Allow self signed certificates | `true` |
+| `concourse.allowSelfSignedCertificates` | Allow self signed certificates | `false` |
 | `concourse.authDuration` | Length of time for which tokens are valid | `24h` |
 | `concourse.resourceCheckingInterval` | Interval on which to check for new versions of resources | `1m` |
 | `concourse.oldResourceGracePeriod` | How long to cache the result of a get step after a newer version of the resource is found | `5m` |
 | `concourse.resourceCacheCleanupInterval` | The interval on which to check for and release old caches of resource versions | `30s` |
 | `concourse.baggageclaimDriver` | The filesystem driver used by baggageclaim | `naive` |
 | `concourse.containerPlacementStrategy` | The selection strategy for placing containers onto workers | `random` |
-| `concourse.externalURL` | URL used to reach any ATC from the outside world | `nil` |
 | `concourse.dockerRegistry` | An URL pointing to the Docker registry to use to fetch Docker images | `nil` |
 | `concourse.insecureDockerRegistry` | Docker registry(ies) (comma separated) to allow connecting to even if not secure | `nil` |
-| `concourse.githubAuthClientId` | Application client ID for enabling GitHub OAuth | `nil` |
-| `concourse.githubAuthClientSecret` | Application client secret for enabling GitHub OAuth | `nil` |
-| `concourse.githubAuthOrganization` | GitHub organizations (comma separated) whose members will have access | `nil` |
-| `concourse.githubAuthTeam` | GitHub teams (comma separated) whose members will have access | `nil` |
-| `concourse.githubAuthUser` | GitHub users (comma separated) to permit access | `nil` |
-| `concourse.githubAuthAuthUrl` | Override default endpoint AuthURL for Github Enterprise | `nil` |
-| `concourse.githubAuthTokenUrl` | Override default endpoint TokenURL for Github Enterprise | `nil` |
-| `concourse.githubAuthApiUrl` | Override default API endpoint URL for Github Enterprise | `nil` |
-| `concourse.gitlabAuthClientId` | Application client ID for enabling GitLab OAuth | `nil` |
-| `concourse.gitlabAuthClientSecret` | Application client secret for enabling GitLab OAuth | `nil` |
-| `concourse.gitlabAuthGroup` | GitLab groups (comma separated) whose members will have access | `nil` |
-| `concourse.gitlabAuthAuthUrl` | Endpoint AuthURL for GitLab server | `nil` |
-| `concourse.gitlabAuthTokenUrl` | Endpoint TokenURL for GitLab server | `nil` |
-| `concourse.gitlabAuthApiUrl` | API endpoint URL for GitLab server | `nil` |
-| `concourse.genericOauthDisplayName` | Name for this auth method on the web UI | `nil` |
-| `concourse.genericOauthClientId` | Application client ID for enabling generic OAuth | `nil` |
-| `concourse.genericOauthClientSecret` | Application client secret for enabling generic OAuth | `nil` |
-| `concourse.genericOauthAuthUrl` | Generic OAuth provider AuthURL endpoint | `nil` |
-| `concourse.genericOauthAuthUrlParam` | Parameters (comma separated) to pass to the authentication server AuthURL | `nil` |
-| `concourse.genericOauthScope` | Optional scope required to authorize user | `nil` |
-| `concourse.genericOauthTokenUrl` | Generic OAuth provider TokenURL endpoint | `nil` |
-| `web.nameOverride` | Override the Concourse Web components name | `web` |
+| `concourse.encryption.enabled` | Enable encryption of pipeline configuration | `false` |
+| `concourse.basicAuth.enabled` | Enable basic auth for the "main" Concourse team| `true` |
+| `concourse.githubAuth.enabled` | Enable Github auth for the "main" Concourse team| `false` |
+| `concourse.githubAuth.organization` | GitHub organizations (comma separated) whose members will have access | `nil` |
+| `concourse.githubAuth.team` | GitHub teams (comma separated) whose members will have access | `nil` |
+| `concourse.githubAuth.user` | GitHub users (comma separated) to permit access | `nil` |
+| `concourse.githubAuth.authUrl` | Override default endpoint AuthURL for Github Enterprise | `nil` |
+| `concourse.githubAuth.tokenUrl` | Override default endpoint TokenURL for Github Enterprise | `nil` |
+| `concourse.githubAuth.apiUrl` | Override default API endpoint URL for Github Enterprise | `nil` |
+| `concourse.gitlabAuth.enabled` | Enable Gitlab auth for the "main" Concourse team| `false` |
+| `concourse.gitlabAuth.group` | GitLab groups (comma separated) whose members will have access | `nil` |
+| `concourse.gitlabAuth.authUrl` | Endpoint AuthURL for GitLab server | `nil` |
+| `concourse.gitlabAuth.tokenUrl` | Endpoint TokenURL for GitLab server | `nil` |
+| `concourse.gitlabAuth.apiUrl` | API endpoint URL for GitLab server | `nil` |
+| `concourse.genericOauth.enabled` | Enable generic OAuth for the "main" Concourse team| `false` |
+| `concourse.genericOauth.displayName` | Name for this auth method on the web UI | `nil` |
+| `concourse.genericOauth.authUrl` | Generic OAuth provider AuthURL endpoint | `nil` |
+| `concourse.genericOauth.authUrlParam` | Parameters (comma separated) to pass to the authentication server AuthURL | `nil` |
+| `concourse.genericOauth.scope` | Optional scope required to authorize user | `nil` |
+| `concourse.genericOauth.tokenUrl` | Generic OAuth provider TokenURL endpoint | `nil` |
+| `web.nameOverride` | Override the Concourse Web components name | `nil` |
 | `web.replicas` | Number of Concourse Web replicas | `1` |
 | `web.resources` | Concourse Web resource requests and limits | `{requests: {cpu: "100m", memory: "128Mi"}}` |
-| `web.service.type` | Concourse Web service type | `NodePort` |
-| `web.service.annotations` | Concourse Web Service annotations | `{}` |
+| `web.additionalAffinities` | Additional affinities to apply to web pods. E.g: node affinity | `{}` |
+| `web.tolerations` | Tolerations for the web nodes | `[]` |
+| `web.service.type` | Concourse Web service type | `ClusterIP` |
+| `web.service.annotations` | Concourse Web Service annotations | `nil` |
+| `web.service.atcNodePort` | Sets the nodePort for atc when using `NodePort` | `nil` |
+| `web.service.tsaNodePort` | Sets the nodePort for tsa when using `NodePort` | `nil` |
 | `web.ingress.enabled` | Enable Concourse Web Ingress | `false` |
 | `web.ingress.annotations` | Concourse Web Ingress annotations | `{}` |
 | `web.ingress.hosts` | Concourse Web Ingress Hostnames | `[]` |
 | `web.ingress.tls` | Concourse Web Ingress TLS configuration | `[]` |
-| `web.additionalAffinities` | Additional affinities to apply to web pods. E.g: node affinity | `nil` |
 | `web.metrics.prometheus.enabled` | Enable Prometheus metrics exporter | `false` |
 | `web.metrics.prometheus.port` | Port for exporting Prometeus metrics | `9391` |
-| `worker.nameOverride` | Override the Concourse Worker components name| `worker` |
+| `worker.nameOverride` | Override the Concourse Worker components name | `nil` |
 | `worker.replicas` | Number of Concourse Worker replicas | `2` |
 | `worker.minAvailable` | Minimum number of workers available after an eviction | `1` |
 | `worker.resources` | Concourse Worker resource requests and limits | `{requests: {cpu: "100m", memory: "512Mi"}}` |
-| `worker.additionalAffinities` | Additional affinities to apply to worker pods. E.g: node affinity | `nil` |
+| `worker.env` | Configure additional environment variables for the worker container(s) | `[]` |
+| `worker.anotations` | Annotations to be added to the worker pods | `{}` |
+| `worker.additionalAffinities` | Additional affinities to apply to worker pods. E.g: node affinity | `{}` |
+| `worker.tolerations` | Tolerations for the worker nodes | `[]` |
 | `worker.terminationGracePeriodSeconds` | Upper bound for graceful shutdown to allow the worker to drain its tasks | `60` |
 | `worker.fatalErrors` | Newline delimited strings which, when logged, should trigger a restart of the worker | *See [values.yaml](values.yaml)* |
 | `worker.updateStrategy` | `OnDelete` or `RollingUpdate` (requires Kubernetes >= 1.7) | `RollingUpdate` |
 | `worker.podManagementPolicy` | `OrderedReady` or `Parallel` (requires Kubernetes >= 1.7) | `Parallel` |
 | `persistence.enabled` | Enable Concourse persistence using Persistent Volume Claims | `true` |
-| `persistence.worker.class` | Concourse Worker Persistent Volume Storage Class | `generic` |
+| `persistence.worker.storageClass` | Concourse Worker Persistent Volume Storage Class | `generic` |
 | `persistence.worker.accessMode` | Concourse Worker Persistent Volume Access Mode | `ReadWriteOnce` |
 | `persistence.worker.size` | Concourse Worker Persistent Volume Storage Size | `20Gi` |
 | `postgresql.enabled` | Enable PostgreSQL as a chart dependency | `true` |
-| `postgresql.uri` | PostgreSQL connection URI | `nil` |
 | `postgresql.postgresUser` | PostgreSQL User to create | `concourse` |
 | `postgresql.postgresPassword` | PostgreSQL Password for the new user | `concourse` |
 | `postgresql.postgresDatabase` | PostgreSQL Database to create | `concourse` |
 | `postgresql.persistence.enabled` | Enable PostgreSQL persistence using Persistent Volume Claims | `true` |
-| `credentialManager.enabled` | Enable Credential Manager | `false` |
+| `credentialManager.kubernetes.enabled` | Enable Kubernetes Secrets Credential Manager | `true` |
+| `credentialManager.kubernetes.namespacePrefix` | Prefix for namespaces to look for secrets in | `.Release.Name-` |
+| `credentialManager.kubernetes.teams` | Teams to allow secret access when rbac is enabled | `["main"]` |
+| `credentialManager.vault.enabled` | Uuse Hashicorp Vault as a Credential Manager | `false` |
 | `credentialManager.vault.url` | Vault Server URL | `nil` |
 | `credentialManager.vault.pathPrefix` | Vault path to namespace secrets | `/concourse` |
 | `credentialManager.vault.caCert` | CA public certificate when using self-signed TLS with Vault | `nil` |
 | `credentialManager.vault.authBackend` | Vault Authentication Backend to use, leave blank when using clientToken | `nil` |
-| `credentialManager.vault.clientToken` | Vault periodic client token | `nil` |
-| `credentialManager.vault.appRoleId` | Vault AppRole RoleID | `nil` |
-| `credentialManager.vault.appRoleSecretId` | Vault AppRole SecretID | `nil` |
-| `credentialManager.vault.clientCert` | Vault Client Certificate | `nil` |
-| `credentialManager.vault.clientKey` | Vault Client Key | `nil` |
+| `rbac.create` | Enables creation of RBAC resources | `true` |
+| `rbac.apiVersion` | RBAC version | `v1beta1` |
+| `rbac.webServiceAccountName` | Name of the service account to use for web pods if `rbac.create` is `false` | `default` |
+| `rbac.workerServiceAccountName` | Name of the service account to use for workers if `rbac.create` is `false` | `default` |
+| `secrets.create` | Create the secret resource from the following values. *See [Secrets](#Secrets)* | `true` |
+| `secrets.hostKey` | Concourse Host Private Key | *See [values.yaml](values.yaml)* |
+| `secrets.hostKeyPub` | Concourse Host Public Key | *See [values.yaml](values.yaml)* |
+| `secrets.sessionSigningKey` | Concourse Session Signing Private Key | *See [values.yaml](values.yaml)* |
+| `secrets.workerKey` | Concourse Worker Private Key | *See [values.yaml](values.yaml)* |
+| `secrets.workerKeyPub` | Concourse Worker Public Key | *See [values.yaml](values.yaml)* |
+| `secrets.encryptionKey` | current encryption key | `nil` |
+| `secrets.oldEncryptionKey` | old encryption key, used for key rotation | `nil` |
+| `secrets.basicAuthUsername` | Concourse Basic Authentication Username | `concourse` |
+| `secrets.basicAuthPassword` | Concourse Basic Authentication Password | `concourse` |
+| `secrets.githubAuthClientId` | Application client ID for GitHub OAuth | `nil` |
+| `secrets.githubAuthClientSecret` | Application client secret for GitHub OAuth | `nil` |
+| `secrets.gitlabAuthClientId` | Application client ID for GitLab OAuth | `nil` |
+| `secrets.gitlabAuthClientSecret` | Application client secret for GitLab OAuth | `nil` |
+| `secrets.genericOauthClientId` | Application client ID for Generic OAuth | `nil` |
+| `secrets.genericOauthClientSecret` | Application client secret for Generic OAuth | `nil` |
+| `secrets.postgresqlUri` | PostgreSQL connection URI when `postgres.enabled` is `false` | `nil` |
+| `secrets.vaultCaCert` | CA certificate   use to verify the vault server SSL cert. | `nil` |
+| `secrets.vaultClientToken` | Vault periodic client token | `nil` |
+| `secrets.vaultAppRoleId` | Vault AppRole RoleID | `nil` |
+| `secrets.vaultAppRoleSecretId` | Vault AppRole SecretID | `nil` |
+| `secrets.vaultClientCert` | Vault Client Certificate | `nil` |
+| `secrets.vaultClientKey` | Vault Client Key | `nil` |
 
 Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`.
 
@@ -162,58 +184,43 @@ $ helm install --name my-release -f values.yaml stable/concourse
 
 > **Tip**: You can use the default [values.yaml](values.yaml)
 
-### SSH Keys
+### Secrets
 
-To run Concourse securely you'll need [3 private keys](https://concourse.ci/binaries.html#generating-keys). For your convenience, this chart provides some [default keys](concourse-keys), but it is recommended that you generate your own keys by running:
+For your convenience, this chart provides some default values for secrets, but it is recommended that you generate and manage these secrets outside the Helm chart. To do this, set `secrets.create` to `false`, create files for each secret value, and turn it all into a k8s secret. Be careful with introducing trailing newline characters; following the steps below ensures none will end up in your secrets. First, perform the following to create the manditory secret values:
 
 ```console
-$ mkdir -p concourse-keys
-$ ssh-keygen -t rsa -f concourse-keys/host_key -N '' -C concourse
-$ ssh-keygen -t rsa -f concourse-keys/session_signing_key -N '' -C concourse
-$ ssh-keygen -t rsa -f concourse-keys/worker_key -N '' -C concourse
+mkdir concourse-secrets
+cd concourse-secrets
+ssh-keygen -t rsa -f host-key  -N ''
+mv host-key.pub host-key-pub
+ssh-keygen -t rsa -f worker-key  -N ''
+mv worker-key.pub worker-key-pub
+ssh-keygen -t rsa -f session-signing-key  -N ''
+rm session-signing-key.pub
+printf "%s" "concourse" > basic-auth-username
+printf "%s" "$(openssl rand -base64 24)" > basic-auth-password
 ```
 
-And update the `values.yaml` file with the generated keys:
-
-```yaml
-## Configuration values for Concourse.
-## ref: https://concourse.ci/setting-up.html
-##
-concourse:
-  ## Concourse Host Keys.
-  ## ref: https://concourse.ci/binaries.html#generating-keys
-  ##
-  hostKey: |-
-    < Insert the contents of your concourse-keys/host_key file >
-
-  hostKeyPub: |-
-    < Insert the contents of your concourse-keys/host_key.pub file >
-
-  ## Concourse Session Signing Keys.
-  ## ref: https://concourse.ci/binaries.html#generating-keys
-  ##
-  sessionSigningKey: |-
-    < Insert the contents of your concourse-keys/session_signing_key file >
-
-  ## Concourse Worker Keys.
-  ## ref: https://concourse.ci/binaries.html#generating-keys
-  ##
-  workerKey: |-
-    < Insert the contents of your concourse-keys/worker_key file >
+You'll also need to create/copy secret values for optional features. See [templates/secrets.yaml](templates/secrets.yaml) for possible values. In the example below, we are not using the [PostgreSQL](#PostgreSQL) chart dependency, and so we must set a `postgresql-uri` secret.
 
-  workerKeyPub: |-
-    < Insert the contents of your concourse-keys/worker_key.pub file >
+```console
+# copy a posgres URI to clipboard and paste it to file
+printf "%s" "$(pbpaste)" > postgresql-uri
+# copy Github client id and secrets to clipboard and paste to files
+printf "%s" "$(pbpaste)" > github-auth-client-id
+printf "%s" "$(pbpaste)" > github-auth-client-secret
+# set an encryption key for DB encryption at rest
+printf "%s" "$(openssl rand -base64 24)" > encryption-key
 ```
 
-Alternatively, you can provide those keys to `helm install` via parameters:
-
+Then create a secret called [release-name]-concourse from all the secret value files in the current folder:
 
 ```console
-$ helm install --name my-release \
-  --set "concourse.hostKey=`cat concourse-keys/host_key`,concourse.hostKeyPub=`cat concourse-keys/host_key.pub`,concourse.sessionSigningKey=`cat concourse-keys/session_signing_key`,concourse.workerKey=`cat concourse-keys/worker_key`,concourse.workerKeyPub=`cat concourse-keys/worker_key.pub`" \
-  stable/concourse
+kubectl create secret generic my-release-concourse --from-file=.
 ```
 
+Make sure you clean up after yourself.
+
 ### Persistence
 
 This chart mounts a Persistent Volume volume for each Concourse Worker. The volume is created using dynamic volume provisioning. If you want to disable it or change the persistence properties, update the `persistence` section of your custom `values.yaml` file:
@@ -243,7 +250,7 @@ persistence:
     size: "20Gi"
 ```
 
-It is highly recommended to use Persistent Volumes for Concourse Workers; otherwise container images managed by the Worker is stored in an `emptyDir` volume on the node's disk. This will interfere with k8s ImageGC and the node's disk will fill up as a result. This will be fixed in a future release of k8s: https://github.com/kubernetes/kubernetes/pull/57020
+It is highly recommended to use Persistent Volumes for Concourse Workers; otherwise the container images managed by the Worker are stored in an `emptyDir` volume on the node's disk. This will interfere with k8s ImageGC and the node's disk will fill up as a result. This will be fixed in a future release of k8s: https://github.com/kubernetes/kubernetes/pull/57020
 
 ### Ingress TLS
 
@@ -284,51 +291,87 @@ web:
           - concourse.domain.com
 ```
 
-
 ### PostgreSQL
 
-By default, this chart will use a PostgreSQL database deployed as a chart dependency. You can also bring your own PostgreSQL. To do so, set the following in your custom `values.yaml` file:
+By default, this chart will use a PostgreSQL database deployed as a chart dependency, with default values for username, password, and database name. These can be modified by setting the `postgresql.*` values.
 
-```yaml
-## Configuration values for the postgresql dependency.
-## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
-##
-postgresql:
+You can also bring your own PostgreSQL. To do so, set `postgresql.enabled` to false. You'll then need to specify the full uri to the database, including the username and password, e.g. `postgres://concourse:changeme@my-postgres.com:5432/concourse?sslmode=require`. You can do this one of two ways:
 
-  ## Use the PostgreSQL chart dependency.
-  ## Set to false if bringing your own PostgreSQL.
-  ##
-  enabled: false
+1. Set `secrets.postgresqlUri` in your values
 
-  ## If bringing your own PostgreSQL, the full uri to use
-  ## e.g. postgres://concourse:changeme@my-postgres.com:5432/concourse?sslmode=require
-  ##
-  uri: postgres://concourse:changeme@my-postgres.com:5432/concourse?sslmode=require
+2. Set `postgresql-uri` in your release's secrets as described in [Secrets](#Secrets).
 
-```
+The only way to completely avoid putting secrets in Helm is to bring your own PostgreSQL, and use option 2 above.
 
 ### Credential Management
 
-By default, this chart will not use a [Credential Manager](https://concourse.ci/creds.html).
+Pipelines ususally need credentials to do things. Concourse supports the use of a [Credential Manager](https://concourse.ci/creds.html) so your pipelines can contain references to secrets instead of the actual secret values. You can't use more than one credential manager at a time.
+
+#### Kubernetes Secrets
+
+By default, this chart will use Kubernetes Secrets as a credential manager. For a given Concourse *team*, a pipeline will look for secrets in a namespace named `[namespacePrefix][teamName]`. The namespace prefix is the release name hyphen by default, and can be overridden with the value `credentialManager.kubernetes.namespacePrefix`. The service account used by Concourse must have `get` access to secrets in that namespace. When `rbac.create` is true, this access is granted for each team listed under `credentialManager.kubernetes.teams`.
+
+Here are some examples of the lookup heuristics, given release name `concourse`:
+
+In team `accounting-dev`, pipeline `my-app`; the expression `((api-key))` resolves to:
+
+1. the secret value in namespace: `concourse-accounting-dev` secret: `my-app.api-key`, key: `value`
+2. and if not found, is the value in namespace: `concourse-accounting-dev` secret: `api-key`, key: `value`
+
+In team accounting-dev, pipeline `my-app`, the expression `((common-secrets.api-key))` resolves to:
+
+1. the secret value in namespace: `concourse-accounting-dev` secret: `my-app.common-secrets`, key: `api-key`
+2. and if not found, is the value in namespace: `concourse-accounting-dev` secret: `common-secrets`, key: `api-key`
+
+Be mindful of your team and pipeline names, to ensure they can be used in namespace and secret names, e.g. no underscores.
+
+To test, create a secret in namespace `concourse-main`:
+
+```console
+kubectl create secret generic hello --from-literal 'value=Hello world!'
+```
+
+Then `fly set-pipeline` with the following pipeline, and trigger it:
+
+```yaml
+jobs:
+- name: hello-world
+  plan:
+  - task: say-hello
+    config:
+      platform: linux
+      image_resource:
+        type: docker-image
+        source: {repository: alpine}
+      params:
+        HELLO: ((hello))
+      run:
+        path: /bin/sh
+        args: ["-c", "echo $HELLO"]
+```
+
+#### Hashicorp Vault
+
+To use Vault, set `credentialManager.kubernetes.enabled` to false, and set the following values:
+
 
 ```yaml
 ## Configuration values for the Credential Manager.
 ## ref: https://concourse.ci/creds.html
 ##
 credentialManager:
-  ## Enable Credential Manager using below configuration.
-  ##
-  enabled: true
 
-  ## use Hashicorp Vault for Credential Manager.
-  ##
   vault:
+    ## Use Hashicorp Vault for the Credential Manager.
+    ##
+    enabled: false
+
     ## URL pointing to vault addr (i.e. http://vault:8200).
     ##
-    url: http://vault:8200
+    # url:
 
-    ## initial periodic token issued for concourse
-    ## ref: https://www.vaultproject.io/docs/concepts/tokens.html#periodic-tokens
+    ## vault path under which to namespace credential lookup, defaults to /concourse.
     ##
-    clientToken: PERIODIC_VAULT_TOKEN
+    # pathPrefix:
+
 ```
diff --git a/stable/concourse/concourse-keys/host_key b/stable/concourse/concourse-keys/host_key
deleted file mode 100644
index ed96e3f27..000000000
--- a/stable/concourse/concourse-keys/host_key
+++ /dev/null
@@ -1,27 +0,0 @@
------BEGIN RSA PRIVATE KEY-----
-MIIEogIBAAKCAQEA2AUPXxuiDC/qrBWjIdT5fvNcMlMEYpR3X4SLQIgLC1ULDsCO
-fleKZ+Wi4RzwbkUKiKmJm5GeyNVVCDdfvdD1Sd1+5faqmp2/OQBzLS7o8NY/btMw
-8h9lx4KVJaJJ1EM1EiyGY41Nx591KP14pBfr0/NdOIrDu2JvF6e7CHEbrzkN57kb
-BVQkaIMaS01Rw/5Oe68GFalli2ii8L8dNWVVzquBh5PwVWimvTgwv3TYG2TH8L1V
-V7n+/zRRpkjMl2+PUouGqD+Bp+4wF+hp4AW5v24CqjtLJEMv4IEJv2FRfrOauBIZ
-XjAS1SSg9VaTOS3iwxaYrv8uG1XfMFHICvkEPQIDAQABAoIBAG87W8jrX6vK2Jm3
-ooJ/OeFmymiXWsCwFi+2/kVCR/2T0tfLyxO/W+NX2WD1F9CP+HaaZeMXPp3HS7up
-V8FT4ZohVYBwXTS0WYyucKApcYThrVQRpzhldnEfClGQmVeVK7Sp/KEyV4Sc1SVA
-L2i/cI142N2Ohm7spquVkLcuFsVINzZ0fXCv25dTqbkEgjTJzNdBzyFXvc4z0Mt9
-gW14M7mz+YKYOfsCxIEm438fC9b16C96yIFBdN+/jaP8pmb2RoIE2D0F8bj5K1hR
-YyGFKMOU4e6cYq59iWfubKuu2WNJEBk/5aO7x7Xu2S0k8wIYlwxFuu4LfR2Kvizu
-+mFVf3kCgYEA9e0+40tJGpOPM8hAB3DwXjYc8lCuyYf3z30T3RqVNCUVSWnlaj/s
-3ENi6+Ng3u+Zs8cR2CFou+jAClTyWLuSnI9yACD0eyW9n4bzYMUbgdC6vneLjpzx
-wWR9Xv5RmZVly7xWuqcgEeEf8RNcYI3oXby0laF3EObvuAx/4ETIkFcCgYEA4N42
-w1UEWGopWBIIXYHkEPHQuF0SxR2CZyh9ExTeSxFphyibkcHRjDW+t91ZLnSm5k1N
-TOdYuc0ApBV3U+TexeFvDI94L/Oze6Ht5MatRQz8kRwMFGJL3TrpbgTmWdfG05Ad
-oiScJzwY16oJXnKusxik7V+gCCNNE0/2UuMnY4sCgYAEf82pvOPef5qcGOrK+A79
-ukG3UTCRcVJgUmp9nhHivVbxW+WdlwPPV9BEfol0KrAGMPsrmBjhbzWsOregVfYt
-tRYh2HiAlEUu2Po06AZDzrzL5UYBWu+1WRBOH5sAk1IkcxKnIY2dph++elszTQVW
-SbCIGEckYQU7ucbRJJECywKBgBb4vHFx8vKxTa3wkagzx7+vZFohL/SxEgxFx5k2
-bYsPqU8kZ9gZC7YeG3CfDShAxHgMd5QeoiLA/YrFop4QaG2gnP6UfXuwkqpTnYDc
-hwDh1b9hNR6z9/oOtaAGoh2VfHtKYqyYvtcHPaZyeWiLoKstHlQdi7SpHouVhJ1t
-FS4HAoGAGy+56+zvdROjJy9A2Mn/4BvWrsu4RSQILBJ6Hb4TpF46p2fn0rwqyhOj
-Occs+xkdEsI9w5phXzIEeOq2LqvWHDPxtdLpxOrrmx4AftAWdM8S1+OqTpzHihK1
-y1ZOrWfvON+XjWFFAEej/CpQZkNUkTzjTtSC0dnfAveZlasQHdI=
------END RSA PRIVATE KEY-----
diff --git a/stable/concourse/concourse-keys/host_key.pub b/stable/concourse/concourse-keys/host_key.pub
deleted file mode 100644
index cc872a7da..000000000
--- a/stable/concourse/concourse-keys/host_key.pub
+++ /dev/null
@@ -1 +0,0 @@
-ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYBQ9fG6IML+qsFaMh1Pl+81wyUwRilHdfhItAiAsLVQsOwI5+V4pn5aLhHPBuRQqIqYmbkZ7I1VUIN1+90PVJ3X7l9qqanb85AHMtLujw1j9u0zDyH2XHgpUloknUQzUSLIZjjU3Hn3Uo/XikF+vT8104isO7Ym8Xp7sIcRuvOQ3nuRsFVCRogxpLTVHD/k57rwYVqWWLaKLwvx01ZVXOq4GHk/BVaKa9ODC/dNgbZMfwvVVXuf7/NFGmSMyXb49Si4aoP4Gn7jAX6GngBbm/bgKqO0skQy/ggQm/YVF+s5q4EhleMBLVJKD1VpM5LeLDFpiu/y4bVd8wUcgK+QQ9 Concourse
diff --git a/stable/concourse/concourse-keys/session_signing_key b/stable/concourse/concourse-keys/session_signing_key
deleted file mode 100644
index 7f15d0283..000000000
--- a/stable/concourse/concourse-keys/session_signing_key
+++ /dev/null
@@ -1,27 +0,0 @@
------BEGIN RSA PRIVATE KEY-----
-MIIEowIBAAKCAQEAwLql/rUIaI+PX7Tl3FWcTee4sQf8/daakALXx955tPwkhqlY
-e4T2V84p/ylFvNWpM4vfcMYKfMY0JLKgAgBvJhCytSkDBhTBoWmN6yE0AB11P9En
-lIZRBWNYqaC2cSge2ZD8qOSnwfFhnQAW8+7pE+ElJAVh7dtdF3A478H50lIigq8I
-zMWp2EGJpFC7/Uu36oIL/03MNGCmrH1jvtTuJiAMQUZYyL1ReBkvvHOzw9i4HXPy
-SMVtcllm4NBs2aVPtwhr2kwSkLt8t1bPdRn6OIyEAw5WktzAKaiZnkTvj6g3xzdp
-zKcrdlBr9aznlNvoSinBUfvtwyFmvFN1HHbA9wIDAQABAoIBAE7G/DrUfI9gvtX7
-90jMpYsigFe8UCjho2PiBZlo0o6r0bJJXiV+/8J8PqZRlHPPUc4EClzqVjcSPRYS
-/VxUGRqSELoD/Xxq14rGvn+xnrO9VsOzFl6bWFq/dOpBCtHN+G4t2VifvgKES8YE
-11z19sdta+UBXjn/RFnkQSGfRCI3QqTaYvjxevt0uWlyPmqkFPQQw8bvHIXzoB+B
-rzeiMa++nMvbX5pAH9XA0BvhyuH3fHidTUwiVBpkMcpLWtjP0A0JTsecDdbinDDq
-un2EIo8zMWRwKQN/JnUxsi8AUEigBTCUqeDgREXtW62uvFkSpcVMXwmVityLYIVy
-qnVLUCECgYEA6IwXkP1qnSfcNeoVI/ypDuz1/kdqcjSPhLYe+jdiLLoFkMW9AlDm
-lzwNaWlTFD9ygo+NjJCo63/A8HCm55sajws5hZ6r20vdZcKFMk9h0qF5oVA7lkQ2
-gvG2WaznuU7KkqhfP+pXhiLgZKoJkst/+g7r6uHpredwDY6hxeBK4vsCgYEA1CqH
-8ywC5qUo/36kQg/TU2adN/YEHdJAAbU23EVrGQSVmnXW08H2NLFk0tsxrwoNnbgp
-PIk2J7BimbJvbND17ibr4GAklDTsR8aJkDl+0JgNCAK9N07qVt1s7FXzhg95jUL9
-EQW55z60GAJpecqNwA4Jsa8P852N0355Obp92TUCgYBkOBvf7JcJ66fHxH4f6D+j
-oxPQ5k5Fsck4VJS9GSlCRVkor09ptBvsiYDuMOoRC9b51YwXTDDAbWplNOd5YSrt
-AtVjdKJz/BoKRO7KY9Owxs54au+DLxqfDDSeKRokjoRW+CE0lnXp5RX3zCAcF3+r
-8MpTi9D9lYSBEzs84BDmCQKBgQCMcH6/K3HcJJVn0fd+tyUGftUw9sswxjySJNbk
-pZrH263/qWMDls+Xf5kire9MU1ZCAWZiaN0NFoed/2wcVpGEDAV0548u/30r4bKr
-YjOcdhmiJNYFJ1qdF0MDib2CDvpB1IbZXrX46RujDO2urbJ435HxKNVhR/had8xc
-tyKYxQKBgCVDhN0MhnlUQJVZfX42APmF4gQg0r3sfL/NGXjEjMIKKFe5a88eZVHr
-L8x1+dp0q7czC8a/l1DUuiwDKl8OEpxLsGCq/J/wAfrSMPifu6EUlbUwlJOPdgha
-+p/KFAelHXJ2w/8yackAcarh35VP7ixhuvxswHNdgvfsBTFcjn30
------END RSA PRIVATE KEY-----
diff --git a/stable/concourse/concourse-keys/worker_key b/stable/concourse/concourse-keys/worker_key
deleted file mode 100644
index d01ff877f..000000000
--- a/stable/concourse/concourse-keys/worker_key
+++ /dev/null
@@ -1,27 +0,0 @@
------BEGIN RSA PRIVATE KEY-----
-MIIEpAIBAAKCAQEAuPehUmBXAQCoA7TLAQCYhf+vzcZVyj+VGXnMhLHnWLk7dRjo
-CU8GgNamdS5h7G3ywxOvKA3YjOLr8XyOMLS4c+e8N7tIzlMWdiXhe0lcBH9Z1ai5
-+Bof3/BlDUBksiKdc1A+QcfX6tDwMkOO5re1H4vOK3H/Cype58wCB03HYNgb05ED
-fW1Bj2qvz29VtmyjwEMuDs100iMqwCfPUx9oxXmmX8sUBRmw/Y1Rx/8pdKIjKw3m
-kWIHHBOSCPimO1qC47Aa8v/UH9hERCykyuFHiBiKlnIvZWm9bYvhsRTz4gt5KzRY
-6OI0oVeHlLOHDSK48Da8VWij15lOqO2Nx6WssQIDAQABAoIBADET22UNFOi6MNpS
-5S5N5ypezlnOD0NLnZcV3zMyNQ0wkNsgEakuo64Zxi7/cJIYFjq2hVoeWl//cdUw
-VFYODYcLbMBo3AeKukH9CRf6PgUfeUmcrENtQxnbIiTi+hTd5GMNXod7rAmtCJ59
-mHQVOGS3ZqvWYnKm+mmMktk3RPinynX/A4y3WHPacuAS58HM09Ck43WcHMxbGpsL
-/gZpICyFYZ2DviM+AHyWGcmw7LJrpC0QHo6+BAFMs4xlUecNgVIFUpfOoAcfsdtG
-K9j4AbuZ47iFisbay+1pyg/7O5eRTdGVQRtc7PBMOjea5jGsfmlDmdn1ZS50ykun
-ANfoQ5UCgYEA9Ak73PRy9nLlRkt4OBCF/4fwThUCMedsnWaVjQBMJYim4FB2ivF5
-cKdWt3y/RZI85KKYu0EXhLEoSIEAfz057R8t3QdVK4tZx6B47UFjBjCYeVMtwHDQ
-prxQiOPHIHCplBNFuGzA5VXL9gQLRD+ek0uOy2GJJ0Wu1xyeouI+SW8CgYEAwgkO
-TOtOogqmcAALjWgeeQiZetflSKbJlpQNhmCPAMm0SFI8eF4SpRXLzd41VC2mLIwT
-L3tjc7/8ocXoElFM4L0fo9Lx/SHFH4JEn5FT0PXPmvsF2JRhsXJFLJSihxF/91Xs
-2aBcQILPFzLcrI6OFUakNwGTU/CIxpkzRvQrG98CgYEAzNVnUuo4CNadzagRK3Xr
-E3Yl5VRK+FpY17FAfA6w25xc/dFr/un61e0Po4no/ltmEz7LVfmn5O/ScTEemq5o
-jbjrBShfe+JGpIH0nqiQlqR5hvSjZXEMIbfVHWGbRYZrQGgA0HEwZA7k2QXB8zI3
-R0lXfSzMM5OQ0uwp12xxfa8CgYBHILq1R6zTicPpWprhg0FobNaWSX4rW7iaEjvC
-/rJtP4Nu33Z7SUDcc1j6ZnJ2ISXBPrfpt/mE/OPHCZ1A2bysxadLjpBWkoKIQmCV
-fdiTyQgJb+t8sSf+vDzPUs0hZjDaogzo2ff3TfxMLMDoIHnFItgfsdwn8QyygIZj
-hC4pUQKBgQDqsxnkI6yXFE5gshnW7H8zqKNlzKd/dZEL6e+lRz4R3UY/KcEkRAfq
-Yi3cwo9fE3U3kSmpl5MQwUjWm/BZ7JyueoY/4ndwaFPgc34IKsgJ0wau9pZiQAB1
-DxpOSF+BR71Jx3sxvIdCODNTtm645j5yrZVnJAuMPofo5XFmunDoJA==
------END RSA PRIVATE KEY-----
diff --git a/stable/concourse/concourse-keys/worker_key.pub b/stable/concourse/concourse-keys/worker_key.pub
deleted file mode 100644
index c4b7d3638..000000000
--- a/stable/concourse/concourse-keys/worker_key.pub
+++ /dev/null
@@ -1 +0,0 @@
-ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC496FSYFcBAKgDtMsBAJiF/6/NxlXKP5UZecyEsedYuTt1GOgJTwaA1qZ1LmHsbfLDE68oDdiM4uvxfI4wtLhz57w3u0jOUxZ2JeF7SVwEf1nVqLn4Gh/f8GUNQGSyIp1zUD5Bx9fq0PAyQ47mt7Ufi84rcf8LKl7nzAIHTcdg2BvTkQN9bUGPaq/Pb1W2bKPAQy4OzXTSIyrAJ89TH2jFeaZfyxQFGbD9jVHH/yl0oiMrDeaRYgccE5II+KY7WoLjsBry/9Qf2ERELKTK4UeIGIqWci9lab1ti+GxFPPiC3krNFjo4jShV4eUs4cNIrjwNrxVaKPXmU6o7Y3Hpayx Concourse
diff --git a/stable/concourse/requirements.lock b/stable/concourse/requirements.lock
index 6b456d9e8..08b5e1195 100644
--- a/stable/concourse/requirements.lock
+++ b/stable/concourse/requirements.lock
@@ -1,6 +1,6 @@
 dependencies:
 - name: postgresql
   repository: https://kubernetes-charts.storage.googleapis.com/
-  version: 0.8.3
-digest: sha256:7669c2dcb2741e52c61240019803c5a8a0061e51195060b2bd3b8176648faa63
-generated: 2017-10-03T23:29:47.122452389-04:00
+  version: 0.8.11
+digest: sha256:4b3c584f2b741c8b7aee624b8c9af526afb7a7d77110481e74e501e0d6d5070a
+generated: 2018-02-09T02:54:07.639395192-08:00
diff --git a/stable/concourse/requirements.yaml b/stable/concourse/requirements.yaml
index cfb8f3279..df39ccf08 100644
--- a/stable/concourse/requirements.yaml
+++ b/stable/concourse/requirements.yaml
@@ -1,5 +1,5 @@
 dependencies:
 - name: postgresql
-  version: 0.8.3
+  version: 0.8.11
   repository: https://kubernetes-charts.storage.googleapis.com/
   condition: postgresql.enabled
diff --git a/stable/concourse/templates/NOTES.txt b/stable/concourse/templates/NOTES.txt
index 8ef8bd56a..2f8f4df03 100644
--- a/stable/concourse/templates/NOTES.txt
+++ b/stable/concourse/templates/NOTES.txt
@@ -1,5 +1,5 @@
 
-1. Concourse can be accessed:
+* Concourse can be accessed:
 
   * Within your cluster, at the following DNS name at port {{ .Values.concourse.atcPort }}:
 
@@ -33,14 +33,23 @@
     kubectl port-forward --namespace {{ .Release.Namespace }} $POD_NAME 8080:{{ .Values.concourse.atcPort }}
     {{- end }}
   {{- end }}
-
-2. Login with the following credentials
-
-  Username: {{ .Values.concourse.username }}
-  Password: {{ .Values.concourse.password }}
-
-3. If this is your first time using Concourse, follow the tutorial at https://concourse.ci/hello-world.html
+{{- if .Values.concourse.basicAuth.enabled }}
+
+* Login with the following credentials
+  {{ if .Values.secrets.create }}
+  Username: {{ .Values.secrets.basicAuthUsername }}
+  Password: {{ .Values.secrets.basicAuthPassword }}
+  {{ else }}
+  Username: see basic-auth-username in secret {{ template "concourse.concourse.fullname" . }}
+  Password: see basic-auth-password in secret {{ template "concourse.concourse.fullname" . }}
+  {{ end }}
+{{- end }}
+* If this is your first time using Concourse, follow the tutorial at https://concourse.ci/hello-world.html
 {{- if contains "naive" .Values.concourse.baggageclaimDriver }}
 
-4. ***WARNING*** You are using the "naive" baggage claim driver, which is also the default value for this chart. This is the default for compatibility reasons, but is very space inefficient, and should be changed to either "btrfs" or "overlay" depending on that filesystem's support in the Linux kernel your cluster is using. Please see https://github.com/concourse/concourse/issues/1230 for background.
+*******************
+******WARNING******
+*******************
+
+You are using the "naive" baggage claim driver, which is also the default value for this chart. This is the default for compatability reasons, but is very space inefficient, and should be changed to either "btrfs" (recommended) or "overlay" depending on that filesystem's support in the Linux kernel your cluster is using. Please see https://github.com/concourse/concourse/issues/1230 and https://github.com/concourse/concourse/issues/1966 for background.
 {{- end }}
diff --git a/stable/concourse/templates/_helpers.tpl b/stable/concourse/templates/_helpers.tpl
index 8724ee0bc..f1fc5572c 100644
--- a/stable/concourse/templates/_helpers.tpl
+++ b/stable/concourse/templates/_helpers.tpl
@@ -33,3 +33,15 @@ We truncate at 63 chars because some Kubernetes name fields are limited to this
 {{- $name := default "postgresql" .Values.postgresql.nameOverride -}}
 {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
 {{- end -}}
+
+{{- define "concourse.secret.required" -}}
+{{- if .is }}
+{{- required (printf "secrets.%s is required because secrets.create is true and %s is true" .key .is) (index .root.Values.secrets .key ) | b64enc | quote }}
+{{- else -}}
+{{- required (printf "secrets.%s is required because secrets.create is true and %s isnt true" .key .isnt) (index .root.Values.secrets .key ) | b64enc | quote }}
+{{- end -}}
+{{- end -}}
+
+{{- define "concourse.namespacePrefix" -}}
+{{- default (printf "%s-" .Release.Name ) .Values.credentialManager.kubernetes.namespacePrefix -}}
+{{- end -}}
\ No newline at end of file
diff --git a/stable/concourse/templates/configmap.yaml b/stable/concourse/templates/configmap.yaml
deleted file mode 100644
index 1ed3b917d..000000000
--- a/stable/concourse/templates/configmap.yaml
+++ /dev/null
@@ -1,46 +0,0 @@
-apiVersion: v1
-kind: ConfigMap
-metadata:
-  name: {{ template "concourse.concourse.fullname" . }}
-  labels:
-    app: {{ template "concourse.concourse.fullname" . }}
-    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
-    release: "{{ .Release.Name }}"
-    heritage: "{{ .Release.Service }}"
-data:
-  postgresql-host: {{ template "concourse.postgresql.fullname" . }}
-  postgresql-database: {{ .Values.postgresql.postgresDatabase | quote }}
-  concourse-atc-port: {{ .Values.concourse.atcPort | quote }}
-  concourse-tsa-host: {{ template "concourse.web.fullname" . }}
-  concourse-tsa-port: {{ .Values.concourse.tsaPort | quote }}
-  concourse-allow-self-signed-certificates: {{ .Values.concourse.allowSelfSignedCertificates | quote }}
-  concourse-auth-duration: {{ .Values.concourse.authDuration | quote }}
-  concourse-resource-checking-interval: {{ .Values.concourse.resourceCheckingInterval | quote }}
-  concourse-old-resource-grace-period: {{ .Values.concourse.oldResourceGracePeriod | quote }}
-  concourse-resource-cache-cleanup-interval: {{ .Values.concourse.resourceCacheCleanupInterval | quote }}
-  concourse-external-url: {{ default "" .Values.concourse.externalURL | quote }}
-  concourse-baggageclaim-driver: {{ .Values.concourse.baggageclaimDriver | quote }}
-  container-placement-strategy: {{ .Values.concourse.containerPlacementStrategy | quote }}
-  garden-docker-registry: {{ default "" .Values.concourse.dockerRegistry | quote }}
-  garden-insecure-docker-registry: {{ default "" .Values.concourse.insecureDockerRegistry | quote }}
-  github-auth-organization: {{ default "" .Values.concourse.githubAuthOrganization | quote }}
-  github-auth-team: {{ default "" .Values.concourse.githubAuthTeam | quote }}
-  github-auth-user: {{ default "" .Values.concourse.githubAuthUser | quote }}
-  github-auth-auth-url: {{ default "" .Values.concourse.githubAuthAuthUrl | quote }}
-  github-auth-token-url: {{ default "" .Values.concourse.githubAuthTokenUrl | quote }}
-  github-auth-api-url: {{ default "" .Values.concourse.githubAuthApiUrl | quote }}
-  gitlab-auth-group: {{ default "" .Values.concourse.gitlabAuthGroup | quote }}
-  gitlab-auth-auth-url: {{ default "" .Values.concourse.gitlabAuthAuthUrl | quote }}
-  gitlab-auth-token-url: {{ default "" .Values.concourse.gitlabAuthTokenUrl | quote }}
-  gitlab-auth-api-url: {{ default "" .Values.concourse.gitlabAuthApiUrl | quote }}
-  generic-oauth-display-name: {{ default "" .Values.concourse.genericOauthDisplayName | quote }}
-  generic-oauth-auth-url: {{ default "" .Values.concourse.genericOauthAuthUrl | quote }}
-  generic-oauth-auth-url-param: {{ default "" .Values.concourse.genericOauthAuthUrlParam | quote }}
-  generic-oauth-scope: {{ default "" .Values.concourse.genericOauthScope | quote }}
-  generic-oauth-token-url: {{ default "" .Values.concourse.genericOauthTokenUrl | quote }}
-  worker-fatal-errors: {{ default "" .Values.worker.fatalErrors | quote }}
-  {{ if .Values.credentialManager.vault }}
-  vault-url: {{ default "" .Values.credentialManager.vault.url | quote }}
-  vault-path-prefix: {{ default "/concourse" .Values.credentialManager.vault.pathPrefix | quote }}
-  vault-auth-backend: {{ default "" .Values.credentialManager.vault.authBackend | quote }}
-  {{ end }}
diff --git a/stable/concourse/templates/namespace.yaml b/stable/concourse/templates/namespace.yaml
new file mode 100644
index 000000000..5418072f5
--- /dev/null
+++ b/stable/concourse/templates/namespace.yaml
@@ -0,0 +1,14 @@
+{{- if .Values.credentialManager.kubernetes.enabled -}}
+{{- range .Values.credentialManager.kubernetes.teams }}
+---
+apiVersion: v1
+kind: Namespace
+metadata:
+  name: {{ template "concourse.namespacePrefix" $ }}{{ . }}
+  labels:
+    app: {{ template "concourse.concourse.fullname" $ }}
+    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
+    release: "{{ $.Release.Name }}"
+    heritage: "{{ $.Release.Service }}"
+{{- end }}
+{{- end -}}
\ No newline at end of file
diff --git a/stable/concourse/templates/secrets.yaml b/stable/concourse/templates/secrets.yaml
index 4d4101841..e6658d3e1 100644
--- a/stable/concourse/templates/secrets.yaml
+++ b/stable/concourse/templates/secrets.yaml
@@ -1,3 +1,4 @@
+{{- if .Values.secrets.create }}
 apiVersion: v1
 kind: Secret
 metadata:
@@ -9,31 +10,40 @@ metadata:
     heritage: "{{ .Release.Service }}"
 type: Opaque
 data:
-  {{ if .Values.postgresql.enabled }}
-  postgresql-user: {{ .Values.postgresql.postgresUser | b64enc | quote }}
-  {{ else }}
-  postgresql-uri: {{ .Values.postgresql.uri | b64enc | quote }}
-  {{ end }}
-  basic-auth-username: {{ .Values.concourse.username | b64enc | quote }}
-  basic-auth-password: {{ .Values.concourse.password | b64enc | quote }}
-  host-key: {{ .Values.concourse.hostKey | b64enc | quote }}
-  host-key-pub: {{ .Values.concourse.hostKeyPub | b64enc | quote }}
-  session-signing-key: {{ .Values.concourse.sessionSigningKey | b64enc | quote }}
-  worker-key: {{ .Values.concourse.workerKey | b64enc | quote }}
-  worker-key-pub: {{ .Values.concourse.workerKeyPub | b64enc | quote }}
-  github-auth-client-id: {{ default "" .Values.concourse.githubAuthClientId | b64enc | quote }}
-  github-auth-client-secret: {{ default "" .Values.concourse.githubAuthClientSecret | b64enc | quote }}
-  gitlab-auth-client-id: {{ default "" .Values.concourse.gitlabAuthClientId | b64enc | quote }}
-  gitlab-auth-client-secret: {{ default "" .Values.concourse.gitlabAuthClientSecret | b64enc | quote }}
-  generic-oauth-client-id: {{ default "" .Values.concourse.genericOauthClientId | b64enc | quote }}
-  generic-oauth-client-secret: {{ default "" .Values.concourse.genericOauthClientSecret | b64enc | quote }}
-  encryption-key: {{ default "" .Values.concourse.encryptionKey | b64enc | quote }}
-  old-encryption-key: {{ default "" .Values.concourse.oldEncryptionKey | b64enc | quote }}
-  {{ if .Values.credentialManager.vault }}
-  vault-ca-cert: {{ default "" .Values.credentialManager.vault.caCert | b64enc | quote }}
-  vault-client-token: {{ default "" .Values.credentialManager.vault.clientToken | b64enc | quote }}
-  vault-approle-id: {{ default "" .Values.credentialManager.vault.appRoleId | b64enc | quote }}
-  vault-approle-secret-id: {{ default "" .Values.credentialManager.vault.appRoleSecretId | b64enc | quote }}
-  vault-client-cert: {{ default "" .Values.credentialManager.vault.clientCert | b64enc | quote }}
-  vault-client-key: {{ default "" .Values.credentialManager.vault.clientKey | b64enc | quote }}
-  {{ end }}
+  host-key: {{ .Values.secrets.hostKey | b64enc | quote }}
+  host-key-pub: {{ .Values.secrets.hostKeyPub | b64enc | quote }}
+  session-signing-key: {{ .Values.secrets.sessionSigningKey | b64enc | quote }}
+  worker-key: {{ .Values.secrets.workerKey | b64enc | quote }}
+  worker-key-pub: {{ .Values.secrets.workerKeyPub | b64enc | quote }}
+  {{- if not .Values.postgresql.enabled }}
+  postgresql-uri: {{ template "concourse.secret.required" dict "key" "postgresqlUri" "isnt" "postgresql.enabled" "root" . }}
+  {{- end }}
+  {{- if .Values.concourse.encryption.enabled }}
+  encryption-key: {{ template "concourse.secret.required" dict "key" "encryptionKey" "is" "concourse.encryption.enabled" "root" . }}
+  old-encryption-key: {{ default "" .Values.secrets.oldEncryptionKey | b64enc | quote }}
+  {{- end }}
+  {{- if .Values.concourse.basicAuth.enabled }}
+  basic-auth-username: {{ template "concourse.secret.required" dict "key" "basicAuthUsername" "is" "concourse.basicAuth.enabled" "root" . }}
+  basic-auth-password: {{ template "concourse.secret.required" dict "key" "basicAuthPassword" "is" "concourse.basicAuth.enabled" "root" . }}
+  {{- end }}
+  {{- if .Values.concourse.githubAuth.enabled }}
+  github-auth-client-id: {{ template "concourse.secret.required" dict "key" "githubAuthClientId" "is" "concourse.githubAuth.enabled" "root" . }}
+  github-auth-client-secret: {{ template "concourse.secret.required" dict "key" "githubAuthClientSecret" "is" "concourse.githubAuth.enabled" "root" . }}
+  {{- end }}
+  {{- if .Values.concourse.gitlabAuth.enabled }}
+  github-auth-client-id: {{ template "concourse.secret.required" dict "key" "gitlabAuthClientId" "is" "concourse.gitlabAuth.enabled" "root" . }}
+  github-auth-client-secret: {{ template "concourse.secret.required" dict "key" "gitlabAuthClientSecret" "is" "concourse.gitlabAuth.enabled" "root" . }}
+  {{- end }}
+  {{- if .Values.concourse.genericOauth.enabled }}
+  generic-oauth-client-id: {{ template "concourse.secret.required" dict "key" "genericOauthClientId" "is" "concourse.genericOauth.enabled" "root" . }}
+  generic-oauth-client-secret: {{ template "concourse.secret.required" dict "key" "genericOauthClientSecret" "is" "concourse.genericOauth.enabled" "root" . }}
+  {{- end }}
+  {{- if .Values.credentialManager.vault.enabled }}
+  vault-ca-cert: {{ default "" .Values.secrets.vaultCaCert | b64enc | quote }}
+  vault-client-token: {{ default "" .Values.secrets.vaultClientToken | b64enc | quote }}
+  vault-approle-id: {{ default "" .Values.secrets.vaultAppRoleId | b64enc | quote }}
+  vault-approle-secret-id: {{ default "" .Values.secrets.vaultAppRoleSecretId | b64enc | quote }}
+  vault-client-cert: {{ default "" .Values.secrets.vaultClientCert | b64enc | quote }}
+  vault-client-key: {{ default "" .Values.secrets.vaultClientKey | b64enc | quote }}
+  {{- end }}
+{{- end }}
\ No newline at end of file
diff --git a/stable/concourse/templates/web-deployment.yaml b/stable/concourse/templates/web-deployment.yaml
index 72f921206..b42cfbcc7 100644
--- a/stable/concourse/templates/web-deployment.yaml
+++ b/stable/concourse/templates/web-deployment.yaml
@@ -14,125 +14,103 @@ spec:
       labels:
         app: {{ template "concourse.web.fullname" . }}
     spec:
+      serviceAccountName: {{ if .Values.rbac.create }}{{ template "concourse.web.fullname" . }}{{ else }}{{ .Values.rbac.webServiceAccountName }}{{ end }}
       tolerations:
 {{ toYaml .Values.web.tolerations | indent 8 }}
       containers:
         - name: {{ template "concourse.web.fullname" . }}
           image: "{{ .Values.image }}:{{ .Values.imageTag }}"
-          imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
+          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
           args:
             - "web"
-            {{- if .Values.credentialManager.enabled }}
-            {{- if default "" .Values.credentialManager.vault.appRoleId }}
+            {{- if eq (default "" .Values.credentialManager.vault.authBackend) "approle" }}
             - "--vault-auth-param"
             - "role_id=$(CONCOURSE_VAULT_APPROLE_ID)"
             - "--vault-auth-param"
             - "secret_id=$(CONCOURSE_VAULT_APPROLE_SECRET_ID)"
             {{- end }}
+            {{- if .Values.credentialManager.kubernetes.enabled }}
+            - "--kubernetes-in-cluster"
             {{- end }}
           env:
-            {{ if .Values.postgresql.enabled }}
+            - name: CONCOURSE_TSA_HOST_KEY
+              value: "/concourse-keys/host_key"
+            - name: CONCOURSE_SESSION_SIGNING_KEY
+              value: "/concourse-keys/session_signing_key"
+            - name: CONCOURSE_TSA_AUTHORIZED_KEYS
+              value: "/concourse-keys/worker_key.pub"
+            {{- if .Values.postgresql.enabled }}
             - name: POSTGRES_HOST
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: postgresql-host
+              value: {{ template "concourse.postgresql.fullname" . }}
             - name: POSTGRES_USER
-              valueFrom:
-                secretKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: postgresql-user
+              value: {{ .Values.postgresql.postgresUser }}
             - name: POSTGRES_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: {{ template "concourse.postgresql.fullname" . }}
                   key: postgres-password
             - name: POSTGRES_DATABASE
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: postgresql-database
+              value: {{ .Values.postgresql.postgresDatabase | quote }}
             - name: CONCOURSE_POSTGRES_DATA_SOURCE
               value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST)/$(POSTGRES_DATABASE)?sslmode=disable
-            {{ else }}
+            {{- else }}
             - name: CONCOURSE_POSTGRES_DATA_SOURCE
               valueFrom:
                 secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
                   key: postgresql-uri
-            {{ end }}
-            {{ if .Values.encryptionKey }}
+            {{- end }}
+            {{- if .Values.concourse.encryption.enabled }}
             - name: CONCOURSE_ENCRYPTION_KEY
               valueFrom:
                 secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
                   key: encryption-key
-            {{ end }}
-            {{ if .Values.oldEncryptionKey }}
             - name: CONCOURSE_OLD_ENCRYPTION_KEY
               valueFrom:
                 secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
                   key: old-encryption-key
-            {{ end }}
+            {{- end }}
+            {{- if .Values.concourse.externalURL }}
+            - name: CONCOURSE_EXTERNAL_URL
+              value: {{ .Values.concourse.externalURL | quote }}
+            {{- end }}
             - name: POD_IP
               valueFrom:
                 fieldRef:
                   fieldPath: status.podIP
             - name: CONCOURSE_BIND_PORT
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-atc-port
+              value: {{ .Values.concourse.atcPort | quote }}
             - name: CONCOURSE_PEER_URL
               value: "http://$(POD_IP):$(CONCOURSE_BIND_PORT)"
-            - name: CONCOURSE_BASIC_AUTH_USERNAME
-              valueFrom:
-                secretKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: basic-auth-username
-            - name: CONCOURSE_BASIC_AUTH_PASSWORD
-              valueFrom:
-                secretKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: basic-auth-password
             - name: CONCOURSE_TSA_BIND_PORT
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-tsa-port
+              value: {{ .Values.concourse.tsaPort | quote }}
             - name: CONCOURSE_ALLOW_SELF_SIGNED_CERTIFICATES
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-allow-self-signed-certificates
+              value: {{ .Values.concourse.allowSelfSignedCertificates | quote }}
             - name: CONCOURSE_AUTH_DURATION
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-auth-duration
+              value: {{ .Values.concourse.authDuration | quote }}
             - name: CONCOURSE_RESOURCE_CHECKING_INTERVAL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-resource-checking-interval
+              value: {{ .Values.concourse.resourceCheckingInterval | quote }}
             - name: CONCOURSE_OLD_RESOURCE_GRACE_PERIOD
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-old-resource-grace-period
+              value: {{ .Values.concourse.oldResourceGracePeriod | quote }}
             - name: CONCOURSE_RESOURCE_CACHE_CLEANUP_INTERVAL
+              value: {{ .Values.concourse.resourceCacheCleanupInterval | quote }}
+            - name: CONCOURSE_CONTAINER_PLACEMENT_STRATEGY
+              value: {{ .Values.concourse.containerPlacementStrategy | quote }}
+            {{- if .Values.concourse.basicAuth.enabled }}
+            - name: CONCOURSE_BASIC_AUTH_USERNAME
               valueFrom:
-                configMapKeyRef:
+                secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-resource-cache-cleanup-interval
-            {{- if .Values.concourse.externalURL }}
-            - name: CONCOURSE_EXTERNAL_URL
+                  key: basic-auth-username
+            - name: CONCOURSE_BASIC_AUTH_PASSWORD
               valueFrom:
-                configMapKeyRef:
+                secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-external-url
+                  key: basic-auth-password
             {{- end }}
+            {{- if .Values.concourse.githubAuth.enabled }}
             - name: CONCOURSE_GITHUB_AUTH_CLIENT_ID
               valueFrom:
                 secretKeyRef:
@@ -143,42 +121,20 @@ spec:
                 secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
                   key: github-auth-client-secret
-            {{- if .Values.concourse.githubAuthOrganization }}
             - name: CONCOURSE_GITHUB_AUTH_ORGANIZATION
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: github-auth-organization
-            {{- end }}
-            {{- if .Values.concourse.githubAuthTeam }}
+              value: {{ .Values.concourse.githubAuth.organization | quote }}
             - name: CONCOURSE_GITHUB_AUTH_TEAM
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: github-auth-team
-            {{- end }}
-            {{- if .Values.concourse.githubAuthUser }}
+              value: {{ .Values.concourse.githubAuth.team | quote }}
             - name: CONCOURSE_GITHUB_AUTH_USER
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: github-auth-user
-            {{- end }}
+              value: {{ .Values.concourse.githubAuth.user | quote }}
             - name: CONCOURSE_GITHUB_AUTH_AUTH_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: github-auth-auth-url
+              value: {{ .Values.concourse.githubAuth.authUrl | quote }}
             - name: CONCOURSE_GITHUB_AUTH_TOKEN_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: github-auth-token-url
+              value: {{ .Values.concourse.githubAuth.tokenUrl | quote }}
             - name: CONCOURSE_GITHUB_AUTH_API_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: github-auth-api-url
+              value: {{ .Values.concourse.githubAuth.apiUrl | quote }}
+            {{- end }}
+            {{- if .Values.concourse.gitlabAuth.enabled }}
             - name: CONCOURSE_GITLAB_AUTH_CLIENT_ID
               valueFrom:
                 secretKeyRef:
@@ -189,33 +145,16 @@ spec:
                 secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
                   key: gitlab-auth-client-secret
-            {{- if .Values.concourse.gitlabAuthGroup }}
             - name: CONCOURSE_GITLAB_AUTH_GROUP
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: gitlab-auth-group
-            {{- end }}
+              value: {{ .Values.concourse.gitlabAuth.group | quote }}
             - name: CONCOURSE_GITLAB_AUTH_AUTH_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: gitlab-auth-auth-url
+              value: {{ .Values.concourse.gitlabAuth.authUrl | quote }}
             - name: CONCOURSE_GITLAB_AUTH_TOKEN_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: gitlab-auth-token-url
+              value: {{ .Values.concourse.gitlabAuth.tokenUrl | quote }}
             - name: CONCOURSE_GITLAB_AUTH_API_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: gitlab-auth-api-url
-            - name: CONCOURSE_GENERIC_OAUTH_DISPLAY_NAME
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: generic-oauth-display-name
+              value: {{ .Values.concourse.gitlabAuth.apiUrl | quote }}
+            {{- end }}
+            {{- if .Values.concourse.genericOauth.enabled }}
             - name: CONCOURSE_GENERIC_OAUTH_CLIENT_ID
               valueFrom:
                 secretKeyRef:
@@ -226,64 +165,42 @@ spec:
                 secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
                   key: generic-oauth-client-secret
+            - name: CONCOURSE_GENERIC_OAUTH_DISPLAY_NAME
+              value: {{ .Values.concourse.genericOauth.displayName | quote }}
             - name: CONCOURSE_GENERIC_OAUTH_AUTH_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: generic-oauth-auth-url
+              value: {{ .Values.concourse.genericOauth.authUrl | quote }}
             - name: CONCOURSE_GENERIC_OAUTH_AUTH_URL_PARAM
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: generic-oauth-auth-url-param
+              value: {{ .Values.concourse.genericOauth.authUrlParam | quote }}
             - name: CONCOURSE_GENERIC_OAUTH_SCOPE
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: generic-oauth-scope
+              value: {{ .Values.concourse.genericOauth.scope | quote }}
             - name: CONCOURSE_GENERIC_OAUTH_TOKEN_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: generic-oauth-token-url
-            - name: CONCOURSE_TSA_HOST_KEY
-              value: "/concourse-keys/host_key"
-            - name: CONCOURSE_SESSION_SIGNING_KEY
-              value: "/concourse-keys/session_signing_key"
-            - name: CONCOURSE_TSA_AUTHORIZED_KEYS
-              value: "/concourse-keys/worker_key.pub"
-            {{- if .Values.credentialManager.enabled }}
+              value: {{ .Values.concourse.genericOauth.tokenUrl | quote }}
+            {{- end }}
+            {{- if .Values.credentialManager.kubernetes.enabled }}
+            - name: CONCOURSE_KUBERNETES_NAMESPACE_PREFIX
+              value: {{ template "concourse.namespacePrefix" . }}
+            {{- end }}
+            {{- if .Values.credentialManager.vault.enabled }}
             - name: CONCOURSE_VAULT_URL
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: vault-url
+              value: {{ .Values.credentialManager.vault.url | quote }}
             - name: CONCOURSE_VAULT_PATH_PREFIX
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: vault-path-prefix
+              value: {{ .Values.credentialManager.vault.pathPrefix | quote }}
             - name: CONCOURSE_VAULT_AUTH_BACKEND
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: vault-auth-backend
+              value: {{ .Values.credentialManager.vault.authBackend | quote }}
             - name: CONCOURSE_VAULT_CLIENT_TOKEN
               valueFrom:
                 secretKeyRef:
                   name: {{ template "concourse.concourse.fullname" . }}
                   key: vault-client-token
-            {{- if .Values.credentialManager.vault.caCert }}
+            {{- if .Values.credentialManager.vault.useCaCert }}
             - name: CONCOURSE_VAULT_CA_CERT
               value: "/concourse-vault/ca.cert"
             {{- end }}
-            {{- if .Values.credentialManager.vault.clientCert }}
             - name: CONCOURSE_VAULT_CLIENT_CERT
               value: "/concourse-vault/client.cert"
             - name: CONCOURSE_VAULT_CLIENT_KEY
               value: "/concourse-vault/client.key"
-            {{- end }}
-            {{- if .Values.credentialManager.vault.appRoleId }}
+            {{- if eq .Values.credentialManager.vault.authBackend "approle" }}
             - name: CONCOURSE_VAULT_APPROLE_ID
               valueFrom:
                 secretKeyRef:
@@ -302,11 +219,6 @@ spec:
             - name: CONCOURSE_PROMETHEUS_BIND_PORT
               value: {{ .Values.web.metrics.prometheus.port | quote }}
             {{- end }}
-            - name: CONCOURSE_CONTAINER_PLACEMENT_STRATEGY
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: container-placement-strategy
           ports:
             - name: atc
               containerPort: {{ .Values.concourse.atcPort }}
@@ -334,7 +246,7 @@ spec:
             - name: concourse-keys
               mountPath: /concourse-keys
               readOnly: true
-            {{- if .Values.credentialManager.vault }}
+            {{- if .Values.credentialManager.vault.enabled }}
             - name: vault-keys
               mountPath: /concourse-vault
               readOnly: true
@@ -355,14 +267,16 @@ spec:
                 path: session_signing_key
               - key: worker-key-pub
                 path: worker_key.pub
-        {{- if .Values.credentialManager.vault }}
+        {{- if .Values.credentialManager.vault.enabled }}
         - name: vault-keys
           secret:
             secretName: {{ template "concourse.concourse.fullname" . }}
             defaultMode: 0400
             items:
+            {{- if .Values.credentialManager.vault.useCaCert }}
               - key: vault-ca-cert
                 path: ca.cert
+            {{- end }}
               - key: vault-client-cert
                 path: client.cert
               - key: vault-client-key
diff --git a/stable/concourse/templates/web-role.yaml b/stable/concourse/templates/web-role.yaml
new file mode 100644
index 000000000..cef062293
--- /dev/null
+++ b/stable/concourse/templates/web-role.yaml
@@ -0,0 +1,17 @@
+{{- if .Values.rbac.create -}}
+{{- if .Values.credentialManager.kubernetes.enabled -}}
+apiVersion: rbac.authorization.k8s.io/{{ .Values.rbac.apiVersion }}
+kind: ClusterRole
+metadata:
+  name: {{ template "concourse.web.fullname" . }}
+  labels:
+    app: {{ template "concourse.web.fullname" . }}
+    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
+    heritage: {{ .Release.Service }}
+    release: {{ .Release.Name }}
+rules:
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get"]
+{{- end -}}
+{{- end -}}
diff --git a/stable/concourse/templates/web-rolebinding.yaml b/stable/concourse/templates/web-rolebinding.yaml
new file mode 100644
index 000000000..b65fd9d7a
--- /dev/null
+++ b/stable/concourse/templates/web-rolebinding.yaml
@@ -0,0 +1,25 @@
+{{- if .Values.rbac.create -}}
+{{- if .Values.credentialManager.kubernetes.enabled -}}
+{{- range .Values.credentialManager.kubernetes.teams }}
+---
+apiVersion: rbac.authorization.k8s.io/{{ $.Values.rbac.apiVersion }}
+kind: RoleBinding
+metadata:
+  name: {{ template "concourse.web.fullname" $ }}-{{ . }}
+  namespace: {{ template "concourse.namespacePrefix" $ }}{{ . }}
+  labels:
+    app: {{ template "concourse.web.fullname" $ }}
+    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
+    heritage: {{ $.Release.Service }}
+    release: {{ $.Release.Name }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "concourse.web.fullname" $ }}
+subjects:
+- kind: ServiceAccount
+  name: {{ template "concourse.web.fullname" $ }}
+  namespace: {{ $.Release.Namespace }}
+{{- end }}
+{{- end -}}
+{{- end -}}
diff --git a/stable/concourse/templates/web-serviceaccount.yaml b/stable/concourse/templates/web-serviceaccount.yaml
new file mode 100644
index 000000000..91e37b74c
--- /dev/null
+++ b/stable/concourse/templates/web-serviceaccount.yaml
@@ -0,0 +1,13 @@
+{{- if .Values.rbac.create -}}
+{{- if .Values.credentialManager.kubernetes.enabled -}}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "concourse.web.fullname" . }}
+  labels:
+    app: {{ template "concourse.web.fullname" . }}
+    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
+    heritage: {{ .Release.Service }}
+    release: {{ .Release.Name }}
+{{- end -}}
+{{- end -}}
diff --git a/stable/concourse/templates/worker-statefulset.yaml b/stable/concourse/templates/worker-statefulset.yaml
index 6bc7247ca..07773ebd3 100644
--- a/stable/concourse/templates/worker-statefulset.yaml
+++ b/stable/concourse/templates/worker-statefulset.yaml
@@ -20,27 +20,27 @@ spec:
         {{ $key }}: {{ $value | quote }}
         {{- end }}
     spec:
-      serviceAccountName: {{ if .Values.rbac.create }}{{ template "concourse.worker.fullname" . }}{{ else }}{{ .Values.rbac.serviceAccountName }}{{ end }}
+      serviceAccountName: {{ if .Values.rbac.create }}{{ template "concourse.worker.fullname" . }}{{ else }}{{ .Values.rbac.workerServiceAccountName }}{{ end }}
       tolerations:
 {{ toYaml .Values.worker.tolerations | indent 8 }}
       terminationGracePeriodSeconds: {{ .Values.worker.terminationGracePeriodSeconds }}
       containers:
         - name: {{ template "concourse.worker.fullname" . }}
           image: "{{ .Values.image }}:{{ .Values.imageTag }}"
-          imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
+          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
           command:
             - /bin/sh
           args:
             - -c
             - |-
-              cp /dev/null /concourse-work-dir/.liveness_probe
+              cp /dev/null /tmp/.liveness_probe
               rm -rf /concourse-work-dir/*
               while ! concourse retire-worker --name=${HOSTNAME} | grep -q worker-not-found; do
-                touch /concourse-work-dir/.pre_start_cleanup
+                touch /tmp/.pre_start_cleanup
                 sleep 5
               done
-              rm -f /concourse-work-dir/.pre_start_cleanup
-              concourse worker --name=${HOSTNAME} | tee -a /concourse-work-dir/.liveness_probe
+              rm -f /tmp/.pre_start_cleanup
+              concourse worker --name=${HOSTNAME} | tee -a /tmp/.liveness_probe
           livenessProbe:
             exec:
               command:
@@ -48,13 +48,13 @@ spec:
                 - -c
                 - |-
                   FATAL_ERRORS=$( echo "${LIVENESS_PROBE_FATAL_ERRORS}" | grep -q '\S' && \
-                      grep -F "${LIVENESS_PROBE_FATAL_ERRORS}" /concourse-work-dir/.liveness_probe )
-                  cp /dev/null /concourse-work-dir/.liveness_probe
+                      grep -F "${LIVENESS_PROBE_FATAL_ERRORS}" /tmp/.liveness_probe )
+                  cp /dev/null /tmp/.liveness_probe
                   if [ ! -z "${FATAL_ERRORS}" ]; then
                     >&2 echo "Fatal error detected: ${FATAL_ERRORS}"
                     exit 1
                   fi
-                  if [ -f /concourse-work-dir/.pre_start_cleanup ]; then
+                  if [ -f /tmp/.pre_start_cleanup ]; then
                     >&2 echo "Still trying to clean up before starting concourse. 'fly prune-worker -w ${HOSTNAME}' might need to be called to force cleanup."
                     exit 1
                   fi
@@ -73,25 +73,13 @@ spec:
                     done
           env:
             - name: CONCOURSE_TSA_HOST
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-tsa-host
+              value: {{ template "concourse.web.fullname" . }}
             - name: CONCOURSE_TSA_PORT
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-tsa-port
+              value: {{ .Values.concourse.tsaPort | quote }}
             - name: CONCOURSE_GARDEN_DOCKER_REGISTRY
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: garden-docker-registry
+              value: {{ .Values.concourse.dockerRegistry | quote }}
             - name: CONCOURSE_GARDEN_INSECURE_DOCKER_REGISTRY
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: garden-insecure-docker-registry
+              value: {{ .Values.concourse.insecureDockerRegistry | quote }}
             - name: CONCOURSE_TSA_PUBLIC_KEY
               value: "/concourse-keys/host_key.pub"
             - name: CONCOURSE_TSA_WORKER_PRIVATE_KEY
@@ -99,15 +87,9 @@ spec:
             - name: CONCOURSE_WORK_DIR
               value: "/concourse-work-dir"
             - name: CONCOURSE_BAGGAGECLAIM_DRIVER
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: concourse-baggageclaim-driver
+              value: {{ .Values.concourse.baggageclaimDriver | quote }}
             - name: LIVENESS_PROBE_FATAL_ERRORS
-              valueFrom:
-                configMapKeyRef:
-                  name: {{ template "concourse.concourse.fullname" . }}
-                  key: worker-fatal-errors
+              value: {{ .Values.worker.fatalErrors | quote }}
 {{- if .Values.worker.env }}
 {{ toYaml .Values.worker.env | indent 12 }}
 {{- end }}
diff --git a/stable/concourse/values.yaml b/stable/concourse/values.yaml
index 2eaed389f..7ae8b2d6c 100644
--- a/stable/concourse/values.yaml
+++ b/stable/concourse/values.yaml
@@ -13,131 +13,17 @@ image: concourse/concourse
 ## Concourse image version.
 ## ref: https://hub.docker.com/r/concourse/concourse/tags/
 ##
-imageTag: "3.8.0"
+imageTag: "3.9.0"
 
 ## Specify a imagePullPolicy: 'Always' if imageTag is 'latest', else set to 'IfNotPresent'.
 ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
 ##
-# imagePullPolicy:
+imagePullPolicy: IfNotPresent
 
 ## Configuration values for Concourse.
 ## ref: https://concourse.ci/setting-up.html
 ##
 concourse:
-  ## Concourse Basic Authentication Username.
-  ## ref: https://concourse.ci/teams.html#authentication
-  ##
-  username: concourse
-
-  ## Concourse Basic Authentication Password.
-  ## ref: https://concourse.ci/teams.html#authentication
-  ##
-  password: concourse
-
-  ## Concourse Host Keys.
-  ## ref: https://concourse.ci/binaries.html#generating-keys
-  ##
-  hostKey: |-
-    -----BEGIN RSA PRIVATE KEY-----
-    MIIEogIBAAKCAQEA2AUPXxuiDC/qrBWjIdT5fvNcMlMEYpR3X4SLQIgLC1ULDsCO
-    fleKZ+Wi4RzwbkUKiKmJm5GeyNVVCDdfvdD1Sd1+5faqmp2/OQBzLS7o8NY/btMw
-    8h9lx4KVJaJJ1EM1EiyGY41Nx591KP14pBfr0/NdOIrDu2JvF6e7CHEbrzkN57kb
-    BVQkaIMaS01Rw/5Oe68GFalli2ii8L8dNWVVzquBh5PwVWimvTgwv3TYG2TH8L1V
-    V7n+/zRRpkjMl2+PUouGqD+Bp+4wF+hp4AW5v24CqjtLJEMv4IEJv2FRfrOauBIZ
-    XjAS1SSg9VaTOS3iwxaYrv8uG1XfMFHICvkEPQIDAQABAoIBAG87W8jrX6vK2Jm3
-    ooJ/OeFmymiXWsCwFi+2/kVCR/2T0tfLyxO/W+NX2WD1F9CP+HaaZeMXPp3HS7up
-    V8FT4ZohVYBwXTS0WYyucKApcYThrVQRpzhldnEfClGQmVeVK7Sp/KEyV4Sc1SVA
-    L2i/cI142N2Ohm7spquVkLcuFsVINzZ0fXCv25dTqbkEgjTJzNdBzyFXvc4z0Mt9
-    gW14M7mz+YKYOfsCxIEm438fC9b16C96yIFBdN+/jaP8pmb2RoIE2D0F8bj5K1hR
-    YyGFKMOU4e6cYq59iWfubKuu2WNJEBk/5aO7x7Xu2S0k8wIYlwxFuu4LfR2Kvizu
-    +mFVf3kCgYEA9e0+40tJGpOPM8hAB3DwXjYc8lCuyYf3z30T3RqVNCUVSWnlaj/s
-    3ENi6+Ng3u+Zs8cR2CFou+jAClTyWLuSnI9yACD0eyW9n4bzYMUbgdC6vneLjpzx
-    wWR9Xv5RmZVly7xWuqcgEeEf8RNcYI3oXby0laF3EObvuAx/4ETIkFcCgYEA4N42
-    w1UEWGopWBIIXYHkEPHQuF0SxR2CZyh9ExTeSxFphyibkcHRjDW+t91ZLnSm5k1N
-    TOdYuc0ApBV3U+TexeFvDI94L/Oze6Ht5MatRQz8kRwMFGJL3TrpbgTmWdfG05Ad
-    oiScJzwY16oJXnKusxik7V+gCCNNE0/2UuMnY4sCgYAEf82pvOPef5qcGOrK+A79
-    ukG3UTCRcVJgUmp9nhHivVbxW+WdlwPPV9BEfol0KrAGMPsrmBjhbzWsOregVfYt
-    tRYh2HiAlEUu2Po06AZDzrzL5UYBWu+1WRBOH5sAk1IkcxKnIY2dph++elszTQVW
-    SbCIGEckYQU7ucbRJJECywKBgBb4vHFx8vKxTa3wkagzx7+vZFohL/SxEgxFx5k2
-    bYsPqU8kZ9gZC7YeG3CfDShAxHgMd5QeoiLA/YrFop4QaG2gnP6UfXuwkqpTnYDc
-    hwDh1b9hNR6z9/oOtaAGoh2VfHtKYqyYvtcHPaZyeWiLoKstHlQdi7SpHouVhJ1t
-    FS4HAoGAGy+56+zvdROjJy9A2Mn/4BvWrsu4RSQILBJ6Hb4TpF46p2fn0rwqyhOj
-    Occs+xkdEsI9w5phXzIEeOq2LqvWHDPxtdLpxOrrmx4AftAWdM8S1+OqTpzHihK1
-    y1ZOrWfvON+XjWFFAEej/CpQZkNUkTzjTtSC0dnfAveZlasQHdI=
-    -----END RSA PRIVATE KEY-----
-
-  hostKeyPub: |-
-    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYBQ9fG6IML+qsFaMh1Pl+81wyUwRilHdfhItAiAsLVQsOwI5+V4pn5aLhHPBuRQqIqYmbkZ7I1VUIN1+90PVJ3X7l9qqanb85AHMtLujw1j9u0zDyH2XHgpUloknUQzUSLIZjjU3Hn3Uo/XikF+vT8104isO7Ym8Xp7sIcRuvOQ3nuRsFVCRogxpLTVHD/k57rwYVqWWLaKLwvx01ZVXOq4GHk/BVaKa9ODC/dNgbZMfwvVVXuf7/NFGmSMyXb49Si4aoP4Gn7jAX6GngBbm/bgKqO0skQy/ggQm/YVF+s5q4EhleMBLVJKD1VpM5LeLDFpiu/y4bVd8wUcgK+QQ9 Concourse
-
-  ## Concourse Session Signing Keys.
-  ## ref: https://concourse.ci/binaries.html#generating-keys
-  ##
-  sessionSigningKey: |-
-    -----BEGIN RSA PRIVATE KEY-----
-    MIIEowIBAAKCAQEAwLql/rUIaI+PX7Tl3FWcTee4sQf8/daakALXx955tPwkhqlY
-    e4T2V84p/ylFvNWpM4vfcMYKfMY0JLKgAgBvJhCytSkDBhTBoWmN6yE0AB11P9En
-    lIZRBWNYqaC2cSge2ZD8qOSnwfFhnQAW8+7pE+ElJAVh7dtdF3A478H50lIigq8I
-    zMWp2EGJpFC7/Uu36oIL/03MNGCmrH1jvtTuJiAMQUZYyL1ReBkvvHOzw9i4HXPy
-    SMVtcllm4NBs2aVPtwhr2kwSkLt8t1bPdRn6OIyEAw5WktzAKaiZnkTvj6g3xzdp
-    zKcrdlBr9aznlNvoSinBUfvtwyFmvFN1HHbA9wIDAQABAoIBAE7G/DrUfI9gvtX7
-    90jMpYsigFe8UCjho2PiBZlo0o6r0bJJXiV+/8J8PqZRlHPPUc4EClzqVjcSPRYS
-    /VxUGRqSELoD/Xxq14rGvn+xnrO9VsOzFl6bWFq/dOpBCtHN+G4t2VifvgKES8YE
-    11z19sdta+UBXjn/RFnkQSGfRCI3QqTaYvjxevt0uWlyPmqkFPQQw8bvHIXzoB+B
-    rzeiMa++nMvbX5pAH9XA0BvhyuH3fHidTUwiVBpkMcpLWtjP0A0JTsecDdbinDDq
-    un2EIo8zMWRwKQN/JnUxsi8AUEigBTCUqeDgREXtW62uvFkSpcVMXwmVityLYIVy
-    qnVLUCECgYEA6IwXkP1qnSfcNeoVI/ypDuz1/kdqcjSPhLYe+jdiLLoFkMW9AlDm
-    lzwNaWlTFD9ygo+NjJCo63/A8HCm55sajws5hZ6r20vdZcKFMk9h0qF5oVA7lkQ2
-    gvG2WaznuU7KkqhfP+pXhiLgZKoJkst/+g7r6uHpredwDY6hxeBK4vsCgYEA1CqH
-    8ywC5qUo/36kQg/TU2adN/YEHdJAAbU23EVrGQSVmnXW08H2NLFk0tsxrwoNnbgp
-    PIk2J7BimbJvbND17ibr4GAklDTsR8aJkDl+0JgNCAK9N07qVt1s7FXzhg95jUL9
-    EQW55z60GAJpecqNwA4Jsa8P852N0355Obp92TUCgYBkOBvf7JcJ66fHxH4f6D+j
-    oxPQ5k5Fsck4VJS9GSlCRVkor09ptBvsiYDuMOoRC9b51YwXTDDAbWplNOd5YSrt
-    AtVjdKJz/BoKRO7KY9Owxs54au+DLxqfDDSeKRokjoRW+CE0lnXp5RX3zCAcF3+r
-    8MpTi9D9lYSBEzs84BDmCQKBgQCMcH6/K3HcJJVn0fd+tyUGftUw9sswxjySJNbk
-    pZrH263/qWMDls+Xf5kire9MU1ZCAWZiaN0NFoed/2wcVpGEDAV0548u/30r4bKr
-    YjOcdhmiJNYFJ1qdF0MDib2CDvpB1IbZXrX46RujDO2urbJ435HxKNVhR/had8xc
-    tyKYxQKBgCVDhN0MhnlUQJVZfX42APmF4gQg0r3sfL/NGXjEjMIKKFe5a88eZVHr
-    L8x1+dp0q7czC8a/l1DUuiwDKl8OEpxLsGCq/J/wAfrSMPifu6EUlbUwlJOPdgha
-    +p/KFAelHXJ2w/8yackAcarh35VP7ixhuvxswHNdgvfsBTFcjn30
-    -----END RSA PRIVATE KEY-----
-
-  ## Concourse Worker Keys.
-  ## ref: https://concourse.ci/binaries.html#generating-keys
-  ##
-  workerKey: |-
-    -----BEGIN RSA PRIVATE KEY-----
-    MIIEpAIBAAKCAQEAuPehUmBXAQCoA7TLAQCYhf+vzcZVyj+VGXnMhLHnWLk7dRjo
-    CU8GgNamdS5h7G3ywxOvKA3YjOLr8XyOMLS4c+e8N7tIzlMWdiXhe0lcBH9Z1ai5
-    +Bof3/BlDUBksiKdc1A+QcfX6tDwMkOO5re1H4vOK3H/Cype58wCB03HYNgb05ED
-    fW1Bj2qvz29VtmyjwEMuDs100iMqwCfPUx9oxXmmX8sUBRmw/Y1Rx/8pdKIjKw3m
-    kWIHHBOSCPimO1qC47Aa8v/UH9hERCykyuFHiBiKlnIvZWm9bYvhsRTz4gt5KzRY
-    6OI0oVeHlLOHDSK48Da8VWij15lOqO2Nx6WssQIDAQABAoIBADET22UNFOi6MNpS
-    5S5N5ypezlnOD0NLnZcV3zMyNQ0wkNsgEakuo64Zxi7/cJIYFjq2hVoeWl//cdUw
-    VFYODYcLbMBo3AeKukH9CRf6PgUfeUmcrENtQxnbIiTi+hTd5GMNXod7rAmtCJ59
-    mHQVOGS3ZqvWYnKm+mmMktk3RPinynX/A4y3WHPacuAS58HM09Ck43WcHMxbGpsL
-    /gZpICyFYZ2DviM+AHyWGcmw7LJrpC0QHo6+BAFMs4xlUecNgVIFUpfOoAcfsdtG
-    K9j4AbuZ47iFisbay+1pyg/7O5eRTdGVQRtc7PBMOjea5jGsfmlDmdn1ZS50ykun
-    ANfoQ5UCgYEA9Ak73PRy9nLlRkt4OBCF/4fwThUCMedsnWaVjQBMJYim4FB2ivF5
-    cKdWt3y/RZI85KKYu0EXhLEoSIEAfz057R8t3QdVK4tZx6B47UFjBjCYeVMtwHDQ
-    prxQiOPHIHCplBNFuGzA5VXL9gQLRD+ek0uOy2GJJ0Wu1xyeouI+SW8CgYEAwgkO
-    TOtOogqmcAALjWgeeQiZetflSKbJlpQNhmCPAMm0SFI8eF4SpRXLzd41VC2mLIwT
-    L3tjc7/8ocXoElFM4L0fo9Lx/SHFH4JEn5FT0PXPmvsF2JRhsXJFLJSihxF/91Xs
-    2aBcQILPFzLcrI6OFUakNwGTU/CIxpkzRvQrG98CgYEAzNVnUuo4CNadzagRK3Xr
-    E3Yl5VRK+FpY17FAfA6w25xc/dFr/un61e0Po4no/ltmEz7LVfmn5O/ScTEemq5o
-    jbjrBShfe+JGpIH0nqiQlqR5hvSjZXEMIbfVHWGbRYZrQGgA0HEwZA7k2QXB8zI3
-    R0lXfSzMM5OQ0uwp12xxfa8CgYBHILq1R6zTicPpWprhg0FobNaWSX4rW7iaEjvC
-    /rJtP4Nu33Z7SUDcc1j6ZnJ2ISXBPrfpt/mE/OPHCZ1A2bysxadLjpBWkoKIQmCV
-    fdiTyQgJb+t8sSf+vDzPUs0hZjDaogzo2ff3TfxMLMDoIHnFItgfsdwn8QyygIZj
-    hC4pUQKBgQDqsxnkI6yXFE5gshnW7H8zqKNlzKd/dZEL6e+lRz4R3UY/KcEkRAfq
-    Yi3cwo9fE3U3kSmpl5MQwUjWm/BZ7JyueoY/4ndwaFPgc34IKsgJ0wau9pZiQAB1
-    DxpOSF+BR71Jx3sxvIdCODNTtm645j5yrZVnJAuMPofo5XFmunDoJA==
-    -----END RSA PRIVATE KEY-----
-
-  workerKeyPub: |-
-    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC496FSYFcBAKgDtMsBAJiF/6/NxlXKP5UZecyEsedYuTt1GOgJTwaA1qZ1LmHsbfLDE68oDdiM4uvxfI4wtLhz57w3u0jOUxZ2JeF7SVwEf1nVqLn4Gh/f8GUNQGSyIp1zUD5Bx9fq0PAyQ47mt7Ufi84rcf8LKl7nzAIHTcdg2BvTkQN9bUGPaq/Pb1W2bKPAQy4OzXTSIyrAJ89TH2jFeaZfyxQFGbD9jVHH/yl0oiMrDeaRYgccE5II+KY7WoLjsBry/9Qf2ERELKTK4UeIGIqWci9lab1ti+GxFPPiC3krNFjo4jShV4eUs4cNIrjwNrxVaKPXmU6o7Y3Hpayx Concourse
-
-  oldEncryptionKey:
-  encryptionKey:
 
   ## ATC listen port.
   ## ref: https://concourse.ci/architecture.html
@@ -177,10 +63,11 @@ concourse:
   ##
   # externalURL:
 
-  ## The filesystem driver used by baggageclaim on workers, as of Concourse 3.1 can be values
-  ## "overlay", "btrfs", or "naive". "overlay" is more stable than "btrfs" but is not supported
-  ## on some Linux kernels, while "naive" is most supported but least space efficient. For background see
-  ## https://github.com/concourse/concourse/issues/1230.
+  ## The filesystem driver used by baggageclaim on workers, can be values
+  ## "btrfs", "overlay", or "naive". As of 3.9 "btrfs" is recommended, while "naive" is most
+  ## supported but least space efficient. For background see
+  ## https://github.com/concourse/concourse/issues/1230 and
+  ## https://github.com/concourse/concourse/issues/1966
   ##
   baggageclaimDriver: naive
 
@@ -199,89 +86,94 @@ concourse:
   ##
   # insecureDockerRegistry:
 
-  ## Application client ID for enabling GitHub OAuth.
-  ##
-  # githubAuthClientId:
-
-  ## Application client secret for enabling GitHub OAuth.
+  ## Enable encryption of pipeline configuration. Encryption keys can be set via secrets.
+  ## See https://concourse.ci/encryption.html
   ##
-  # githubAuthClientSecret:
+  encryption:
+    enabled: false
 
-  ## GitHub organizations (comma separated) whose members will have access.
+  ## Enable basic auth for the "main" Concourse team.
+  ## See https://concourse.ci/teams.html#basic-auth
   ##
-  # githubAuthOrganization:
+  basicAuth:
+    enabled: true
 
-  ## GitHub teams (comma separated) whose members will have access.
+  ## Enable GitHub auth for the "main" Concourse team.
+  ## See https://concourse.ci/teams.html#github-auth
   ##
-  # githubAuthTeam:
+  githubAuth:
+    enabled: false
 
-  ## GitHub users (comma separated) to permit access.
-  ##
-  # githubAuthUser:
+    ## GitHub organizations (comma separated) whose members will have access.
+    ##
+    # organization:
 
-  ## Override default endpoint AuthURL for Github Enterprise.
-  ##
-  # githubAuthAuthUrl:
+    ## GitHub teams (comma separated) whose members will have access.
+    ##
+    # team:
 
-  ## Override default endpoint TokenURL for Github Enterprise.
-  ##
-  # githubAuthTokenUrl:
+    ## GitHub users (comma separated) to permit access.
+    ##
+    # user:
 
-  ## Override default API endpoint URL for Github Enterprise.
-  ##
-  # githubAuthApiUrl:
+    ## Override default endpoint AuthURL for Github Enterprise.
+    ##
+    # authUrl:
 
-  ## Application client ID for enabling GitLab OAuth.
-  ##
-  # gitlabAuthClientId:
+    ## Override default endpoint TokenURL for Github Enterprise.
+    ##
+    # tokenUrl:
 
-  ## Application client secret for enabling GitLab OAuth.
-  ##
-  # gitlabAuthClientSecret:
+    ## Override default API endpoint URL for Github Enterprise.
+    ##
+    # apiUrl:
 
-  ## GitLab Group (comma separated) whose members will have access.
+  ## Enable Gitlab auth for the "main" Concourse team.
   ##
-  # gitlabAuthGroup:
+  gitlabAuth:
+    enabled: false
 
-  ## Endpoint AuthURL for Gitlab server.
-  ##
-  # gitlabAuthAuthUrl:
+    ## GitLab Group (comma separated) whose members will have access.
+    ##
+    # group:
 
-  ## Endpoint TokenURL for Gitlab server.
-  ##
-  # gitlabAuthTokenUrl:
+    ## Endpoint AuthURL for Gitlab server.
+    ##
+    # authUrl:
 
-  ## API endpoint URL for Gitlab server.
-  ##
-  # gitlabAuthApiUrl:
+    ## Endpoint TokenURL for Gitlab server.
+    ##
+    # tokenUrl:
 
-  ## Name for this auth method on the web UI.
-  ##
-  # genericOauthDisplayName:
+    ## API endpoint URL for Gitlab server.
+    ##
+    # apiUrl:
 
-  ## Application client ID for enabling generic OAuth.
+  ## Enable generic OAuth for the "main" Concourse team.
+  ## See https://concourse.ci/teams.html#generic-oauth
   ##
-  # genericOauthClientId:
+  genericOauth:
+    enabled: false
 
-  ## Application client secret for enabling generic OAuth.
-  ##
-  # genericOauthClientSecret:
+    ## Name for this auth method on the web UI.
+    ##
+    # displayName:
 
-  ## Generic OAuth provider AuthURL endpoint.
-  ##
-  # genericOauthAuthUrl:
+    ## Generic OAuth provider AuthURL endpoint.
+    ##
+    # authUrl:
 
-  ## Parameters (comma separated) to pass to the authentication server AuthURL.
-  ##
-  # genericOauthAuthUrlParam:
+    ## Parameters (comma separated) to pass to the authentication server AuthURL.
+    ##
+    # authUrlParam:
 
-  ## Optional scope required to authorize user.
-  ##
-  # genericOauthScope:
+    ## Optional scope required to authorize user.
+    ##
+    # scope:
 
-  ## Generic OAuth provider TokenURL endpoint.
-  ##
-  # genericOauthTokenUrl:
+    ## Generic OAuth provider TokenURL endpoint.
+    ##
+    # tokenUrl:
 
 ## Configuration values for Concourse Web components.
 ##
@@ -294,8 +186,15 @@ web:
   ##
   replicas: 1
 
+  ## Configure resource requests and limits.
+  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
+  ##
+  resources:
+    requests:
+      cpu: "100m"
+      memory: "128Mi"
+
   ## Additional affinities to add to the web pods.
-  ## Useful if you prefer to run workers on non-spot instances, for example
   ##
   # additionalAffinities:
   #   nodeAffinity:
@@ -308,7 +207,7 @@ web:
   #               values:
   #                 - "true"
 
-  ## Tolerations for the worker nodes.
+  ## Tolerations for the web nodes.
   ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
   tolerations: []
   # tolerations:
@@ -317,19 +216,11 @@ web:
   #    value: "value"
   #    effect: "NoSchedule"
 
-  ## Configure resource requests and limits.
-  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
-  ##
-  resources:
-    requests:
-      cpu: "100m"
-      memory: "128Mi"
-
   ## Service configuration.
   ## ref: https://kubernetes.io/docs/user-guide/services/
   ##
   service:
-    ## For minikube, set this to ClusterIP, elsewhere use LoadBalancer.
+    ## For minikube, set this to ClusterIP, elsewhere use LoadBalancer or NodePort
     ## ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
     ##
     type: ClusterIP
@@ -340,10 +231,10 @@ web:
     #   prometheus.io/probe: "true"
     #   prometheus.io/probe_path: "/"
 
-  # If you fix atc nodeport, this parameter set(web.service.atcNodePort)
+  # When using web.service.type: NodePort, sets the nodePort for atc
   #  atcNodePort: 30150
   #
-  # If you fix tsa nodeport, this parameter set(web.service.tsaNodePort)
+  # When using web.service.type: NodePort, sets the nodePort for tsa
   #  tsaNodePort: 30151
 
   ## Ingress configuration.
@@ -399,7 +290,7 @@ worker:
   ##
   replicas: 2
 
-  ## Minimun number of workers available after an eviction
+  ## Minimum number of workers available after an eviction
   ## ref: https://kubernetes.io/docs/admin/disruptions/
   ##
   minAvailable: 1
@@ -513,15 +404,10 @@ persistence:
 postgresql:
 
   ## Use the PostgreSQL chart dependency.
-  ## Set to false if bringing your own PostgreSQL.
+  ## Set to false if bringing your own PostgreSQL, and set secret value postgresql-uri.
   ##
   enabled: true
 
-  ## If bringing your own PostgreSQL, the full uri to use
-  ## e.g. postgres://concourse:changeme@my-postgres.com:5432/concourse?sslmode=disable
-  ##
-  # uri:
-
   ### PostgreSQL User to create.
   ##
   postgresUser: concourse
@@ -543,59 +429,51 @@ postgresql:
     ##
     enabled: true
 
-## Configuration values for the Credential Manager.
+## Configuration values for using a Credential Manager. Only one can be enabled.
 ## ref: https://concourse.ci/creds.html
 ##
 credentialManager:
-  ## Enable Credential Manager using below configuration.
-  ##
-  enabled: false
 
-  ## use Hashicorp Vault for Credential Manager.
+  ## Configuration for Kubernetes Secrets as the Credential Manager. Supported in Concourse 3.7.0.
   ##
-  # vault:
-    ## URL pointing to vault addr (i.e. http://vault:8200).
-    ##
-    # url:
+  kubernetes:
 
-    ## vault path under which to namespace credential lookup, defaults to /concourse.
+    ## Enable the use of Kubernetes Secrets.
     ##
-    # pathPrefix:
+    enabled: true
 
-    ## if the Vault server is using a self-signed certificate, provide the CA public key.
-    ## the value will be written to /concourse-vault/ca.cert
+    ## Prefix to use for Kubernetes namespaces under which secrets will be looked up. Defaults to
+    ## the Release name hyphen, e.g. "my-release-" produces namespace "my-release-main" for the
+    ## "main" Concourse team.
     ##
-    # caCert: |-
+    ## namespacePrefix:
 
-    ## vault authentication backend, leave this blank if using an intial periodic token
-    ## currently supported backends: token, approle, cert
-    ##
-    # authBackend:
+    ## Teams to create namespaces for to hold secrets.
+    teams:
+      - main
 
-    ## initial periodic token issued for concourse
-    ## ref: https://www.vaultproject.io/docs/concepts/tokens.html#periodic-tokens
-    ##
-    # clientToken:
+  ## Configuration for Hashicorp Vault as the Credential Manager.
+  ##
+  vault:
+    enabled: false
 
-    ## set role_id for [AppRole](https://www.vaultproject.io/docs/auth/approle.html) backend
-    ## make sure to also set authBackend to `approle`.
+    ## URL pointing to vault addr (i.e. http://vault:8200).
     ##
-    # appRoleId:
+    # url:
 
-    ## set secret_id for [AppRole](https://www.vaultproject.io/docs/auth/approle.html) backend
-    ## make sure to also set authBackend to `approle`.
+    ## vault path under which to namespace credential lookup, defaults to /concourse.
     ##
-    # appRoleSecretId:
+    pathPrefix: /concourse
 
-    ## provide the client certificate for authenticating with the [TLS](https://www.vaultproject.io/docs/auth/cert.html) backend
-    ## the value will be written to /concourse-vault/client.cert
-    ## make sure to also set authBackend to `cert`
-    # clientCert: |-
+    ## if the Vault server is using a self-signed certificate, set this to true,
+    ## and provide a value for the cert in secrets.
+    ##
+    # caCert:
 
-    ## provide the client key for authenticating with the [TLS](https://www.vaultproject.io/docs/auth/cert.html) backend
-    ## the value will be written to /concourse-vault/client.key
-    ## make sure to also set authBackend to `cert`
-    # clientKey: |-
+    ## vault authentication backend, leave this blank if using an initial periodic token
+    ## currently supported backends: token, approle, cert.
+    ##
+    # authBackend:
 
 ## For RBAC support:
 rbac:
@@ -605,6 +483,185 @@ rbac:
   # rbac version
   apiVersion: v1beta1
 
-  ## Ignored if rbac.create is true
+  ## The name of the service account to use for web pods if rbac.create is false
+  ##
+  webServiceAccountName: default
+
+  ## The name of the service account to use for worker pods if rbac.create is false
+  ##
+  workerServiceAccountName: default
+
+## For managing secrets using Helm
+##
+secrets:
+
+  ## Create the secret resource from the following values. Set this to
+  ## false to manage these secrets outside Helm.
+  ##
+  create: true
+
+  ## Concourse Host Keys.
+  ## ref: https://concourse.ci/binaries.html#generating-keys
+  ##
+  hostKey: |-
+    -----BEGIN RSA PRIVATE KEY-----
+    MIIEogIBAAKCAQEA2AUPXxuiDC/qrBWjIdT5fvNcMlMEYpR3X4SLQIgLC1ULDsCO
+    fleKZ+Wi4RzwbkUKiKmJm5GeyNVVCDdfvdD1Sd1+5faqmp2/OQBzLS7o8NY/btMw
+    8h9lx4KVJaJJ1EM1EiyGY41Nx591KP14pBfr0/NdOIrDu2JvF6e7CHEbrzkN57kb
+    BVQkaIMaS01Rw/5Oe68GFalli2ii8L8dNWVVzquBh5PwVWimvTgwv3TYG2TH8L1V
+    V7n+/zRRpkjMl2+PUouGqD+Bp+4wF+hp4AW5v24CqjtLJEMv4IEJv2FRfrOauBIZ
+    XjAS1SSg9VaTOS3iwxaYrv8uG1XfMFHICvkEPQIDAQABAoIBAG87W8jrX6vK2Jm3
+    ooJ/OeFmymiXWsCwFi+2/kVCR/2T0tfLyxO/W+NX2WD1F9CP+HaaZeMXPp3HS7up
+    V8FT4ZohVYBwXTS0WYyucKApcYThrVQRpzhldnEfClGQmVeVK7Sp/KEyV4Sc1SVA
+    L2i/cI142N2Ohm7spquVkLcuFsVINzZ0fXCv25dTqbkEgjTJzNdBzyFXvc4z0Mt9
+    gW14M7mz+YKYOfsCxIEm438fC9b16C96yIFBdN+/jaP8pmb2RoIE2D0F8bj5K1hR
+    YyGFKMOU4e6cYq59iWfubKuu2WNJEBk/5aO7x7Xu2S0k8wIYlwxFuu4LfR2Kvizu
+    +mFVf3kCgYEA9e0+40tJGpOPM8hAB3DwXjYc8lCuyYf3z30T3RqVNCUVSWnlaj/s
+    3ENi6+Ng3u+Zs8cR2CFou+jAClTyWLuSnI9yACD0eyW9n4bzYMUbgdC6vneLjpzx
+    wWR9Xv5RmZVly7xWuqcgEeEf8RNcYI3oXby0laF3EObvuAx/4ETIkFcCgYEA4N42
+    w1UEWGopWBIIXYHkEPHQuF0SxR2CZyh9ExTeSxFphyibkcHRjDW+t91ZLnSm5k1N
+    TOdYuc0ApBV3U+TexeFvDI94L/Oze6Ht5MatRQz8kRwMFGJL3TrpbgTmWdfG05Ad
+    oiScJzwY16oJXnKusxik7V+gCCNNE0/2UuMnY4sCgYAEf82pvOPef5qcGOrK+A79
+    ukG3UTCRcVJgUmp9nhHivVbxW+WdlwPPV9BEfol0KrAGMPsrmBjhbzWsOregVfYt
+    tRYh2HiAlEUu2Po06AZDzrzL5UYBWu+1WRBOH5sAk1IkcxKnIY2dph++elszTQVW
+    SbCIGEckYQU7ucbRJJECywKBgBb4vHFx8vKxTa3wkagzx7+vZFohL/SxEgxFx5k2
+    bYsPqU8kZ9gZC7YeG3CfDShAxHgMd5QeoiLA/YrFop4QaG2gnP6UfXuwkqpTnYDc
+    hwDh1b9hNR6z9/oOtaAGoh2VfHtKYqyYvtcHPaZyeWiLoKstHlQdi7SpHouVhJ1t
+    FS4HAoGAGy+56+zvdROjJy9A2Mn/4BvWrsu4RSQILBJ6Hb4TpF46p2fn0rwqyhOj
+    Occs+xkdEsI9w5phXzIEeOq2LqvWHDPxtdLpxOrrmx4AftAWdM8S1+OqTpzHihK1
+    y1ZOrWfvON+XjWFFAEej/CpQZkNUkTzjTtSC0dnfAveZlasQHdI=
+    -----END RSA PRIVATE KEY-----
+
+  hostKeyPub: |-
+    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYBQ9fG6IML+qsFaMh1Pl+81wyUwRilHdfhItAiAsLVQsOwI5+V4pn5aLhHPBuRQqIqYmbkZ7I1VUIN1+90PVJ3X7l9qqanb85AHMtLujw1j9u0zDyH2XHgpUloknUQzUSLIZjjU3Hn3Uo/XikF+vT8104isO7Ym8Xp7sIcRuvOQ3nuRsFVCRogxpLTVHD/k57rwYVqWWLaKLwvx01ZVXOq4GHk/BVaKa9ODC/dNgbZMfwvVVXuf7/NFGmSMyXb49Si4aoP4Gn7jAX6GngBbm/bgKqO0skQy/ggQm/YVF+s5q4EhleMBLVJKD1VpM5LeLDFpiu/y4bVd8wUcgK+QQ9 Concourse
+
+  ## Concourse Session Signing Keys.
+  ## ref: https://concourse.ci/binaries.html#generating-keys
+  ##
+  sessionSigningKey: |-
+    -----BEGIN RSA PRIVATE KEY-----
+    MIIEowIBAAKCAQEAwLql/rUIaI+PX7Tl3FWcTee4sQf8/daakALXx955tPwkhqlY
+    e4T2V84p/ylFvNWpM4vfcMYKfMY0JLKgAgBvJhCytSkDBhTBoWmN6yE0AB11P9En
+    lIZRBWNYqaC2cSge2ZD8qOSnwfFhnQAW8+7pE+ElJAVh7dtdF3A478H50lIigq8I
+    zMWp2EGJpFC7/Uu36oIL/03MNGCmrH1jvtTuJiAMQUZYyL1ReBkvvHOzw9i4HXPy
+    SMVtcllm4NBs2aVPtwhr2kwSkLt8t1bPdRn6OIyEAw5WktzAKaiZnkTvj6g3xzdp
+    zKcrdlBr9aznlNvoSinBUfvtwyFmvFN1HHbA9wIDAQABAoIBAE7G/DrUfI9gvtX7
+    90jMpYsigFe8UCjho2PiBZlo0o6r0bJJXiV+/8J8PqZRlHPPUc4EClzqVjcSPRYS
+    /VxUGRqSELoD/Xxq14rGvn+xnrO9VsOzFl6bWFq/dOpBCtHN+G4t2VifvgKES8YE
+    11z19sdta+UBXjn/RFnkQSGfRCI3QqTaYvjxevt0uWlyPmqkFPQQw8bvHIXzoB+B
+    rzeiMa++nMvbX5pAH9XA0BvhyuH3fHidTUwiVBpkMcpLWtjP0A0JTsecDdbinDDq
+    un2EIo8zMWRwKQN/JnUxsi8AUEigBTCUqeDgREXtW62uvFkSpcVMXwmVityLYIVy
+    qnVLUCECgYEA6IwXkP1qnSfcNeoVI/ypDuz1/kdqcjSPhLYe+jdiLLoFkMW9AlDm
+    lzwNaWlTFD9ygo+NjJCo63/A8HCm55sajws5hZ6r20vdZcKFMk9h0qF5oVA7lkQ2
+    gvG2WaznuU7KkqhfP+pXhiLgZKoJkst/+g7r6uHpredwDY6hxeBK4vsCgYEA1CqH
+    8ywC5qUo/36kQg/TU2adN/YEHdJAAbU23EVrGQSVmnXW08H2NLFk0tsxrwoNnbgp
+    PIk2J7BimbJvbND17ibr4GAklDTsR8aJkDl+0JgNCAK9N07qVt1s7FXzhg95jUL9
+    EQW55z60GAJpecqNwA4Jsa8P852N0355Obp92TUCgYBkOBvf7JcJ66fHxH4f6D+j
+    oxPQ5k5Fsck4VJS9GSlCRVkor09ptBvsiYDuMOoRC9b51YwXTDDAbWplNOd5YSrt
+    AtVjdKJz/BoKRO7KY9Owxs54au+DLxqfDDSeKRokjoRW+CE0lnXp5RX3zCAcF3+r
+    8MpTi9D9lYSBEzs84BDmCQKBgQCMcH6/K3HcJJVn0fd+tyUGftUw9sswxjySJNbk
+    pZrH263/qWMDls+Xf5kire9MU1ZCAWZiaN0NFoed/2wcVpGEDAV0548u/30r4bKr
+    YjOcdhmiJNYFJ1qdF0MDib2CDvpB1IbZXrX46RujDO2urbJ435HxKNVhR/had8xc
+    tyKYxQKBgCVDhN0MhnlUQJVZfX42APmF4gQg0r3sfL/NGXjEjMIKKFe5a88eZVHr
+    L8x1+dp0q7czC8a/l1DUuiwDKl8OEpxLsGCq/J/wAfrSMPifu6EUlbUwlJOPdgha
+    +p/KFAelHXJ2w/8yackAcarh35VP7ixhuvxswHNdgvfsBTFcjn30
+    -----END RSA PRIVATE KEY-----
+
+  ## Concourse Worker Keys.
+  ## ref: https://concourse.ci/binaries.html#generating-keys
+  ##
+  workerKey: |-
+    -----BEGIN RSA PRIVATE KEY-----
+    MIIEpAIBAAKCAQEAuPehUmBXAQCoA7TLAQCYhf+vzcZVyj+VGXnMhLHnWLk7dRjo
+    CU8GgNamdS5h7G3ywxOvKA3YjOLr8XyOMLS4c+e8N7tIzlMWdiXhe0lcBH9Z1ai5
+    +Bof3/BlDUBksiKdc1A+QcfX6tDwMkOO5re1H4vOK3H/Cype58wCB03HYNgb05ED
+    fW1Bj2qvz29VtmyjwEMuDs100iMqwCfPUx9oxXmmX8sUBRmw/Y1Rx/8pdKIjKw3m
+    kWIHHBOSCPimO1qC47Aa8v/UH9hERCykyuFHiBiKlnIvZWm9bYvhsRTz4gt5KzRY
+    6OI0oVeHlLOHDSK48Da8VWij15lOqO2Nx6WssQIDAQABAoIBADET22UNFOi6MNpS
+    5S5N5ypezlnOD0NLnZcV3zMyNQ0wkNsgEakuo64Zxi7/cJIYFjq2hVoeWl//cdUw
+    VFYODYcLbMBo3AeKukH9CRf6PgUfeUmcrENtQxnbIiTi+hTd5GMNXod7rAmtCJ59
+    mHQVOGS3ZqvWYnKm+mmMktk3RPinynX/A4y3WHPacuAS58HM09Ck43WcHMxbGpsL
+    /gZpICyFYZ2DviM+AHyWGcmw7LJrpC0QHo6+BAFMs4xlUecNgVIFUpfOoAcfsdtG
+    K9j4AbuZ47iFisbay+1pyg/7O5eRTdGVQRtc7PBMOjea5jGsfmlDmdn1ZS50ykun
+    ANfoQ5UCgYEA9Ak73PRy9nLlRkt4OBCF/4fwThUCMedsnWaVjQBMJYim4FB2ivF5
+    cKdWt3y/RZI85KKYu0EXhLEoSIEAfz057R8t3QdVK4tZx6B47UFjBjCYeVMtwHDQ
+    prxQiOPHIHCplBNFuGzA5VXL9gQLRD+ek0uOy2GJJ0Wu1xyeouI+SW8CgYEAwgkO
+    TOtOogqmcAALjWgeeQiZetflSKbJlpQNhmCPAMm0SFI8eF4SpRXLzd41VC2mLIwT
+    L3tjc7/8ocXoElFM4L0fo9Lx/SHFH4JEn5FT0PXPmvsF2JRhsXJFLJSihxF/91Xs
+    2aBcQILPFzLcrI6OFUakNwGTU/CIxpkzRvQrG98CgYEAzNVnUuo4CNadzagRK3Xr
+    E3Yl5VRK+FpY17FAfA6w25xc/dFr/un61e0Po4no/ltmEz7LVfmn5O/ScTEemq5o
+    jbjrBShfe+JGpIH0nqiQlqR5hvSjZXEMIbfVHWGbRYZrQGgA0HEwZA7k2QXB8zI3
+    R0lXfSzMM5OQ0uwp12xxfa8CgYBHILq1R6zTicPpWprhg0FobNaWSX4rW7iaEjvC
+    /rJtP4Nu33Z7SUDcc1j6ZnJ2ISXBPrfpt/mE/OPHCZ1A2bysxadLjpBWkoKIQmCV
+    fdiTyQgJb+t8sSf+vDzPUs0hZjDaogzo2ff3TfxMLMDoIHnFItgfsdwn8QyygIZj
+    hC4pUQKBgQDqsxnkI6yXFE5gshnW7H8zqKNlzKd/dZEL6e+lRz4R3UY/KcEkRAfq
+    Yi3cwo9fE3U3kSmpl5MQwUjWm/BZ7JyueoY/4ndwaFPgc34IKsgJ0wau9pZiQAB1
+    DxpOSF+BR71Jx3sxvIdCODNTtm645j5yrZVnJAuMPofo5XFmunDoJA==
+    -----END RSA PRIVATE KEY-----
+
+  workerKeyPub: |-
+    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC496FSYFcBAKgDtMsBAJiF/6/NxlXKP5UZecyEsedYuTt1GOgJTwaA1qZ1LmHsbfLDE68oDdiM4uvxfI4wtLhz57w3u0jOUxZ2JeF7SVwEf1nVqLn4Gh/f8GUNQGSyIp1zUD5Bx9fq0PAyQ47mt7Ufi84rcf8LKl7nzAIHTcdg2BvTkQN9bUGPaq/Pb1W2bKPAQy4OzXTSIyrAJ89TH2jFeaZfyxQFGbD9jVHH/yl0oiMrDeaRYgccE5II+KY7WoLjsBry/9Qf2ERELKTK4UeIGIqWci9lab1ti+GxFPPiC3krNFjo4jShV4eUs4cNIrjwNrxVaKPXmU6o7Y3Hpayx Concourse
+
+  ## Secrets for DB encryption
+  ##
+  # encryptionKey:
+  # oldEncryptionKey:
+
+  ## Secrets for Concourse basic auth
+  ##
+  basicAuthUsername: concourse
+  basicAuthPassword: concourse
+
+  ## Secrets for GitHub OAuth.
+  ##
+  # githubAuthClientId:
+  # githubAuthClientSecret:
+
+  ## Secrets for GitLab OAuth.
+  ##
+  # gitlabAuthClientId:
+  # gitlabAuthClientSecret:
+
+  ## Secrets for generic OAuth.
+  ##
+  # genericOauthClientId:
+  # genericOauthClientSecret:
+
+  ## If bringing your own PostgreSQL, set this to the full uri to use
+  ## e.g. postgres://concourse:changeme@my-postgres.com:5432/concourse?sslmode=disable
+  ##
+  # postgresqlUri:
+
+  ## Secrets for using Hashcorp Vault as a credential manager.
+  ##
+  ## if the Vault server is using a self-signed certificate, provide the CA public key.
+  ## the value will be written to /concourse-vault/ca.cert
+  ##
+  # vaultCaCert: |-
+
+  ## initial periodic token issued for concourse
+  ## ref: https://www.vaultproject.io/docs/concepts/tokens.html#periodic-tokens
+  ##
+  # vaultClientToken:
+
+  ## set role_id for [AppRole](https://www.vaultproject.io/docs/auth/approle.html) backend
+  ## make sure to also set credentialManager.vault.authBackend to `approle`.
+  ##
+  # vaultAppRoleId:
+
+  ## set secret_id for [AppRole](https://www.vaultproject.io/docs/auth/approle.html) backend
+  ## make sure to also set credentialManager.vault.authBackend to `approle`.
+  ##
+  # vaultAppRoleSecretId:
+
+  ## provide the client certificate for authenticating with the [TLS](https://www.vaultproject.io/docs/auth/cert.html) backend
+  ## the value will be written to /concourse-vault/client.cert
+  ## make sure to also set credentialManager.vault.authBackend to `cert`
+  ##
+  # vaultClientCert: |-
+
+  ## provide the client key for authenticating with the [TLS](https://www.vaultproject.io/docs/auth/cert.html) backend
+  ## the value will be written to /concourse-vault/client.key
+  ## make sure to also set credentialManager.vault.authBackend to `cert`
   ##
-  serviceAccountName: default
+  # vaultClientKey: |-
