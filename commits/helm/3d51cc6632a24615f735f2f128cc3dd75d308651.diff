commit 3d51cc6632a24615f735f2f128cc3dd75d308651
Author: Tomas Pizarro <tompizmor@users.noreply.github.com>
Date:   Wed Apr 4 14:23:18 2018 +0200

    [stable/orangehrm] Refactor image property in values.yaml (#4650)
    
    * [stable/orangehrm] Refactor image properties in values.yaml
    
    * Use rolling tag and refactor pullSecrets
    
    * Fix lint issue
    
    * Update Chart.yaml

diff --git a/stable/orangehrm/Chart.yaml b/stable/orangehrm/Chart.yaml
index 5d7c5e2ae..baa1dfd0c 100644
--- a/stable/orangehrm/Chart.yaml
+++ b/stable/orangehrm/Chart.yaml
@@ -1,5 +1,5 @@
 name: orangehrm
-version: 0.6.1
+version: 1.0.0
 appVersion: 4.0.0
 description: OrangeHRM is a free HR management system that offers a wealth of modules
   to suit the needs of your business.
diff --git a/stable/orangehrm/README.md b/stable/orangehrm/README.md
index 739e422db..bc0982ced 100644
--- a/stable/orangehrm/README.md
+++ b/stable/orangehrm/README.md
@@ -45,41 +45,44 @@ The command removes all the Kubernetes components associated with the chart and
 
 The following table lists the configurable parameters of the OrangeHRM chart and their default values.
 
-|              Parameter               |               Description                |                    Default                     |
-|--------------------------------------|------------------------------------------|------------------------------------------------|
-| `image`                              | OrangeHRM image                          | `bitnami/orangehrm:{VERSION}`                  |
-| `imagePullPolicy`                    | Image pull policy                        | `IfNotPresent`                                 |
-| `orangehrmUsername`                  | User of the application                  | `user`                                         |
-| `orangehrmPassword`                  | Application password                     | _random 10 character long alphanumeric string_ |
-| `smtpHost`                           | SMTP host                                | `nil`                                          |
-| `smtpPort`                           | SMTP port                                | `nil`                                          |
-| `smtpUser`                           | SMTP user                                | `nil`                                          |
-| `smtpPassword`                       | SMTP password                            | `nil`                                          |
-| `smtpProtocol`                       | SMTP protocol [`ssl`, `none`]            | `nil`                                          |
-| `serviceType`                        | Kubernetes Service type                  | `LoadBalancer`                                 |
-| `resources`                          | CPU/Memory resource requests/limits      | Memory: `512Mi`, CPU: `300m`                   |
-| `persistence.enabled`                | Enable persistence using PVC             | `true`                                         |
-| `persistence.apache.storageClass`    | PVC Storage Class for Apache volume      | `nil` (uses alpha storage class annotation)    |
-| `persistence.apache.accessMode`      | PVC Access Mode for Apache volume        | `ReadWriteOnce`                                |
-| `persistence.apache.size`            | PVC Storage Request for Apache volume    | `1Gi`                                          |
-| `persistence.orangehrm.storageClass` | PVC Storage Class for OrangeHRM volume   | `nil` (uses alpha storage class annotation)    |
-| `persistence.orangehrm.accessMode`   | PVC Access Mode for OrangeHRM volume     | `ReadWriteOnce`                                |
-| `persistence.orangehrm.size`         | PVC Storage Request for OrangeHRM volume | `8Gi`                                          |
-| `allowEmptyPassword`                 | Allow DB blank passwords                 | `yes`                                          |
-| `externalDatabase.host`              | Host of the external database            | `nil`                                          |
-| `externalDatabase.port`              | Port of the external database            | `3306`                                         |
-| `externalDatabase.user`              | Existing username in the external db     | `bn_orangehrm`                                 |
-| `externalDatabase.password`          | Password for the above username          | `nil`                                          |
-| `externalDatabase.database`          | Name of the existing databse             | `bitnami_orangehrm`                            |
-| `mariadb.enabled`                    | Wheter to use or not the mariadb chart   | `true`                                         |
-| `mariadb.mariadbDatabase`            | Database name to create                  | `bitnami_orangehrm`                            |
-| `mariadb.mariadbUser`                | Database user to create                  | `bn_orangehrm`                                 |
-| `mariadb.mariadbPassword`            | Password for the database                | `nil`                                          |
-| `mariadb.mariadbRootPassword`        | MariaDB admin password                   | `nil`                                          |
-| `mariadb.persistence.enabled`        | Enable MariaDB persistence using PVC     | `true`                                         |
-| `mariadb.persistence.storageClass`   | PVC Storage Class for MariaDB volume     | `nil` (uses alpha storage class annotation)    |
-| `mariadb.persistence.accessMode`     | PVC Access Mode for MariaDB volume       | `ReadWriteOnce`                                |
-| `mariadb.persistence.size`           | PVC Storage Request for MariaDB volume   | `8Gi`                                          |
+|              Parameter               |               Description                |                    Default                              |
+|--------------------------------------|------------------------------------------|-------------------------------------------------------- |
+| `image.registry`                     | OrangeHRM image registry                 | `docker.io`                                             |
+| `image.repository`                   | OrangeHRM Image name                     | `bitnami/orangehrm`                                     |
+| `image.tag`                          | OrangeHRM Image tag                      | `{VERSION}`                                             |
+| `image.pullPolicy`                   | Image pull policy                        | `Always` if `imageTag` is `latest`, else `IfNotPresent` |
+| `image.pullSecrets`                  | Specify image pull secrets               | `nil`                                                   |
+| `orangehrmUsername`                  | User of the application                  | `user`                                                  |
+| `orangehrmPassword`                  | Application password                     | _random 10 character long alphanumeric string_          |
+| `smtpHost`                           | SMTP host                                | `nil`                                                   |
+| `smtpPort`                           | SMTP port                                | `nil`                                                   |
+| `smtpUser`                           | SMTP user                                | `nil`                                                   |
+| `smtpPassword`                       | SMTP password                            | `nil`                                                   |
+| `smtpProtocol`                       | SMTP protocol [`ssl`, `none`]            | `nil`                                                   |
+| `serviceType`                        | Kubernetes Service type                  | `LoadBalancer`                                          |
+| `resources`                          | CPU/Memory resource requests/limits      | Memory: `512Mi`, CPU: `300m`                            |
+| `persistence.enabled`                | Enable persistence using PVC             | `true`                                                  |
+| `persistence.apache.storageClass`    | PVC Storage Class for Apache volume      | `nil` (uses alpha storage class annotation)             |
+| `persistence.apache.accessMode`      | PVC Access Mode for Apache volume        | `ReadWriteOnce`                                         |
+| `persistence.apache.size`            | PVC Storage Request for Apache volume    | `1Gi`                                                   |
+| `persistence.orangehrm.storageClass` | PVC Storage Class for OrangeHRM volume   | `nil` (uses alpha storage class annotation)             |
+| `persistence.orangehrm.accessMode`   | PVC Access Mode for OrangeHRM volume     | `ReadWriteOnce`                                         |
+| `persistence.orangehrm.size`         | PVC Storage Request for OrangeHRM volume | `8Gi`                                                   |
+| `allowEmptyPassword`                 | Allow DB blank passwords                 | `yes`                                                   |
+| `externalDatabase.host`              | Host of the external database            | `nil`                                                   |
+| `externalDatabase.port`              | Port of the external database            | `3306`                                                  |
+| `externalDatabase.user`              | Existing username in the external db     | `bn_orangehrm`                                          |
+| `externalDatabase.password`          | Password for the above username          | `nil`                                                   |
+| `externalDatabase.database`          | Name of the existing databse             | `bitnami_orangehrm`                                     |
+| `mariadb.enabled`                    | Wheter to use or not the mariadb chart   | `true`                                                  |
+| `mariadb.mariadbDatabase`            | Database name to create                  | `bitnami_orangehrm`                                     |
+| `mariadb.mariadbUser`                | Database user to create                  | `bn_orangehrm`                                          |
+| `mariadb.mariadbPassword`            | Password for the database                | `nil`                                                   |
+| `mariadb.mariadbRootPassword`        | MariaDB admin password                   | `nil`                                                   |
+| `mariadb.persistence.enabled`        | Enable MariaDB persistence using PVC     | `true`                                                  |
+| `mariadb.persistence.storageClass`   | PVC Storage Class for MariaDB volume     | `nil` (uses alpha storage class annotation)             |
+| `mariadb.persistence.accessMode`     | PVC Access Mode for MariaDB volume       | `ReadWriteOnce`                                         |
+| `mariadb.persistence.size`           | PVC Storage Request for MariaDB volume   | `8Gi`                                                   |
 
 The above parameters map to the env variables defined in [bitnami/orangehrm](http://github.com/bitnami/bitnami-docker-orangehrm). For more information please refer to the [bitnami/orangehrm](http://github.com/bitnami/bitnami-docker-orangehrm) image documentation.
 
diff --git a/stable/orangehrm/templates/deployment.yaml b/stable/orangehrm/templates/deployment.yaml
index 40382ad10..cd584d8c2 100644
--- a/stable/orangehrm/templates/deployment.yaml
+++ b/stable/orangehrm/templates/deployment.yaml
@@ -13,10 +13,16 @@ spec:
       labels:
         app: {{ template "orangehrm.fullname" . }}
     spec:
+      {{- if .Values.image.pullSecrets }}
+      imagePullSecrets:
+      {{- range .Values.image.pullSecrets }}
+        - name: {{ . }}
+      {{- end}}
+      {{- end }}
       containers:
       - name: {{ template "orangehrm.fullname" . }}
-        image: "{{ .Values.image }}"
-        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
+        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
+        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
         env:
         - name: ALLOW_EMPTY_PASSWORD
           value: {{ .Values.allowEmptyPassword | quote }}
diff --git a/stable/orangehrm/values.yaml b/stable/orangehrm/values.yaml
index 1febdce2e..95e3f5622 100644
--- a/stable/orangehrm/values.yaml
+++ b/stable/orangehrm/values.yaml
@@ -1,12 +1,21 @@
 ## Bitnami OrangeHRM image version
 ## ref: https://hub.docker.com/r/bitnami/orangehrm/tags/
 ##
-image: bitnami/orangehrm:4.0.0-r3
-
-## Specify a imagePullPolicy
-## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
-##
-imagePullPolicy: IfNotPresent
+image:
+  registry: docker.io
+  repository: bitnami/orangehrm
+  tag: 4.0.0
+  ## Specify a imagePullPolicy
+  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
+  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
+  ##
+  pullPolicy: IfNotPresent
+  ## Optionally specify an array of imagePullSecrets.
+  ## Secrets must be manually created in the namespace.
+  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+  ##
+  # pullSecrets:
+  #   - myRegistrKeySecretName
 
 ## User of the application
 ## ref: https://github.com/bitnami/bitnami-docker-orangehrm#configuration
