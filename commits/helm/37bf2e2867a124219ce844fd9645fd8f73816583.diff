commit 37bf2e2867a124219ce844fd9645fd8f73816583
Author: Shane Starcher <shanestarcher@gmail.com>
Date:   Sat Apr 7 12:04:09 2018 -0400

    [dex] - initial chart for coreos/dex (#4580)
    
    * initial dex chart by kfox1111
    
    * dex template updates, label cleanup, slight refactor, version update to 2.10.0
    
    * using standardized naming for services
    
    * adding notes, helmignore
    
    * remove default resource usage
    
    * dex allowing service annotations
    
    * dex using proper labels for the job and using helm hooks
    
    * confirm to rbac
    
    * fixing deployment version and chart label

diff --git a/stable/dex/.helmignore b/stable/dex/.helmignore
new file mode 100644
index 000000000..f0c131944
--- /dev/null
+++ b/stable/dex/.helmignore
@@ -0,0 +1,21 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
diff --git a/stable/dex/Chart.yaml b/stable/dex/Chart.yaml
new file mode 100644
index 000000000..d6e8511ce
--- /dev/null
+++ b/stable/dex/Chart.yaml
@@ -0,0 +1,16 @@
+name: dex
+version: 0.1.0
+appVersion: 2.10.0
+description: CoreOS Dex
+keywords:
+- dex
+- oidc
+icon: https://github.com/coreos/dex/raw/master/Documentation/logos/dex-glyph-color.png
+home: https://github.com/coreos/dex/
+source:
+- https://github.com/coreos/dex/
+maintainers:
+- name: kfox1111
+  email: Kevin.Fox@pnnl.gov
+- name: sstarcher
+  email: shane.starcher@gmail.com
diff --git a/stable/dex/templates/NOTES.txt b/stable/dex/templates/NOTES.txt
new file mode 100644
index 000000000..d3b521ddf
--- /dev/null
+++ b/stable/dex/templates/NOTES.txt
@@ -0,0 +1,15 @@
+1. Get the application URL by running these commands:
+{{- if contains "NodePort" .Values.service.type }}
+  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "dex.fullname" . }})
+  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
+  echo https://$NODE_IP:$NODE_PORT
+{{- else if contains "LoadBalancer" .Values.service.type }}
+     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
+           You can watch the status of by running 'kubectl get svc -w {{ template "dex.fullname" . }}'
+  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "dex.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
+  echo https://$SERVICE_IP:{{ .Values.service.port }}
+{{- else if contains "ClusterIP" .Values.service.type }}
+  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "dex.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
+  echo "Visit https://127.0.0.1:8080/.well-known/openid-configuration to use your application"
+  kubectl port-forward $POD_NAME 8080:5556
+{{- end }}
diff --git a/stable/dex/templates/_helpers.tpl b/stable/dex/templates/_helpers.tpl
new file mode 100644
index 000000000..9b8baac29
--- /dev/null
+++ b/stable/dex/templates/_helpers.tpl
@@ -0,0 +1,43 @@
+{{/* vim: set filetype=mustache: */}}
+{{/*
+Expand the name of the chart.
+*/}}
+{{- define "dex.name" -}}
+{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
+{{- end -}}
+
+{{/*
+Create a default fully qualified app name.
+We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
+If release name contains chart name it will be used as a full name.
+*/}}
+{{- define "dex.fullname" -}}
+{{- if .Values.fullnameOverride -}}
+{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
+{{- else -}}
+{{- $name := default .Chart.Name .Values.nameOverride -}}
+{{- if contains $name .Release.Name -}}
+{{- .Release.Name | trunc 63 | trimSuffix "-" -}}
+{{- else -}}
+{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
+{{- end -}}
+{{- end -}}
+{{- end -}}
+
+{{/*
+Create chart name and version as used by the chart label.
+*/}}
+{{- define "dex.chart" -}}
+{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
+{{- end -}}
+
+{{/*
+Create the name of the service account to use
+*/}}
+{{- define "dex.serviceAccountName" -}}
+{{- if .Values.serviceAccount.create -}}
+    {{ default (include "dex.fullname" .) .Values.serviceAccount.name }}
+{{- else -}}
+    {{ default "default" .Values.serviceAccount.name }}
+{{- end -}}
+{{- end -}}
diff --git a/stable/dex/templates/deployment.yaml b/stable/dex/templates/deployment.yaml
new file mode 100644
index 000000000..3dbe761d3
--- /dev/null
+++ b/stable/dex/templates/deployment.yaml
@@ -0,0 +1,72 @@
+{{ $fullname := include "dex.fullname" . }}
+{{ $tlsBuiltName := printf "%s-tls" $fullname }}
+{{ $tlsSecretName := default $tlsBuiltName .Values.secret.tlsName }}
+apiVersion: apps/v1beta2
+kind: Deployment
+metadata:
+  name: {{ template "dex.fullname" . }}
+  labels:
+    app: {{ template "dex.name" . }}
+    chart: {{ template "dex.chart" . }}
+    heritage: "{{ .Release.Service }}"
+    release: "{{ .Release.Name }}"
+spec:
+  replicas: {{ .Values.replicas }}
+  strategy:
+    rollingUpdate:
+      maxSurge: 0
+      maxUnavailable: 1
+    type: RollingUpdate
+  selector:
+    matchLabels:
+      app: {{ template "dex.name" . }}
+      release: "{{ .Release.Name }}"
+  template:
+    metadata:
+      labels:
+        app: {{ template "dex.name" . }}
+        release: "{{ .Release.Name }}"
+    spec:
+      serviceAccountName: {{ template "dex.serviceAccountName" . }}
+      nodeSelector:
+{{ toYaml .Values.nodeSelector | indent 10 }}
+      containers:
+      - name: main
+        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
+        imagePullPolicy: {{ .Values.imagePullPolicy }}
+        command:
+        - /usr/local/bin/dex
+        - serve
+        - /etc/dex/cfg/config.yaml
+        resources:
+{{ toYaml .Values.resources | indent 10 }}
+        ports:
+        - name: https
+          containerPort: 5556
+          protocol: TCP
+        env:
+{{ toYaml .Values.env | indent 10 }}
+        volumeMounts:
+        - mountPath: /etc/dex/cfg
+          name: config
+        - mountPath: /etc/dex/tls
+          name: tls
+{{- if ne (len .Values.extraVolumeMounts) 0 }}
+{{ toYaml .Values.extraVolumeMounts | indent 8 }}
+{{- end }}
+      volumes:
+      - secret:
+          defaultMode: 420
+          items:
+          - key: config.yaml
+            path: config.yaml
+          secretName: {{ template "dex.fullname" . }}
+        name: config
+      - name: tls
+        secret:
+          defaultMode: 420
+          secretName: {{ $tlsSecretName | quote }}
+{{- if ne (len .Values.extraVolumes) 0 }}
+{{ toYaml .Values.extraVolumes | indent 6 }}
+{{- end }}
+
diff --git a/stable/dex/templates/job.yaml b/stable/dex/templates/job.yaml
new file mode 100644
index 000000000..7ffed69c7
--- /dev/null
+++ b/stable/dex/templates/job.yaml
@@ -0,0 +1,88 @@
+{{- if .Values.selfSigned.create }}
+{{ $fullname := include "dex.fullname" . }}
+{{ $tlsBuiltName := printf "%s-tls" $fullname }}
+{{ $tlsSecretName := default $tlsBuiltName .Values.secret.tlsName }}
+{{ $caBuiltName := printf "%s-ca" $fullname }}
+{{ $caName := default $caBuiltName .Values.secret.caName }}
+{{ $local := dict "i" 0 }}
+apiVersion: batch/v1
+kind: Job
+metadata:
+  annotations:
+    "helm.sh/hook": post-install
+    "helm.sh/hook-delete-policy": hook-succeeded
+  name: {{ template "dex.fullname" . }}
+  labels:
+    app: {{ template "dex.name" . }}
+    chart: {{ template "dex.chart" . }}
+    heritage: "{{ .Release.Service }}"
+    release: "{{ .Release.Name }}"
+    component: "job"
+spec:
+  activeDeadlineSeconds: {{ .Values.selfSigned.activeDeadlineSeconds }}
+  template:
+    metadata:
+      labels:
+        app: {{ template "dex.name" . }}
+        release: "{{ .Release.Name }}"
+        component: "job"
+    spec:
+      serviceAccountName: {{ template "dex.serviceAccountName" . }}
+      restartPolicy: OnFailure
+      containers:
+      - name: main
+        image: "{{ .Values.selfSigned.image }}:{{ .Values.selfSigned.imageTag }}"
+        imagePullPolicy: {{ .Values.selfSigned.imagePullPolicy }}
+        command:
+        - /bin/bash
+        - -exc
+        - |
+          cat << EOF > req.cnf
+          [req]
+          req_extensions = v3_req
+          distinguished_name = req_distinguished_name
+
+          [req_distinguished_name]
+
+          [ v3_req ]
+          basicConstraints = CA:FALSE
+          keyUsage = nonRepudiation, digitalSignature, keyEncipherment
+          subjectAltName = @alt_names
+
+          [alt_names]
+          {{- $_ := set $local "i" 1 }}
+          {{- range .Values.selfSigned.altNames }}
+          DNS.{{ $local.i }} = {{ . }}
+          {{- $_ := set $local "i" ( add1 $local.i ) }}
+          {{- end }}
+          {{- $_ := set $local "i" 1 }}
+          {{- range .Values.selfSigned.altIPs }}
+          IP.{{ $local.i }} = {{ . }}
+          {{- $_ := set $local "i" ( add1 $local.i ) }}
+          {{- end }}
+          EOF
+
+          openssl genrsa -out ca-key.pem 2048;
+          openssl req -x509 -new -nodes -key ca-key.pem -days {{ .Values.selfSigned.caDays }} -out ca.pem -subj "/CN=dex-ca";
+
+          openssl genrsa -out key.pem 2048;
+          openssl req -new -key key.pem -out csr.pem -subj "/CN=dex" -config req.cnf;
+          openssl x509 -req -in csr.pem -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out cert.pem -days {{ .Values.selfSigned.certDays }} -extensions v3_req -extfile req.cnf;
+
+          kubectl delete configmap {{ $caName | quote }} --namespace {{ .Release.Namespace }} || true
+          kubectl delete secret {{ $caName | quote }} {{ $tlsSecretName }} --namespace {{ .Release.Namespace }} || true
+
+          kubectl create configmap {{ $caName | quote }} --namespace {{ .Release.Namespace }} --from-file dex-ca.pem=ca.pem;
+          kubectl create secret tls {{ $caName | quote }} --namespace {{ .Release.Namespace }} --cert=ca.pem --key=ca-key.pem;
+          kubectl create secret tls {{ $tlsSecretName }} --namespace {{ .Release.Namespace }} --cert=cert.pem --key=key.pem;
+{{- if .Values.inMiniKube }}
+          cp -a ca.pem /var/lib/localkube/oidc.pem
+        volumeMounts:
+        - mountPath: /var/lib/localkube
+          name: localkube
+      volumes:
+      - name: localkube
+        hostPath:
+          path: /var/lib/localkube
+{{- end }}
+{{- end }}
diff --git a/stable/dex/templates/rolebinding.yaml b/stable/dex/templates/rolebinding.yaml
new file mode 100644
index 000000000..7f0f4fd79
--- /dev/null
+++ b/stable/dex/templates/rolebinding.yaml
@@ -0,0 +1,19 @@
+{{- if .Values.rbac.create }}
+apiVersion: rbac.authorization.k8s.io/v1beta1
+kind: ClusterRoleBinding
+metadata:
+  labels:
+    app: {{ template "dex.name" . }}
+    chart: {{ template "dex.chart" . }}
+    heritage: "{{ .Release.Service }}"
+    release: "{{ .Release.Name }}"
+  name: {{ template "dex.fullname" . }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cluster-admin
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "dex.serviceAccountName" . }}
+    namespace: {{ .Release.Namespace }}
+{{- end -}}
diff --git a/stable/dex/templates/secret.yaml b/stable/dex/templates/secret.yaml
new file mode 100644
index 000000000..c5f03ff6d
--- /dev/null
+++ b/stable/dex/templates/secret.yaml
@@ -0,0 +1,11 @@
+apiVersion: v1
+kind: Secret
+metadata:
+  labels:
+    app: {{ template "dex.name" . }}
+    chart: {{ template "dex.chart" . }}
+    heritage: "{{ .Release.Service }}"
+    release: "{{ .Release.Name }}"
+  name: {{ template "dex.fullname" . }}
+data:
+  config.yaml: {{ toYaml .Values.config | b64enc }}
diff --git a/stable/dex/templates/service.yaml b/stable/dex/templates/service.yaml
new file mode 100644
index 000000000..8ef347278
--- /dev/null
+++ b/stable/dex/templates/service.yaml
@@ -0,0 +1,26 @@
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "dex.fullname" . }}
+  labels:
+    app: {{ template "dex.name" . }}
+    chart: {{ template "dex.chart" . }}
+    release: {{ .Release.Name }}
+    heritage: {{ .Release.Service }}
+{{- if .Values.service.annotations }}
+  annotations:
+{{ toYaml .Values.service.annotations | indent 4 }}
+{{- end }}
+spec:
+  type: {{ .Values.service.type}}
+  sessionAffinity: None
+  ports:
+  - port: {{ .Values.service.port }}
+    targetPort: https
+{{- if hasKey .Values.service "externalIPs" }}
+  externalIPs:
+{{ toYaml .Values.service.externalIPs | indent 4 }}
+{{- end }}
+  selector:
+    app: {{ template "dex.name" . }}
+    release: {{ .Release.Name | quote }}
diff --git a/stable/dex/templates/serviceaccount.yaml b/stable/dex/templates/serviceaccount.yaml
new file mode 100644
index 000000000..a933dac43
--- /dev/null
+++ b/stable/dex/templates/serviceaccount.yaml
@@ -0,0 +1,11 @@
+{{- if .Values.serviceAccount.create }}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  labels:
+    app: {{ template "dex.name" . }}
+    chart: {{ template "dex.chart" . }}
+    heritage: "{{ .Release.Service }}"
+    release: "{{ .Release.Name }}"
+  name: {{ template "dex.serviceAccountName" . }}
+{{- end -}}
diff --git a/stable/dex/values.yaml b/stable/dex/values.yaml
new file mode 100644
index 000000000..48e34b0f0
--- /dev/null
+++ b/stable/dex/values.yaml
@@ -0,0 +1,100 @@
+# Default values for dex
+# This is a YAML-formatted file.
+# Declare name/value pairs to be passed into your templates.
+# name: value
+
+image: quay.io/coreos/dex
+imageTag: "v2.10.0"
+imagePullPolicy: "IfNotPresent"
+
+inMiniKube: false
+
+nodeSelector: {}
+
+replicas: 1
+
+service:
+  type: ClusterIP
+  port: 5556
+  # externalIPs:
+
+resources:
+  # Normal resource usage of dex server
+  # limits:
+  #   cpu: 100m
+  #   memory: 50Mi
+  # requests:
+  #   cpu: 100m
+  #   memory: 50Mi
+
+extraVolumes: []
+extraVolumeMounts: []
+
+selfSigned:
+  create: true
+  image: gcr.io/google_containers/kubernetes-dashboard-init-amd64
+  imageTag: "v1.0.0"
+  imagePullPolicy: "IfNotPresent"
+  caDays: 10000
+  certDays: 10000
+  altNames:
+  - dex.minikube.local
+  altIPs: {}
+#  - 192.168.42.219
+
+secret: {}
+#  Override the default secret names here.
+#  tlsName: dex-tls
+#  caName: dex-ca
+
+env: []
+
+rbac:
+  # Specifies whether RBAC resources should be created
+  create: true
+
+serviceAccount:
+  # Specifies whether a ServiceAccount should be created
+  create: true
+  # The name of the ServiceAccount to use.
+  # If not set and create is true, a name is generated using the fullname template
+  name:
+
+config:
+  issuer: https://dex.minikube.local:5556
+  storage:
+    type: kubernetes
+    config:
+      inCluster: true
+  logger:
+    level: debug
+  web:
+    https: 0.0.0.0:5556
+    tlsCert: /etc/dex/tls/tls.crt
+    tlsKey: /etc/dex/tls/tls.key
+  connectors:
+#  - type: github
+#    id: github
+#    name: GitHub
+#    config:
+#      clientID: xxxxxxxxxxxxxxx
+#      clientSecret: yyyyyyyyyyyyyyyyyyyyy
+#      redirectURI: https://dex.minikube.local:5556/callback
+#      org: kubernetes
+  oauth2:
+    skipApprovalScreen: true
+
+#  staticClients:
+#  - id: example-app
+#    redirectURIs:
+#    - 'http://192.168.42.219:31850/oauth2/callback'
+#    name: 'Example App'
+#    secret: ZXhhbXBsZS1hcHAtc2VjcmV0
+
+  enablePasswordDB: true
+#  staticPasswords:
+#  - email: "admin@example.com"
+#    # bcrypt hash of the string "password"
+#    hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
+#    username: "admin"
+#    userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
