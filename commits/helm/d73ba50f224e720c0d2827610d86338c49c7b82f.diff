commit d73ba50f224e720c0d2827610d86338c49c7b82f
Author: Salim Salaues <ssalaues@users.noreply.github.com>
Date:   Wed Oct 31 13:56:21 2018 -0700

    [stable/redis-ha] improvement: refactor of redis-ha (#7323)
    
    * improvement: refactor of redis-ha
    
    Fixes issues:
    Race condition with masters
    Announced service no longer working
    PVCs possibilites
    redis-ha doesn't failover properly
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * cleanup and default to mymaster
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * fixes: requested changes
    
    readiness typo, move security context to pod level, and remove -x flag from init script
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * fix sentinel var name
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * docs: upgrade notes and refinements
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * improvement: update docs, various fixes, simpler init script, better resiliency
    
    fix notes
    
    force failover in the event that the existing master is not accessible
    
    simpler script, better failover, values update
    
    fix corner cases where upgrades can fail
    
    fix auth issue
    
    Cleanup unused code
    
    Default to auth disabled to prevent a new password to be generated on each upgrade
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * Fixed auth issues
    
    Switched 'exit 0' to 'return 0' so that auth can be configured correctly.
    
    Fixed `SENTINEl` typo
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * fixes: update with best practices
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * updates: improved doc, consistent style, and added options for custom configmap files
    
    Signed-off-by: Salim <salim.salaues@scality.com>
    
    * add auth info to README
    
    Signed-off-by: Salim <salim.salaues@scality.com>

diff --git a/stable/redis-ha/Chart.yaml b/stable/redis-ha/Chart.yaml
index 499a0433f..c250024fb 100644
--- a/stable/redis-ha/Chart.yaml
+++ b/stable/redis-ha/Chart.yaml
@@ -5,19 +5,16 @@ keywords:
 - redis
 - keyvalue
 - database
-version: 2.2.4
-appVersion: 4.0.11-r1
-description: Highly available Redis cluster with multiple sentinels and standbys.
+version: 3.0.0
+appVersion: 4.0.11
+description: Highly available Kubernetes implementation of Redis
 icon: https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1200px-Redis_Logo.svg.png
 maintainers:
-  - email: ikaboubi@gmail.com
-    name: smileisak
-  - email: ianmaddox@google.com
-    name: ianmaddox
+- email: salimsalaues@gmail.com
+  name: ssalaues
 details:
-  This package provides a highly available Redis cluster with multiple sentinels and standbys.
-  Note the `redis-master` pod is used for bootstrapping only and can be deleted once
-  the cluster is up and running.
+  This Helm chart provides a highly available Redis implementation with a master/slave configuration
+  and uses Sentinel sidecars for failover management
 sources:
-  - https://github.com/smileisak/docker-images/tree/master/redis
-  - https://github.com/diegocn/docker-images/tree/master/redis
+- https://redis.io/download
+- https://github.com/scality/Zenko/tree/development/1.0/kubernetes/zenko/charts/redis-ha
diff --git a/stable/redis-ha/README.md b/stable/redis-ha/README.md
index 759e06cbc..c1a46c938 100644
--- a/stable/redis-ha/README.md
+++ b/stable/redis-ha/README.md
@@ -8,17 +8,23 @@
 $ helm install stable/redis-ha
 ```
 
-By default this chart install one master pod containing redis master container and sentinel container, 2 sentinels and 1 redis slave.
+By default this chart install 3 pods total:
+ * one pod containing a redis master and sentinel containers
+ * two pods each containing redis slave and sentinel containers.
 
 ## Introduction
 
-This chart bootstraps a [Redis](https://github.com/bitnami/bitnami-docker-redis) deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.
+This chart bootstraps a [Redis](https://redis.io) highly available master/slave statefulset in a [Kubernetes](http://kubernetes.io) cluster using the Helm package manager. 
 
 ## Prerequisites
 
-- Kubernetes 1.5+ with Beta APIs enabled
+- Kubernetes 1.8+ with Beta APIs enabled
 - PV provisioner support in the underlying infrastructure
 
+## Upgrading the Chart
+
+Please note that there have been a number of changes simplifying the redis management strategy (for better failover and elections) in the 3.x version of this chart. These changes allow the use of official [redis](https://hub.docker.com/_/redis/) images that do not require special RBAC or ServiceAccount roles. As a result when upgrading from version >=2.0.1 to >=3.0.0 of this chart, `Role`, `RoleBinding`, and `ServiceAccount` resources should be deleted manually.
+
 ## Installing the Chart
 
 To install the chart
@@ -27,7 +33,7 @@ To install the chart
 $ helm install stable/redis-ha
 ```
 
-The command deploys Redis on the Kubernetes cluster in the default configuration. By default this chart install one master pod containing redis master container and sentinel container, 2 sentinels and 1 redis slave. The [configuration](#configuration) section lists the parameters that can be configured during installation.
+The command deploys Redis on the Kubernetes cluster in the default configuration. By default this chart install one master pod containing redis master container and sentinel container along with 2 redis slave pods each containing their own sentinel sidecars. The [configuration](#configuration) section lists the parameters that can be configured during installation.
 
 > **Tip**: List all releases using `helm list`
 
@@ -41,46 +47,38 @@ $ helm delete <chart-name>
 
 The command removes all the Kubernetes components associated with the chart and deletes the release.
 
-## Appliance mode
-
-This chart can be used to launch Redis in a black box appliance mode that you can think of like a managed service. To run as an appliance, change the service type for the master and slave LBs to enable local access from within the K8S cluster.
-
-To launch in VPC-only appliance mode, set appliance.serviceType to "LoadBalancer". If using appliance mode in Google Cloud, set appliance.annotations to:
-`cloud.google.com/load-balancer-type:Internal`
-
-```bash
-$ helm install \
-  --set="servers.annotations.cloud\.google\.com/load-balancer-type=Internal,servers.serviceType=LoadBalancer" \
-    stable/redis-ha
-```
-
 ## Configuration
 
 The following table lists the configurable parameters of the Redis chart and their default values.
 
 | Parameter                        | Description                                                                                                                  | Default                                                   |
 | -------------------------------- | -----------------------------------------------------                                                                        | --------------------------------------------------------- |
-| `redis_image`                    | Redis image                                                                                                                  | `quay.io/smile/redis:4.0.6r2`                             |
-| `resources.server`               | CPU/Memory for master/slave nodes resource requests/limits                                                                   | Memory: `200Mi`, CPU: `100m`                              |
-| `resources.sentinel`             | CPU/Memory for sentinel node resource requests/limits                                                                        | Memory: `200Mi`, CPU: `100m`                              |
-| `replicas.servers`               | Number of redis master/slave pods                                                                                            | 3                                                         |
-| `replicas.sentinels`             | Number of sentinel pods                                                                                                      | 3                                                         |
-| `nodeSelector`                   | Node labels for pod assignment                                                                                               | {}                                                        |
-| `tolerations`                    | Toleration labels for pod assignment                                                                                         | []                                                        |
-| `podAntiAffinity.sentinel`       | Antiaffinity for pod assignment of sentinels, `hard` or `soft`                                                               | `soft`                                                    |
-| `podAntiAffinity.server`         | Antiaffinity for pod assignment of servers, `hard` or `soft`                                                                 | `soft`                                                    |
-| `servers.serviceType`            | Set to "LoadBalancer" to enable access from the VPC                                                                          | ClusterIP                                                 |
-| `servers.annotations`            | See Appliance mode                                                                                                           | ``                                                        |
-| `rbac.create`                    |  whether RBAC resources should be created                                                                                    | true                                                      |
-| `serviceAccount.create`          | whether a new service account name that the agent will use should be created.                                                | true                                                      |
-| `serviceAccount.name`            | service account to be used.  If not set and serviceAccount.create is `true` a name is generated using the fullname template. | ``                                                        |
+| `image`                          | Redis image                                                                                                                  | `redis`                                                   |
+| `tag`                            | Redis tag                                                                                                                    | `4.0.11-stretch`                                          |
+| `replicas`                       | Number of redis master/slave pods                                                                                            | `3`                                                       |
+| `redis.port`                     | Port to access the redis service                                                                                             | `6379`                                                    |
+| `redis.masterGroupName`          | Redis convention for naming the cluster group                                                                                | `mymaster`                                                |
+| `redis.config`                   | Any valid redis config options in this section will be applied to each server (see below)                                    | see values.yaml                                           |
+| `redis.customConfig`             | Allows for custom redis.conf files to be applied. If this is used then `redis.config` is ignored                             | ``                                                        |
+| `redis.resources`                | CPU/Memory for master/slave nodes resource requests/limits                                                                   | `{}`                                                      |
+| `sentinel.port`                  | Port to access the sentinel service                                                                                          | `26379`                                                   |
+| `sentinel.quorum`                | Minimum number of servers necessary to maintain quorum                                                                       | `2`                                                       |
+| `sentinel.config`                | Valid sentinel config options in this section will be applied as config options to each sentinel (see below)                 | see values.yaml                                           |
+| `sentinel.customConfig`          | Allows for custom sentinel.conf files to be applied. If this is used then `sentinel.config` is ignored                       | ``                                                        |
+| `sentinel.resources`             | CPU/Memory for sentinel node resource requests/limits                                                                        | `{}`                                                      |
+| `auth`                           | Enables or disables redis AUTH (Requires `redisPassword` to be set)                                                          | `false`                                                   |
+| `redisPassword`                  | A password that configures a `requirepass` and `masterauth` in the conf parameters (Requires `auth: enabled`)                | ``                                                        |
+| `nodeSelector`                   | Node labels for pod assignment                                                                                               | `{}`                                                      |
+| `tolerations`                    | Toleration labels for pod assignment                                                                                         | `[]`                                                      |
+| `podAntiAffinity.server`         | Antiaffinity for pod assignment of servers, `hard` or `soft`                                                                 | `Hard node and soft zone anti-affinity`                   |
 
 
 Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,
 
 ```bash
 $ helm install \
-  --set redis_image=quay.io/smile/redis:4.0.6r2 \
+  --set image=redis \
+  --set tag=4.0.11-stretch \
     stable/redis-ha
 ```
 
@@ -94,25 +92,24 @@ $ helm install -f values.yaml stable/redis-ha
 
 > **Tip**: You can use the default [values.yaml](values.yaml)
 
-## Internals
-The customized Redis server image determines whether the pod that executes it will be a Redis Sentinel,
-Master, or Slave and launches the appropriate service. This Helm chart signals Sentinel status with
-environment variables. If not set, the newly launched pod will query K8S for an active master. If none
-exists, it uses a deterministic means of sensing whether it should launch as master then writes "master"
-or "slave" to the label called redis-role as appropriate. It's this label that determines which LB a pod
-can be seen through.
+## Custom Redis and Sentinel config options
 
-The redis-role=master pod is the key for the cluster to get started. Sentinels will wait for it to appear
-in the LB before they finish launching. All other pods wait for the Sentinels to ID the master. Running
-Pods also set the labels podIP and runID. runID is the first few characters of the unique run_id value
-generated by each Redis server.
+This chart allows for most redis or sentinel config options to be passed as a key value pair through the `values.yaml` under `redis.config` and `sentinel.config`. See links below for all available options.
 
-During normal operation, there should be only one redis-role=master pod. If it fails, the Sentinels
-will nominate a new master and change all the redis-role values appropriately.
+[Example redis.conf](http://download.redis.io/redis-stable/redis.conf)
+[Example sentinel.conf](http://download.redis.io/redis-stable/sentinel.conf)
 
-To see the pod roles, run the following:
+For example `repl-timeout 60` would be added to the `redis.config` section of the `values.yaml` as:
 
-```bash
-$ kubectl get pods -L redis-role
+```yml
+    repl-timeout: "60"
 ```
 
+Sentinel options supported must be in the the `sentinel <option> <master-group-name> <value>` format. For example, `sentinel down-after-milliseconds 30000` would be added to the `sentinel.config` section of the `values.yaml` as:
+
+```yml
+    down-after-milliseconds: 30000
+```
+
+If more control is needed from either the redis or sentinel config then an entire config can be defined under `redis.customConfig` or `sentinel.customConfig`. Please note that these values will override any configuration options under their respective section. For example, if you define `sentinel.customConfig` then the `sentinel.config` is ignored.
+
diff --git a/stable/redis-ha/templates/NOTES.txt b/stable/redis-ha/templates/NOTES.txt
index 848a232e0..4b96152b5 100644
--- a/stable/redis-ha/templates/NOTES.txt
+++ b/stable/redis-ha/templates/NOTES.txt
@@ -1,16 +1,15 @@
-Redis cluster can be accessed via port 6379 on the following DNS name from within your cluster:
+Redis cluster can be accessed via port {{ .Values.redis.port }} on the following DNS name from within your cluster:
 {{ template "redis-ha.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
 
 To connect to your Redis server:
 
 {{- if .Values.auth }}
 1. Get the randomly generated redis password:
-   
    echo $(kubectl get secret {{ template "redis-ha.fullname" . }} -o "jsonpath={.data['auth']}" | base64 -D)
 
-2. Connect to the Redis master pod that you can use as a client:
+2. Connect to the Redis master pod that you can use as a client. By default the {{ template "redis-ha.fullname" . }}-server-0 pod is configured as the master:
 
-   kubectl exec -it $(kubectl get pod -o jsonpath='{range .items[*]}{.metadata.name} {.status.containerStatuses[0].state}{"\n"}{end}' -l redis-role=master | grep running | awk '{print $1}') bash
+   kubectl exec -it {{ template "redis-ha.fullname" . }}-server-0 bash -n {{ .Release.Namespace }}
 
 3. Connect using the Redis CLI (inside container):
 
@@ -18,9 +17,9 @@ To connect to your Redis server:
 {{- else }}
 1. Run a Redis pod that you can use as a client:
 
-   kubectl exec -n {{ .Release.Namespace }} -it $(kubectl get pod -n {{ .Release.Namespace }} -o jsonpath='{range .items[*]}{.metadata.name} {.status.containerStatuses[0].state}{"\n"}{end}' -l redis-role=master | grep running | awk '{print $1}') bash
+   kubectl exec -it {{ template "redis-ha.fullname" . }}-server-0 bash -n {{ .Release.Namespace }}
 
 2. Connect using the Redis CLI:
 
-  redis-cli -h {{ template "redis-ha.fullname" . }}-slave-svc.{{ .Release.Namespace }}.svc.cluster.local
+  redis-cli -h {{ template "redis-ha.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
 {{- end }}
diff --git a/stable/redis-ha/templates/_helpers.tpl b/stable/redis-ha/templates/_helpers.tpl
index 34148ee7c..d6565fd9b 100644
--- a/stable/redis-ha/templates/_helpers.tpl
+++ b/stable/redis-ha/templates/_helpers.tpl
@@ -44,15 +44,3 @@ Example output:
   {{- replace "+" "_" .Chart.Version | printf "%s-%s" .Chart.Name -}}
 {{- end -}}
 
-
-{{/*
-Create the name of the service account to use
-*/}}
-{{- define "redis-ha.serviceAccountName" -}}
-{{- if .Values.serviceAccount.create -}}
-    {{ default (include "redis-ha.fullname" .) .Values.serviceAccount.name }}
-{{- else -}}
-    {{ default "default" .Values.serviceAccount.name }}
-{{- end -}}
-{{- end -}}
-
diff --git a/stable/redis-ha/templates/redis-auth-secret.yaml b/stable/redis-ha/templates/redis-auth-secret.yaml
index dab23a6ed..21be59131 100644
--- a/stable/redis-ha/templates/redis-auth-secret.yaml
+++ b/stable/redis-ha/templates/redis-auth-secret.yaml
@@ -7,9 +7,5 @@ metadata:
 {{ include "labels.standard" . | indent 4 }}
 type: Opaque
 data:
-  {{- if .Values.redisPassword }}
   auth: {{ .Values.redisPassword | b64enc | quote }}
-  {{- else }}
-  auth: {{ randAlphaNum 10 | b64enc | quote }}
-  {{- end }}
 {{- end -}}
diff --git a/stable/redis-ha/templates/redis-ha-configmap.yaml b/stable/redis-ha/templates/redis-ha-configmap.yaml
new file mode 100644
index 000000000..5e958e78a
--- /dev/null
+++ b/stable/redis-ha/templates/redis-ha-configmap.yaml
@@ -0,0 +1,109 @@
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  name: {{ template "redis-ha.fullname" . }}-configmap
+  labels:
+    heritage: {{ .Release.Service }}
+    release: {{ .Release.Name }}
+    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
+    app: {{ template "redis-ha.fullname" . }}
+data:
+  redis.conf: |
+{{- if .Values.redis.customConfig }}
+{{ .Values.redis.customConfig | indent 4 }}
+{{- else }}
+    dir "/data"
+    {{- range $key, $value := .Values.redis.config }}
+    {{ $key }} {{ $value }}
+    {{- end }}
+{{- if .Values.auth }}
+    requirepass replace-default-auth
+    masterauth replace-default-auth
+{{- end }}
+{{- end }}
+
+  sentinel.conf: |
+{{- if .Values.sentinel.customConfig }}
+{{ .Values.sentinel.customConfig | indent 4 }}
+{{- else }}
+    dir "/data"
+    {{- $root := . -}}
+    {{- range $key, $value := .Values.sentinel.config }}
+    sentinel {{ $key }} {{ $root.Values.redis.masterGroupName }} {{ $value }}
+    {{- end }}
+{{- if .Values.auth }}
+    sentinel auth-pass {{ .Values.redis.masterGroupName }} replace-default-auth
+{{- end }}
+{{- end }}
+
+  init.bash: |
+    MASTER=`redis-cli -h {{ template "redis-ha.fullname" . }} -p {{ .Values.sentinel.port }} sentinel get-master-addr-by-name {{ .Values.redis.masterGroupName }} | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'`
+    REDIS_CONF=/data/conf/redis.conf
+    SENTINEL_CONF=/data/conf/sentinel.conf
+    
+    set -e
+    function sentinel_update(){
+        echo "Updating sentinel config"
+        sed -i "1s/^/sentinel monitor {{ .Values.redis.masterGroupName }} $1 {{ .Values.redis.port }} {{ .Values.sentinel.quorum }} \n/" $SENTINEL_CONF
+    }
+
+    function redis_update(){
+        echo "Updating redis config"
+        echo "slaveof $1 {{ .Values.redis.port }}" >> $REDIS_CONF
+    }
+
+    function setup_defaults(){
+        echo "Setting up defaults"
+        if [[ "$HOSTNAME" == "{{ template "redis-ha.fullname" . }}-server-0" ]]; then
+            echo "Setting this pod as the default master"
+            sed -i "s/^.*slaveof.*//" $REDIS_CONF
+            sentinel_update "$POD_IP"
+        else
+            echo "Setting default slave config.."
+            echo "slaveof {{ template "redis-ha.fullname" . }}-server-0.{{ template "redis-ha.fullname" . }} {{ .Values.redis.port }}" >> $REDIS_CONF
+            sentinel_update "{{ template "redis-ha.fullname" . }}-server-0.{{ template "redis-ha.fullname" . }}"
+            redis_update "{{ template "redis-ha.fullname" . }}-server-0.{{ template "redis-ha.fullname" . }}"
+        fi
+    }
+
+    function find_master(){
+        echo "Attempting to find master"
+        if [[ ! `redis-cli -h $MASTER{{ if .Values.auth }} -a $AUTH{{ end }} ping` ]]; then
+           echo "Can't ping master, attempting to force failover"
+           if redis-cli -h {{ template "redis-ha.fullname" . }} -p {{ .Values.sentinel.port }} sentinel failover {{ .Values.redis.masterGroupName }} | grep -q 'NOGOODSLAVE' ; then 
+               setup_defaults
+               return 0
+           fi
+           sleep 10
+           MASTER=`redis-cli -h {{ template "redis-ha.fullname" . }} -p {{ .Values.sentinel.port }} sentinel get-master-addr-by-name {{ .Values.redis.masterGroupName }} | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'`
+           if [[ "$MASTER" ]]; then
+               sentinel_update $MASTER
+               redis_update $MASTER
+           else
+              echo "Could not failover, exiting..."
+              exit 1
+           fi
+        else
+            echo "Found reachable master, updating config"
+            sentinel_update $MASTER
+            redis_update $MASTER
+        fi
+    }
+
+    mkdir -p /data/conf/
+    echo "Initializing config.."
+
+    cp /readonly-config/redis.conf $REDIS_CONF
+    cp /readonly-config/sentinel.conf $SENTINEL_CONF
+
+    if [[ "$MASTER" ]]; then
+        find_master
+    else
+        setup_defaults
+    fi
+    if [[ "$AUTH" ]]; then
+        echo "Setting auth values"
+        sed -i "s/replace-default-auth/$AUTH/" $REDIS_CONF $SENTINEL_CONF
+    fi
+
+    echo "Ready..."
diff --git a/stable/redis-ha/templates/redis-ha-pdb.yaml b/stable/redis-ha/templates/redis-ha-pdb.yaml
new file mode 100644
index 000000000..28697c3d3
--- /dev/null
+++ b/stable/redis-ha/templates/redis-ha-pdb.yaml
@@ -0,0 +1,14 @@
+{{- if .Values.podDisruptionBudget -}}
+apiVersion: policy/v1beta1
+kind: PodDisruptionBudget
+metadata:
+  name: {{ template "redis-ha.fullname" . }}-pdb
+  labels:
+{{ include "labels.standard" . | indent 4 }}
+spec:
+  selector:
+    matchLabels:
+      release: {{ .Release.Name }}
+      app: {{ template "redis-ha.name" . }}
+{{ toYaml .Values.podDisruptionBudget | indent 2 }}
+{{- end -}}
diff --git a/stable/redis-ha/templates/redis-ha-service.yaml b/stable/redis-ha/templates/redis-ha-service.yaml
new file mode 100644
index 000000000..388bde8d1
--- /dev/null
+++ b/stable/redis-ha/templates/redis-ha-service.yaml
@@ -0,0 +1,25 @@
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "redis-ha.fullname" . }}
+  labels:
+{{ include "labels.standard" . | indent 4 }}
+  annotations:
+  {{- if .Values.serviceAnnotations }}
+{{ toYaml .Values.serviceAnnotations | indent 4 }}
+  {{- end }}
+spec:
+  type: ClusterIP
+  clusterIP: None
+  ports:
+  - name: server
+    port: {{ .Values.redis.port }}
+    protocol: TCP
+    targetPort: redis
+  - name: sentinel
+    port: {{ .Values.sentinel.port }}
+    protocol: TCP
+    targetPort: sentinel
+  selector:
+    release: {{ .Release.Name }}
+    app: {{ template "redis-ha.name" . }}
diff --git a/stable/redis-ha/templates/redis-ha-statefulset.yaml b/stable/redis-ha/templates/redis-ha-statefulset.yaml
new file mode 100644
index 000000000..c06a5a017
--- /dev/null
+++ b/stable/redis-ha/templates/redis-ha-statefulset.yaml
@@ -0,0 +1,149 @@
+apiVersion: apps/v1
+kind: StatefulSet
+metadata:
+  name: {{ template "redis-ha.fullname" . }}-server
+  labels:
+{{ include "labels.standard" . | indent 4 }}
+spec:
+  selector:
+    matchLabels:
+      release: {{ .Release.Name }}
+      app: {{ template "redis-ha.name" . }}
+  serviceName: {{ template "redis-ha.fullname" . }}
+  replicas: {{ .Values.replicas }}
+  podManagementPolicy: OrderedReady
+  updateStrategy:
+    type: RollingUpdate
+  template:
+    metadata:
+      annotations:
+        checksum/config: {{ include (print $.Template.BasePath "/redis-ha-configmap.yaml") . | sha256sum }}
+      {{- if .Values.podAnnotations }}
+{{ toYaml .Values.podAnnotations . | indent 8 }}
+      {{- end }}
+      labels:
+        release: {{ .Release.Name }}
+        app: {{ template "redis-ha.name" . }}
+    spec:
+      {{- if .Values.nodeSelector }}
+      nodeSelector:
+{{ toYaml .Values.nodeSelector | indent 8 }}
+      {{- end }}
+      {{- if .Values.tolerations }}
+      tolerations:
+{{ toYaml .Values.tolerations | indent 8 }}
+      {{- end }}
+    {{- with .Values.affinity }}
+      affinity:
+{{ tpl . $ | indent 8 }}
+    {{- end }}
+      securityContext:
+{{ toYaml .Values.securityContext | indent 8 }}
+      initContainers:
+      - name: config-init
+        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
+        imagePullPolicy: {{ .Values.image.pullPolicy }}
+        command:
+        - bash
+        args:
+        - /readonly-config/init.bash
+        env:
+{{- if .Values.auth }}
+        - name: AUTH
+          valueFrom:
+            secretKeyRef:
+              name: {{ template "redis-ha.fullname" . }}
+              key: auth
+{{- end }}
+        - name: POD_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        volumeMounts:
+        - name: config
+          mountPath: /readonly-config
+          readOnly: true
+        - name: data
+          mountPath: /data
+      containers:
+      - name: redis
+        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
+        imagePullPolicy: {{ .Values.image.pullPolicy }}
+        command:
+        - redis-server
+        args:
+        - /data/conf/redis.conf
+        livenessProbe:
+          exec:
+            command: ["redis-cli", "ping"]
+          initialDelaySeconds: 15
+          periodSeconds: 5
+        readinessProbe:
+          exec:
+            command: ["redis-cli", "ping"]
+          initialDelaySeconds: 15
+          periodSeconds: 5
+        resources:
+{{ toYaml .Values.redis.resources | indent 10 }}
+        ports:
+        - name: redis
+          containerPort: {{ .Values.redis.port }}
+        volumeMounts:
+        - mountPath: /data
+          name: data
+      - name: sentinel
+        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
+        imagePullPolicy: {{ .Values.image.pullPolicy }}
+        command:
+          - redis-sentinel
+        args:
+          - /data/conf/sentinel.conf
+        livenessProbe:
+          exec:
+            command: ["redis-cli", "-p", "{{ .Values.sentinel.port }}", "ping"]
+          initialDelaySeconds: 15
+          periodSeconds: 5
+        readinessProbe:
+          exec:
+            command: ["redis-cli", "-p", "{{ .Values.sentinel.port }}", "ping"]
+          initialDelaySeconds: 15
+          periodSeconds: 5
+        resources:
+{{ toYaml .Values.sentinel.resources | indent 10 }}
+        ports:
+          - name: sentinel
+            containerPort: {{ .Values.sentinel.port }}
+        volumeMounts:
+        - mountPath: /data
+          name: data
+      volumes:
+      - name: config
+        configMap:
+          name: {{ template "redis-ha.fullname" . }}-configmap
+{{- if .Values.persistentVolume.enabled }}
+  volumeClaimTemplates:
+  - metadata:
+      name: data
+      annotations:
+      {{- range $key, $value := .Values.persistentVolume.annotations }}
+        {{ $key }}: {{ $value }}
+      {{- end }}
+    spec:
+      accessModes:
+      {{- range .Values.persistentVolume.accessModes }}
+        - {{ . | quote }}
+      {{- end }}
+      resources:
+        requests:
+          storage: {{ .Values.persistentVolume.size | quote }}
+    {{- if .Values.persistentVolume.storageClass }}
+    {{- if (eq "-" .Values.persistentVolume.storageClass) }}
+      storageClassName: ""
+    {{- else }}
+      storageClassName: "{{ .Values.persistentVolume.storageClass }}"
+    {{- end }}
+    {{- end }}
+{{- else }}
+      - name: data
+        emptyDir: {}
+{{- end }}
diff --git a/stable/redis-ha/templates/redis-master-service.yaml b/stable/redis-ha/templates/redis-master-service.yaml
deleted file mode 100644
index 464fd16cc..000000000
--- a/stable/redis-ha/templates/redis-master-service.yaml
+++ /dev/null
@@ -1,19 +0,0 @@
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ template "redis-ha.fullname" . }}-master-svc
-  labels:
-{{ include "labels.standard" . | indent 4 }}
-  annotations:
-{{ toYaml .Values.servers.annotations | indent 4 }}
-spec:
-  ports:
-  - port: 6379
-    protocol: TCP
-    targetPort: 6379
-  selector:
-    app: {{ template "redis-ha.name" . }}
-    release: "{{ .Release.Name }}"
-    redis-node: "true"
-    redis-role: "master"
-  type: "{{ .Values.servers.serviceType }}"
diff --git a/stable/redis-ha/templates/redis-role.yaml b/stable/redis-ha/templates/redis-role.yaml
deleted file mode 100644
index bac045270..000000000
--- a/stable/redis-ha/templates/redis-role.yaml
+++ /dev/null
@@ -1,17 +0,0 @@
-{{- if .Values.rbac.create -}}
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: Role
-metadata:
-  name: {{ template "redis-ha.fullname" . }}
-  labels:
-{{ include "labels.standard" . | indent 4 }}
-rules:
-- apiGroups:
-    - ""
-  resources:
-    - pods
-  verbs:
-    - get
-    - list
-    - patch
-{{- end -}}
diff --git a/stable/redis-ha/templates/redis-rolebinding.yaml b/stable/redis-ha/templates/redis-rolebinding.yaml
deleted file mode 100644
index 4764c68c2..000000000
--- a/stable/redis-ha/templates/redis-rolebinding.yaml
+++ /dev/null
@@ -1,15 +0,0 @@
-{{- if .Values.rbac.create -}}
-apiVersion: rbac.authorization.k8s.io/v1beta1
-kind: RoleBinding
-metadata:
-  name: {{ template "redis-ha.fullname" . }}
-  labels:
-{{ include "labels.standard" . | indent 4 }}
-roleRef:
-  apiGroup: rbac.authorization.k8s.io
-  kind: Role
-  name: {{ template "redis-ha.fullname" . }}
-subjects:
-- kind: ServiceAccount
-  name: {{ template "redis-ha.serviceAccountName" . }}
-{{- end -}}
diff --git a/stable/redis-ha/templates/redis-sentinel-deployment.yaml b/stable/redis-ha/templates/redis-sentinel-deployment.yaml
deleted file mode 100644
index 070d9c664..000000000
--- a/stable/redis-ha/templates/redis-sentinel-deployment.yaml
+++ /dev/null
@@ -1,67 +0,0 @@
-apiVersion: extensions/v1beta1
-kind: Deployment
-metadata:
-  name: {{ template "redis-ha.fullname" . }}-sentinel
-  labels:
-{{ include "labels.standard" . | indent 4 }}
-spec:
-  replicas: {{ .Values.replicas.sentinels }}
-  template:
-    metadata:
-      labels:
-        app: {{ template "redis-ha.name" . }}
-        release: {{ .Release.Name }}
-        component: sentinel
-        name: {{ template "redis-ha.fullname" . }}-sentinel
-    spec:
-      serviceAccountName: {{ template "redis-ha.serviceAccountName" . }}
-      {{- if .Values.nodeSelector }}
-      nodeSelector:
-{{ toYaml .Values.nodeSelector | indent 8 }}
-      {{- end }}
-      {{- if .Values.tolerations }}
-      tolerations:
-{{ toYaml .Values.tolerations | indent 8 }}
-      {{- end }}
-      {{- if eq .Values.podAntiAffinity.sentinel "hard" }}
-      affinity:
-        podAntiAffinity:
-          requiredDuringSchedulingIgnoredDuringExecution:
-          - labelSelector:
-              matchLabels:
-                app: {{ template "redis-ha.name" . }}
-                release: {{ .Release.Name }}
-                component: sentinel
-            topologyKey: kubernetes.io/hostname
-      {{- else if eq .Values.podAntiAffinity.sentinel "soft" }}
-      affinity:
-        podAntiAffinity:
-          preferredDuringSchedulingIgnoredDuringExecution:
-          - weight: 1
-            podAffinityTerm:
-              labelSelector:
-                matchLabels:
-                  app: {{ template "redis-ha.name" . }}
-                  release: {{ .Release.Name }}
-                  component: sentinel
-              topologyKey: kubernetes.io/hostname
-      {{- end }}
-      containers:
-      - name: sentinel
-        image: {{ .Values.redis_image }}
-        resources:
-{{ toYaml .Values.resources.sentinel | indent 10 }}
-        env:
-          - name: SENTINEL
-            value: "true"
-          - name: REDIS_CHART_PREFIX
-            value: {{ template "redis-ha.fullname" . }}-
-{{- if .Values.auth }}
-          - name: REDIS_PASS
-            valueFrom:
-              secretKeyRef:
-                name: {{ template "redis-ha.fullname" . }}
-                key: auth
-{{- end }}
-        ports:
-          - containerPort: 26379
diff --git a/stable/redis-ha/templates/redis-sentinel-service.yaml b/stable/redis-ha/templates/redis-sentinel-service.yaml
deleted file mode 100644
index 20120b909..000000000
--- a/stable/redis-ha/templates/redis-sentinel-service.yaml
+++ /dev/null
@@ -1,16 +0,0 @@
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ template "redis-ha.fullname" . }}-sentinel
-  labels:
-    name: {{ template "redis-ha.name" . }}-sentinel-svc
-    role: service
-{{ include "labels.standard" . | indent 4 }}
-spec:
-  ports:
-    - port: 26379
-      targetPort: 26379
-  selector:
-    app: {{ template "redis-ha.name" . }}
-    release: "{{ .Release.Name }}"
-    redis-role: "sentinel"
diff --git a/stable/redis-ha/templates/redis-server-deployment.yaml b/stable/redis-ha/templates/redis-server-deployment.yaml
deleted file mode 100644
index 09a304a76..000000000
--- a/stable/redis-ha/templates/redis-server-deployment.yaml
+++ /dev/null
@@ -1,77 +0,0 @@
-apiVersion: extensions/v1beta1
-kind: Deployment
-metadata:
-  # Pay attention to the redis-role label at runtime. The self-determination logic in the image sets this value accordingly.
-  name: {{ template "redis-ha.fullname" . }}-server
-  labels:
-    name: {{ template "redis-ha.fullname" . }}-server
-    redis-node: "true"
-{{ include "labels.standard" . | indent 4 }}
-spec:
-  replicas: {{ .Values.replicas.servers }}
-  template:
-    metadata:
-      labels:
-        app: {{ template "redis-ha.name" . }}
-        release: {{ .Release.Name }}
-        component: server
-        name: {{ template "redis-ha.fullname" . }}-server
-        redis-node: "true"
-    spec:
-      serviceAccountName: {{ template "redis-ha.serviceAccountName" . }}
-      {{- if .Values.nodeSelector }}
-      nodeSelector:
-{{ toYaml .Values.nodeSelector | indent 8 }}
-      {{- end }}
-      {{- if .Values.tolerations }}
-      tolerations:
-{{ toYaml .Values.tolerations | indent 8 }}
-      {{- end }}
-      {{- if eq .Values.podAntiAffinity.server "hard" }}
-      affinity:
-        podAntiAffinity:
-          requiredDuringSchedulingIgnoredDuringExecution:
-          - labelSelector:
-              matchLabels:
-                app: {{ template "redis-ha.name" . }}
-                release: {{ .Release.Name }}
-                component: server
-            topologyKey: kubernetes.io/hostname
-      {{- else if eq .Values.podAntiAffinity.server "soft" }}
-      affinity:
-        podAntiAffinity:
-          preferredDuringSchedulingIgnoredDuringExecution:
-          - weight: 1
-            podAffinityTerm:
-              labelSelector:
-                matchLabels:
-                  app: {{ template "redis-ha.name" . }}
-                  release: {{ .Release.Name }}
-                  component: server
-              topologyKey: kubernetes.io/hostname
-      {{- end }}
-      containers:
-      - name: redis
-        image: {{ .Values.redis_image }}
-        resources:
-{{ toYaml .Values.resources.server | indent 10 }}
-        env:
-          - name: REDIS_SENTINEL_SERVICE_HOST
-            value: "redis-sentinel"
-          - name: REDIS_CHART_PREFIX
-            value: {{ template "redis-ha.fullname" . }}-
-{{- if .Values.auth }}
-          - name: REDIS_PASS
-            valueFrom:
-              secretKeyRef:
-                name: {{ template "redis-ha.fullname" . }}
-                key: auth
-{{- end }}
-        ports:
-          - containerPort: 6379
-        volumeMounts:
-          - mountPath: /redis-master-data
-            name: data
-      volumes:
-      - name: data
-
diff --git a/stable/redis-ha/templates/redis-serviceaccount.yaml b/stable/redis-ha/templates/redis-serviceaccount.yaml
deleted file mode 100644
index 612783fd2..000000000
--- a/stable/redis-ha/templates/redis-serviceaccount.yaml
+++ /dev/null
@@ -1,11 +0,0 @@
-{{- if .Values.serviceAccount.create -}}
-apiVersion: v1
-kind: ServiceAccount
-metadata:
-  name: {{ template "redis-ha.serviceAccountName" . }}
-  labels:
-    app: "redis-ha"
-    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
-    heritage: {{ .Release.Service }}
-    release: {{ .Release.Name }}
-{{- end -}}
diff --git a/stable/redis-ha/templates/redis-slave-service.yaml b/stable/redis-ha/templates/redis-slave-service.yaml
deleted file mode 100644
index beaabd9fd..000000000
--- a/stable/redis-ha/templates/redis-slave-service.yaml
+++ /dev/null
@@ -1,20 +0,0 @@
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ template "redis-ha.fullname" . }}-slave-svc
-  labels:
-    role: service
-{{ include "labels.standard" . | indent 4 }}
-  annotations:
-{{ toYaml .Values.servers.annotations | indent 4 }}
-spec:
-  ports:
-  - port: 6379
-    protocol: TCP
-    targetPort: 6379
-  selector:
-    app: {{ template "redis-ha.name" . }}
-    release: "{{ .Release.Name }}"
-    redis-node: "true"
-    redis-role: "slave"
-  type: "{{ .Values.servers.serviceType }}"
diff --git a/stable/redis-ha/templates/tests/test-redis-ha-service.yaml b/stable/redis-ha/templates/tests/test-redis-ha-service.yaml
new file mode 100644
index 000000000..d22058bd2
--- /dev/null
+++ b/stable/redis-ha/templates/tests/test-redis-ha-service.yaml
@@ -0,0 +1,17 @@
+apiVersion: v1
+kind: Pod
+metadata:
+  name: {{ template "redis-ha.fullname" . }}-service-test
+  labels:
+{{ include "labels.standard" . | indent 4 }}
+  annotations:
+    "helm.sh/hook": test-success
+spec:
+  containers:
+  - name: "{{ .Release.Name }}-service-test"
+    image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
+    command:
+      - sh
+      - -c
+      - redis-cli -h {{ template "redis-ha.fullname" . }} -p {{ .Values.redis.port }} info server
+  restartPolicy: Never
diff --git a/stable/redis-ha/templates/tests/test-redis-master-service.yaml b/stable/redis-ha/templates/tests/test-redis-master-service.yaml
deleted file mode 100644
index 39cd7b042..000000000
--- a/stable/redis-ha/templates/tests/test-redis-master-service.yaml
+++ /dev/null
@@ -1,32 +0,0 @@
-apiVersion: v1
-kind: Pod
-metadata:
-  name: {{ template "redis-ha.fullname" . }}-master-service-test
-  labels:
-{{ include "labels.standard" . | indent 4 }}
-  annotations:
-    "helm.sh/hook": test-success
-spec:
-  containers:
-  - name: "{{ .Release.Name }}-master-service-test"
-    image: {{ .Values.redis_image }}
-    env:
-      - name: REDIS_CHART_PREFIX
-        value: {{ template "redis-ha.fullname" . }}-
-{{- if .Values.auth }}
-      - name: REDIS_PASS
-        valueFrom:
-          secretKeyRef:
-            name: {{ template "redis-ha.fullname" . }}
-            key: auth
-    command:
-      - sh
-      - -c
-      - redis-cli -a $REDIS_PASS -h ${REDIS_CHART_PREFIX}master-svc info server
-{{- else }}
-    command:
-      - sh
-      - -c
-      - redis-cli -h ${REDIS_CHART_PREFIX}master-svc info server
-{{- end }}
-  restartPolicy: Never
diff --git a/stable/redis-ha/templates/tests/test-redis-sentinel-service.yaml b/stable/redis-ha/templates/tests/test-redis-sentinel-service.yaml
deleted file mode 100644
index ab0933eae..000000000
--- a/stable/redis-ha/templates/tests/test-redis-sentinel-service.yaml
+++ /dev/null
@@ -1,32 +0,0 @@
-apiVersion: v1
-kind: Pod
-metadata:
-  name: {{ template "redis-ha.fullname" . }}-sentinel-service-test
-  labels:
-{{ include "labels.standard" . | indent 4 }}
-  annotations:
-    "helm.sh/hook": test-success
-spec:
-  containers:
-  - name: "{{ .Release.Name }}-sentinel-service-test"
-    image: {{ .Values.redis_image }}
-    env:
-      - name: REDIS_CHART_PREFIX
-        value: {{ template "redis-ha.fullname" . }}-
-{{- if .Values.auth }}
-      - name: REDIS_PASS
-        valueFrom:
-          secretKeyRef:
-            name: {{ template "redis-ha.fullname" . }}
-            key: auth
-    command:
-      - sh
-      - -c
-      - redis-cli -a $REDIS_PASS -h ${REDIS_CHART_PREFIX}sentinel -p 26379 info server
-{{- else }}
-    command:
-      - sh
-      - -c
-      - redis-cli -h ${REDIS_CHART_PREFIX}sentinel -p 26379 info server
-{{- end }}
-  restartPolicy: Never
diff --git a/stable/redis-ha/templates/tests/test-redis-slave-service.yaml b/stable/redis-ha/templates/tests/test-redis-slave-service.yaml
deleted file mode 100644
index ed20eab51..000000000
--- a/stable/redis-ha/templates/tests/test-redis-slave-service.yaml
+++ /dev/null
@@ -1,32 +0,0 @@
-apiVersion: v1
-kind: Pod
-metadata:
-  name: {{ template "redis-ha.fullname" . }}-slave-service-test
-  labels:
-{{ include "labels.standard" . | indent 4 }}
-  annotations:
-    "helm.sh/hook": test-success
-spec:
-  containers:
-  - name: "{{ .Release.Name }}-slave-service-test"
-    image: {{ .Values.redis_image }}
-    env:
-      - name: REDIS_CHART_PREFIX
-        value: {{ template "redis-ha.fullname" . }}-
-{{- if .Values.auth }}
-      - name: REDIS_PASS
-        valueFrom:
-          secretKeyRef:
-            name: {{ template "redis-ha.fullname" . }}
-            key: auth
-    command:
-      - sh
-      - -c
-      - redis-cli -a $REDIS_PASS -h ${REDIS_CHART_PREFIX}slave-svc info server
-{{- else }}
-    command:
-      - sh
-      - -c
-      - redis-cli -h ${REDIS_CHART_PREFIX}slave-svc info server
-{{- end }}
-  restartPolicy: Never
diff --git a/stable/redis-ha/values.yaml b/stable/redis-ha/values.yaml
index 9b379a194..5cd7befa2 100644
--- a/stable/redis-ha/values.yaml
+++ b/stable/redis-ha/values.yaml
@@ -1,54 +1,115 @@
 ## Configure resource requests and limits
 ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
 ##
-resources:
-  server:
-    requests:
-      memory: 200Mi
-      cpu: 100m
-    limits:
-      memory: 700Mi
-  sentinel:
-    requests:
-      memory: 200Mi
-      cpu: 100m
-    limits:
-      memory: 200Mi
-
-## Node labels, tolerations, and affinities for pod assignment
+image:
+  repository: redis
+  tag: 4.0.11-stretch
+  pullPolicy: IfNotPresent
+## replicas number for each component
+replicas: 3
+
+## Redis specific configuration options
+redis:
+  port: 6379
+  masterGroupName: mymaster
+  config:
+    ## Additional redis conf options can be added below
+    ## For all available options see http://download.redis.io/redis-stable/redis.conf
+    min-slaves-to-write: 1
+    min-slaves-max-lag: 5   # Value in seconds
+    maxmemory: "0"       # Max memory to use for each redis instance. Default is unlimited.
+    maxmemory-policy: "volatile-lru"  # Max memory policy to use for each redis instance. Default is volatile-lru.
+    # Determines if scheduled RDB backups are created. Default is false.
+    # Please note that local (on-disk) RDBs will still be created when re-syncing with a new slave. The only way to prevent this is to enable diskless replication.
+    save: "900 1"
+    # When enabled, directly sends the RDB over the wire to slaves, without using the disk as intermediate storage. Default is false.
+    repl-diskless-sync: "yes"
+    rdbcompression: "yes"
+    rdbchecksum: "yes"
+
+  ## Custom redis.conf files used to override default settings. If this file is
+  ## specified then the redis.config above will be ignored.
+  # customConfig: |-
+      # Define configuration here
+
+  resources: {}
+  #  requests:
+  #    memory: 200Mi
+  #    cpu: 100m
+  #  limits:
+  #    memory: 700Mi
+
+## Sentinel specific configuration options
+sentinel:
+  port: 26379
+  quorum: 2
+  config:
+    ## Additional sentinel conf options can be added below. Only options that
+    ## are expressed in the format simialar to 'sentinel xxx mymaster xxx' will
+    ## be properly templated.
+    ## For available options see http://download.redis.io/redis-stable/sentinel.conf
+    down-after-milliseconds: 10000
+    ## Failover timeout value in milliseconds
+    failover-timeout: 180000
+    parallel-syncs: 5
+
+  ## Custom sentinel.conf files used to override default settings. If this file is
+  ## specified then the sentinel.config above will be ignored.
+  # customConfig: |-
+      # Define configuration here
+
+  resources: {}
+  #  requests:
+  #    memory: 200Mi
+  #    cpu: 100m
+  #  limits:
+  #    memory: 200Mi
+
+securityContext:
+  runAsUser: 1000
+  fsGroup: 1000
+  runAsNonRoot: true
+
+## Node labels, affinity, and tolerations for pod assignment
 ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
 ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
 ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
-podAntiAffinity:
-  sentinel: soft
-  server: soft
-
-## Redis image version
-redis_image: quay.io/smile/redis:4.0.11-r1
-## replicas number for each component
-replicas:
-  servers: 3
-  sentinels: 3
-servers:
-  serviceType: ClusterIP  # [ClusterIP|LoadBalancer]
-  annotations: {}
+affinity: |
+  podAntiAffinity:
+    requiredDuringSchedulingIgnoredDuringExecution:
+      - labelSelector:
+          matchLabels:
+            app: {{ template "redis-ha.name" . }}
+            release: {{ .Release.Name }}
+        topologyKey: kubernetes.io/hostname
+    preferredDuringSchedulingIgnoredDuringExecution:
+      - weight: 100
+        podAffinityTerm:
+          labelSelector:
+            matchLabels:
+              app:  {{ template "redis-ha.name" . }}
+              release: {{ .Release.Name }}
+          topologyKey: failure-domain.beta.kubernetes.io/zone
 
-rbac:
-  # Specifies whether RBAC resources should be created
-  create: true
-
-serviceAccount:
-  # Specifies whether a ServiceAccount should be created
-  create: true
-  # The name of the ServiceAccount to use.
-  # If not set and create is true, a name is generated using the fullname template
-  name:
+podDisruptionBudget: {}
+  # maxUnavailable: 1
+  # minAvailable: 1
 
 ## Configures redis with AUTH (requirepass & masterauth conf params)
 auth: false
+# redisPassword:
 
-## Redis password
-## Defaults to a random 10-character alphanumeric string if not set and auth is true
-## ref: https://github.com/kubernetes/charts/blob/master/stable/redis-ha/templates/redis-auth-secret.yaml
-##
-## redisPassword:
+persistentVolume:
+  enabled: true
+  ## redis-ha data Persistent Volume Storage Class
+  ## If defined, storageClassName: <storageClass>
+  ## If set to "-", storageClassName: "", which disables dynamic provisioning
+  ## If undefined (the default) or set to null, no storageClassName spec is
+  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
+  ##   GKE, AWS & OpenStack)
+  ##
+  # storageClass: "-"
+  accessModes:
+    - ReadWriteOnce
+  size: 10Gi
+  annotations: {}
