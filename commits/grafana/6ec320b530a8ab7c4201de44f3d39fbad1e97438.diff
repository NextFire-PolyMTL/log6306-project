commit 6ec320b530a8ab7c4201de44f3d39fbad1e97438 (from 8f64c1284a7b89cb245d6b0fd488088378d59d18)
Merge: 8f64c128 8a3443b4
Author: Zach Leslie <zach.leslie@grafana.com>
Date:   Thu Oct 27 13:20:27 2022 +0000

    Merge pull request #1759 from zalegrala/tempoDistEnterpriseTracesRebase
    
    [tempo-distributed] refactor and introduce Enterprise Traces support

diff --git a/.github/CODEOWNERS b/.github/CODEOWNERS
index 0b4e6bcc..b94abed4 100644
--- a/.github/CODEOWNERS
+++ b/.github/CODEOWNERS
@@ -11,7 +11,7 @@
 /charts/loki-canary/ @unguiculus @Whyeasy
 /charts/promtail/ @unguiculus @Whyeasy
 /charts/tempo/ @annanay25 @dgzlopes @joe-elliott @mapno @mdisibio @swartz-k @BitProcessor @faustodavid
-/charts/tempo-distributed/ @annanay25 @joe-elliott @mapno @mdisibio @swartz-k @BitProcessor @faustodavid
+/charts/tempo-distributed/ @annanay25 @joe-elliott @mapno @mdisibio @swartz-k @BitProcessor @faustodavid @zalegrala
 /charts/enterprise-metrics/ @jdbaldry @chaudum
 /charts/enterprise-logs/ @jdbaldry @chaudum
 /charts/tempo-vulture/ @Whyeasy @annanay25 @dgzlopes @joe-elliott @mapno @mdisibio
diff --git a/charts/tempo-distributed/Chart.yaml b/charts/tempo-distributed/Chart.yaml
index ed458113..de98e865 100644
--- a/charts/tempo-distributed/Chart.yaml
+++ b/charts/tempo-distributed/Chart.yaml
@@ -1,8 +1,7 @@
 apiVersion: v2
 name: tempo-distributed
 description: Grafana Tempo in MicroService mode
-type: application
-version: 0.26.9
+version: 0.27.0
 appVersion: 1.5.0
 engine: gotpl
 home: https://grafana.com/docs/tempo/latest/
@@ -19,3 +18,15 @@ maintainers:
   - name: mapno
   - name: BitProcessor
   - name: faustodavid
+  - name: zalegrala
+dependencies:
+  - name: minio
+    alias: minio
+    version: 8.0.9
+    repository: https://helm.min.io/
+    condition: minio.enabled
+  - name: grafana-agent-operator
+    alias: grafana-agent-operator
+    version: 0.2.2
+    repository: https://grafana.github.io/helm-charts
+    condition: metaMonitoring.grafanaAgent.installOperator
diff --git a/charts/tempo-distributed/README.md b/charts/tempo-distributed/README.md
index 3e682efd..fc7c815e 100644
--- a/charts/tempo-distributed/README.md
+++ b/charts/tempo-distributed/README.md
@@ -1,6 +1,6 @@
 # tempo-distributed
 
-![Version: 0.26.9](https://img.shields.io/badge/Version-0.26.9-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: 1.5.0](https://img.shields.io/badge/AppVersion-1.5.0-informational?style=flat-square)
+![Version: 0.27.0](https://img.shields.io/badge/Version-0.27.0-informational?style=flat-square) ![AppVersion: 1.5.0](https://img.shields.io/badge/AppVersion-1.5.0-informational?style=flat-square)
 
 Grafana Tempo in MicroService mode
 
@@ -8,6 +8,13 @@ Grafana Tempo in MicroService mode
 
 * <https://github.com/grafana/tempo>
 
+## Requirements
+
+| Repository | Name | Version |
+|------------|------|---------|
+| https://grafana.github.io/helm-charts | grafana-agent-operator(grafana-agent-operator) | 0.2.2 |
+| https://helm.min.io/ | minio(minio) | 8.0.9 |
+
 ## Chart Repo
 
 Add the following repo to use the chart:
@@ -19,6 +26,31 @@ helm repo add grafana https://grafana.github.io/helm-charts
 ## Upgrading
 
 A major chart version change indicates that there is an incompatible breaking change needing manual actions.
+### From chart version < 0.27.0
+
+Version 0.27.0:
+
+Many changes have been introduced, including some breaking changes.
+
+The (PR)[https://github.com/grafana/helm-charts/pull/1759] includes additional details.
+
+* **BREAKING CHANGE** centralize selector label handling -- users who wish to keep old values should still be able to use the `nameOverride` and `fullNameOverride` top level keys in their values.
+
+* **BREAKING CHANGE** serviceMonitor has been nested under metaMonitoring -- metamonitoring can be used scrape services as well as install the operator with the following values.  Note also that the port names have changed from `http` to `http-metrics`.
+```yaml
+metaMonitoring:
+  serviceMonitor:
+    enabled: true
+  grafanaAgent:
+    enabled: true
+    installOperator: true
+```
+* minio can now be enabled as part of this chart using the following values
+```yaml
+minio:
+  enabled: true
+```
+* allow configuration to be stored in a secret.  See the documentation for `useExternalConfig` and `configStorageType` in the values file for more details.
 
 ### From chart version < 0.26.0
 
@@ -138,6 +170,35 @@ The memcached default args are removed and should be provided manually. The sett
 
 | Key | Type | Default | Description |
 |-----|------|---------|-------------|
+| adminApi.affinity | string | Soft node and soft zone anti-affinity | Affinity for ingester pods. Passed through `tpl` and, thus, to be configured as string |
+| adminApi.annotations | object | `{}` |  |
+| adminApi.containerSecurityContext | object | `{"readOnlyRootFilesystem":true}` | The SecurityContext for admin_api containers |
+| adminApi.env | list | `[]` |  |
+| adminApi.extraArgs | object | `{}` |  |
+| adminApi.extraContainers | list | `[]` |  |
+| adminApi.extraEnvFrom | list | `[]` |  |
+| adminApi.extraVolumeMounts | list | `[]` |  |
+| adminApi.extraVolumes | list | `[]` |  |
+| adminApi.initContainers | list | `[]` |  |
+| adminApi.nodeSelector | object | `{}` |  |
+| adminApi.persistence.subPath | string | `nil` |  |
+| adminApi.podAnnotations | object | `{}` |  |
+| adminApi.podDisruptionBudget | object | `{}` |  |
+| adminApi.podLabels | object | `{}` |  |
+| adminApi.readinessProbe.httpGet.path | string | `"/ready"` |  |
+| adminApi.readinessProbe.httpGet.port | string | `"http-metrics"` |  |
+| adminApi.readinessProbe.initialDelaySeconds | int | `45` |  |
+| adminApi.replicas | int | `1` |  |
+| adminApi.resources.requests.cpu | string | `"10m"` |  |
+| adminApi.resources.requests.memory | string | `"32Mi"` |  |
+| adminApi.securityContext | object | `{}` |  |
+| adminApi.service.annotations | object | `{}` |  |
+| adminApi.service.labels | object | `{}` |  |
+| adminApi.strategy.rollingUpdate.maxSurge | int | `0` |  |
+| adminApi.strategy.rollingUpdate.maxUnavailable | int | `1` |  |
+| adminApi.strategy.type | string | `"RollingUpdate"` |  |
+| adminApi.terminationGracePeriodSeconds | int | `60` |  |
+| adminApi.tolerations | list | `[]` |  |
 | compactor.config.compaction.block_retention | string | `"48h"` | Duration to keep blocks |
 | compactor.extraArgs | list | `[]` | Additional CLI args for the compactor |
 | compactor.extraEnv | list | `[]` | Environment variables to add to the compactor pods |
@@ -157,6 +218,7 @@ The memcached default args are removed and should be provided manually. The sett
 | compactor.terminationGracePeriodSeconds | int | `30` | Grace period to allow the compactor to shutdown before it is killed |
 | compactor.tolerations | list | `[]` | Tolerations for compactor pods |
 | config | string | See values.yaml | Config file contents for Tempo distributed. Passed through the `tpl` function to allow templating |
+| configStorageType | string | `"ConfigMap"` | Defines what kind of object stores the configuration, a ConfigMap or a Secret. In order to move sensitive information (such as credentials) from the ConfigMap/Secret to a more secure location (e.g. vault), it is possible to use [environment variables in the configuration](https://grafana.com/docs/mimir/latest/operators-guide/configuring/reference-configuration-parameters/#use-environment-variables-in-the-configuration). Such environment variables can be then stored in a separate Secret and injected via the global.extraEnvFrom value. For details about environment injection from a Secret please see [Secrets](https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables). |
 | distributor.affinity | string | Hard node and soft zone anti-affinity | Affinity for distributor pods. Passed through `tpl` and, thus, to be configured as string |
 | distributor.autoscaling.enabled | bool | `false` | Enable autoscaling for the distributor |
 | distributor.autoscaling.maxReplicas | int | `3` | Maximum autoscaling replicas for the distributor |
@@ -187,7 +249,47 @@ The memcached default args are removed and should be provided manually. The sett
 | distributor.service.type | string | `"ClusterIP"` | Type of service for the distributor |
 | distributor.terminationGracePeriodSeconds | int | `30` | Grace period to allow the distributor to shutdown before it is killed |
 | distributor.tolerations | list | `[]` | Tolerations for distributor pods |
-| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
+| enterprise.enabled | bool | `false` |  |
+| enterprise.image.repository | string | `"grafana/enterprise-traces"` | Grafana Enterprise Metrics container image repository. Note: for Grafana Tempo use the value 'image.repository' |
+| enterprise.image.tag | string | `"weekly-r58-94739e17"` | Grafana Enterprise Metrics container image tag. Note: for Grafana Tempo use the value 'image.tag' |
+| enterpriseGateway.affinity | string | Soft node and soft zone anti-affinity | Affinity for ingester pods. Passed through `tpl` and, thus, to be configured as string |
+| enterpriseGateway.annotations | object | `{}` |  |
+| enterpriseGateway.containerSecurityContext | object | `{"readOnlyRootFilesystem":true}` | The SecurityContext for gateway containers |
+| enterpriseGateway.env | list | `[]` |  |
+| enterpriseGateway.extraArgs | object | `{}` |  |
+| enterpriseGateway.extraContainers | list | `[]` |  |
+| enterpriseGateway.extraEnvFrom | list | `[]` |  |
+| enterpriseGateway.extraVolumeMounts | list | `[]` |  |
+| enterpriseGateway.extraVolumes | list | `[]` |  |
+| enterpriseGateway.ingress.annotations | object | `{}` | Annotations for the gateway ingress |
+| enterpriseGateway.ingress.enabled | bool | `false` | Specifies whether an ingress for the gateway should be created |
+| enterpriseGateway.ingress.hosts | list | `[{"host":"gateway.gem.example.com","paths":[{"path":"/"}]}]` | Hosts configuration for the gateway ingress |
+| enterpriseGateway.ingress.tls | list | `[{"hosts":["gateway.gem.example.com"],"secretName":"gem-gateway-tls"}]` | TLS configuration for the gateway ingress |
+| enterpriseGateway.initContainers | list | `[]` |  |
+| enterpriseGateway.nodeSelector | object | `{}` |  |
+| enterpriseGateway.persistence.subPath | string | `nil` |  |
+| enterpriseGateway.podAnnotations | object | `{}` |  |
+| enterpriseGateway.podDisruptionBudget | object | `{}` |  |
+| enterpriseGateway.podLabels | object | `{}` |  |
+| enterpriseGateway.readinessProbe.httpGet.path | string | `"/ready"` |  |
+| enterpriseGateway.readinessProbe.httpGet.port | string | `"http-metrics"` |  |
+| enterpriseGateway.readinessProbe.initialDelaySeconds | int | `45` |  |
+| enterpriseGateway.replicas | int | `1` |  |
+| enterpriseGateway.resources.requests.cpu | string | `"10m"` |  |
+| enterpriseGateway.resources.requests.memory | string | `"32Mi"` |  |
+| enterpriseGateway.securityContext | object | `{}` |  |
+| enterpriseGateway.service.annotations | object | `{}` |  |
+| enterpriseGateway.service.labels | object | `{}` |  |
+| enterpriseGateway.service.port | string | `nil` | If the port is left undefined, the service will listen on the same port as the pod |
+| enterpriseGateway.strategy.rollingUpdate.maxSurge | int | `0` |  |
+| enterpriseGateway.strategy.rollingUpdate.maxUnavailable | int | `1` |  |
+| enterpriseGateway.strategy.type | string | `"RollingUpdate"` |  |
+| enterpriseGateway.terminationGracePeriodSeconds | int | `60` |  |
+| enterpriseGateway.tolerations | list | `[]` |  |
+| enterpriseGateway.useDefaultProxyURLs | bool | `true` |  |
+| externalConfigSecretName | string | `"{{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"config\") }}"` | Name of the Secret or ConfigMap that contains the configuration (used for naming even if config is internal). |
+| externalConfigVersion | string | `"0"` | When 'useExternalConfig' is true, then changing 'externalConfigVersion' triggers restart of services - otherwise changes to the configuration cause a restart. |
+| fullnameOverride | string | `""` |  |
 | gateway.affinity | string | Hard node and soft zone anti-affinity | Affinity for gateway pods. Passed through `tpl` and, thus, to be configured as string |
 | gateway.autoscaling.enabled | bool | `false` | Enable autoscaling for the gateway |
 | gateway.autoscaling.maxReplicas | int | `3` | Maximum autoscaling replicas for the gateway |
@@ -222,7 +324,7 @@ The memcached default args are removed and should be provided manually. The sett
 | gateway.podLabels | object | `{}` | Labels for gateway pods |
 | gateway.priorityClassName | string | `nil` | The name of the PriorityClass for gateway pods |
 | gateway.readinessProbe.httpGet.path | string | `"/"` |  |
-| gateway.readinessProbe.httpGet.port | string | `"http"` |  |
+| gateway.readinessProbe.httpGet.port | string | `"http-metrics"` |  |
 | gateway.readinessProbe.initialDelaySeconds | int | `15` |  |
 | gateway.readinessProbe.timeoutSeconds | int | `1` |  |
 | gateway.replicas | int | `1` | Number of replicas for the gateway |
@@ -240,7 +342,7 @@ The memcached default args are removed and should be provided manually. The sett
 | global.clusterDomain | string | `"cluster.local"` | configures cluster domain ("cluster.local" by default) |
 | global.dnsNamespace | string | `"kube-system"` | configures DNS service namespace |
 | global.dnsService | string | `"kube-dns"` | configures DNS service name |
-| global.image.registry | string | `"docker.io"` | Overrides the Docker registry globally for all images |
+| global.image.registry | string | `"docker.io"` | Overrides the Docker registry globally for all images, excluding enterprise. |
 | global.priorityClassName | string | `nil` | Overrides the priorityClassName for all pods |
 | global_overrides.per_tenant_override_config | string | `"/conf/overrides.yaml"` |  |
 | ingester.affinity | string | Soft node and soft zone anti-affinity | Affinity for ingester pods. Passed through `tpl` and, thus, to be configured as string |
@@ -278,6 +380,9 @@ The memcached default args are removed and should be provided manually. The sett
 | ingester.service.annotations | object | `{}` | Annotations for ingester service |
 | ingester.terminationGracePeriodSeconds | int | `300` | Grace period to allow the ingester to shutdown before it is killed. Especially for the ingestor, this must be increased. It must be long enough so ingesters can be gracefully shutdown flushing/transferring all data and to successfully leave the member ring on shutdown. |
 | ingester.tolerations | list | `[]` | Tolerations for ingester pods |
+| license.contents | string | `"NOTAVALIDLICENSE"` |  |
+| license.external | bool | `false` |  |
+| license.secretName | string | `"{{ include \"tempo.resourceName\" (dict \"ctx\" . \"component\" \"license\") }}"` |  |
 | memcached.affinity | string | Hard node and soft zone anti-affinity | Affinity for memcached pods. Passed through `tpl` and, thus, to be configured as string |
 | memcached.enabled | bool | `true` | Specified whether the memcached cachce should be enabled |
 | memcached.extraArgs | list | `[]` | Additional CLI args for memcached |
@@ -299,6 +404,38 @@ The memcached default args are removed and should be provided manually. The sett
 | memcachedExporter.image.repository | string | `"prom/memcached-exporter"` | Memcached Exporter Docker image repository |
 | memcachedExporter.image.tag | string | `"v0.8.0"` | Memcached Exporter Docker image tag |
 | memcachedExporter.resources | object | `{}` |  |
+| metaMonitoring.grafanaAgent.annotations | object | `{}` | Annotations to add to all monitoring.grafana.com custom resources. Does not affect the ServiceMonitors for kubernetes metrics; use serviceMonitor.annotations for that. |
+| metaMonitoring.grafanaAgent.enabled | bool | `false` | Controls whether to create PodLogs, MetricsInstance, LogsInstance, and GrafanaAgent CRs to scrape the ServiceMonitors of the chart and ship metrics and logs to the remote endpoints below. Note that you need to configure serviceMonitor in order to have some metrics available. |
+| metaMonitoring.grafanaAgent.installOperator | bool | `false` | Controls whether to install the Grafana Agent Operator and its CRDs. Note that helm will not install CRDs if this flag is enabled during an upgrade. In that case install the CRDs manually from https://github.com/grafana/agent/tree/main/production/operator/crds |
+| metaMonitoring.grafanaAgent.labels | object | `{}` | Labels to add to all monitoring.grafana.com custom resources. Does not affect the ServiceMonitors for kubernetes metrics; use serviceMonitor.labels for that. |
+| metaMonitoring.grafanaAgent.logs.additionalClientConfigs | list | `[]` | Client configurations for the LogsInstance that will scrape Mimir pods. Follows the format of .remote. |
+| metaMonitoring.grafanaAgent.logs.remote | object | `{"auth":{"passwordSecretKey":"","passwordSecretName":"","tenantId":"","username":""},"url":""}` | Default destination for logs. The config here is translated to Promtail client configuration to write logs to this Loki-compatible remote. Optional. |
+| metaMonitoring.grafanaAgent.logs.remote.auth.passwordSecretKey | string | `""` | The value under this key in passwordSecretName will be used as the basic authentication password. Required only if passwordSecretName is set. |
+| metaMonitoring.grafanaAgent.logs.remote.auth.passwordSecretName | string | `""` | The value under key passwordSecretKey in this secret will be used as the basic authentication password. Required only if passwordSecretKey is set. |
+| metaMonitoring.grafanaAgent.logs.remote.auth.tenantId | string | `""` | Used to set X-Scope-OrgID header on requests. Usually not used in combination with username and password. |
+| metaMonitoring.grafanaAgent.logs.remote.auth.username | string | `""` | Basic authentication username. Optional. |
+| metaMonitoring.grafanaAgent.logs.remote.url | string | `""` | Full URL for Loki push endpoint. Usually ends in /loki/api/v1/push |
+| metaMonitoring.grafanaAgent.metrics.additionalRemoteWriteConfigs | list | `[]` | Additional remote-write for the MetricsInstance that will scrape Mimir pods. Follows the format of .remote. |
+| metaMonitoring.grafanaAgent.metrics.remote | object | `{"auth":{"passwordSecretKey":"","passwordSecretName":"","username":""},"headers":{},"url":""}` | Default destination for metrics. The config here is translated to remote_write configuration to push metrics to this Prometheus-compatible remote. Optional. Note that you need to configure serviceMonitor in order to have some metrics available. |
+| metaMonitoring.grafanaAgent.metrics.remote.auth.passwordSecretKey | string | `""` | The value under this key in passwordSecretName will be used as the basic authentication password. Required only if passwordSecretName is set. |
+| metaMonitoring.grafanaAgent.metrics.remote.auth.passwordSecretName | string | `""` | The value under key passwordSecretKey in this secret will be used as the basic authentication password. Required only if passwordSecretKey is set. |
+| metaMonitoring.grafanaAgent.metrics.remote.auth.username | string | `""` | Basic authentication username. Optional. |
+| metaMonitoring.grafanaAgent.metrics.remote.headers | object | `{}` | Used to add HTTP headers to remote-write requests. |
+| metaMonitoring.grafanaAgent.metrics.remote.url | string | `""` | Full URL for Prometheus remote-write. Usually ends in /push |
+| metaMonitoring.grafanaAgent.metrics.scrapeK8s.enabled | bool | `true` | When grafanaAgent.enabled and serviceMonitor.enabled, controls whether to create ServiceMonitors CRs for cadvisor, kubelet, and kube-state-metrics. The scraped metrics are reduced to those pertaining to Mimir pods only. |
+| metaMonitoring.grafanaAgent.metrics.scrapeK8s.kubeStateMetrics | object | `{"labelSelectors":{"app.kubernetes.io/name":"kube-state-metrics"},"namespace":"kube-system"}` | Controls service discovery of kube-state-metrics. |
+| metaMonitoring.grafanaAgent.namespace | string | `""` | Sets the namespace of the resources. Leave empty or unset to use the same namespace as the Helm release. |
+| metaMonitoring.serviceMonitor.annotations | object | `{}` | ServiceMonitor annotations |
+| metaMonitoring.serviceMonitor.enabled | bool | `false` | If enabled, ServiceMonitor resources for Prometheus Operator are created |
+| metaMonitoring.serviceMonitor.interval | string | `nil` | ServiceMonitor scrape interval |
+| metaMonitoring.serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
+| metaMonitoring.serviceMonitor.metricRelabelings | list | `[]` | ServiceMonitor metric relabel configs to apply to samples before ingestion https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint |
+| metaMonitoring.serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor resources |
+| metaMonitoring.serviceMonitor.namespaceSelector | object | `{}` | Namespace selector for ServiceMonitor resources |
+| metaMonitoring.serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabel configs to apply to samples before scraping https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig |
+| metaMonitoring.serviceMonitor.scheme | string | `"http"` | ServiceMonitor will use http by default, but you can pick https as well |
+| metaMonitoring.serviceMonitor.scrapeTimeout | string | `nil` | ServiceMonitor scrape timeout in Go duration format (e.g. 15s) |
+| metaMonitoring.serviceMonitor.tlsConfig | string | `nil` | ServiceMonitor will use these tlsConfig settings to make the health check requests |
 | metricsGenerator.affinity | string | Hard node and soft zone anti-affinity | Affinity for metrics-generator pods. Passed through `tpl` and, thus, to be configured as string |
 | metricsGenerator.annotations | object | `{}` | Annotations for the metrics-generator StatefulSet |
 | metricsGenerator.config | object | `{"processor":{"service_graphs":{"dimensions":[],"histogram_buckets":[0.1,0.2,0.4,0.8,1.6,3.2,6.4,12.8],"max_items":10000,"wait":"10s","workers":10},"span_metrics":{"dimensions":[],"histogram_buckets":[0.002,0.004,0.008,0.016,0.032,0.064,0.128,0.256,0.512,1.02,2.05,4.1]}},"registry":{"collection_interval":"15s","external_labels":{},"stale_duration":"15m"},"storage":{"path":"/var/tempo/wal","remote_write":[],"remote_write_flush_deadline":"1m","wal":null}}` | More information on configuration: https://grafana.com/docs/tempo/latest/configuration/#metrics-generator |
@@ -317,7 +454,7 @@ The memcached default args are removed and should be provided manually. The sett
 | metricsGenerator.nodeSelector | object | `{}` | Node selector for metrics-generator pods |
 | metricsGenerator.podAnnotations | object | `{}` | Annotations for metrics-generator pods |
 | metricsGenerator.podLabels | object | `{}` | Labels for metrics-generator pods |
-| metricsGenerator.ports | list | `[{"name":"grpc","port":9095,"service":true},{"name":"http-memberlist","port":7946,"service":false},{"name":"http","port":3100,"service":true}]` | Default ports |
+| metricsGenerator.ports | list | `[{"name":"grpc","port":9095,"service":true},{"name":"http-memberlist","port":7946,"service":false},{"name":"http-metrics","port":3100,"service":true}]` | Default ports |
 | metricsGenerator.priorityClassName | string | `nil` | The name of the PriorityClass for metrics-generator pods |
 | metricsGenerator.replicas | int | `1` | Number of replicas for the metrics-generator |
 | metricsGenerator.resources | object | `{}` | Resource requests and limits for the metrics-generator |
@@ -325,6 +462,23 @@ The memcached default args are removed and should be provided manually. The sett
 | metricsGenerator.terminationGracePeriodSeconds | int | `300` | Grace period to allow the metrics-generator to shutdown before it is killed. Especially for the ingestor, this must be increased. It must be long enough so metrics-generators can be gracefully shutdown flushing/transferring all data and to successfully leave the member ring on shutdown. |
 | metricsGenerator.tolerations | list | `[]` | Tolerations for metrics-generator pods |
 | metricsGenerator.walEmptyDir | object | `{}` | The EmptyDir location where the /var/tempo will be mounted on. Defaults to local disk, can be set to memory. |
+| minio.buckets[0].name | string | `"tempo-traces"` |  |
+| minio.buckets[0].policy | string | `"none"` |  |
+| minio.buckets[0].purge | bool | `false` |  |
+| minio.buckets[1].name | string | `"enterprise-traces"` |  |
+| minio.buckets[1].policy | string | `"none"` |  |
+| minio.buckets[1].purge | bool | `false` |  |
+| minio.buckets[2].name | string | `"enterprise-traces-admin"` |  |
+| minio.buckets[2].policy | string | `"none"` |  |
+| minio.buckets[2].purge | bool | `false` |  |
+| minio.configPathmc | string | `"/tmp/minio/mc/"` |  |
+| minio.enabled | bool | `true` |  |
+| minio.mode | string | `"standalone"` |  |
+| minio.persistence.size | string | `"5Gi"` |  |
+| minio.resources.requests.cpu | string | `"100m"` |  |
+| minio.resources.requests.memory | string | `"128Mi"` |  |
+| minio.rootPassword | string | `"supersecret"` |  |
+| minio.rootUser | string | `"grafana-tempo"` |  |
 | multitenancyEnabled | bool | `false` |  |
 | overrides | string | `"overrides: {}\n"` |  |
 | prometheusRule.annotations | object | `{}` | PrometheusRule annotations |
@@ -401,17 +555,6 @@ The memcached default args are removed and should be provided manually. The sett
 | serviceAccount.create | bool | `true` | Specifies whether a ServiceAccount should be created |
 | serviceAccount.imagePullSecrets | list | `[]` | Image pull secrets for the service account |
 | serviceAccount.name | string | `nil` | The name of the ServiceAccount to use. If not set and create is true, a name is generated using the fullname template |
-| serviceMonitor.annotations | object | `{}` | ServiceMonitor annotations |
-| serviceMonitor.enabled | bool | `false` | If enabled, ServiceMonitor resources for Prometheus Operator are created |
-| serviceMonitor.interval | string | `nil` | ServiceMonitor scrape interval |
-| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
-| serviceMonitor.metricRelabelings | list | `[]` | ServiceMonitor metric relabel configs to apply to samples before ingestion https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint |
-| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor resources |
-| serviceMonitor.namespaceSelector | object | `{}` | Namespace selector for ServiceMonitor resources |
-| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabel configs to apply to samples before scraping https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig |
-| serviceMonitor.scheme | string | `"http"` | ServiceMonitor will use http by default, but you can pick https as well |
-| serviceMonitor.scrapeTimeout | string | `nil` | ServiceMonitor scrape timeout in Go duration format (e.g. 15s) |
-| serviceMonitor.tlsConfig | string | `nil` | ServiceMonitor will use these tlsConfig settings to make the health check requests |
 | storage.trace.backend | string | `"local"` | The supported storage backends are gcs, s3 and azure, as specified in https://grafana.com/docs/tempo/latest/configuration/#storage |
 | tempo.image.pullPolicy | string | `"IfNotPresent"` |  |
 | tempo.image.registry | string | `"docker.io"` | The Docker registry |
@@ -421,11 +564,18 @@ The memcached default args are removed and should be provided manually. The sett
 | tempo.podLabels | object | `{}` | Global labels for all tempo pods |
 | tempo.podSecurityContext | object | `{"fsGroup":1000}` | podSecurityContext holds pod-level security attributes and common container settings |
 | tempo.readinessProbe.httpGet.path | string | `"/ready"` |  |
-| tempo.readinessProbe.httpGet.port | string | `"http"` |  |
+| tempo.readinessProbe.httpGet.port | string | `"http-metrics"` |  |
 | tempo.readinessProbe.initialDelaySeconds | int | `30` |  |
 | tempo.readinessProbe.timeoutSeconds | int | `1` |  |
 | tempo.securityContext | object | `{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000}` | SecurityContext holds container-level security attributes and common container settings |
 | tempo.structuredConfig | object | `{}` | Structured tempo configuration |
+| tokengenJob.annotations | object | `{}` |  |
+| tokengenJob.containerSecurityContext | object | `{"readOnlyRootFilesystem":true}` | The SecurityContext for tokenjobgen containers |
+| tokengenJob.enable | bool | `true` |  |
+| tokengenJob.env | list | `[]` |  |
+| tokengenJob.extraArgs | object | `{}` |  |
+| tokengenJob.extraEnvFrom | list | `[]` |  |
+| tokengenJob.initContainers | list | `[]` |  |
 | traces.jaeger.grpc.enabled | bool | `false` | Enable Tempo to ingest Jaeger GRPC traces |
 | traces.jaeger.grpc.receiverConfig | object | `{}` | Jaeger GRPC receiver config |
 | traces.jaeger.thriftBinary.enabled | bool | `false` | Enable Tempo to ingest Jaeger Thrift Binary traces |
@@ -443,6 +593,7 @@ The memcached default args are removed and should be provided manually. The sett
 | traces.otlp.http.receiverConfig | object | `{}` | HTTP receiver advanced config |
 | traces.zipkin.enabled | bool | `false` | Enable Tempo to ingest Zipkin traces |
 | traces.zipkin.receiverConfig | object | `{}` | Zipkin receiver config |
+| useExternalConfig | bool | `false` | Configuration is loaded from the secret called 'externalConfigSecretName'. If 'useExternalConfig' is true, then the configuration is not generated, just consumed.  Top level keys for `tempo.yaml` and `overrides.yaml` are to be provided by the user. |
 
 ## Components
 
@@ -539,7 +690,7 @@ config: |
             endpoint: 0.0.0.0:14268
   querier:
     frontend_worker:
-      frontend_address: {{ include "tempo.queryFrontendFullname" . }}:9095
+      frontend_address: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}:9095
   ingester:
     lifecycler:
       ring:
diff --git a/charts/tempo-distributed/README.md.gotmpl b/charts/tempo-distributed/README.md.gotmpl
index a2113de0..211e69ce 100644
--- a/charts/tempo-distributed/README.md.gotmpl
+++ b/charts/tempo-distributed/README.md.gotmpl
@@ -19,6 +19,32 @@ helm repo add grafana https://grafana.github.io/helm-charts
 ## Upgrading
 
 A major chart version change indicates that there is an incompatible breaking change needing manual actions.
+### From chart version < 0.27.0
+
+Version 0.27.0:
+
+Many changes have been introduced, including some breaking changes.
+
+The (PR)[https://github.com/grafana/helm-charts/pull/1759] includes additional details.
+
+* **BREAKING CHANGE** centralize selector label handling -- users who wish to keep old values should still be able to use the `nameOverride` and `fullNameOverride` top level keys in their values.
+
+* **BREAKING CHANGE** serviceMonitor has been nested under metaMonitoring -- metamonitoring can be used scrape services as well as install the operator with the following values.  Note also that the port names have changed from `http` to `http-metrics`.
+```yaml
+metaMonitoring:
+  serviceMonitor:
+    enabled: true
+  grafanaAgent:
+    enabled: true
+    installOperator: true
+```
+* minio can now be enabled as part of this chart using the following values
+```yaml
+minio:
+  enabled: true
+```
+* allow configuration to be stored in a secret.  See the documentation for `useExternalConfig` and `configStorageType` in the values file for more details.
+
 
 ### From chart version < 0.26.0
 
@@ -233,7 +259,7 @@ config: |
             endpoint: 0.0.0.0:14268
   querier:
     frontend_worker:
-      frontend_address: {{"{{"}} include "tempo.queryFrontendFullname" . {{"}}"}}:9095
+      frontend_address: {{"{{"}} include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") {{"}}"}}:9095
   ingester:
     lifecycler:
       ring:
diff --git a/charts/tempo-distributed/templates/_helpers.tpl b/charts/tempo-distributed/templates/_helpers.tpl
index 5d922154..b222d132 100644
--- a/charts/tempo-distributed/templates/_helpers.tpl
+++ b/charts/tempo-distributed/templates/_helpers.tpl
@@ -3,7 +3,7 @@
 Expand the name of the chart.
 */}}
 {{- define "tempo.name" -}}
-{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
+{{- default "tempo" .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
 {{- end -}}
 
 {{/*
@@ -15,7 +15,7 @@ If release name contains chart name it will be used as a full name.
 {{- if .Values.fullnameOverride -}}
 {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
 {{- else -}}
-{{- $name := default .Chart.Name .Values.nameOverride -}}
+{{- $name := default "tempo" .Values.nameOverride -}}
 {{- if contains $name .Release.Name -}}
 {{- .Release.Name | trunc 63 | trimSuffix "-" -}}
 {{- else -}}
@@ -25,12 +25,12 @@ If release name contains chart name it will be used as a full name.
 {{- end -}}
 
 {{/*
-Docker image name for Tempo
+Docker image selector for Tempo. Hierachy based on global, component, and tempo values.
 */}}
 {{- define "tempo.tempoImage" -}}
-{{- $registry := coalesce .global.registry .service.registry .tempo.registry -}}
-{{- $repository := coalesce .service.repository .tempo.repository -}}
-{{- $tag := coalesce .service.tag .tempo.tag .defaultVersion | toString -}}
+{{- $registry := coalesce .global.registry .component.registry .tempo.registry -}}
+{{- $repository := coalesce .component.repository .tempo.repository -}}
+{{- $tag := coalesce .component.tag .tempo.tag .defaultVersion | toString -}}
 {{- printf "%s/%s:%s" $registry $repository $tag -}}
 {{- end -}}
 
@@ -42,23 +42,52 @@ Create chart name and version as used by the chart label.
 {{- end -}}
 
 {{/*
-Common labels
+Calculate image name based on whether enterprise features are requested.  Fallback to hierarchy handling in `tempo.tempoImage`.
+*/}}
+{{- define "tempo.imageReference" -}}
+{{ $tempo := "" }}
+{{- if .ctx.Values.enterprise.enabled -}}
+{{ $tempo = merge .ctx.Values.enterprise.image .ctx.Values.tempo.image }}
+{{- else -}}
+{{ $tempo = .ctx.Values.tempo.image }}
+{{- end -}}
+{{- $componentSection := include "tempo.componentSectionFromName" . }}
+{{- if not (hasKey .ctx.Values $componentSection) }}
+{{- print "Component section " $componentSection " does not exist" | fail }}
+{{- end }}
+{{- $component := (index .ctx.Values $componentSection).image | default dict }}
+{{- $dict := dict "tempo" $tempo "component" $component "global" .ctx.Values.global.image "defaultVersion" .ctx.Chart.AppVersion -}}
+{{- include "tempo.tempoImage" $dict -}}
+{{- end -}}
+
+{{/*
+Simple resource labels
 */}}
 {{- define "tempo.labels" -}}
-helm.sh/chart: {{ include "tempo.chart" . }}
-{{ include "tempo.selectorLabels" . }}
-{{- if or .Chart.AppVersion .Values.tempo.tag }}
-app.kubernetes.io/version: {{ .Values.tempo.tag | default .Chart.AppVersion | quote }}
+helm.sh/chart: {{ include "tempo.chart" .ctx }}
+app.kubernetes.io/name: {{ include "tempo.name" .ctx }}
+app.kubernetes.io/instance: {{ .ctx.Release.Name }}
+{{- if .component }}
+app.kubernetes.io/component: {{ .component }}
+{{- end }}
+{{- if .memberlist }}
+app.kubernetes.io/part-of: memberlist
 {{- end }}
-app.kubernetes.io/managed-by: {{ .Release.Service }}
+{{- if .ctx.Chart.AppVersion }}
+app.kubernetes.io/version: {{ .ctx.Chart.AppVersion | quote }}
+{{- end }}
+app.kubernetes.io/managed-by: {{ .ctx.Release.Service }}
 {{- end -}}
 
 {{/*
-Selector labels
+Simple service selector labels
 */}}
 {{- define "tempo.selectorLabels" -}}
-app.kubernetes.io/name: {{ include "tempo.name" . }}
-app.kubernetes.io/instance: {{ .Release.Name }}
+app.kubernetes.io/name: {{ include "tempo.name" .ctx }}
+app.kubernetes.io/instance: {{ .ctx.Release.Name }}
+{{- if .component }}
+app.kubernetes.io/component: {{ .component }}
+{{- end -}}
 {{- end -}}
 
 {{/*
@@ -72,21 +101,6 @@ Create the name of the service account to use
 {{- end -}}
 {{- end -}}
 
-
-{{/*
-Gossip ring name
-*/}}
-{{- define "tempo.gossipRing.name" -}}
-{{ include "tempo.fullname" . }}-gossip-ring
-{{- end -}}
-
-{{/*
-Gossip ring  Selector labels
-*/}}
-{{- define "tempo.gossipRing.selectorLabels" -}}
-tempo-gossip-member: "true"
-{{- end -}}
-
 {{/*
 Return the appropriate apiVersion for ingress.
 */}}
@@ -130,4 +144,119 @@ Return the appropriate apiVersion for PodDisruptionBudget.
   {{- else -}}
     {{- print "policy/v1beta1" -}}
   {{- end -}}
-{{- end -}}
\ No newline at end of file
+{{- end -}}
+
+{{/*
+Resource name template
+*/}}
+{{- define "tempo.resourceName" -}}
+{{ include "tempo.fullname" .ctx }}{{- if .component -}}-{{ .component }}{{- end -}}
+{{- end -}}
+
+{{/*
+Calculate the config from structured and unstructured text input
+*/}}
+{{- define "tempo.calculatedConfig" -}}
+{{ tpl (mergeOverwrite (tpl .Values.config . | fromYaml) .Values.tempo.structuredConfig | toYaml) . }}
+{{- end -}}
+
+{{/*
+Renders the overrides config
+*/}}
+{{- define "tempo.overridesConfig" -}}
+{{ tpl .Values.overrides . }}
+{{- end -}}
+
+{{/*
+The volume to mount for tempo configuration
+*/}}
+{{- define "tempo.configVolume" -}}
+{{- if eq .Values.configStorageType "Secret" -}}
+secret:
+  secretName: {{ tpl .Values.externalConfigSecretName . }}
+{{- else if eq .Values.configStorageType "ConfigMap" -}}
+configMap:
+  name: {{ tpl .Values.externalConfigSecretName . }}
+  items:
+    - key: "tempo.yaml"
+      path: "tempo.yaml"
+    - key: "overrides.yaml"
+      path: "overrides.yaml"
+{{- end -}}
+{{- end -}}
+
+{{/*
+Internal servers http listen port - derived from Loki default
+*/}}
+{{- define "tempo.serverHttpListenPort" -}}
+{{ (((.Values.tempo).structuredConfig).server).http_listen_port | default "3100" }}
+{{- end -}}
+
+{{/*
+Internal servers grpc listen port - derived from Tempo default
+*/}}
+{{- define "tempo.serverGrpcListenPort" -}}
+{{ (((.Values.tempo).structuredConfig).server).grpc_listen_port | default "9095" }}
+{{- end -}}
+
+{{/*
+Memberlist bind port
+*/}}
+{{- define "tempo.memberlistBindPort" -}}
+{{ (((.Values.tempo).structuredConfig).memberlist).bind_port | default "7946" }}
+{{- end -}}
+
+{{/*
+Calculate values.yaml section name from component name
+Expects the component name in .component on the passed context
+*/}}
+{{- define "tempo.componentSectionFromName" -}}
+{{- .component | replace "-" "_" | camelcase | untitle -}}
+{{- end -}}
+
+{{/*
+POD labels
+*/}}
+{{- define "tempo.podLabels" -}}
+helm.sh/chart: {{ include "tempo.chart" .ctx }}
+app.kubernetes.io/name: {{ include "tempo.name" .ctx }}
+app.kubernetes.io/instance: {{ .ctx.Release.Name }}
+app.kubernetes.io/version: {{ .ctx.Chart.AppVersion | quote }}
+app.kubernetes.io/managed-by: {{ .ctx.Release.Service }}
+{{- if .component }}
+app.kubernetes.io/component: {{ .component }}
+{{- end }}
+{{- if .memberlist }}
+app.kubernetes.io/part-of: memberlist
+{{- end -}}
+{{- end -}}
+
+{{/*
+POD annotations
+*/}}
+{{- define "tempo.podAnnotations" -}}
+{{- if .ctx.Values.useExternalConfig }}
+checksum/config: {{ .ctx.Values.externalConfigVersion }}
+{{- else -}}
+checksum/config: {{ include (print .ctx.Template.BasePath "/configmap-tempo.yaml") .ctx | sha256sum }}
+{{- end }}
+{{- with .ctx.Values.global.podAnnotations }}
+{{ toYaml . }}
+{{- end }}
+{{- if .component }}
+{{- $componentSection := include "tempo.componentSectionFromName" . }}
+{{- if not (hasKey .ctx.Values $componentSection) }}
+{{- print "Component section " $componentSection " does not exist" | fail }}
+{{- end }}
+{{- with (index .ctx.Values $componentSection).podAnnotations }}
+{{ toYaml . }}
+{{- end }}
+{{- end }}
+{{- end -}}
+
+{{/*
+Cluster name that shows up in dashboard metrics
+*/}}
+{{- define "tempo.clusterName" -}}
+{{ (include "tempo.calculatedConfig" . | fromYaml).cluster_name | default .Release.Name }}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/admin-api/admin-api-dep.yaml b/charts/tempo-distributed/templates/admin-api/admin-api-dep.yaml
new file mode 100644
index 00000000..6b53e96b
--- /dev/null
+++ b/charts/tempo-distributed/templates/admin-api/admin-api-dep.yaml
@@ -0,0 +1,126 @@
+{{- if .Values.enterprise.enabled -}}
+{{ $dict := dict "ctx" . "component" "admin-api" "memberlist" true }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  annotations:
+    {{- toYaml .Values.adminApi.annotations | nindent 4 }}
+  labels:
+    {{- include "tempo.labels" $dict | nindent 4 }}
+  name: {{ include "tempo.resourceName" $dict }}
+  namespace: {{ .Release.Namespace | quote }}
+spec:
+  replicas: {{ .Values.adminApi.replicas }}
+  selector:
+    matchLabels:
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
+  strategy:
+    {{- toYaml .Values.adminApi.strategy | nindent 4 }}
+  template:
+    metadata:
+      labels:
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
+        {{- with .Values.adminApi.podLabels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      annotations:
+        {{- include "tempo.podAnnotations" $dict | nindent 8 }}
+      namespace: {{ .Release.Namespace | quote }}
+    spec:
+      serviceAccountName: {{ template "tempo.serviceAccountName" . }}
+      {{- if .Values.adminApi.priorityClassName }}
+      priorityClassName: {{ .Values.adminApi.priorityClassName }}
+      {{- end }}
+      securityContext:
+        {{- toYaml .Values.adminApi.securityContext | nindent 8 }}
+      initContainers:
+        {{- with .Values.adminApi.initContainers }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      {{- if .Values.tempo.image.pullSecrets }}
+      imagePullSecrets:
+      {{- range .Values.image.pullSecrets }}
+        - name: {{ . }}
+      {{- end }}
+      {{- end }}
+      containers:
+        - name: admin-api
+          image: "{{ include "tempo.imageReference" $dict }}"
+          imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
+          args:
+            - "-target=admin-api"
+            - "-config.expand-env=true"
+            - "-config.file=/conf/tempo.yaml"
+            {{- range $key, $value := .Values.adminApi.extraArgs }}
+            - "-{{ $key }}={{ $value }}"
+            {{- end }}
+          volumeMounts:
+            - mountPath: /conf
+              name: config
+            - name: license
+              mountPath: /license
+            - name: storage
+              mountPath: "/data"
+              subPath: {{ .Values.adminApi.persistence.subPath }}
+            {{- if .Values.adminApi.extraVolumeMounts }}
+              {{ toYaml .Values.adminApi.extraVolumeMounts | nindent 12}}
+            {{- end }}
+          ports:
+            - name: http-metrics
+              containerPort: {{ include "tempo.serverHttpListenPort" . }}
+              protocol: TCP
+            - name: grpc
+              containerPort: {{ include "tempo.serverGrpcListenPort" . }}
+              protocol: TCP
+            - name: memberlist
+              containerPort: {{ include "tempo.memberlistBindPort" . }}
+              protocol: TCP
+          livenessProbe:
+            {{- toYaml .Values.adminApi.livenessProbe | nindent 12 }}
+          readinessProbe:
+            {{- toYaml .Values.adminApi.readinessProbe | nindent 12 }}
+          resources:
+            {{- toYaml .Values.adminApi.resources | nindent 12 }}
+          securityContext:
+            {{- toYaml .Values.adminApi.containerSecurityContext | nindent 12 }}
+          env:
+            {{- with .Values.global.extraEnv }}
+              {{ toYaml . | nindent 12 }}
+            {{- end }}
+            {{- with .Values.adminApi.env }}
+              {{ toYaml . | nindent 12 }}
+            {{- end }}
+          envFrom:
+            {{- with .Values.global.extraEnvFrom }}
+              {{- toYaml . | nindent 12 }}
+            {{- end }}
+            {{- with .Values.adminApi.extraEnvFrom }}
+              {{- toYaml . | nindent 12 }}
+            {{- end }}
+        {{- with .Values.adminApi.extraContainers }}
+        {{ toYaml . | nindent 8 }}
+        {{- end }}
+      nodeSelector:
+        {{- toYaml .Values.adminApi.nodeSelector | nindent 8 }}
+      {{- with .Values.adminApi.affinity }}
+      affinity:
+        {{- tpl . $ | nindent 8 }}
+      {{- end }}
+      tolerations:
+        {{- toYaml .Values.adminApi.tolerations | nindent 8 }}
+      terminationGracePeriodSeconds: {{ .Values.adminApi.terminationGracePeriodSeconds }}
+      volumes:
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
+        - name: runtime-config
+          configMap:
+            name: {{ template "tempo.fullname" . }}-runtime
+        {{- if .Values.adminApi.extraVolumes }}
+        {{ toYaml .Values.adminApi.extraVolumes | nindent 8}}
+        {{- end }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        - name: storage
+          emptyDir: {}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/admin-api/admin-api-pdb.yaml b/charts/tempo-distributed/templates/admin-api/admin-api-pdb.yaml
new file mode 100644
index 00000000..5fbeb116
--- /dev/null
+++ b/charts/tempo-distributed/templates/admin-api/admin-api-pdb.yaml
@@ -0,0 +1,3 @@
+{{- if .Values.enterprise.enabled -}}
+{{- include "tempo.lib.podDisruptionBudget" (dict "ctx" $ "component" "admin-api" "memberlist" true) }}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/admin-api/admin-api-servmon.yaml b/charts/tempo-distributed/templates/admin-api/admin-api-servmon.yaml
new file mode 100644
index 00000000..c00bda5e
--- /dev/null
+++ b/charts/tempo-distributed/templates/admin-api/admin-api-servmon.yaml
@@ -0,0 +1,3 @@
+{{- if .Values.enterprise.enabled -}}
+{{- include "tempo.lib.serviceMonitor" (dict  "ctx" . "component" "admin-api" "memberlist" true) }}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/admin-api/admin-api-svc.yaml b/charts/tempo-distributed/templates/admin-api/admin-api-svc.yaml
new file mode 100644
index 00000000..6d49cbe4
--- /dev/null
+++ b/charts/tempo-distributed/templates/admin-api/admin-api-svc.yaml
@@ -0,0 +1,27 @@
+{{- if .Values.enterprise.enabled -}}
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "admin-api") }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" . "component" "admin-api" "memberlist" true) | nindent 4 }}
+    {{- with .Values.adminApi.service.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  annotations:
+    {{- toYaml .Values.adminApi.service.annotations | nindent 4 }}
+  namespace: {{ .Release.Namespace | quote }}
+spec:
+  type: ClusterIP
+  ports:
+    - port: {{ include "tempo.serverHttpListenPort" . }}
+      protocol: TCP
+      name: http-metrics
+      targetPort: http-metrics
+    - port: {{ include "tempo.serverGrpcListenPort" . }}
+      protocol: TCP
+      name: grpc
+      targetPort: grpc
+  selector:
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "admin-api" "memberlist" true) | nindent 4 }}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/compactor/_helpers-compactor.tpl b/charts/tempo-distributed/templates/compactor/_helpers-compactor.tpl
deleted file mode 100644
index 435155b1..00000000
--- a/charts/tempo-distributed/templates/compactor/_helpers-compactor.tpl
+++ /dev/null
@@ -1,30 +0,0 @@
-{{/*
-compactor fullname
-*/}}
-{{- define "tempo.compactorFullname" -}}
-{{ include "tempo.fullname" . }}-compactor
-{{- end }}
-
-{{/*
-compactor common labels
-*/}}
-{{- define "tempo.compactorLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: compactor
-{{- end }}
-
-{{/*
-compactor selector labels
-*/}}
-{{- define "tempo.compactorSelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: compactor
-{{- end }}
-
-{{/*
-compactor image
-*/}}
-{{- define "tempo.compactorImage" -}}
-{{- $dict := dict "tempo" .Values.tempo.image "service" .Values.compactor.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
diff --git a/charts/tempo-distributed/templates/compactor/deployment-compactor.yaml b/charts/tempo-distributed/templates/compactor/deployment-compactor.yaml
index f5d2ca95..abbb09eb 100644
--- a/charts/tempo-distributed/templates/compactor/deployment-compactor.yaml
+++ b/charts/tempo-distributed/templates/compactor/deployment-compactor.yaml
@@ -1,10 +1,11 @@
+{{ $dict := dict "ctx" . "component" "compactor" "memberlist" true }}
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ template "tempo.compactorFullname" . }}
+  name: {{ template "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.compactorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.compactor.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -15,7 +16,7 @@ spec:
   revisionHistoryLimit: 10
   selector:
     matchLabels:
-      {{- include "tempo.compactorSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   strategy:
     rollingUpdate:
       maxSurge: 0
@@ -23,8 +24,7 @@ spec:
   template:
     metadata:
       labels:
-        {{- include "tempo.compactorLabels" . | nindent 8 }}
-        {{- include "tempo.gossipRing.selectorLabels" . | nindent 8 }}
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -57,12 +57,12 @@ spec:
             {{- with .Values.compactor.extraArgs }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
-          image: {{ include "tempo.compactorImage" . }}
+          image: {{ include "tempo.imageReference" $dict }}
           imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
           name: compactor
           ports:
             - containerPort: 3100
-              name: http
+              name: http-metrics
             - containerPort: 7946
               name: http-memberlist
           {{- with .Values.compactor.extraEnv }}
@@ -81,9 +81,13 @@ spec:
           {{- end }}
           volumeMounts:
             - mountPath: /conf
-              name: tempo-conf
+              name: config
             - mountPath: /var/tempo
               name: tempo-compactor-store
+            {{- if .Values.enterprise.enabled }}
+            - name: license
+              mountPath: /license
+            {{- end }}
             {{- with .Values.compactor.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
@@ -101,11 +105,15 @@ spec:
         {{- toYaml . | nindent 8 }}
       {{- end }}
       volumes:
-        - configMap:
-            name: {{ template "tempo.fullname" . }}
-          name: tempo-conf
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
         - name: tempo-compactor-store
           emptyDir: {}
+        {{- if .Values.enterprise.enabled }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        {{- end }}
         {{- with .Values.compactor.extraVolumes }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
diff --git a/charts/tempo-distributed/templates/compactor/poddisruptionbudget-compactor.yaml b/charts/tempo-distributed/templates/compactor/poddisruptionbudget-compactor.yaml
index 2c5bc7cb..780caab8 100644
--- a/charts/tempo-distributed/templates/compactor/poddisruptionbudget-compactor.yaml
+++ b/charts/tempo-distributed/templates/compactor/poddisruptionbudget-compactor.yaml
@@ -1,13 +1,14 @@
 {{- if gt (int .Values.compactor.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "compactor" "memberlist" true }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.compactorFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.compactorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.compactorSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: 1
 {{- end }}
diff --git a/charts/tempo-distributed/templates/compactor/service-compactor.yaml b/charts/tempo-distributed/templates/compactor/service-compactor.yaml
index 640c681f..d280df93 100644
--- a/charts/tempo-distributed/templates/compactor/service-compactor.yaml
+++ b/charts/tempo-distributed/templates/compactor/service-compactor.yaml
@@ -1,9 +1,9 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "tempo.compactorFullname" . }}
+  name: {{ template "tempo.resourceName" (dict "ctx" . "component" "compactor") }}
   labels:
-    {{- include "tempo.compactorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "compactor") | nindent 4 }}
   {{- with .Values.compactor.service.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -11,9 +11,9 @@ metadata:
 spec:
   type: ClusterIP
   ports:
-    - name: http
+    - name: http-metrics
       port: 3100
-      targetPort: http
+      targetPort: 3100
       protocol: TCP
   selector:
-    {{- include "tempo.compactorSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "compactor") | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/compactor/servicemonitor-compactor.yaml b/charts/tempo-distributed/templates/compactor/servicemonitor-compactor.yaml
index 2633a69f..5712b2c4 100644
--- a/charts/tempo-distributed/templates/compactor/servicemonitor-compactor.yaml
+++ b/charts/tempo-distributed/templates/compactor/servicemonitor-compactor.yaml
@@ -1,51 +1 @@
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "tempo.compactorFullname" $ }}
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.compactorLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.compactorSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: http
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .scheme }}
-      scheme: {{ . }}
-      {{- end }}
-      {{- with .tlsConfig }}
-      tlsConfig:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "compactor" "memberlist" true) }}
diff --git a/charts/tempo-distributed/templates/configmap-tempo.yaml b/charts/tempo-distributed/templates/configmap-tempo.yaml
index f604acda..b2e006f7 100644
--- a/charts/tempo-distributed/templates/configmap-tempo.yaml
+++ b/charts/tempo-distributed/templates/configmap-tempo.yaml
@@ -1,14 +1,27 @@
+{{- if not .Values.useExternalConfig }}
 apiVersion: v1
+{{- if eq .Values.configStorageType "Secret" }}
+kind: Secret
+{{- else }}
 kind: ConfigMap
+{{- end }}
 metadata:
-  name: {{ template "tempo.fullname" . }}
-  namespace: {{ .Release.Namespace }}
+  name: {{ tpl .Values.externalConfigSecretName . }}
   labels:
-    {{- include "tempo.distributorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" .) | nindent 4 }}
+  namespace: {{ .Release.Namespace | quote }}
+{{- if eq .Values.configStorageType "Secret" }}
+data:
+  tempo-query.yaml: {{ tpl .Values.queryFrontend.query.config . | b64enc }}
+  overrides.yaml: {{ include "tempo.overridesConfig" . | b64enc }}
+  tempo.yaml: {{ include "tempo.calculatedConfig" . | b64enc }}
+{{- else }}
 data:
   tempo-query.yaml: |
     {{- tpl .Values.queryFrontend.query.config . | nindent 4 }}
   overrides.yaml: |
-    {{- tpl .Values.overrides . | nindent 4 }}
+    {{ include "tempo.overridesConfig" . | nindent 4 }}
   tempo.yaml: |
-    {{- tpl (mergeOverwrite (tpl .Values.config . | fromYaml) .Values.tempo.structuredConfig | toYaml) . | nindent 4 }}
+    {{ include "tempo.calculatedConfig" . | nindent 4 }}
+{{- end -}}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/distributor/_helpers-distributor.tpl b/charts/tempo-distributed/templates/distributor/_helpers-distributor.tpl
deleted file mode 100644
index 39f9788f..00000000
--- a/charts/tempo-distributed/templates/distributor/_helpers-distributor.tpl
+++ /dev/null
@@ -1,30 +0,0 @@
-{{/*
-distributor fullname
-*/}}
-{{- define "tempo.distributorFullname" -}}
-{{ include "tempo.fullname" . }}-distributor
-{{- end }}
-
-{{/*
-distributor common labels
-*/}}
-{{- define "tempo.distributorLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: distributor
-{{- end }}
-
-{{/*
-distributor selector labels
-*/}}
-{{- define "tempo.distributorSelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: distributor
-{{- end }}
-
-{{/*
-distributor image
-*/}}
-{{- define "tempo.distributorImage" -}}
-{{- $dict := dict "tempo" .Values.tempo.image "service" .Values.distributor.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
diff --git a/charts/tempo-distributed/templates/distributor/deployment-distributor.yaml b/charts/tempo-distributed/templates/distributor/deployment-distributor.yaml
index 65d40b21..7d6a3eb7 100644
--- a/charts/tempo-distributed/templates/distributor/deployment-distributor.yaml
+++ b/charts/tempo-distributed/templates/distributor/deployment-distributor.yaml
@@ -1,10 +1,11 @@
+{{ $dict := dict "ctx" . "component" "distributor" "memberlist" true }}
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ include "tempo.distributorFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-  {{- include "tempo.distributorLabels" . | nindent 4 }}
+  {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.distributor.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -17,12 +18,11 @@ spec:
   revisionHistoryLimit: 10
   selector:
     matchLabels:
-      {{- include "tempo.distributorSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   template:
     metadata:
       labels:
-        {{- include "tempo.distributorLabels" . | nindent 8 }}
-        {{- include "tempo.gossipRing.selectorLabels" . | nindent 8 }}
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -55,7 +55,7 @@ spec:
             {{- with .Values.distributor.extraArgs }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
-          image: {{ include "tempo.distributorImage" . }}
+          image: {{ include "tempo.imageReference" $dict }}
           imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
           name: distributor
           ports:
@@ -63,7 +63,7 @@ spec:
               name: http-memberlist
               protocol: TCP
             - containerPort: 3100
-              name: http
+              name: http-metrics
             {{- if .Values.traces.jaeger.thriftCompact.enabled }}
             - containerPort: 6831
               name: jaeger-compact
@@ -122,9 +122,13 @@ spec:
           {{- end }}
           volumeMounts:
             - mountPath: /conf
-              name: tempo-conf
+              name: config
             - mountPath: /var/tempo
               name: tempo-distributor-store
+            {{- if .Values.enterprise.enabled }}
+            - name: license
+              mountPath: /license
+            {{- end }}
             {{- with .Values.distributor.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
@@ -142,11 +146,15 @@ spec:
         {{- toYaml . | nindent 8 }}
       {{- end }}
       volumes:
-        - configMap:
-            name: {{ template "tempo.fullname" . }}
-          name: tempo-conf
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
         - name: tempo-distributor-store
           emptyDir: {}
+        {{- if .Values.enterprise.enabled }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        {{- end }}
         {{- with .Values.distributor.extraVolumes }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
diff --git a/charts/tempo-distributed/templates/distributor/hpa.yaml b/charts/tempo-distributed/templates/distributor/hpa.yaml
index 05482ed5..912572af 100644
--- a/charts/tempo-distributed/templates/distributor/hpa.yaml
+++ b/charts/tempo-distributed/templates/distributor/hpa.yaml
@@ -2,14 +2,14 @@
 apiVersion: autoscaling/v2beta1
 kind: HorizontalPodAutoscaler
 metadata:
-  name: {{ include "tempo.distributorFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}
   labels:
-    {{- include "tempo.distributorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "distributor") | nindent 4 }}
 spec:
   scaleTargetRef:
     apiVersion: apps/v1
     kind: Deployment
-    name: {{ include "tempo.distributorFullname" . }}
+    name: {{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}
   minReplicas: {{ .Values.distributor.autoscaling.minReplicas }}
   maxReplicas: {{ .Values.distributor.autoscaling.maxReplicas }}
   metrics:
diff --git a/charts/tempo-distributed/templates/distributor/poddisruptionbudget-distributor.yaml b/charts/tempo-distributed/templates/distributor/poddisruptionbudget-distributor.yaml
index de21d4e6..30b542b8 100644
--- a/charts/tempo-distributed/templates/distributor/poddisruptionbudget-distributor.yaml
+++ b/charts/tempo-distributed/templates/distributor/poddisruptionbudget-distributor.yaml
@@ -1,13 +1,14 @@
 {{- if gt (int .Values.distributor.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "distributor" "memberlist" true }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.distributorFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.distributorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.distributorSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: 1
 {{- end }}
diff --git a/charts/tempo-distributed/templates/distributor/service-distributor.yaml b/charts/tempo-distributed/templates/distributor/service-distributor.yaml
index a2797be5..f81105c3 100644
--- a/charts/tempo-distributed/templates/distributor/service-distributor.yaml
+++ b/charts/tempo-distributed/templates/distributor/service-distributor.yaml
@@ -1,10 +1,10 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "tempo.distributorFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.distributorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "distributor") | nindent 4 }}
   {{- with .Values.distributor.service.annotations }}
   annotations:
     {{- toYaml . | nindent 4 }}
@@ -12,9 +12,9 @@ metadata:
 spec:
   type: {{ .Values.distributor.service.type }}
   ports:
-    - name: http
+    - name: http-metrics
       port: 3100
-      targetPort: http
+      targetPort: http-metrics
     - name: grpc
       port: 9095
       protocol: TCP
@@ -79,5 +79,5 @@ spec:
     {{ toYaml . | nindent 4 }}
   {{- end }}
   selector:
-    {{- include "tempo.distributorSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "distributor") | nindent 4 }}
 
diff --git a/charts/tempo-distributed/templates/distributor/servicemonitor-distributor.yaml b/charts/tempo-distributed/templates/distributor/servicemonitor-distributor.yaml
index 776b9acd..6987dea8 100644
--- a/charts/tempo-distributed/templates/distributor/servicemonitor-distributor.yaml
+++ b/charts/tempo-distributed/templates/distributor/servicemonitor-distributor.yaml
@@ -1,51 +1 @@
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ include "tempo.distributorFullname" $ }}
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.distributorLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.distributorSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: http
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .scheme }}
-      scheme: {{ . }}
-      {{- end }}
-      {{- with .tlsConfig }}
-      tlsConfig:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "distributor" "memberlist" true) }}
diff --git a/charts/tempo-distributed/templates/enterprise-gateway/_helpers.tpl b/charts/tempo-distributed/templates/enterprise-gateway/_helpers.tpl
new file mode 100644
index 00000000..2b255608
--- /dev/null
+++ b/charts/tempo-distributed/templates/enterprise-gateway/_helpers.tpl
@@ -0,0 +1,33 @@
+{{/*
+Return the appropriate apiVersion for ingress.
+*/}}
+{{- define "tempo.ingress.apiVersion" -}}
+  {{- if and (.Capabilities.APIVersions.Has "networking.k8s.io/v1") (semverCompare ">= 1.19-0" .Capabilities.KubeVersion.Version) -}}
+      {{- print "networking.k8s.io/v1" -}}
+  {{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
+    {{- print "networking.k8s.io/v1beta1" -}}
+  {{- else -}}
+    {{- print "extensions/v1beta1" -}}
+  {{- end -}}
+{{- end -}}
+
+{{/*
+Return if ingress is stable.
+*/}}
+{{- define "tempo.ingress.isStable" -}}
+  {{- eq (include "tempo.ingress.apiVersion" .) "networking.k8s.io/v1" -}}
+{{- end -}}
+
+{{/*
+Return if ingress supports ingressClassName.
+*/}}
+{{- define "tempo.ingress.supportsIngressClassName" -}}
+  {{- or (eq (include "tempo.ingress.isStable" .) "true") (and (eq (include "tempo.ingress.apiVersion" .) "networking.k8s.io/v1beta1") (semverCompare ">= 1.18-0" .Capabilities.KubeVersion.Version)) -}}
+{{- end -}}
+
+{{/*
+Return if ingress supports pathType.
+*/}}
+{{- define "tempo.ingress.supportsPathType" -}}
+  {{- or (eq (include "tempo.ingress.isStable" .) "true") (and (eq (include "tempo.ingress.apiVersion" .) "networking.k8s.io/v1beta1") (semverCompare ">= 1.18-0" .Capabilities.KubeVersion.Version)) -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/enterprise-gateway/gateway-dep.yaml b/charts/tempo-distributed/templates/enterprise-gateway/gateway-dep.yaml
new file mode 100644
index 00000000..811e83c2
--- /dev/null
+++ b/charts/tempo-distributed/templates/enterprise-gateway/gateway-dep.yaml
@@ -0,0 +1,118 @@
+{{- if .Values.enterprise.enabled -}}
+{{ $dict := dict "ctx" . "component" "enterprise-gateway" }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  annotations:
+    {{- toYaml .Values.enterpriseGateway.annotations | nindent 4 }}
+  labels:
+    {{- include "tempo.labels" $dict | nindent 4 }}
+  name: {{ include "tempo.resourceName" $dict }}
+  namespace: {{ .Release.Namespace | quote }}
+spec:
+  replicas: {{ .Values.enterpriseGateway.replicas }}
+  selector:
+    matchLabels:
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
+  strategy:
+    {{- toYaml .Values.enterpriseGateway.strategy | nindent 4 }}
+  template:
+    metadata:
+      labels:
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
+        {{- with .Values.enterpriseGateway.podLabels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      annotations:
+        {{- include "tempo.podAnnotations" $dict | nindent 8 }}
+      namespace: {{ .Release.Namespace | quote }}
+    spec:
+      serviceAccountName: {{ template "tempo.serviceAccountName" . }}
+      {{- if .Values.enterpriseGateway.priorityClassName }}
+      priorityClassName: {{ .Values.enterpriseGateway.priorityClassName }}
+      {{- end }}
+      securityContext:
+        {{- toYaml .Values.enterpriseGateway.securityContext | nindent 8 }}
+      initContainers:
+        {{- toYaml .Values.enterpriseGateway.initContainers | nindent 8 }}
+      {{- if .Values.tempo.image.pullSecrets }}
+      imagePullSecrets:
+      {{- range .Values.image.pullSecrets }}
+        - name: {{ . }}
+      {{- end }}
+      {{- end }}
+      containers:
+        - name: gateway
+          image: "{{ include "tempo.imageReference" $dict }}"
+          imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
+          args:
+            - "-target=gateway"
+            - "-config.expand-env=true"
+            - "-config.file=/conf/tempo.yaml"
+            {{- range $key, $value := .Values.enterpriseGateway.extraArgs }}
+            - "-{{ $key }}={{ $value }}"
+            {{- end }}
+          volumeMounts:
+            {{- if .Values.enterpriseGateway.extraVolumeMounts }}
+              {{ toYaml .Values.enterpriseGateway.extraVolumeMounts | nindent 12}}
+            {{- end }}
+            - name: config
+              mountPath: /conf
+            - name: license
+              mountPath: /license
+            - name: storage
+              mountPath: "/data"
+              subPath: {{ .Values.enterpriseGateway.persistence.subPath }}
+          ports:
+            - name: http-metrics
+              containerPort: {{ include "tempo.serverHttpListenPort" . }}
+              protocol: TCP
+          livenessProbe:
+            {{- toYaml .Values.enterpriseGateway.livenessProbe | nindent 12 }}
+          readinessProbe:
+            {{- toYaml .Values.enterpriseGateway.readinessProbe | nindent 12 }}
+          resources:
+            {{- toYaml .Values.enterpriseGateway.resources | nindent 12 }}
+          securityContext:
+            {{- toYaml .Values.enterpriseGateway.containerSecurityContext | nindent 12 }}
+          env:
+            {{- with .Values.global.extraEnv }}
+              {{ toYaml . | nindent 12 }}
+            {{- end }}
+            {{- with .Values.enterpriseGateway.env }}
+              {{ toYaml . | nindent 12 }}
+            {{- end }}
+          envFrom:
+            {{- with .Values.global.extraEnvFrom }}
+              {{- toYaml . | nindent 12 }}
+            {{- end }}
+            {{- with .Values.enterpriseGateway.extraEnvFrom }}
+              {{- toYaml . | nindent 12 }}
+            {{- end }}
+        {{- with .Values.enterpriseGateway.extraContainers }}
+        {{ toYaml . | nindent 8 }}
+        {{- end }}
+      nodeSelector:
+        {{- toYaml .Values.enterpriseGateway.nodeSelector | nindent 8 }}
+      {{- with .Values.enterpriseGateway.affinity }}
+      affinity:
+        {{- tpl . $ | nindent 8 }}
+      {{- end }}
+      tolerations:
+        {{- toYaml .Values.enterpriseGateway.tolerations | nindent 8 }}
+      terminationGracePeriodSeconds: {{ .Values.enterpriseGateway.terminationGracePeriodSeconds }}
+      volumes:
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
+        - name: runtime-config
+          configMap:
+            name: {{ template "tempo.fullname" . }}-runtime
+        {{- if .Values.enterpriseGateway.extraVolumes }}
+        {{ toYaml .Values.enterpriseGateway.extraVolumes | nindent 8}}
+        {{- end }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        - name: storage
+          emptyDir: {}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/enterprise-gateway/gateway-ingress.yaml b/charts/tempo-distributed/templates/enterprise-gateway/gateway-ingress.yaml
new file mode 100644
index 00000000..ea45a3fa
--- /dev/null
+++ b/charts/tempo-distributed/templates/enterprise-gateway/gateway-ingress.yaml
@@ -0,0 +1,57 @@
+{{- if .Values.enterprise.enabled -}}
+{{ $dict := dict "ctx" . "component" "enterprise-gateway" }}
+{{- if .Values.enterpriseGateway.ingress.enabled -}}
+{{- $ingressApiIsStable := eq (include "tempo.ingress.isStable" .) "true" -}}
+{{- $ingressSupportsIngressClassName := eq (include "tempo.ingress.supportsIngressClassName" .) "true" -}}
+{{- $ingressSupportsPathType := eq (include "tempo.ingress.supportsPathType" .) "true" -}}
+apiVersion: {{ include "tempo.ingress.apiVersion" . }}
+kind: Ingress
+metadata:
+  name: {{ include "tempo.resourceName" $dict }}
+  labels:
+    {{- include "tempo.labels" $dict | nindent 4 }}
+  {{- with .Values.enterpriseGateway.ingress.annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+  namespace: {{ .Release.Namespace | quote }}
+spec:
+  {{- if and $ingressSupportsIngressClassName .Values.enterpriseGateway.ingress.ingressClassName }}
+  ingressClassName: {{ .Values.enterpriseGateway.ingress.ingressClassName }}
+  {{- end -}}
+  {{- if .Values.enterpriseGateway.ingress.tls }}
+  tls:
+    {{- range .Values.enterpriseGateway.ingress.tls }}
+    - hosts:
+        {{- range .hosts }}
+        - {{ . | quote }}
+        {{- end }}
+      {{- with .secretName }}
+      secretName: {{ . }}
+      {{- end }}
+    {{- end }}
+  {{- end }}
+  rules:
+    {{- range .Values.enterpriseGateway.ingress.hosts }}
+    - host: {{ .host | quote }}
+      http:
+        paths:
+          {{- range .paths }}
+          - path: {{ .path }}
+            {{- if $ingressSupportsPathType }}
+            pathType: {{ .pathType }}
+            {{- end }}
+            backend:
+              {{- if $ingressApiIsStable }}
+              service:
+                name: {{ include "tempo.resourceName" $dict }}
+                port:
+                  number: {{ $.Values.enterpriseGateway.service.port | default (include "tempo.serverHttpListenPort" $ ) }}
+              {{- else }}
+              serviceName: {{ include "tempo.resourceName" $dict }}
+              servicePort: {{ $.Values.enterpriseGateway.service.port | default (include "tempo.serverHttpListenPort" $ ) }}
+              {{- end }}
+          {{- end }}
+    {{- end }}
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/enterprise-gateway/gateway-pdb.yaml b/charts/tempo-distributed/templates/enterprise-gateway/gateway-pdb.yaml
new file mode 100644
index 00000000..b17c0028
--- /dev/null
+++ b/charts/tempo-distributed/templates/enterprise-gateway/gateway-pdb.yaml
@@ -0,0 +1,3 @@
+{{- if .Values.enterprise.enabled -}}
+{{- include "tempo.lib.podDisruptionBudget" (dict "ctx" $ "component" "enterprise-gateway") }}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/enterprise-gateway/gateway-servmon.yaml b/charts/tempo-distributed/templates/enterprise-gateway/gateway-servmon.yaml
new file mode 100644
index 00000000..29d4e002
--- /dev/null
+++ b/charts/tempo-distributed/templates/enterprise-gateway/gateway-servmon.yaml
@@ -0,0 +1,3 @@
+{{- if .Values.enterprise.enabled -}}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "enterprise-gateway") }}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/enterprise-gateway/gateway-svc.yaml b/charts/tempo-distributed/templates/enterprise-gateway/gateway-svc.yaml
new file mode 100644
index 00000000..0698dc62
--- /dev/null
+++ b/charts/tempo-distributed/templates/enterprise-gateway/gateway-svc.yaml
@@ -0,0 +1,24 @@
+{{- if .Values.enterprise.enabled -}}
+{{ $dict := dict "ctx" . "component" "enterprise-gateway" }}
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ include "tempo.resourceName" $dict }}
+  labels:
+    {{- include "tempo.labels" $dict | nindent 4 }}
+    {{- with .Values.enterpriseGateway.service.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  annotations:
+    {{- toYaml .Values.enterpriseGateway.service.annotations | nindent 4 }}
+  namespace: {{ .Release.Namespace | quote }}
+spec:
+  type: ClusterIP
+  ports:
+    - port: {{ .Values.enterpriseGateway.service.port | default (include "tempo.serverHttpListenPort" . ) }}
+      protocol: TCP
+      name: http-metrics
+      targetPort: http-metrics
+  selector:
+    {{- include "tempo.selectorLabels" $dict | nindent 4 }}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/gateway/_helpers-gateway.tpl b/charts/tempo-distributed/templates/gateway/_helpers-gateway.tpl
index 0f85a934..39a96a18 100644
--- a/charts/tempo-distributed/templates/gateway/_helpers-gateway.tpl
+++ b/charts/tempo-distributed/templates/gateway/_helpers-gateway.tpl
@@ -1,26 +1,3 @@
-{{/*
-gateway fullname
-*/}}
-{{- define "tempo.gatewayFullname" -}}
-{{ include "tempo.fullname" . }}-gateway
-{{- end }}
-
-{{/*
-gateway common labels
-*/}}
-{{- define "tempo.gatewayLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: gateway
-{{- end }}
-
-{{/*
-gateway selector labels
-*/}}
-{{- define "tempo.gatewaySelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: gateway
-{{- end }}
-
 {{/*
 gateway auth secret name
 */}}
diff --git a/charts/tempo-distributed/templates/gateway/configmap-gateway.yaml b/charts/tempo-distributed/templates/gateway/configmap-gateway.yaml
index 4044f174..98a80aeb 100644
--- a/charts/tempo-distributed/templates/gateway/configmap-gateway.yaml
+++ b/charts/tempo-distributed/templates/gateway/configmap-gateway.yaml
@@ -2,9 +2,9 @@
 apiVersion: v1
 kind: ConfigMap
 metadata:
-  name: {{ include "tempo.gatewayFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
   labels:
-    {{- include "tempo.gatewayLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "gateway") | nindent 4 }}
 data:
   nginx.conf: |
     {{- tpl .Values.gateway.nginxConfig.file . | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/gateway/deployment-gateway.yaml b/charts/tempo-distributed/templates/gateway/deployment-gateway.yaml
index 57ccc178..8f448b1a 100644
--- a/charts/tempo-distributed/templates/gateway/deployment-gateway.yaml
+++ b/charts/tempo-distributed/templates/gateway/deployment-gateway.yaml
@@ -1,10 +1,11 @@
 {{- if .Values.gateway.enabled }}
+{{ $dict := dict "ctx" . "component" "gateway" }}
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ include "tempo.gatewayFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.gatewayLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   minReadySeconds: 10
 {{- if not .Values.gateway.autoscaling.enabled }}
@@ -13,7 +14,7 @@ spec:
   revisionHistoryLimit: 10
   selector:
     matchLabels:
-      {{- include "tempo.gatewaySelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   template:
     metadata:
       annotations:
@@ -25,7 +26,7 @@ spec:
         {{- toYaml . | nindent 8 }}
         {{- end }}
       labels:
-        {{- include "tempo.gatewaySelectorLabels" . | nindent 8 }}
+        {{- include "tempo.selectorLabels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -45,10 +46,10 @@ spec:
       enableServiceLinks: false
       containers:
         - name: nginx
-          image: {{ include "tempo.gatewayImage" . }}
+          image: "{{ include "tempo.imageReference" $dict }}"
           imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
           ports:
-            - name: http
+            - name: http-metrics
               containerPort: 8080
               protocol: TCP
           {{- with .Values.gateway.extraEnv }}
@@ -64,6 +65,10 @@ spec:
           volumeMounts:
             - name: config
               mountPath: /etc/nginx
+            {{- if .Values.enterprise.enabled }}
+            - name: license
+              mountPath: /license
+            {{- end }}
             {{- if .Values.gateway.basicAuth.enabled }}
             - name: auth
               mountPath: /etc/nginx/secrets
@@ -96,7 +101,12 @@ spec:
       volumes:
         - name: config
           configMap:
-            name: {{ include "tempo.gatewayFullname" . }}
+            name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
+        {{- if .Values.enterprise.enabled -}}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        {{- end }}
         {{- if .Values.gateway.basicAuth.enabled }}
         - name: auth
           secret:
diff --git a/charts/tempo-distributed/templates/gateway/hpa.yaml b/charts/tempo-distributed/templates/gateway/hpa.yaml
index 0ca4997b..14a61805 100644
--- a/charts/tempo-distributed/templates/gateway/hpa.yaml
+++ b/charts/tempo-distributed/templates/gateway/hpa.yaml
@@ -2,14 +2,14 @@
 apiVersion: autoscaling/v2beta1
 kind: HorizontalPodAutoscaler
 metadata:
-  name: {{ include "tempo.gatewayFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
   labels:
-    {{- include "tempo.gatewayLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "gateway") | nindent 4 }}
 spec:
   scaleTargetRef:
     apiVersion: apps/v1
     kind: Deployment
-    name: {{ include "tempo.gatewayFullname" . }}
+    name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
   minReplicas: {{ .Values.gateway.autoscaling.minReplicas }}
   maxReplicas: {{ .Values.gateway.autoscaling.maxReplicas }}
   metrics:
diff --git a/charts/tempo-distributed/templates/gateway/ingress-gateway.yaml b/charts/tempo-distributed/templates/gateway/ingress-gateway.yaml
index 4c5db9a7..9ae1fb8d 100644
--- a/charts/tempo-distributed/templates/gateway/ingress-gateway.yaml
+++ b/charts/tempo-distributed/templates/gateway/ingress-gateway.yaml
@@ -6,9 +6,9 @@
 apiVersion: {{ include "tempo.ingress.apiVersion" . }}
 kind: Ingress
 metadata:
-  name: {{ include "tempo.gatewayFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
   labels:
-    {{- include "tempo.gatewayLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "gateway") | nindent 4 }}
   {{- with .Values.gateway.ingress.annotations }}
   annotations:
     {{- toYaml . | nindent 4 }}
@@ -42,11 +42,11 @@ spec:
             backend:
               {{- if $ingressApiIsStable }}
               service:
-                name: {{ include "tempo.gatewayFullname" $ }}
+                name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
                 port:
                   number: {{ $.Values.gateway.service.port }}
               {{- else }}
-              serviceName: {{ include "tempo.gatewayFullname" $ }}
+              serviceName: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
               servicePort: {{ $.Values.gateway.service.port }}
               {{- end }}
           {{- end }}
diff --git a/charts/tempo-distributed/templates/gateway/poddisruptionbudget-gateway.yaml b/charts/tempo-distributed/templates/gateway/poddisruptionbudget-gateway.yaml
index 6c333f45..e4257db4 100644
--- a/charts/tempo-distributed/templates/gateway/poddisruptionbudget-gateway.yaml
+++ b/charts/tempo-distributed/templates/gateway/poddisruptionbudget-gateway.yaml
@@ -1,13 +1,14 @@
 {{- if gt (int .Values.gateway.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "gateway" }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.gatewayFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.gatewayLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.gatewaySelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: 1
 {{- end }}
diff --git a/charts/tempo-distributed/templates/gateway/secret-gateway.yaml b/charts/tempo-distributed/templates/gateway/secret-gateway.yaml
index 02b19c47..0098718e 100644
--- a/charts/tempo-distributed/templates/gateway/secret-gateway.yaml
+++ b/charts/tempo-distributed/templates/gateway/secret-gateway.yaml
@@ -3,9 +3,9 @@
 apiVersion: v1
 kind: Secret
 metadata:
-  name: {{ include "tempo.gatewayFullname" $ }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
   labels:
-    {{- include "tempo.gatewayLabels" $ | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "gateway") | nindent 4 }}
 stringData:
   .htpasswd: |
     {{- tpl .basicAuth.htpasswd $ | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/gateway/service-gateway.yaml b/charts/tempo-distributed/templates/gateway/service-gateway.yaml
index 0c802cf9..7663679b 100644
--- a/charts/tempo-distributed/templates/gateway/service-gateway.yaml
+++ b/charts/tempo-distributed/templates/gateway/service-gateway.yaml
@@ -2,9 +2,9 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "tempo.gatewayFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gateway") }}
   labels:
-    {{- include "tempo.gatewayLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "gateway") | nindent 4 }}
     {{- with .Values.gateway.service.labels }}
     {{- toYaml . | nindent 4 }}
     {{- end }}
@@ -21,7 +21,7 @@ spec:
   loadBalancerIP: {{ .Values.gateway.service.loadBalancerIP }}
   {{- end }}
   ports:
-    - name: http
+    - name: http-metrics
       port: {{ .Values.gateway.service.port }}
       targetPort: http
       {{- if and (eq "NodePort" .Values.gateway.service.type) .Values.gateway.service.nodePort }}
@@ -29,5 +29,5 @@ spec:
       {{- end }}
       protocol: TCP
   selector:
-    {{- include "tempo.gatewaySelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "gateway") | nindent 4 }}
 {{- end }}
diff --git a/charts/tempo-distributed/templates/gossip-ring/_helpers.gossip-ring.tpl b/charts/tempo-distributed/templates/gossip-ring/_helpers.gossip-ring.tpl
new file mode 100644
index 00000000..57669522
--- /dev/null
+++ b/charts/tempo-distributed/templates/gossip-ring/_helpers.gossip-ring.tpl
@@ -0,0 +1,8 @@
+{{/*
+gossip-ring selector labels
+*/}}
+{{- define "tempo.gossipRingSelectorLabels" -}}
+{{ include "tempo.selectorLabels" . }}
+app.kubernetes.io/part-of: memberlist
+{{- end -}}
+
diff --git a/charts/tempo-distributed/templates/gossip-ring/service-gossip-ring.yaml b/charts/tempo-distributed/templates/gossip-ring/service-gossip-ring.yaml
new file mode 100644
index 00000000..b1aea57f
--- /dev/null
+++ b/charts/tempo-distributed/templates/gossip-ring/service-gossip-ring.yaml
@@ -0,0 +1,18 @@
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "gossip-ring") }}
+  namespace: {{ .Release.Namespace }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" . "component" "gossip-ring") | nindent 4 }}
+spec:
+  type: ClusterIP
+  clusterIP: None
+  ports:
+    - name: gossip-ring
+      port: 7946
+      protocol: TCP
+      targetPort: http-memberlist
+  publishNotReadyAddresses: true
+  selector:
+    {{- include "tempo.gossipRingSelectorLabels" (dict "ctx" .) | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/ingester/_helpers-ingester.tpl b/charts/tempo-distributed/templates/ingester/_helpers-ingester.tpl
deleted file mode 100644
index 68294866..00000000
--- a/charts/tempo-distributed/templates/ingester/_helpers-ingester.tpl
+++ /dev/null
@@ -1,30 +0,0 @@
-{{/*
-ingester fullname
-*/}}
-{{- define "tempo.ingesterFullname" -}}
-{{ include "tempo.fullname" . }}-ingester
-{{- end }}
-
-{{/*
-ingester common labels
-*/}}
-{{- define "tempo.ingesterLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: ingester
-{{- end }}
-
-{{/*
-ingester selector labels
-*/}}
-{{- define "tempo.ingesterSelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: ingester
-{{- end }}
-
-{{/*
-ingester image
-*/}}
-{{- define "tempo.ingesterImage" -}}
-{{- $dict := dict "tempo" .Values.tempo.image "service" .Values.ingester.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
diff --git a/charts/tempo-distributed/templates/ingester/hpa.yaml b/charts/tempo-distributed/templates/ingester/hpa.yaml
index 84f3c763..f80909dd 100644
--- a/charts/tempo-distributed/templates/ingester/hpa.yaml
+++ b/charts/tempo-distributed/templates/ingester/hpa.yaml
@@ -2,14 +2,14 @@
 apiVersion: autoscaling/v2beta1
 kind: HorizontalPodAutoscaler
 metadata:
-  name: {{ include "tempo.ingesterFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}
   labels:
-    {{- include "tempo.ingesterLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "ingester") | nindent 4 }}
 spec:
   scaleTargetRef:
     apiVersion: apps/v1
     kind: StatefulSet
-    name: {{ include "tempo.ingesterFullname" . }}
+    name: {{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}
   minReplicas: {{ .Values.ingester.autoscaling.minReplicas }}
   maxReplicas: {{ .Values.ingester.autoscaling.maxReplicas }}
   metrics:
diff --git a/charts/tempo-distributed/templates/ingester/pdb.yaml b/charts/tempo-distributed/templates/ingester/pdb.yaml
index 99e47b4d..01c9db0d 100644
--- a/charts/tempo-distributed/templates/ingester/pdb.yaml
+++ b/charts/tempo-distributed/templates/ingester/pdb.yaml
@@ -2,13 +2,13 @@
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.ingesterFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.ingesterLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "ingester") | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      app: {{ include "tempo.ingesterFullname" . }}
+      app: {{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}
 {{ toYaml .Values.podDisruptionBudget | indent 2 }}
 {{- end }}
diff --git a/charts/tempo-distributed/templates/ingester/poddisruptionbudget-ingester.yaml b/charts/tempo-distributed/templates/ingester/poddisruptionbudget-ingester.yaml
index 637b6cd0..413c4778 100644
--- a/charts/tempo-distributed/templates/ingester/poddisruptionbudget-ingester.yaml
+++ b/charts/tempo-distributed/templates/ingester/poddisruptionbudget-ingester.yaml
@@ -1,13 +1,14 @@
 {{- if gt (int .Values.ingester.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "ingester" "memberlist" true }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.ingesterFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.ingesterLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.ingesterSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: {{ sub (.Values.ingester.replicas) (add (div .Values.ingester.config.replication_factor 2) 1) }}
 {{- end }}
diff --git a/charts/tempo-distributed/templates/ingester/service-ingester.yaml b/charts/tempo-distributed/templates/ingester/service-ingester.yaml
index fa2c3971..abb6c29b 100644
--- a/charts/tempo-distributed/templates/ingester/service-ingester.yaml
+++ b/charts/tempo-distributed/templates/ingester/service-ingester.yaml
@@ -1,17 +1,17 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "tempo.ingesterFullname" . }}
+  name: {{ template "tempo.resourceName" (dict "ctx" . "component" "ingester") }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.ingesterLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "ingester") | nindent 4 }}
   {{- with .Values.ingester.service.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
   {{- end }}
 spec:
   ports:
-    - name: http
+    - name: http-metrics
       port: 3100
       protocol: TCP
       targetPort: 3100
@@ -20,4 +20,4 @@ spec:
       protocol: TCP
       targetPort: 9095
   selector:
-    {{- include "tempo.ingesterSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "ingester") | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/ingester/servicemonitor-ingester.yaml b/charts/tempo-distributed/templates/ingester/servicemonitor-ingester.yaml
index b46cece0..4804dc79 100644
--- a/charts/tempo-distributed/templates/ingester/servicemonitor-ingester.yaml
+++ b/charts/tempo-distributed/templates/ingester/servicemonitor-ingester.yaml
@@ -1,51 +1 @@
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "tempo.ingesterFullname" $ }}
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.ingesterLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.ingesterSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: http
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .scheme }}
-      scheme: {{ . }}
-      {{- end }}
-      {{- with .tlsConfig }}
-      tlsConfig:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "ingester" "memberlist" true) }}
diff --git a/charts/tempo-distributed/templates/ingester/statefulset-ingester.yaml b/charts/tempo-distributed/templates/ingester/statefulset-ingester.yaml
index 7cb18d5b..d1d35d7f 100644
--- a/charts/tempo-distributed/templates/ingester/statefulset-ingester.yaml
+++ b/charts/tempo-distributed/templates/ingester/statefulset-ingester.yaml
@@ -1,10 +1,11 @@
+{{ $dict := dict "ctx" . "component" "ingester" "memberlist" true }}
 apiVersion: apps/v1
 kind: StatefulSet
 metadata:
-  name: {{ template "tempo.ingesterFullname" . }}
+  name: {{ template "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.ingesterLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.ingester.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -15,8 +16,8 @@ spec:
 {{- end }}
   selector:
     matchLabels:
-      {{- include "tempo.ingesterSelectorLabels" . | nindent 6}}
-  serviceName: {{ template "tempo.ingesterFullname" . }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6}}
+  serviceName: ingester
   podManagementPolicy: Parallel
   updateStrategy:
     rollingUpdate:
@@ -24,8 +25,7 @@ spec:
   template:
     metadata:
       labels:
-        {{- include "tempo.ingesterLabels" . | nindent 8 }}
-        {{- include "tempo.gossipRing.selectorLabels" . | nindent 8 }}
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -58,7 +58,7 @@ spec:
             {{- with .Values.ingester.extraArgs }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
-          image: {{ include "tempo.ingesterImage" . }}
+          image: {{ include "tempo.imageReference" $dict }}
           imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
           name: ingester
           ports:
@@ -66,7 +66,7 @@ spec:
               containerPort: 9095
             - name: http-memberlist
               containerPort: 7946
-            - name: http
+            - name: http-metrics
               containerPort: 3100
           {{- with .Values.ingester.extraEnv }}
           env:
@@ -86,9 +86,13 @@ spec:
           {{- end }}
           volumeMounts:
             - mountPath: /conf
-              name: tempo-conf
+              name: config
             - mountPath: /var/tempo
               name: data
+            {{- if .Values.enterprise.enabled }}
+            - name: license
+              mountPath: /license
+            {{- end }}
             {{- with .Values.ingester.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
@@ -106,9 +110,13 @@ spec:
         {{- toYaml . | nindent 8 }}
       {{- end }}
       volumes:
-        - configMap:
-            name: {{ template "tempo.fullname" . }}
-          name: tempo-conf
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
+        {{- if .Values.enterprise.enabled }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        {{- end }}
         {{- with .Values.ingester.extraVolumes }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
diff --git a/charts/tempo-distributed/templates/lib/pdb.tpl b/charts/tempo-distributed/templates/lib/pdb.tpl
new file mode 100644
index 00000000..fa7c498d
--- /dev/null
+++ b/charts/tempo-distributed/templates/lib/pdb.tpl
@@ -0,0 +1,25 @@
+{{/*
+Tempo common PodDisruptionBudget definition
+Params:
+  ctx = . context
+  component = name of the component
+*/}}
+{{- define "tempo.lib.podDisruptionBudget" -}}
+{{- $componentSection := include "tempo.componentSectionFromName" . }}
+{{ with (index $.ctx.Values $componentSection) }}
+{{- if .podDisruptionBudget -}}
+apiVersion: {{ include "tempo.podDisruptionBudget.apiVersion" $.ctx }}
+kind: PodDisruptionBudget
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $.ctx "component" $.component) }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $.ctx "component" $.component) | nindent 4 }}
+  namespace: {{ $.ctx.Release.Namespace | quote }}
+spec:
+  selector:
+    matchLabels:
+      {{- include "tempo.selectorLabels" (dict "ctx" $.ctx "component" $.component) | nindent 6 }}
+{{ toYaml .podDisruptionBudget | indent 2 }}
+{{- end -}}
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/lib/service-monitor.tpl b/charts/tempo-distributed/templates/lib/service-monitor.tpl
new file mode 100644
index 00000000..c7cb25dc
--- /dev/null
+++ b/charts/tempo-distributed/templates/lib/service-monitor.tpl
@@ -0,0 +1,69 @@
+{{/*
+Tempo common ServiceMonitor definition
+Params:
+  ctx = . context
+  component = name of the component
+  memberlist = true/false, whether component is part of memberlist
+*/}}
+{{- define "tempo.lib.serviceMonitor" -}}
+{{- with .ctx.Values.metaMonitoring.serviceMonitor }}
+{{- if .enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ include "tempo.resourceName" $ }}
+  namespace: {{ .namespace | default $.ctx.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" $ | nindent 4 }}
+    {{- with .labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  {{- with .annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+spec:
+  namespaceSelector:
+  {{- if .namespaceSelector }}
+    {{- toYaml .namespaceSelector | nindent 4 }}
+  {{- else }}
+    matchNames:
+    - {{ $.ctx.Release.Namespace }}
+  {{- end }}
+  selector:
+    matchLabels:
+      {{- include "tempo.selectorLabels" $ | nindent 6 }}
+    matchExpressions:
+      - key: prometheus.io/service-monitor
+        operator: NotIn
+        values:
+          - "false"
+  endpoints:
+    - port: http-metrics
+      {{- with .interval }}
+      interval: {{ . }}
+      {{- end }}
+      {{- with .scrapeTimeout }}
+      scrapeTimeout: {{ . }}
+      {{- end }}
+      relabelings:
+        - sourceLabels: [job]
+          replacement: "{{ $.ctx.Release.Namespace }}/{{ $.component }}"
+          targetLabel: job
+        {{- if kindIs "string" .clusterLabel }}
+        - replacement: "{{ .clusterLabel | default (include "tempo.clusterName" $.ctx) }}"
+          targetLabel: cluster
+        {{- end }}
+        {{- with .relabelings }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      {{- with .scheme }}
+      scheme: {{ . }}
+      {{- end }}
+      {{- with .tlsConfig }}
+      tlsConfig:
+        {{- toYaml . | nindent 8 }}
+      {{- end }}
+{{- end -}}
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/license-secret.yaml b/charts/tempo-distributed/templates/license-secret.yaml
new file mode 100644
index 00000000..e45618a9
--- /dev/null
+++ b/charts/tempo-distributed/templates/license-secret.yaml
@@ -0,0 +1,14 @@
+{{- if .Values.enterprise.enabled -}}
+{{- if not .Values.license.external }}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ tpl .Values.license.secretName . }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" .) | nindent 4 }}
+  namespace: {{ .Release.Namespace | quote }}
+data:
+  license.jwt: {{ .Values.license.contents | b64enc }}
+{{- end -}}
+{{- end -}}
+
diff --git a/charts/tempo-distributed/templates/memcached/_helpers-memcached.tpl b/charts/tempo-distributed/templates/memcached/_helpers-memcached.tpl
deleted file mode 100644
index b064bba8..00000000
--- a/charts/tempo-distributed/templates/memcached/_helpers-memcached.tpl
+++ /dev/null
@@ -1,38 +0,0 @@
-{{/*
-memcached fullname
-*/}}
-{{- define "tempo.memcachedFullname" -}}
-{{ include "tempo.fullname" . }}-memcached
-{{- end }}
-
-{{/*
-memcached common labels
-*/}}
-{{- define "tempo.memcachedLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: memcached
-{{- end }}
-
-{{/*
-memcached selector labels
-*/}}
-{{- define "tempo.memcachedSelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: memcached
-{{- end }}
-
-{{/*
-memcached image
-*/}}
-{{- define "tempo.memcachedImage" -}}
-{{- $dict := dict "service" .Values.memcached.image "global" .Values.global.image "tempo" (dict) -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
-
-{{/*
-memcachedExporter image
-*/}}
-{{- define "tempo.memcachedExporterImage" -}}
-{{- $dict := dict "service" .Values.memcachedExporter.image "global" .Values.global.image "tempo" (dict) -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
diff --git a/charts/tempo-distributed/templates/memcached/poddisruptionbudget-memcached.yaml b/charts/tempo-distributed/templates/memcached/poddisruptionbudget-memcached.yaml
index 8c58485d..1c5f6b13 100644
--- a/charts/tempo-distributed/templates/memcached/poddisruptionbudget-memcached.yaml
+++ b/charts/tempo-distributed/templates/memcached/poddisruptionbudget-memcached.yaml
@@ -1,13 +1,14 @@
 {{- if gt (int .Values.memcached.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "memcached" }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.memcachedFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.memcachedLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.memcachedSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: 1
 {{- end }}
diff --git a/charts/tempo-distributed/templates/memcached/service-memcached.yaml b/charts/tempo-distributed/templates/memcached/service-memcached.yaml
index e0ff05ff..21e1455f 100644
--- a/charts/tempo-distributed/templates/memcached/service-memcached.yaml
+++ b/charts/tempo-distributed/templates/memcached/service-memcached.yaml
@@ -2,10 +2,10 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ include "tempo.memcachedFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "memcached") }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.memcachedLabels" . | nindent 4 }}
+  {{- include "tempo.labels" (dict "ctx" . "component" "memcached") | nindent 4 }}
   {{- with .Values.memcached.service.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -19,5 +19,5 @@ spec:
     port: 9150
     targetPort: http-metrics
   selector:
-    {{- include "tempo.memcachedSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "memcached") | nindent 4 }}
 {{- end}}
diff --git a/charts/tempo-distributed/templates/memcached/servicemonitor-memcached.yaml b/charts/tempo-distributed/templates/memcached/servicemonitor-memcached.yaml
index cc0273a2..3c4fe924 100644
--- a/charts/tempo-distributed/templates/memcached/servicemonitor-memcached.yaml
+++ b/charts/tempo-distributed/templates/memcached/servicemonitor-memcached.yaml
@@ -1,46 +1 @@
-{{- if .Values.memcached.enabled }}
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "tempo.memcachedFullname" $ }}
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.memcachedLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.memcachedSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: http-metrics
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "memcached") }}
diff --git a/charts/tempo-distributed/templates/memcached/statefulset-memcached.yaml b/charts/tempo-distributed/templates/memcached/statefulset-memcached.yaml
index d07fafdf..dedd32c1 100644
--- a/charts/tempo-distributed/templates/memcached/statefulset-memcached.yaml
+++ b/charts/tempo-distributed/templates/memcached/statefulset-memcached.yaml
@@ -1,11 +1,12 @@
 {{- if .Values.memcached.enabled }}
+{{ $dict := dict "ctx" . "component" "memcached" }}
 apiVersion: apps/v1
 kind: StatefulSet
 metadata:
-  name: {{ include "tempo.memcachedFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.memcachedLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.memcached.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -14,7 +15,7 @@ spec:
   replicas: {{ .Values.memcached.replicas }}
   selector:
     matchLabels:
-      {{- include "tempo.memcachedSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   serviceName: memcached
   template:
     metadata:
@@ -28,7 +29,7 @@ spec:
         {{- end }}
       {{- end }}
       labels:
-        {{- include "tempo.memcachedLabels" . | nindent 8 }}
+        {{- include "tempo.labels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -46,7 +47,7 @@ spec:
       {{- end }}
       enableServiceLinks: false
       containers:
-        - image: {{ include "tempo.memcachedImage" . }}
+        - image: {{ include "tempo.imageReference" $dict }}
           imagePullPolicy: {{ .Values.memcached.image.pullPolicy }}
           name: memcached
           {{- with .Values.memcached.extraArgs }}
@@ -74,7 +75,7 @@ spec:
         - args:
             - --memcached.address=localhost:11211
             - --web.listen-address=0.0.0.0:9150
-          image: {{ include "tempo.memcachedExporterImage" . }}
+          image: {{ include "tempo.memcachedExporterImage" (dict "ctx" . "component" "memcached-exporter") }}
           imagePullPolicy: {{ .Values.memcachedExporter.image.pullPolicy }}
           name: exporter
           ports:
diff --git a/charts/tempo-distributed/templates/metamonitoring/_helpers.tpl b/charts/tempo-distributed/templates/metamonitoring/_helpers.tpl
new file mode 100644
index 00000000..596d95db
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/_helpers.tpl
@@ -0,0 +1,49 @@
+{{- define "tempo.metaMonitoring.metrics.remoteWrite" -}}
+url: {{ .url }}
+{{- if .auth }}
+basicAuth:
+{{- if .auth.username }}
+  username:
+    name: {{ include "tempo.resourceName" (dict "ctx" $.ctx "component" "metrics-instance-usernames") }}
+    key: {{ .usernameKey | quote }}
+{{- end }}
+{{- with .auth }}
+{{- if and .passwordSecretKey .passwordSecretName }}
+  password:
+    name: {{ .passwordSecretName | quote }}
+    key: {{ .passwordSecretKey | quote }}
+{{- else if or .passwordSecretKey .passwordSecretName }}{{ required "Set either both passwordSecretKey and passwordSecretName or neither" nil }}
+{{- end }}
+{{- end }}
+{{- end }}
+{{- with .headers }}
+headers:
+  {{- toYaml . | nindent 2 }}
+{{- end }}
+{{- end -}}
+
+{{- define "tempo.metaMonitoring.logs.client" -}}
+url: {{ .url }}
+{{- if .auth }}
+{{- if .auth.tenantId }}
+tenantId: {{ .auth.tenantId | quote }}
+{{- end }}
+basicAuth:
+{{- if .auth.username }}
+  username:
+    name: {{ include "tempo.resourceName" (dict "ctx" $.ctx "component" "logs-instance-usernames") }}
+    key: {{ .usernameKey | quote }}
+{{- end }}
+{{- with .auth }}
+{{- if and .passwordSecretKey .passwordSecretName }}
+  password:
+    name: {{ .passwordSecretName | quote }}
+    key: {{ .passwordSecretKey | quote }}
+{{- else if or .passwordSecretKey .passwordSecretName }}
+{{ required "Set either both passwordSecretKey and passwordSecretName or neither" nil }}
+{{- end }}
+{{- end }}
+{{- end }}
+externalLabels:
+  cluster: {{ include "tempo.clusterName" $.ctx | quote}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/metamonitoring/grafana-agent-cluster-role-binding.yaml b/charts/tempo-distributed/templates/metamonitoring/grafana-agent-cluster-role-binding.yaml
new file mode 100644
index 00000000..0fc2169f
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/grafana-agent-cluster-role-binding.yaml
@@ -0,0 +1,19 @@
+{{- with (.Values.metaMonitoring).grafanaAgent }}
+{{- if .enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "grafana-agent") }}
+  namespace: {{ .namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring" ) | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "grafana-agent") }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "grafana-agent") }}
+    namespace: {{ .namespace | default $.Release.Namespace }}
+{{- end }}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/metamonitoring/grafana-agent-cluster-role.yaml b/charts/tempo-distributed/templates/metamonitoring/grafana-agent-cluster-role.yaml
new file mode 100644
index 00000000..c4cc2cd6
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/grafana-agent-cluster-role.yaml
@@ -0,0 +1,39 @@
+{{- with (.Values.metaMonitoring).grafanaAgent }}
+{{- if .enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "grafana-agent") }}
+  namespace: {{ .namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring" ) | nindent 4 }}
+rules:
+  - apiGroups:
+      - ""
+    resources:
+      - nodes
+      - nodes/proxy
+      - nodes/metrics
+      - services
+      - endpoints
+      - pods
+      - events
+    verbs:
+      - get
+      - list
+      - watch
+  - apiGroups:
+      - networking.k8s.io
+    resources:
+      - ingresses
+    verbs:
+      - get
+      - list
+      - watch
+  - nonResourceURLs:
+      - /metrics
+      - /metrics/cadvisor
+    verbs:
+      - get
+{{- end }}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/metamonitoring/grafana-agent-service-account.yaml b/charts/tempo-distributed/templates/metamonitoring/grafana-agent-service-account.yaml
new file mode 100644
index 00000000..afda8bc9
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/grafana-agent-service-account.yaml
@@ -0,0 +1,11 @@
+{{- with (.Values.metaMonitoring).grafanaAgent }}
+{{- if .enabled }}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "grafana-agent") }}
+  namespace: {{ .namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring" ) | nindent 4 }}
+{{- end }}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/metamonitoring/grafana-agent.yaml b/charts/tempo-distributed/templates/metamonitoring/grafana-agent.yaml
new file mode 100644
index 00000000..cfc2085f
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/grafana-agent.yaml
@@ -0,0 +1,31 @@
+{{- with (.Values.metaMonitoring).grafanaAgent }}
+{{- if .enabled }}
+apiVersion: monitoring.grafana.com/v1alpha1
+kind: GrafanaAgent
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "meta-monitoring") }}
+  namespace: {{ .namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring" ) | nindent 4 }}
+    {{- with .labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  {{- with .annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+spec:
+  serviceAccountName: {{ include "tempo.resourceName" (dict "ctx" $ "component" "grafana-agent") }}
+  logs:
+    instanceSelector:
+      matchLabels:
+        {{- include "tempo.selectorLabels" (dict "ctx" $ "component" "meta-monitoring") | nindent 8 }}
+    # cluster label for logs is added in the LogsInstance
+  metrics:
+    instanceSelector:
+      matchLabels:
+        {{- include "tempo.selectorLabels" (dict "ctx" $ "component" "meta-monitoring") | nindent 8 }}
+    externalLabels:
+      cluster: {{ include "tempo.clusterName" $ }}
+{{- end }}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/metamonitoring/kube-state-metrics-servmon.yaml b/charts/tempo-distributed/templates/metamonitoring/kube-state-metrics-servmon.yaml
new file mode 100644
index 00000000..0c52f1d0
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/kube-state-metrics-servmon.yaml
@@ -0,0 +1,44 @@
+{{- if and ((.Values.metaMonitoring).grafanaAgent).enabled .Values.metaMonitoring.grafanaAgent.metrics.scrapeK8s.enabled }}
+{{- with .Values.metaMonitoring.serviceMonitor }}
+{{- if .enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "k8s-ksm") }}
+  namespace: {{ .namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring") | nindent 4 }}
+    {{- with .labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  {{- with .annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+spec:
+  endpoints:
+    - port: http-metrics
+      metricRelabelings:
+        - action: keep
+          regex: {{ include "tempo.resourceName" (dict "ctx"  $) }}.*
+          sourceLabels:
+            - deployment
+            - statefulset
+            - pod
+          separator: ''
+      path: /metrics
+      honorLabels: true # retain namespace label from kube-state-metrics
+      {{- with .scrapeTimeout }}
+      scrapeTimeout: {{ . }}
+      {{- end }}
+  {{- with ((((($.Values).metaMonitoring).grafanaAgent).metrics).scrapeK8s).kubeStateMetrics }}
+  namespaceSelector:
+    matchNames:
+      - {{ .namespace }}
+  selector:
+    matchLabels:
+      {{- toYaml .labelSelectors | nindent 6 }}
+  {{- end -}}
+{{- end -}}
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/metamonitoring/kubelet-cadvisor-servmon.yaml b/charts/tempo-distributed/templates/metamonitoring/kubelet-cadvisor-servmon.yaml
new file mode 100644
index 00000000..8525b735
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/kubelet-cadvisor-servmon.yaml
@@ -0,0 +1,83 @@
+{{- if and ((.Values.metaMonitoring).grafanaAgent).enabled .Values.metaMonitoring.grafanaAgent.metrics.scrapeK8s.enabled }}
+{{- with .Values.metaMonitoring.serviceMonitor }}
+{{- if .enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "k8s-kubelet-cadvisor") }}
+  namespace: {{ .namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring") | nindent 4 }}
+    {{- with .labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  {{- with .annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+spec:
+  endpoints:
+    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
+      {{- with .interval }}
+      interval: {{ . }}
+      {{- end }}
+      {{- with .scrapeTimeout }}
+      scrapeTimeout: {{ . }}
+      {{- end }}
+      port: https-metrics
+      honorLabels: true # retain namespace label from kubelet
+      relabelings:
+        - replacement: kubelet # add so that e.g. up{} metric doesn't get clashes with the other endpoint
+          targetLabel: source
+        {{- with .relabelings }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      metricRelabelings:
+        - action: keep
+          regex: storage-{{ include "tempo.resourceName" (dict "ctx"  $) }}.*
+          sourceLabels:
+            - persistentvolumeclaim # present on kubelet_volume_stats* metrics
+        - targetLabel: instance # replace so that the metrics work with the default metrics mixin
+          sourceLabels:
+            - node
+      scheme: https
+      tlsConfig:
+        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
+    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
+      {{- with .interval }}
+      interval: {{ . }}
+      {{- end }}
+      {{- with .scrapeTimeout }}
+      scrapeTimeout: {{ . }}
+      {{- end }}
+      path: /metrics/cadvisor
+      port: https-metrics
+      honorLabels: true # retain namespace label from cadvisor
+      relabelings:
+        - replacement: cadvisor # add so that e.g. up{} metric doesn't get clashes with the other endpoint
+          targetLabel: source
+        - targetLabel: instance # replace so that the metrics work with the default metrics mixin
+          sourceLabels:
+            - node
+        {{- with .relabelings }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      metricRelabelings:
+        - action: keep
+          regex: {{ include "tempo.resourceName" (dict "ctx"  $) }}.*
+          sourceLabels:
+            - pod
+      scheme: https
+      tlsConfig:
+        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
+  namespaceSelector:
+    matchNames:
+        # "default" is the default namespace in which the operator creates the kubelet service.
+      - default
+  selector:
+    matchLabels:
+      # This is a service added by the agent operator, so this labels is hardcoded to what the operator creates.
+      app.kubernetes.io/name: kubelet
+{{- end -}}
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/metamonitoring/logs-instance-usernames-secret.yaml b/charts/tempo-distributed/templates/metamonitoring/logs-instance-usernames-secret.yaml
new file mode 100644
index 00000000..35ca464b
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/logs-instance-usernames-secret.yaml
@@ -0,0 +1,17 @@
+{{- if ((.Values.metaMonitoring).grafanaAgent).enabled }}
+{{- with .Values.metaMonitoring.grafanaAgent.logs }}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "logs-instance-usernames") }}
+  namespace: {{ (($.Values.metaMonitoring).grafanaAgent).namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring") | nindent 4 }}
+data:
+  {{- range $i, $cfg := prepend (.additionalClientConfigs | default list) .remote }}
+  {{- if (($cfg).auth).username }}
+  username-{{ $i }}: {{ (($cfg).auth).username | b64enc | quote }}
+  {{- end }}
+  {{- end }}
+{{- end }}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/metamonitoring/logs-instance.yaml b/charts/tempo-distributed/templates/metamonitoring/logs-instance.yaml
new file mode 100644
index 00000000..a8b31474
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/logs-instance.yaml
@@ -0,0 +1,38 @@
+{{- with (.Values.metaMonitoring).grafanaAgent }}
+{{- if .enabled }}
+apiVersion: monitoring.grafana.com/v1alpha1
+kind: LogsInstance
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "meta-monitoring") }}
+  namespace: {{ (($.Values.metaMonitoring).grafanaAgent).namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring" ) | nindent 4 }}
+    {{- with .labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  {{- with .annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+spec:
+  clients:
+    {{- if or (.logs).additionalClientConfigs (.logs).remote }}
+    {{- range $i, $cfg := prepend ((.logs).additionalClientConfigs | default list) (.logs).remote }}
+    {{- with $cfg }}
+    {{- if $cfg.url }}
+    - {{- include "tempo.metaMonitoring.logs.client" (dict "ctx" $ "url" .url "auth" .auth "usernameKey" (printf "username-%d" $i)) | nindent 6 -}}
+    {{- end }}
+    {{- end }}
+    {{- end }}
+    {{- end }}
+
+  # Supply an empty namespace selector to look in all namespaces. Remove
+  # this to only look in the same namespace as the LogsInstance CR
+  podLogsNamespaceSelector: {}
+
+  podLogsSelector:
+    matchLabels:
+      {{- include "tempo.selectorLabels" (dict "ctx" $) | nindent 6 }}
+
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/metamonitoring/metrics-instance-usernames-secret.yaml b/charts/tempo-distributed/templates/metamonitoring/metrics-instance-usernames-secret.yaml
new file mode 100644
index 00000000..beda3213
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/metrics-instance-usernames-secret.yaml
@@ -0,0 +1,17 @@
+{{- if .Values.metaMonitoring.grafanaAgent.enabled }}
+{{- with .Values.metaMonitoring.grafanaAgent.metrics }}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "metrics-instance-usernames") }}
+  namespace: {{ $.Values.metaMonitoring.grafanaAgent.namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring") | nindent 4 }}
+data:
+  {{- range $i, $cfg := prepend (.additionalRemoteWriteConfigs | default list) .remote }}
+  {{- if (($cfg).auth).username }}
+  username-{{ $i }}: {{ $cfg.auth.username | b64enc | quote }}
+  {{- end }}
+  {{- end }}
+{{- end }}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/metamonitoring/metrics-instance.yaml b/charts/tempo-distributed/templates/metamonitoring/metrics-instance.yaml
new file mode 100644
index 00000000..14d9cb5c
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/metrics-instance.yaml
@@ -0,0 +1,38 @@
+{{- with .Values.metaMonitoring.grafanaAgent }}
+{{- if .enabled }}
+apiVersion: monitoring.grafana.com/v1alpha1
+kind: MetricsInstance
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "meta-monitoring") }}
+  namespace: {{ $.Values.metaMonitoring.grafanaAgent.namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring" ) | nindent 4 }}
+    {{- with .labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  {{- with .annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+spec:
+  remoteWrite:
+    {{- if or (.metrics).additionalRemoteWriteConfigs (.metrics).remote }}
+    {{- range $i, $cfg := prepend ((.metrics).additionalRemoteWriteConfigs | default list) (.metrics).remote }}
+    {{- with $cfg }}
+    {{- if $cfg.url }}
+    - {{- include "tempo.metaMonitoring.metrics.remoteWrite" (dict "ctx" $ "url" .url "auth" .auth "usernameKey" (printf "username-%d" $i) "headers" .headers ) | nindent 6 -}}
+    {{- end }}
+    {{- end }}
+    {{- end }}
+    {{- end }}
+
+  # Supply an empty namespace selector to look in all namespaces. Remove
+  # this to only look in the same namespace as the MetricsInstance CR
+  serviceMonitorNamespaceSelector: {}
+
+  serviceMonitorSelector:
+    # Scrape ServiceMonitors from all components
+    matchLabels:
+      {{- include "tempo.selectorLabels" (dict "ctx" $) | nindent 6 }}
+{{- end }}
+{{- end }}
diff --git a/charts/tempo-distributed/templates/metamonitoring/pod-logs.yaml b/charts/tempo-distributed/templates/metamonitoring/pod-logs.yaml
new file mode 100644
index 00000000..4f0e95aa
--- /dev/null
+++ b/charts/tempo-distributed/templates/metamonitoring/pod-logs.yaml
@@ -0,0 +1,45 @@
+{{- with (.Values.metaMonitoring).grafanaAgent }}
+{{- if .enabled }}
+apiVersion: monitoring.grafana.com/v1alpha1
+kind: PodLogs
+metadata:
+  name: {{ include "tempo.resourceName" (dict "ctx" $ "component" "meta-monitoring") }}
+  namespace: {{ .namespace | default $.Release.Namespace | quote }}
+  labels:
+    {{- include "tempo.labels" (dict "ctx" $ "component" "meta-monitoring") | nindent 4 }}
+    {{- with .labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  {{- with .annotations }}
+  annotations:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+spec:
+  pipelineStages:
+    - cri: { }
+  relabelings:
+    - action: replace # For consistency with metrics
+      replacement: $1
+      separator: /
+      sourceLabels:
+        - __meta_kubernetes_namespace
+        - __meta_kubernetes_pod_container_name
+      targetLabel: job
+    - action: replace # Necessary for slow queries dashboard
+      sourceLabels:
+        - __meta_kubernetes_pod_container_name
+      targetLabel: name
+    - targetLabel: cluster
+      replacement: {{ include "tempo.clusterName" $ }}
+
+  namespaceSelector:
+    matchNames:
+      - {{ $.Release.Namespace | quote }}
+
+  selector:
+    matchLabels:
+      # Scrape logs from all components
+      {{- include "tempo.selectorLabels" (dict "ctx" $) | nindent 6 }}
+
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/templates/metrics-generator/_helpers-metrics-generator.tpl b/charts/tempo-distributed/templates/metrics-generator/_helpers-metrics-generator.tpl
deleted file mode 100644
index 4da85617..00000000
--- a/charts/tempo-distributed/templates/metrics-generator/_helpers-metrics-generator.tpl
+++ /dev/null
@@ -1,30 +0,0 @@
-{{/*
-metrics-generator fullname
-*/}}
-{{- define "tempo.metricsGeneratorFullname" -}}
-{{ include "tempo.fullname" . }}-metrics-generator
-{{- end }}
-
-{{/*
-metrics-generator common labels
-*/}}
-{{- define "tempo.metricsGeneratorLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: metrics-generator
-{{- end }}
-
-{{/*
-metrics-generator selector labels
-*/}}
-{{- define "tempo.metricsGeneratorSelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: metrics-generator
-{{- end }}
-
-{{/*
-metrics-generator image
-*/}}
-{{- define "tempo.metricsGeneratorImage" -}}
-{{- $dict := dict "tempo" .Values.tempo.image "service" .Values.metricsGenerator.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
diff --git a/charts/tempo-distributed/templates/metrics-generator/deployment-metrics-generator.yaml b/charts/tempo-distributed/templates/metrics-generator/deployment-metrics-generator.yaml
index d459935a..3ea27f21 100644
--- a/charts/tempo-distributed/templates/metrics-generator/deployment-metrics-generator.yaml
+++ b/charts/tempo-distributed/templates/metrics-generator/deployment-metrics-generator.yaml
@@ -1,11 +1,12 @@
 {{- if .Values.metricsGenerator.enabled }}
+{{ $dict := dict "ctx" . "component" "metrics-generator" "memberlist" true }}
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ include "tempo.metricsGeneratorFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-  {{- include "tempo.metricsGeneratorLabels" . | nindent 4 }}
+  {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.metricsGenerator.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -16,12 +17,11 @@ spec:
   revisionHistoryLimit: 10
   selector:
     matchLabels:
-      {{- include "tempo.metricsGeneratorSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   template:
     metadata:
       labels:
-        {{- include "tempo.metricsGeneratorLabels" . | nindent 8 }}
-        {{- include "tempo.gossipRing.selectorLabels" . | nindent 8 }}
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -51,7 +51,7 @@ spec:
             {{- with .Values.metricsGenerator.extraArgs }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
-          image: {{ include "tempo.metricsGeneratorImage" . }}
+          image: {{ include "tempo.imageReference" $dict }}
           imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
           name: metrics-generator
           ports:
@@ -77,9 +77,13 @@ spec:
           {{- end }}
           volumeMounts:
             - mountPath: /conf
-              name: tempo-conf
+              name: config
             - mountPath: /var/tempo
               name: wal
+            {{- if .Values.enterprise.enabled }}
+            - name: license
+              mountPath: /license
+            {{- end }}
             {{- with .Values.metricsGenerator.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
@@ -97,9 +101,13 @@ spec:
         {{- toYaml . | nindent 8 }}
       {{- end }}
       volumes:
-        - configMap:
-            name: {{ template "tempo.fullname" . }}
-          name: tempo-conf
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
+        {{- if .Values.enterprise.enabled }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        {{- end }}
         - name: wal
           emptyDir: {{- toYaml .Values.metricsGenerator.walEmptyDir | nindent 12 }}
         {{- with .Values.metricsGenerator.extraVolumes }}
diff --git a/charts/tempo-distributed/templates/metrics-generator/poddisruptionbudget-metrics-generator.yaml b/charts/tempo-distributed/templates/metrics-generator/poddisruptionbudget-metrics-generator.yaml
index 1a8b02a0..34e00106 100644
--- a/charts/tempo-distributed/templates/metrics-generator/poddisruptionbudget-metrics-generator.yaml
+++ b/charts/tempo-distributed/templates/metrics-generator/poddisruptionbudget-metrics-generator.yaml
@@ -1,15 +1,16 @@
 {{- if .Values.metricsGenerator.enabled }}
 {{- if gt (int .Values.metricsGenerator.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "metrics-generator" "memberlist" true }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.metricsGeneratorFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.metricsGeneratorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.metricsGeneratorSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: 1
 {{- end }}
 {{- end }}
diff --git a/charts/tempo-distributed/templates/metrics-generator/service-metrics-generator.yaml b/charts/tempo-distributed/templates/metrics-generator/service-metrics-generator.yaml
index d0aa5b55..0b60a983 100644
--- a/charts/tempo-distributed/templates/metrics-generator/service-metrics-generator.yaml
+++ b/charts/tempo-distributed/templates/metrics-generator/service-metrics-generator.yaml
@@ -1,11 +1,12 @@
 {{- if .Values.metricsGenerator.enabled }}
+{{- $dict := dict "ctx" . "component" "metrics-generator" "memberlist" true }}
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "tempo.metricsGeneratorFullname" . }}
+  name: {{ template "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.metricsGeneratorLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.metricsGenerator.service.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -21,5 +22,5 @@ spec:
     {{- end }}
     {{- end }}
   selector:
-    {{- include "tempo.metricsGeneratorSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "metrics-generator") | nindent 4 }}
 {{- end }}
diff --git a/charts/tempo-distributed/templates/metrics-generator/servicemonitor-metrics-generator.yaml b/charts/tempo-distributed/templates/metrics-generator/servicemonitor-metrics-generator.yaml
index d3ff7570..e9fab8d5 100644
--- a/charts/tempo-distributed/templates/metrics-generator/servicemonitor-metrics-generator.yaml
+++ b/charts/tempo-distributed/templates/metrics-generator/servicemonitor-metrics-generator.yaml
@@ -1,53 +1 @@
-{{- if .Values.metricsGenerator.enabled }}
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "tempo.metricsGeneratorFullname" $ }}
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.metricsGeneratorLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.metricsGeneratorSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: http
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .scheme }}
-      scheme: {{ . }}
-      {{- end }}
-      {{- with .tlsConfig }}
-      tlsConfig:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "metrics-generator" "memberlist" true) }}
diff --git a/charts/tempo-distributed/templates/podsecuritypolicy.yaml b/charts/tempo-distributed/templates/podsecuritypolicy.yaml
index c1843168..d796eb55 100644
--- a/charts/tempo-distributed/templates/podsecuritypolicy.yaml
+++ b/charts/tempo-distributed/templates/podsecuritypolicy.yaml
@@ -1,6 +1,6 @@
 {{- if .Values.rbac.pspEnabled }}
-{{- if .Capabilities.APIVersions.Has "policy/v1beta1/PodSecurityPolicy" }}
-apiVersion: policy/v1beta1
+{{- if .Capabilities.APIVersions.Has "policy/v1/PodSecurityPolicy" }}
+apiVersion: policy/v1
 kind: PodSecurityPolicy
 metadata:
   name: {{ include "tempo.fullname" . }}
diff --git a/charts/tempo-distributed/templates/querier/_helpers-querier.tpl b/charts/tempo-distributed/templates/querier/_helpers-querier.tpl
deleted file mode 100644
index 8eddd27a..00000000
--- a/charts/tempo-distributed/templates/querier/_helpers-querier.tpl
+++ /dev/null
@@ -1,30 +0,0 @@
-{{/*
-querier fullname
-*/}}
-{{- define "tempo.querierFullname" -}}
-{{ include "tempo.fullname" . }}-querier
-{{- end }}
-
-{{/*
-querier common labels
-*/}}
-{{- define "tempo.querierLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: querier
-{{- end }}
-
-{{/*
-querier selector labels
-*/}}
-{{- define "tempo.querierSelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: querier
-{{- end }}
-
-{{/*
-querier image
-*/}}
-{{- define "tempo.querierImage" -}}
-{{- $dict := dict "tempo" .Values.tempo.image "service" .Values.querier.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
diff --git a/charts/tempo-distributed/templates/querier/deployment-querier.yaml b/charts/tempo-distributed/templates/querier/deployment-querier.yaml
index 5b25d707..2025a119 100644
--- a/charts/tempo-distributed/templates/querier/deployment-querier.yaml
+++ b/charts/tempo-distributed/templates/querier/deployment-querier.yaml
@@ -1,10 +1,11 @@
+{{ $dict := dict "ctx" . "component" "querier" "memberlist" true }}
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ template "tempo.querierFullname" . }}
+  name: {{ template "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.labels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.querier.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -15,7 +16,7 @@ spec:
   revisionHistoryLimit: 10
   selector:
     matchLabels:
-      {{- include "tempo.querierSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   strategy:
     rollingUpdate:
       maxSurge: 0
@@ -23,8 +24,7 @@ spec:
   template:
     metadata:
       labels:
-        {{- include "tempo.querierLabels" . | nindent 8 }}
-        {{- include "tempo.gossipRing.selectorLabels" . | nindent 8 }}
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -57,7 +57,7 @@ spec:
             {{- with .Values.querier.extraArgs }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
-          image: {{ include "tempo.querierImage" . }}
+          image: {{ include "tempo.imageReference" $dict }}
           imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
           name: querier
           ports:
@@ -65,7 +65,7 @@ spec:
               name: http-memberlist
               protocol: TCP
             - containerPort: 3100
-              name: http
+              name: http-metrics
           {{- with .Values.querier.extraEnv }}
           env:
             {{- toYaml . | nindent 12 }}
@@ -82,9 +82,13 @@ spec:
           {{- end }}
           volumeMounts:
             - mountPath: /conf
-              name: tempo-conf
+              name: config
             - mountPath: /var/tempo
               name: tempo-querier-store
+            {{- if .Values.enterprise.enabled }}
+            - name: license
+              mountPath: /license
+            {{- end }}
             {{- with .Values.querier.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
@@ -102,11 +106,15 @@ spec:
         {{- toYaml . | nindent 8 }}
       {{- end }}
       volumes:
-        - configMap:
-            name: {{ template "tempo.fullname" . }}
-          name: tempo-conf
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
         - name: tempo-querier-store
           emptyDir: {}
+        {{- if .Values.enterprise.enabled }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        {{- end }}
         {{- with .Values.querier.extraVolumes }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
diff --git a/charts/tempo-distributed/templates/querier/poddisruptionbudget-querier.yaml b/charts/tempo-distributed/templates/querier/poddisruptionbudget-querier.yaml
index 56048aa8..1f7abd28 100644
--- a/charts/tempo-distributed/templates/querier/poddisruptionbudget-querier.yaml
+++ b/charts/tempo-distributed/templates/querier/poddisruptionbudget-querier.yaml
@@ -1,13 +1,14 @@
 {{- if gt (int .Values.querier.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "querier" "memberlist" true }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.querierFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.querierLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.querierSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: 1
 {{- end }}
diff --git a/charts/tempo-distributed/templates/querier/service-querier.yaml b/charts/tempo-distributed/templates/querier/service-querier.yaml
index 78c2d0f0..d4e32ecc 100644
--- a/charts/tempo-distributed/templates/querier/service-querier.yaml
+++ b/charts/tempo-distributed/templates/querier/service-querier.yaml
@@ -1,17 +1,17 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "tempo.querierFullname" . }}
+  name: {{ template "tempo.resourceName" (dict "ctx" . "component" "querier") }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.querierLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "querier") | nindent 4 }}
   {{- with .Values.querier.service.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
   {{- end }}
 spec:
   ports:
-    - name: http
+    - name: http-metrics
       port: 3100
       protocol: TCP
       targetPort: 3100
@@ -20,4 +20,4 @@ spec:
       protocol: TCP
       targetPort: 9095
   selector:
-    {{- include "tempo.querierSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "querier" "memberlist" true) | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/querier/servicemonitor-querier.yaml b/charts/tempo-distributed/templates/querier/servicemonitor-querier.yaml
index 5f0de462..3294c84e 100644
--- a/charts/tempo-distributed/templates/querier/servicemonitor-querier.yaml
+++ b/charts/tempo-distributed/templates/querier/servicemonitor-querier.yaml
@@ -1,51 +1 @@
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "tempo.querierFullname" $ }}
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.querierLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.querierSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: http
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .scheme }}
-      scheme: {{ . }}
-      {{- end }}
-      {{- with .tlsConfig }}
-      tlsConfig:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "querier" "memberlist" true) }}
diff --git a/charts/tempo-distributed/templates/query-frontend/_helpers-query-frontend.tpl b/charts/tempo-distributed/templates/query-frontend/_helpers-query-frontend.tpl
index 70d42bd8..c88a3aec 100644
--- a/charts/tempo-distributed/templates/query-frontend/_helpers-query-frontend.tpl
+++ b/charts/tempo-distributed/templates/query-frontend/_helpers-query-frontend.tpl
@@ -1,55 +1,7 @@
-{{/*
-queryFrontend fullname
-*/}}
-{{- define "tempo.queryFrontendFullname" -}}
-{{ include "tempo.fullname" . }}-query-frontend
-{{- end }}
-
-{{/*
-query fullname
-*/}}
-{{- define "tempo.queryFullname" -}}
-{{ include "tempo.fullname" . }}-query
-{{- end }}
-
-
-{{/*
-queryFrontend common labels
-*/}}
-{{- define "tempo.queryFrontendLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: query-frontend
-{{- end }}
-
-{{/*
-query common labels
-*/}}
-{{- define "tempo.queryLabels" -}}
-{{ include "tempo.labels" . }}
-app.kubernetes.io/component: query
-{{- end }}
-
-
-{{/*
-queryFrontend selector labels
-*/}}
-{{- define "tempo.queryFrontendSelectorLabels" -}}
-{{ include "tempo.selectorLabels" . }}
-app.kubernetes.io/component: query-frontend
-{{- end }}
-
-{{/*
-queryFrontend image
-*/}}
-{{- define "tempo.queryFrontendImage" -}}
-{{- $dict := dict "tempo" .Values.tempo.image "service" .Values.queryFrontend.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
-{{- include "tempo.tempoImage" $dict -}}
-{{- end }}
-
 {{/*
 query image
 */}}
 {{- define "tempo.queryImage" -}}
-{{- $dict := dict "tempo" .Values.tempo.image "service" .Values.queryFrontend.query.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
+{{- $dict := dict "tempo" .Values.tempo.image "component" .Values.queryFrontend.query.image "global" .Values.global.image "defaultVersion" .Chart.AppVersion -}}
 {{- include "tempo.tempoImage" $dict -}}
 {{- end }}
diff --git a/charts/tempo-distributed/templates/query-frontend/deployment-query-frontend.yaml b/charts/tempo-distributed/templates/query-frontend/deployment-query-frontend.yaml
index d55c6b33..d169a995 100644
--- a/charts/tempo-distributed/templates/query-frontend/deployment-query-frontend.yaml
+++ b/charts/tempo-distributed/templates/query-frontend/deployment-query-frontend.yaml
@@ -1,10 +1,11 @@
+{{ $dict := dict "ctx" . "component" "query-frontend" }}
 apiVersion: apps/v1
 kind: Deployment
 metadata:
-  name: {{ template "tempo.queryFrontendFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.labels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
   {{- with .Values.queryFrontend.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -17,7 +18,7 @@ spec:
   revisionHistoryLimit: 10
   selector:
     matchLabels:
-      {{- include "tempo.queryFrontendSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   strategy:
     rollingUpdate:
       maxSurge: 0
@@ -25,8 +26,7 @@ spec:
   template:
     metadata:
       labels:
-        {{- include "tempo.queryFrontendLabels" . | nindent 8 }}
-        {{- include "tempo.gossipRing.selectorLabels" . | nindent 8 }}
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
         {{- with .Values.tempo.podLabels }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
@@ -59,12 +59,12 @@ spec:
             {{- with .Values.queryFrontend.extraArgs }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
-          image: {{ include "tempo.queryFrontendImage" . }}
+          image: {{ include "tempo.imageReference" $dict }}
           imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
           name: query-frontend
           ports:
             - containerPort: 3100
-              name: http
+              name: http-metrics
             - containerPort: 9095
               name: grpc
           {{- with .Values.queryFrontend.extraEnv }}
@@ -83,9 +83,13 @@ spec:
           {{- end }}
           volumeMounts:
             - mountPath: /conf
-              name: tempo-conf
+              name: config
             - mountPath: /var/tempo
               name: tempo-queryfrontend-store
+            {{- if .Values.enterprise.enabled }}
+            - name: license
+              mountPath: /license
+            {{- end }}
             {{- with .Values.queryFrontend.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
@@ -121,7 +125,7 @@ spec:
           {{- end }}
           volumeMounts:
             - mountPath: /conf
-              name: tempo-conf
+              name: config
             {{- with .Values.queryFrontend.query.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
             {{- end }}
@@ -140,11 +144,15 @@ spec:
         {{- toYaml . | nindent 8 }}
       {{- end }}
       volumes:
-        - configMap:
-            name: {{ template "tempo.fullname" . }}
-          name: tempo-conf
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
         - name: tempo-queryfrontend-store
           emptyDir: {}
+        {{- if .Values.enterprise.enabled }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        {{- end }}
         {{- with .Values.queryFrontend.extraVolumes }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
diff --git a/charts/tempo-distributed/templates/query-frontend/hpa.yaml b/charts/tempo-distributed/templates/query-frontend/hpa.yaml
index 845cb349..7abe0bf6 100644
--- a/charts/tempo-distributed/templates/query-frontend/hpa.yaml
+++ b/charts/tempo-distributed/templates/query-frontend/hpa.yaml
@@ -2,14 +2,14 @@
 apiVersion: autoscaling/v2beta1
 kind: HorizontalPodAutoscaler
 metadata:
-  name: {{ include "tempo.queryFrontendFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}
   labels:
-    {{- include "tempo.queryFrontendLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "query-frontend") | nindent 4 }}
 spec:
   scaleTargetRef:
     apiVersion: apps/v1
     kind: Deployment
-    name: {{ include "tempo.queryFrontendFullname" . }}
+    name: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}
   minReplicas: {{ .Values.queryFrontend.autoscaling.minReplicas }}
   maxReplicas: {{ .Values.queryFrontend.autoscaling.maxReplicas }}
   metrics:
diff --git a/charts/tempo-distributed/templates/query-frontend/poddisruptionbudget-query-frontend.yaml b/charts/tempo-distributed/templates/query-frontend/poddisruptionbudget-query-frontend.yaml
index a480d5a0..d3f0c23b 100644
--- a/charts/tempo-distributed/templates/query-frontend/poddisruptionbudget-query-frontend.yaml
+++ b/charts/tempo-distributed/templates/query-frontend/poddisruptionbudget-query-frontend.yaml
@@ -1,13 +1,14 @@
 {{- if gt (int .Values.queryFrontend.replicas) 1 }}
+{{ $dict := dict "ctx" . "component" "query-frontend" }}
 apiVersion: {{ include "tempo.pdb.apiVersion" . }}
 kind: PodDisruptionBudget
 metadata:
-  name: {{ include "tempo.queryFrontendFullname" . }}
+  name: {{ include "tempo.resourceName" $dict }}
   labels:
-    {{- include "tempo.queryFrontendLabels" . | nindent 4 }}
+    {{- include "tempo.labels" $dict | nindent 4 }}
 spec:
   selector:
     matchLabels:
-      {{- include "tempo.queryFrontendSelectorLabels" . | nindent 6 }}
+      {{- include "tempo.selectorLabels" $dict | nindent 6 }}
   maxUnavailable: 1
 {{- end }}
diff --git a/charts/tempo-distributed/templates/query-frontend/service-query-frontend-discovery.yaml b/charts/tempo-distributed/templates/query-frontend/service-query-frontend-discovery.yaml
index 70b9f22f..a1a5984b 100644
--- a/charts/tempo-distributed/templates/query-frontend/service-query-frontend-discovery.yaml
+++ b/charts/tempo-distributed/templates/query-frontend/service-query-frontend-discovery.yaml
@@ -1,10 +1,10 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "tempo.queryFrontendFullname" . }}-discovery
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend-discovery") }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.queryFrontendLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "query-frontend") | nindent 4 }}
   {{- with .Values.queryFrontend.serviceDiscovery.annotations }}
   annotations:
     {{ toYaml . | nindent 4 }}
@@ -33,4 +33,4 @@ spec:
       targetPort: jaeger-metrics
     {{- end }}
   selector:
-    {{- include "tempo.queryFrontendSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "query-frontend") | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/query-frontend/service-query-frontend.yaml b/charts/tempo-distributed/templates/query-frontend/service-query-frontend.yaml
index 23a90f1b..2eee8e2b 100644
--- a/charts/tempo-distributed/templates/query-frontend/service-query-frontend.yaml
+++ b/charts/tempo-distributed/templates/query-frontend/service-query-frontend.yaml
@@ -1,10 +1,10 @@
 apiVersion: v1
 kind: Service
 metadata:
-  name: {{ template "tempo.queryFrontendFullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.queryFrontendLabels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" . "component" "query-frontend") | nindent 4 }}
   {{- with .Values.queryFrontend.service.annotations }}
   annotations:
   {{- toYaml . | nindent 4 }}
@@ -12,7 +12,7 @@ metadata:
 spec:
   type: {{ .Values.queryFrontend.service.type }}
   ports:
-    - name: http
+    - name: http-metrics
       port: 3100
       targetPort: 3100
     - name: grpc
@@ -35,4 +35,4 @@ spec:
     {{ toYaml . | nindent 4 }}
   {{- end }}
   selector:
-    {{- include "tempo.queryFrontendSelectorLabels" . | nindent 4 }}
+    {{- include "tempo.selectorLabels" (dict "ctx" . "component" "query-frontend") | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/query-frontend/servicemonitor-jaeger-query.yaml b/charts/tempo-distributed/templates/query-frontend/servicemonitor-jaeger-query.yaml
index f53cf6b0..5d8fa1a5 100644
--- a/charts/tempo-distributed/templates/query-frontend/servicemonitor-jaeger-query.yaml
+++ b/charts/tempo-distributed/templates/query-frontend/servicemonitor-jaeger-query.yaml
@@ -1,51 +1 @@
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "tempo.queryFrontendFullname" $ }}-tempo-query
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.queryFrontendLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.queryFrontendSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: tempo-query-metrics
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .scheme }}
-      scheme: {{ . }}
-      {{- end }}
-      {{- with .tlsConfig }}
-      tlsConfig:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "tempo-query") }}
diff --git a/charts/tempo-distributed/templates/query-frontend/servicemonitor-query-frontend.yaml b/charts/tempo-distributed/templates/query-frontend/servicemonitor-query-frontend.yaml
index 9c333127..e2a4ac1f 100644
--- a/charts/tempo-distributed/templates/query-frontend/servicemonitor-query-frontend.yaml
+++ b/charts/tempo-distributed/templates/query-frontend/servicemonitor-query-frontend.yaml
@@ -1,51 +1 @@
-{{- with .Values.serviceMonitor }}
-{{- if .enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "tempo.queryFrontendFullname" $ }}
-  {{- with .namespace }}
-  namespace: {{ . }}
-  {{- end }}
-  {{- with .annotations }}
-  annotations:
-    {{- toYaml . | nindent 4 }}
-  {{- end }}
-  labels:
-    {{- include "tempo.queryFrontendLabels" $ | nindent 4 }}
-    {{- with .labels }}
-    {{- toYaml . | nindent 4 }}
-    {{- end }}
-spec:
-  {{- with .namespaceSelector }}
-  namespaceSelector:
-  {{- toYaml . | nindent 4 }}
-  {{- end }}
-  selector:
-    matchLabels:
-      {{- include "tempo.queryFrontendSelectorLabels" $ | nindent 6 }}
-  endpoints:
-    - port: http
-      {{- with .interval }}
-      interval: {{ . }}
-      {{- end }}
-      {{- with .scrapeTimeout }}
-      scrapeTimeout: {{ . }}
-      {{- end }}
-      {{- with .relabelings }}
-      relabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .metricRelabelings }}
-      metricRelabelings:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-      {{- with .scheme }}
-      scheme: {{ . }}
-      {{- end }}
-      {{- with .tlsConfig }}
-      tlsConfig:
-        {{- toYaml . | nindent 8 }}
-      {{- end }}
-{{- end }}
-{{- end }}
+{{- include "tempo.lib.serviceMonitor" (dict "ctx" $ "component" "query-frontend") }}
diff --git a/charts/tempo-distributed/templates/role.yaml b/charts/tempo-distributed/templates/role.yaml
index aa39ed0d..1a1aced3 100644
--- a/charts/tempo-distributed/templates/role.yaml
+++ b/charts/tempo-distributed/templates/role.yaml
@@ -2,7 +2,7 @@
 apiVersion: rbac.authorization.k8s.io/v1
 kind: Role
 metadata:
-  name: {{ include "tempo.fullname" . }}
+  name: {{ include "tempo.resourceName" (dict "ctx" .) }}
   namespace: {{ .Release.Namespace }}
   labels:
     {{- include "tempo.labels" . | nindent 4 }}
@@ -11,6 +11,6 @@ rules:
 - apiGroups:      ['extensions']
   resources:      ['podsecuritypolicies']
   verbs:          ['use']
-  resourceNames:  [{{ include "tempo.fullname" . }}]
+  resourceNames:  [{{ include "tempo.resourceName" (dict "ctx" .) }}]
 {{- end }}
 {{- end }}
diff --git a/charts/tempo-distributed/templates/service-gossip-ring.yaml b/charts/tempo-distributed/templates/service-gossip-ring.yaml
deleted file mode 100644
index 372a96b2..00000000
--- a/charts/tempo-distributed/templates/service-gossip-ring.yaml
+++ /dev/null
@@ -1,18 +0,0 @@
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ template "tempo.gossipRing.name" . }}
-  namespace: {{ .Release.Namespace }}
-  labels:
-    app.kubernetes.io/component: {{ template "tempo.gossipRing.name" . }}
-    {{- include "tempo.labels" . | nindent 4 }}
-spec:
-  type: ClusterIP
-  clusterIP: None
-  ports:
-    - name: gossip-ring
-      port: 7946
-      protocol: TCP
-      targetPort: http-memberlist
-  selector:
-    {{- include "tempo.gossipRing.selectorLabels" . | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/serviceaccount.yaml b/charts/tempo-distributed/templates/serviceaccount.yaml
index 2679ef8f..3f9e9862 100644
--- a/charts/tempo-distributed/templates/serviceaccount.yaml
+++ b/charts/tempo-distributed/templates/serviceaccount.yaml
@@ -5,7 +5,7 @@ metadata:
   name: {{ include "tempo.serviceAccountName" . }}
   namespace: {{ .Release.Namespace }}
   labels:
-    {{- include "tempo.labels" . | nindent 4 }}
+    {{- include "tempo.labels" (dict "ctx" .) | nindent 4 }}
   {{- with .Values.serviceAccount.annotations }}
   annotations:
     {{- toYaml . | nindent 4 }}
diff --git a/charts/tempo-distributed/templates/tokengen/tokengen-job.yaml b/charts/tempo-distributed/templates/tokengen/tokengen-job.yaml
new file mode 100644
index 00000000..022bcdae
--- /dev/null
+++ b/charts/tempo-distributed/templates/tokengen/tokengen-job.yaml
@@ -0,0 +1,92 @@
+{{- if .Values.enterprise.enabled -}}
+{{ if .Values.tokengenJob.enable }}
+{{ $dict := dict "ctx" . "component" "tokengen-job" }}
+apiVersion: batch/v1
+kind: Job
+metadata:
+  name: {{ include "tempo.resourceName" $dict }}
+  labels:
+    {{- include "tempo.labels" $dict | nindent 4 }}
+  annotations:
+    {{- if .Values.tokengenJob.annotations }}
+    {{- toYaml .Values.tokengenJob.annotations | nindent 4 }}
+    {{- end }}
+    "helm.sh/hook": post-install
+  namespace: {{ .Release.Namespace | quote }}
+spec:
+  backoffLimit: 6
+  completions: 1
+  parallelism: 1
+  selector:
+  template:
+    metadata:
+      labels:
+        {{- include "tempo.podLabels" $dict | nindent 8 }}
+        {{- with .Values.tokengenJob.podLabels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      namespace: {{ .Release.Namespace | quote }}
+    spec:
+      serviceAccountName: {{ template "tempo.serviceAccountName" . }}
+      {{- if .Values.tokengenJob.priorityClassName }}
+      priorityClassName: {{ .Values.tokengenJob.priorityClassName }}
+      {{- end }}
+      securityContext:
+        {{- toYaml .Values.tokengenJob.securityContext | nindent 8 }}
+      {{- if .Values.tempo.image.pullSecrets }}
+      imagePullSecrets:
+      {{- range .Values.tempo.image.pullSecrets }}
+        - name: {{ . }}
+      {{- end }}
+      {{- end }}
+      initContainers:
+        {{- toYaml .Values.tokengenJob.initContainers | nindent 8 }}
+      containers:
+        - name: tokengen
+          image: "{{ include "tempo.imageReference" $dict }}"
+          imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
+          args:
+            - "-target=tokengen"
+            - "-config.expand-env=true"
+            - "-config.file=/conf/tempo.yaml"
+            {{- range $key, $value := .Values.tokengenJob.extraArgs }}
+            - "-{{ $key }}={{ $value }}"
+            {{- end }}
+          volumeMounts:
+            - mountPath: /conf
+              name: config
+            - name: license
+              mountPath: /license
+            {{- if .Values.tokengenJob.extraVolumeMounts }}
+              {{ toYaml .Values.tokengenJob.extraVolumeMounts | nindent 12 }}
+            {{- end }}
+          env:
+            {{- with .Values.global.extraEnv }}
+              {{ toYaml . | nindent 12 }}
+            {{- end }}
+            {{- with .Values.tokengenJob.env }}
+              {{ toYaml . | nindent 12 }}
+            {{- end }}
+          envFrom:
+            {{- with .Values.global.extraEnvFrom }}
+              {{- toYaml . | nindent 12 }}
+            {{- end }}
+            {{- with .Values.tokengenJob.extraEnvFrom }}
+              {{- toYaml . | nindent 12 }}
+            {{- end }}
+          securityContext:
+            {{- toYaml .Values.tokengenJob.containerSecurityContext | nindent 12 }}
+      restartPolicy: OnFailure
+      volumes:
+        - name: config
+          {{- include "tempo.configVolume" . | nindent 10 }}
+        {{- if .Values.tokengenJob.extraVolumes }}
+        {{ toYaml .Values.tokengenJob.extraVolumes | nindent 8 }}
+        {{- end }}
+        - name: license
+          secret:
+            secretName: {{ tpl .Values.license.secretName . }}
+        - name: storage
+          emptyDir: {}
+{{- end -}}
+{{- end -}}
diff --git a/charts/tempo-distributed/values.yaml b/charts/tempo-distributed/values.yaml
index a8416a16..f7ddea56 100644
--- a/charts/tempo-distributed/values.yaml
+++ b/charts/tempo-distributed/values.yaml
@@ -1,20 +1,35 @@
 global:
   image:
-    # -- Overrides the Docker registry globally for all images
+    # -- Overrides the Docker registry globally for all images, excluding enterprise.
     registry: docker.io
   # -- Overrides the priorityClassName for all pods
   priorityClassName: null
   # -- configures cluster domain ("cluster.local" by default)
-  clusterDomain: "cluster.local"
+  clusterDomain: 'cluster.local'
   # -- configures DNS service name
-  dnsService: "kube-dns"
+  dnsService: 'kube-dns'
   # -- configures DNS service namespace
-  dnsNamespace: "kube-system"
-
-# -- Overrides the chart's computed fullname
-fullnameOverride: ""
+  dnsNamespace: 'kube-system'
+fullnameOverride: ''
 # fullnameOverride: tempo
 
+# -- Configuration is loaded from the secret called 'externalConfigSecretName'.
+# If 'useExternalConfig' is true, then the configuration is not generated, just
+# consumed.  Top level keys for `tempo.yaml` and `overrides.yaml` are to be
+# provided by the user.
+useExternalConfig: false
+
+# -- Defines what kind of object stores the configuration, a ConfigMap or a Secret.
+# In order to move sensitive information (such as credentials) from the ConfigMap/Secret to a more secure location (e.g. vault), it is possible to use [environment variables in the configuration](https://grafana.com/docs/mimir/latest/operators-guide/configuring/reference-configuration-parameters/#use-environment-variables-in-the-configuration).
+# Such environment variables can be then stored in a separate Secret and injected via the global.extraEnvFrom value. For details about environment injection from a Secret please see [Secrets](https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables).
+configStorageType: ConfigMap
+
+# -- Name of the Secret or ConfigMap that contains the configuration (used for naming even if config is internal).
+externalConfigSecretName: '{{ include "tempo.resourceName" (dict "ctx" . "component" "config") }}'
+
+# -- When 'useExternalConfig' is true, then changing 'externalConfigVersion' triggers restart of services - otherwise changes to the configuration cause a restart.
+externalConfigVersion: '0'
+
 tempo:
   image:
     # -- The Docker registry
@@ -27,7 +42,7 @@ tempo:
   readinessProbe:
     httpGet:
       path: /ready
-      port: http
+      port: http-metrics
     initialDelaySeconds: 30
     timeoutSeconds: 1
   # -- Global labels for all tempo pods
@@ -118,13 +133,13 @@ ingester:
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.ingesterSelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "ingester") | nindent 12 }}
             topologyKey: kubernetes.io/hostname
         - weight: 75
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.ingesterSelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "ingester") | nindent 12 }}
             topologyKey: failure-domain.beta.kubernetes.io/zone
   # -- Node selector for ingester pods
   nodeSelector: {}
@@ -206,14 +221,14 @@ metricsGenerator:
       requiredDuringSchedulingIgnoredDuringExecution:
         - labelSelector:
             matchLabels:
-              {{- include "tempo.metricsGeneratorSelectorLabels" . | nindent 10 }}
+              {{- include "tempo.selectorLabels" (dict "ctx" . "component" "metrics-generator") | nindent 10 }}
           topologyKey: kubernetes.io/hostname
       preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 100
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.metricsGeneratorSelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "metrics-generator") | nindent 12 }}
             topologyKey: failure-domain.beta.kubernetes.io/zone
   # -- Node selector for metrics-generator pods
   nodeSelector: {}
@@ -237,7 +252,7 @@ metricsGenerator:
     - name: http-memberlist
       port: 7946
       service: false
-    - name: http
+    - name: http-metrics
       port: 3100
       service: true
   # -- More information on configuration: https://grafana.com/docs/tempo/latest/configuration/#metrics-generator
@@ -299,7 +314,7 @@ distributor:
     # -- Type of service for the distributor
     type: ClusterIP
     # -- If type is LoadBalancer you can assign the IP to the LoadBalancer
-    loadBalancerIP: ""
+    loadBalancerIP: ''
     # -- If type is LoadBalancer limit incoming traffic from IPs.
     loadBalancerSourceRanges: []
   # -- The name of the PriorityClass for distributor pods
@@ -325,14 +340,14 @@ distributor:
       requiredDuringSchedulingIgnoredDuringExecution:
         - labelSelector:
             matchLabels:
-              {{- include "tempo.distributorSelectorLabels" . | nindent 10 }}
+              {{- include "tempo.selectorLabels" (dict "ctx" . "component" "distributor") | nindent 10 }}
           topologyKey: kubernetes.io/hostname
       preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 100
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.distributorSelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "distributor") | nindent 12 }}
             topologyKey: failure-domain.beta.kubernetes.io/zone
   # -- Node selector for distributor pods
   nodeSelector: {}
@@ -432,14 +447,14 @@ querier:
       requiredDuringSchedulingIgnoredDuringExecution:
         - labelSelector:
             matchLabels:
-              {{- include "tempo.querierSelectorLabels" . | nindent 10 }}
+              {{- include "tempo.selectorLabels" (dict "ctx" . "component" "querier" "memberlist" true) | nindent 10 }}
           topologyKey: kubernetes.io/hostname
       preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 100
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.querierSelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "querier" "memberlist" true) | nindent 12 }}
             topologyKey: failure-domain.beta.kubernetes.io/zone
   # -- Node selector for querier pods
   nodeSelector: {}
@@ -538,14 +553,14 @@ queryFrontend:
       requiredDuringSchedulingIgnoredDuringExecution:
         - labelSelector:
             matchLabels:
-              {{- include "tempo.queryFrontendSelectorLabels" . | nindent 10 }}
+              {{- include "tempo.selectorLabels" (dict "ctx" . "component" "query-frontend") | nindent 10 }}
           topologyKey: kubernetes.io/hostname
       preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 100
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.queryFrontendSelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "query-frontend") | nindent 12 }}
             topologyKey: failure-domain.beta.kubernetes.io/zone
   # -- Node selector for query-frontend pods
   nodeSelector: {}
@@ -580,7 +595,7 @@ traces:
       # -- Jaeger Thrift Compact receiver config
       receiverConfig: {}
     thriftHttp:
-       # -- Enable Tempo to ingest Jaeger Thrift HTTP traces
+      # -- Enable Tempo to ingest Jaeger Thrift HTTP traces
       enabled: false
       # -- Jaeger Thrift HTTP receiver config
       receiverConfig: {}
@@ -608,7 +623,6 @@ traces:
   # -- Enable Tempo to ingest traces from Kafka. Reference: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/kafkareceiver
   kafka: {}
 
-
 # -- Config file contents for Tempo distributed. Passed through the `tpl` function to allow templating
 
 # @default -- See values.yaml
@@ -616,6 +630,52 @@ config: |
   multitenancy_enabled: {{ .Values.multitenancyEnabled }}
   search_enabled: {{ .Values.search.enabled }}
   metrics_generator_enabled: {{ .Values.metricsGenerator.enabled }}
+
+  {{- if .Values.enterprise.enabled }}
+  license:
+    path: "/license/license.jwt"
+
+  admin_api:
+    leader_election:
+      enabled: true
+      ring:
+        kvstore:
+          store: "memberlist"
+
+  {{- if .Values.minio.enabled }}
+  admin_client:
+    storage:
+      backend: s3
+      s3:
+        access_key_id: {{ .Values.minio.rootUser }}
+        bucket_name: enterprise-traces-admin
+        endpoint: {{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc:9000
+        insecure: true
+        secret_access_key: {{ .Values.minio.rootPassword }}
+    {{- end }}
+  {{- end }}
+
+  {{- if and .Values.enterprise.enabled .Values.enterpriseGateway.useDefaultProxyURLs }}
+  gateway:
+    proxy:
+      admin_api:
+        url: http://{{ template "tempo.fullname" . }}-admin-api.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
+      compactor:
+        url: http://{{ template "tempo.fullname" . }}-compactor.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
+      default:
+        url: http://{{ template "tempo.fullname" . }}-admin-api.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
+      distributor:
+        url: http://{{ template "tempo.fullname" . }}-distributor.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
+      distributor_ingest:
+        url: h2c://{{ template "tempo.fullname" . }}-distributor.{{ .Release.Namespace }}.svc:4317
+      ingester:
+        url: http://{{ template "tempo.fullname" . }}-ingester.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
+      querier:
+        url: http://{{ template "tempo.fullname" . }}-querier.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
+      query_frontend:
+        url: http://{{ template "tempo.fullname" . }}-query-frontend.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}{{get .Values.tempo.structuredConfig "http_api_prefix"}}
+  {{- end }}
+
   compactor:
     compaction:
       block_retention: {{ .Values.compactor.config.compaction.block_retention }}
@@ -708,7 +768,7 @@ config: |
     {{- end }}
   querier:
     frontend_worker:
-      frontend_address: {{ include "tempo.queryFrontendFullname" . }}-discovery:9095
+      frontend_address: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}:9095
       {{- if .Values.querier.config.frontend_worker.grpc_client_config }}
       grpc_client_config:
         {{- toYaml .Values.querier.config.frontend_worker.grpc_client_config | nindent 6 }}
@@ -787,6 +847,7 @@ server:
   grpc_server_max_recv_msg_size: 4194304
   # -- Max gRPC message size that can be sent
   grpc_server_max_send_msg_size: 4194304
+
 # To configure a different storage backend instead of local storage:
 # storage:
 #   trace:
@@ -847,14 +908,14 @@ memcached:
       requiredDuringSchedulingIgnoredDuringExecution:
         - labelSelector:
             matchLabels:
-              {{- include "tempo.memcachedSelectorLabels" . | nindent 10 }}
+              {{- include "tempo.selectorLabels" (dict "ctx" . "component" "memcached") | nindent 10 }}
           topologyKey: kubernetes.io/hostname
       preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 100
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.memcachedSelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "memcached") | nindent 12 }}
             topologyKey: failure-domain.beta.kubernetes.io/zone
   service:
     # -- Annotations for memcached service
@@ -875,32 +936,112 @@ memcachedExporter:
     # -- Memcached Exporter resource requests and limits
   resources: {}
 
-# ServiceMonitor configuration
-serviceMonitor:
-  # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
-  enabled: false
-  # -- Alternative namespace for ServiceMonitor resources
-  namespace: null
-  # -- Namespace selector for ServiceMonitor resources
-  namespaceSelector: {}
-  # -- ServiceMonitor annotations
-  annotations: {}
-  # -- Additional ServiceMonitor labels
-  labels: {}
-  # -- ServiceMonitor scrape interval
-  interval: null
-  # -- ServiceMonitor scrape timeout in Go duration format (e.g. 15s)
-  scrapeTimeout: null
-  # -- ServiceMonitor relabel configs to apply to samples before scraping
-  # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
-  relabelings: []
-  # -- ServiceMonitor metric relabel configs to apply to samples before ingestion
-  # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint
-  metricRelabelings: []
-  # -- ServiceMonitor will use http by default, but you can pick https as well
-  scheme: http
-  # -- ServiceMonitor will use these tlsConfig settings to make the health check requests
-  tlsConfig: null
+metaMonitoring:
+  # ServiceMonitor configuration
+  serviceMonitor:
+    # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
+    enabled: false
+    # -- Alternative namespace for ServiceMonitor resources
+    namespace: null
+    # -- Namespace selector for ServiceMonitor resources
+    namespaceSelector: {}
+    # -- ServiceMonitor annotations
+    annotations: {}
+    # -- Additional ServiceMonitor labels
+    labels: {}
+    # -- ServiceMonitor scrape interval
+    interval: null
+    # -- ServiceMonitor scrape timeout in Go duration format (e.g. 15s)
+    scrapeTimeout: null
+    # -- ServiceMonitor relabel configs to apply to samples before scraping
+    # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
+    relabelings: []
+    # -- ServiceMonitor metric relabel configs to apply to samples before ingestion
+    # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint
+    metricRelabelings: []
+    # -- ServiceMonitor will use http by default, but you can pick https as well
+    scheme: http
+    # -- ServiceMonitor will use these tlsConfig settings to make the health check requests
+    tlsConfig: null
+
+  # metaMonitoringAgent configures the built in Grafana Agent that can scrape metrics and logs and send them to a local or remote destination
+  grafanaAgent:
+    # -- Controls whether to create PodLogs, MetricsInstance, LogsInstance, and GrafanaAgent CRs to scrape the
+    # ServiceMonitors of the chart and ship metrics and logs to the remote endpoints below.
+    # Note that you need to configure serviceMonitor in order to have some metrics available.
+    enabled: false
+
+    # -- Controls whether to install the Grafana Agent Operator and its CRDs.
+    # Note that helm will not install CRDs if this flag is enabled during an upgrade.
+    # In that case install the CRDs manually from https://github.com/grafana/agent/tree/main/production/operator/crds
+    installOperator: false
+
+    logs:
+      # -- Default destination for logs. The config here is translated to Promtail client
+      # configuration to write logs to this Loki-compatible remote. Optional.
+      remote:
+        # -- Full URL for Loki push endpoint. Usually ends in /loki/api/v1/push
+        url: ''
+
+        auth:
+          # -- Used to set X-Scope-OrgID header on requests. Usually not used in combination with username and password.
+          tenantId: ''
+
+          # -- Basic authentication username. Optional.
+          username: ''
+
+          # -- The value under key passwordSecretKey in this secret will be used as the basic authentication password. Required only if passwordSecretKey is set.
+          passwordSecretName: ''
+          # -- The value under this key in passwordSecretName will be used as the basic authentication password. Required only if passwordSecretName is set.
+          passwordSecretKey: ''
+
+      # -- Client configurations for the LogsInstance that will scrape Mimir pods. Follows the format of .remote.
+      additionalClientConfigs: []
+
+    metrics:
+      # -- Default destination for metrics. The config here is translated to remote_write
+      # configuration to push metrics to this Prometheus-compatible remote. Optional.
+      # Note that you need to configure serviceMonitor in order to have some metrics available.
+      remote:
+        # -- Full URL for Prometheus remote-write. Usually ends in /push
+        url: ''
+
+        # -- Used to add HTTP headers to remote-write requests.
+        headers: {}
+        auth:
+          # -- Basic authentication username. Optional.
+          username: ''
+
+          # -- The value under key passwordSecretKey in this secret will be used as the basic authentication password. Required only if passwordSecretKey is set.
+          passwordSecretName: ''
+          # -- The value under this key in passwordSecretName will be used as the basic authentication password. Required only if passwordSecretName is set.
+          passwordSecretKey: ''
+
+      # -- Additional remote-write for the MetricsInstance that will scrape Mimir pods. Follows the format of .remote.
+      additionalRemoteWriteConfigs: []
+
+      scrapeK8s:
+        # -- When grafanaAgent.enabled and serviceMonitor.enabled, controls whether to create ServiceMonitors CRs
+        # for cadvisor, kubelet, and kube-state-metrics. The scraped metrics are reduced to those pertaining to
+        # Mimir pods only.
+        enabled: true
+
+        # -- Controls service discovery of kube-state-metrics.
+        kubeStateMetrics:
+          namespace: kube-system
+          labelSelectors:
+            app.kubernetes.io/name: kube-state-metrics
+
+    # -- Sets the namespace of the resources. Leave empty or unset to use the same namespace as the Helm release.
+    namespace: ''
+
+    # -- Labels to add to all monitoring.grafana.com custom resources.
+    # Does not affect the ServiceMonitors for kubernetes metrics; use serviceMonitor.labels for that.
+    labels: {}
+
+    # -- Annotations to add to all monitoring.grafana.com custom resources.
+    # Does not affect the ServiceMonitors for kubernetes metrics; use serviceMonitor.annotations for that.
+    annotations: {}
 
 # Rules for the Prometheus Operator
 prometheusRule:
@@ -923,6 +1064,30 @@ prometheusRule:
   #     - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
   #       expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
 
+minio:
+  enabled: true
+  mode: standalone
+  rootUser: grafana-tempo
+  rootPassword: supersecret
+  buckets:
+    - name: tempo-traces
+      policy: none
+      purge: false
+    - name: enterprise-traces
+      policy: none
+      purge: false
+    - name: enterprise-traces-admin
+      policy: none
+      purge: false
+  persistence:
+    size: 5Gi
+  resources:
+    requests:
+      cpu: 100m
+      memory: 128Mi
+  # Changed the mc config path to '/tmp' from '/etc' as '/etc' is only writable by root and OpenShift will not permit this.
+  configPathmc: '/tmp/minio/mc/'
+
 # Configuration for the gateway
 gateway:
   # -- Specifies whether the gateway should be enabled
@@ -978,14 +1143,14 @@ gateway:
       requiredDuringSchedulingIgnoredDuringExecution:
         - labelSelector:
             matchLabels:
-              {{- include "tempo.gatewaySelectorLabels" . | nindent 10 }}
+              {{- include "tempo.selectorLabels" (dict "ctx" . "component" "gateway") | nindent 10 }}
           topologyKey: kubernetes.io/hostname
       preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 100
           podAffinityTerm:
             labelSelector:
               matchLabels:
-                {{- include "tempo.gatewaySelectorLabels" . | nindent 12 }}
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "gateway") | nindent 12 }}
             topologyKey: failure-domain.beta.kubernetes.io/zone
   # -- Node selector for gateway pods
   nodeSelector: {}
@@ -1046,7 +1211,7 @@ gateway:
   readinessProbe:
     httpGet:
       path: /
-      port: http
+      port: http-metrics
     initialDelaySeconds: 15
     timeoutSeconds: 1
   nginxConfig:
@@ -1056,9 +1221,9 @@ gateway:
               '"$request" $body_bytes_sent "$http_referer" '
               '"$http_user_agent" "$http_x_forwarded_for"';
     # -- Allows appending custom configuration to the server block
-    serverSnippet: ""
+    serverSnippet: ''
     # -- Allows appending custom configuration to the http block
-    httpSnippet: ""
+    httpSnippet: ''
     # -- Config file contents for Nginx. Passed through the `tpl` function to allow templating
     # @default -- See values.yaml
     file: |
@@ -1116,39 +1281,39 @@ gateway:
           }
 
           location = /jaeger/api/traces {
-            proxy_pass       http://{{ include "tempo.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:14268/api/traces;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:14268/api/traces;
           }
 
           location = /zipkin/spans {
-            proxy_pass       http://{{ include "tempo.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:9411/spans;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:9411/spans;
           }
 
           location = /otlp/v1/traces {
-            proxy_pass       http://{{ include "tempo.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:4318/v1/traces;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:4318/v1/traces;
           }
 
           location ^~ /api {
-            proxy_pass       http://{{ include "tempo.queryFrontendFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
           }
 
           location = /flush {
-            proxy_pass       http://{{ include "tempo.ingesterFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
           }
 
           location = /shutdown {
-            proxy_pass       http://{{ include "tempo.ingesterFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
           }
 
           location = /distributor/ring {
-            proxy_pass       http://{{ include "tempo.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
           }
 
           location = /ingester/ring {
-            proxy_pass       http://{{ include "tempo.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
           }
 
           location = /compactor/ring {
-            proxy_pass       http://{{ include "tempo.compactorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
+            proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "compactor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
           }
 
           {{- with .Values.gateway.nginxConfig.serverSnippet }}
@@ -1156,3 +1321,213 @@ gateway:
           {{- end }}
         }
       }
+
+##############################################################################
+# The values in and after the `enterprise:` key configure the enterprise features
+enterprise:
+  # Enable enterprise features. License must be provided, nginx gateway is not installed, instead
+  # the enterprise gateway is used.
+  enabled: false
+
+  image:
+    # -- Grafana Enterprise Metrics container image repository. Note: for Grafana Tempo use the value 'image.repository'
+    repository: grafana/enterprise-traces
+    # -- Grafana Enterprise Metrics container image tag. Note: for Grafana Tempo use the value 'image.tag'
+    tag: weekly-r58-94739e17
+    # Note: pullPolicy and optional pullSecrets are set in toplevel 'image' section, not here
+
+# In order to use Grafana Enterprise Traces features, you will need to provide the contents of your Grafana Enterprise Traces
+# license, either by providing the contents of the license.jwt, or the name Kubernetes Secret that contains your license.jwt.
+# To set the license contents, use the flag `--set-file 'license.contents=./license.jwt'`
+# To use your own Kubernetes Secret, `--set license.external=true`.
+license:
+  contents: 'NOTAVALIDLICENSE'
+  external: false
+  secretName: '{{ include "tempo.resourceName" (dict "ctx" . "component" "license") }}'
+
+# Settings for the initial admin(istrator) token generator job. Can only be enabled if
+# enterprise.enabled is true - requires license.
+tokengenJob:
+  enable: true
+  extraArgs: {}
+  env: []
+  extraEnvFrom: []
+  annotations: {}
+  initContainers: []
+  # -- The SecurityContext for tokenjobgen containers
+  containerSecurityContext:
+    readOnlyRootFilesystem: true
+
+# Settings for the admin_api service providing authentication and authorization service.
+# Can only be enabled if enterprise.enabled is true - requires license.
+adminApi:
+  replicas: 1
+
+  annotations: {}
+  service:
+    annotations: {}
+    labels: {}
+
+  initContainers: []
+
+  strategy:
+    type: RollingUpdate
+    rollingUpdate:
+      maxSurge: 0
+      maxUnavailable: 1
+
+  podLabels: {}
+  podAnnotations: {}
+
+  nodeSelector: {}
+  # -- Affinity for ingester pods. Passed through `tpl` and, thus, to be configured as string
+  # @default -- Soft node and soft zone anti-affinity
+  affinity: |
+    podAntiAffinity:
+      preferredDuringSchedulingIgnoredDuringExecution:
+        - weight: 100
+          podAffinityTerm:
+            labelSelector:
+              matchLabels:
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "admin-api") | nindent 12 }}
+            topologyKey: kubernetes.io/hostname
+        - weight: 75
+          podAffinityTerm:
+            labelSelector:
+              matchLabels:
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "admin-api") | nindent 12 }}
+            topologyKey: failure-domain.beta.kubernetes.io/zone
+
+  # Pod Disruption Budget
+  podDisruptionBudget: {}
+
+  securityContext: {}
+
+  # -- The SecurityContext for admin_api containers
+  containerSecurityContext:
+    readOnlyRootFilesystem: true
+
+  extraArgs: {}
+
+  persistence:
+    subPath:
+
+  readinessProbe:
+    httpGet:
+      path: /ready
+      port: http-metrics
+    initialDelaySeconds: 45
+
+  resources:
+    requests:
+      cpu: 10m
+      memory: 32Mi
+
+  terminationGracePeriodSeconds: 60
+
+  tolerations: []
+  extraContainers: []
+  extraVolumes: []
+  extraVolumeMounts: []
+  env: []
+  extraEnvFrom: []
+
+# Settings for the gateway service providing authentication and authorization via the admin_api.
+# Can only be enabled if enterprise.enabled is true - requires license.
+enterpriseGateway:
+  # If you want to use your own proxy URLs, set this to false.
+  useDefaultProxyURLs: true
+  replicas: 1
+
+  annotations: {}
+  service:
+    annotations: {}
+    labels: {}
+    # -- If the port is left undefined, the service will listen on the same port as the pod
+    port: null
+
+  strategy:
+    type: RollingUpdate
+    rollingUpdate:
+      maxSurge: 0
+      maxUnavailable: 1
+
+  podLabels: {}
+  podAnnotations: {}
+
+  # Pod Disruption Budget
+  podDisruptionBudget: {}
+
+  nodeSelector: {}
+  # -- Affinity for ingester pods. Passed through `tpl` and, thus, to be configured as string
+  # @default -- Soft node and soft zone anti-affinity
+  affinity: |
+    podAntiAffinity:
+      preferredDuringSchedulingIgnoredDuringExecution:
+        - weight: 100
+          podAffinityTerm:
+            labelSelector:
+              matchLabels:
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "enterprise-gateway") | nindent 12 }}
+            topologyKey: kubernetes.io/hostname
+        - weight: 75
+          podAffinityTerm:
+            labelSelector:
+              matchLabels:
+                {{- include "tempo.selectorLabels" (dict "ctx" . "component" "enterprise-gateway") | nindent 12 }}
+            topologyKey: failure-domain.beta.kubernetes.io/zone
+
+  securityContext:
+    {}
+
+    # -- The SecurityContext for gateway containers
+  containerSecurityContext:
+    readOnlyRootFilesystem: true
+
+  initContainers: []
+
+  extraArgs: {}
+
+  persistence:
+    subPath:
+
+  readinessProbe:
+    httpGet:
+      path: /ready
+      port: http-metrics
+    initialDelaySeconds: 45
+
+  resources:
+    requests:
+      cpu: 10m
+      memory: 32Mi
+
+  terminationGracePeriodSeconds: 60
+
+  tolerations: []
+  extraContainers: []
+  extraVolumes: []
+  extraVolumeMounts: []
+  env: []
+  extraEnvFrom: []
+
+  # Ingress configuration
+  ingress:
+    # -- Specifies whether an ingress for the gateway should be created
+    enabled: false
+    # -- Ingress Class Name. MAY be required for Kubernetes versions >= 1.18
+    # ingressClassName: gateway
+    # -- Annotations for the gateway ingress
+    annotations: {}
+    # -- Hosts configuration for the gateway ingress
+    hosts:
+      - host: gateway.gem.example.com
+        paths:
+          - path: /
+            # -- pathType (e.g. ImplementationSpecific, Prefix, .. etc.) might also be required by some Ingress Controllers
+            # pathType: Prefix
+    # -- TLS configuration for the gateway ingress
+    tls:
+      - secretName: gem-gateway-tls
+        hosts:
+          - gateway.gem.example.com

commit 6ec320b530a8ab7c4201de44f3d39fbad1e97438 (from 8a3443b460db22a81e9665c4afeb73ac657da159)
Merge: 8f64c128 8a3443b4
Author: Zach Leslie <zach.leslie@grafana.com>
Date:   Thu Oct 27 13:20:27 2022 +0000

    Merge pull request #1759 from zalegrala/tempoDistEnterpriseTracesRebase
    
    [tempo-distributed] refactor and introduce Enterprise Traces support

diff --git a/charts/grafana/Chart.yaml b/charts/grafana/Chart.yaml
index 521a0a3b..c1af3a1b 100644
--- a/charts/grafana/Chart.yaml
+++ b/charts/grafana/Chart.yaml
@@ -1,7 +1,7 @@
 apiVersion: v2
 name: grafana
-version: 6.43.0
-appVersion: 9.2.1
+version: 6.43.1
+appVersion: 9.2.2
 kubeVersion: "^1.8.0-0"
 description: The leading tool for querying and visualizing time series and metrics.
 home: https://grafana.net
diff --git a/charts/promtail/Chart.yaml b/charts/promtail/Chart.yaml
index 34d87b12..3cb0471f 100644
--- a/charts/promtail/Chart.yaml
+++ b/charts/promtail/Chart.yaml
@@ -3,7 +3,7 @@ name: promtail
 description: Promtail is an agent which ships the contents of local logs to a Loki instance
 type: application
 appVersion: 2.6.1
-version: 6.5.1
+version: 6.6.0
 home: https://grafana.com/loki
 sources:
   - https://github.com/grafana/loki
diff --git a/charts/promtail/README.md b/charts/promtail/README.md
index 4b420911..fdbdab0e 100644
--- a/charts/promtail/README.md
+++ b/charts/promtail/README.md
@@ -1,6 +1,6 @@
 # promtail
 
-![Version: 6.5.1](https://img.shields.io/badge/Version-6.5.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: 2.6.1](https://img.shields.io/badge/AppVersion-2.6.1-informational?style=flat-square)
+![Version: 6.6.0](https://img.shields.io/badge/Version-6.6.0-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: 2.6.1](https://img.shields.io/badge/AppVersion-2.6.1-informational?style=flat-square)
 
 Promtail is an agent which ships the contents of local logs to a Loki instance
 
@@ -80,6 +80,7 @@ The new release which will pick up again from the existing `positions.yaml`.
 | config.snippets.extraRelabelConfigs | list | `[]` | You can put here any additional relabel_configs to "kubernetes-pods" job |
 | config.snippets.extraScrapeConfigs | string | empty | You can put here any additional scrape configs you want to add to the config file. |
 | config.snippets.extraServerConfigs | string | empty | You can put here any keys that will be directly added to the config file's 'server' block. |
+| configmap.enabled | bool | `false` | If enabled, promtail config will be created as a ConfigMap instead of a secret |
 | containerSecurityContext | object | `{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}` | The security context for containers |
 | daemonset.enabled | bool | `true` | Deploys Promtail as a DaemonSet |
 | defaultVolumeMounts | list | See `values.yaml` | Default volume mounts. Corresponds to `volumes`. |
@@ -136,7 +137,10 @@ The new release which will pick up again from the existing `positions.yaml`.
 | serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor resources |
 | serviceMonitor.namespaceSelector | object | `{}` | Namespace selector for ServiceMonitor resources |
 | serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabel configs to apply to samples before scraping https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig (defines `relabel_configs`) |
+| serviceMonitor.scheme | string | `"http"` | ServiceMonitor will use http by default, but you can pick https as well |
 | serviceMonitor.scrapeTimeout | string | `nil` | ServiceMonitor scrape timeout in Go duration format (e.g. 15s) |
+| serviceMonitor.targetLabels | list | `[]` | ServiceMonitor will add labels from the service to the Prometheus metric https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#servicemonitorspec |
+| serviceMonitor.tlsConfig | string | `nil` | ServiceMonitor will use these tlsConfig settings to make the health check requests |
 | tolerations | list | `[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Exists"}]` | Tolerations for pods. By default, pods will be scheduled on master/control-plane nodes. |
 | updateStrategy | object | `{}` | The update strategy for the DaemonSet |
 
diff --git a/charts/promtail/templates/_pod.tpl b/charts/promtail/templates/_pod.tpl
index 1f4dafd9..2c952048 100644
--- a/charts/promtail/templates/_pod.tpl
+++ b/charts/promtail/templates/_pod.tpl
@@ -101,8 +101,13 @@ Pod template used in Daemonset and Deployment
       {{- end }}
       volumes:
         - name: config
+          {{- if .Values.configmap.enabled }}
+          configMap:
+            name: {{ include "promtail.fullname" . }}
+          {{- else }}
           secret:
             secretName: {{ include "promtail.fullname" . }}
+          {{- end }}
         {{- with .Values.defaultVolumes }}
         {{- toYaml . | nindent 8 }}
         {{- end }}
diff --git a/charts/promtail/templates/configmap.yaml b/charts/promtail/templates/configmap.yaml
new file mode 100644
index 00000000..4698da3a
--- /dev/null
+++ b/charts/promtail/templates/configmap.yaml
@@ -0,0 +1,12 @@
+{{- if .Values.configmap.enabled }}
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  name: {{ include "promtail.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+  labels:
+    {{- include "promtail.labels" . | nindent 4 }}
+data:
+  promtail.yaml: |
+    {{- tpl .Values.config.file . | nindent 4 }}
+{{- end }}
diff --git a/charts/promtail/templates/secret.yaml b/charts/promtail/templates/secret.yaml
index aa519d1c..84aca312 100644
--- a/charts/promtail/templates/secret.yaml
+++ b/charts/promtail/templates/secret.yaml
@@ -1,3 +1,4 @@
+{{- if not .Values.configmap.enabled }}
 apiVersion: v1
 kind: Secret
 metadata:
@@ -8,3 +9,4 @@ metadata:
 stringData:
   promtail.yaml: |
     {{- tpl .Values.config.file . | nindent 4 }}
+{{- end }}
diff --git a/charts/promtail/templates/servicemonitor.yaml b/charts/promtail/templates/servicemonitor.yaml
index e1e27589..d19853dc 100644
--- a/charts/promtail/templates/servicemonitor.yaml
+++ b/charts/promtail/templates/servicemonitor.yaml
@@ -1,44 +1,55 @@
-{{- if .Values.serviceMonitor.enabled }}
+{{- with .Values.serviceMonitor }}
+{{- if .enabled }}
 apiVersion: monitoring.coreos.com/v1
 kind: ServiceMonitor
 metadata:
   name: {{ include "promtail.fullname" $ }}
-  {{- if .Values.serviceMonitor.namespace }}
-  namespace: {{ .Values.serviceMonitor.namespace }}
-  {{- else }}
-  namespace: {{ .Release.Namespace }}
+  {{- with .namespace }}
+  namespace: {{ . }}
   {{- end }}
-  {{- with .Values.serviceMonitor.annotations }}
+  {{- with .annotations }}
   annotations:
     {{- toYaml . | nindent 4 }}
   {{- end }}
   labels:
     {{- include "promtail.labels" $ | nindent 4 }}
-    {{- with .Values.serviceMonitor.labels }}
+    {{- with .labels }}
     {{- toYaml . | nindent 4 }}
     {{- end }}
 spec:
-  {{- with .Values.serviceMonitor.namespaceSelector }}
+  {{- with .namespaceSelector }}
   namespaceSelector:
   {{- toYaml . | nindent 4 }}
   {{- end }}
   selector:
     matchLabels:
-      {{- include "promtail.selectorLabels" . | nindent 6 }}
+      {{- include "promtail.selectorLabels" $ | nindent 6 }}
   endpoints:
     - port: http-metrics
-      {{- with .Values.serviceMonitor.interval }}
+      {{- with .interval }}
       interval: {{ . }}
       {{- end }}
-      {{- with .Values.serviceMonitor.scrapeTimeout }}
+      {{- with .scrapeTimeout }}
       scrapeTimeout: {{ . }}
       {{- end }}
-      {{- with .Values.serviceMonitor.relabelings }}
+      {{- with .relabelings }}
       relabelings:
         {{- toYaml . | nindent 8 }}
       {{- end }}
-      {{- with .Values.serviceMonitor.metricRelabelings }}
+      {{- with .metricRelabelings }}
       metricRelabelings:
         {{- toYaml . | nindent 8 }}
       {{- end }}
+      {{- with .scheme }}
+      scheme: {{ . }}
+      {{- end }}
+      {{- with .tlsConfig }}
+      tlsConfig:
+        {{- toYaml . | nindent 8 }}
+      {{- end }}
+  {{- with .targetLabels }}
+  targetLabels:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+{{- end }}
 {{- end }}
diff --git a/charts/promtail/values.yaml b/charts/promtail/values.yaml
index 2ae9afbe..4a62077d 100644
--- a/charts/promtail/values.yaml
+++ b/charts/promtail/values.yaml
@@ -20,6 +20,10 @@ deployment:
     targetCPUUtilizationPercentage: 80
     targetMemoryUtilizationPercentage:
 
+configmap:
+  # -- If enabled, promtail config will be created as a ConfigMap instead of a secret
+  enabled: false
+
 initContainer: []
   # # -- Specifies whether the init container for setting inotify max user instances is to be enabled
   # - name: init
@@ -203,6 +207,13 @@ serviceMonitor:
   # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
   # (defines `metric_relabel_configs`)
   metricRelabelings: []
+  # --ServiceMonitor will add labels from the service to the Prometheus metric
+  # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#servicemonitorspec
+  targetLabels: []
+  # -- ServiceMonitor will use http by default, but you can pick https as well
+  scheme: http
+  # -- ServiceMonitor will use these tlsConfig settings to make the health check requests
+  tlsConfig: null
 
 # Extra containers created as part of a Promtail Deployment resource
 # - spec for Container:
